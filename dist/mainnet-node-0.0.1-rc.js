var mainnet;mainnet =
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@bitauth/libauth/build/module/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/index.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export default [not provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [maybe provided (runtime-defined)] [no usage info] -> ./node_modules/@bitauth/libauth/build/module/lib/lib.js */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _lib_lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/lib */ "./node_modules/@bitauth/libauth/build/module/lib/lib.js");
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _lib_lib__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== "default") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _lib_lib__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);

//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/address/address.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/address/address.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export AddressType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .AddressType */
/*! export Base58AddressError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .Base58AddressError */
/*! export Base58AddressFormatVersion [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .Base58AddressFormatVersion */
/*! export Bech32DecodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .Bech32DecodingError */
/*! export BitRegroupingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .BitRegroupingError */
/*! export CashAddressCorrectionError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressCorrectionError */
/*! export CashAddressDecodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressDecodingError */
/*! export CashAddressEncodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressEncodingError */
/*! export CashAddressNetworkPrefix [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressNetworkPrefix */
/*! export CashAddressType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressType */
/*! export CashAddressVersionByte [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressVersionByte */
/*! export CashAddressVersionByteDecodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressVersionByteDecodingError */
/*! export LockingBytecodeEncodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .LockingBytecodeEncodingError */
/*! export addressContentsToLockingBytecode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .addressContentsToLockingBytecode */
/*! export attemptCashAddressFormatErrorCorrection [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .attemptCashAddressFormatErrorCorrection */
/*! export base58AddressToLockingBytecode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .base58AddressToLockingBytecode */
/*! export bech32CharacterSet [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .bech32CharacterSet */
/*! export bech32CharacterSetIndex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .bech32CharacterSetIndex */
/*! export bech32PaddedToBin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .bech32PaddedToBin */
/*! export binToBech32Padded [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .binToBech32Padded */
/*! export cashAddressBitToSize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .cashAddressBitToSize */
/*! export cashAddressChecksumToUint5Array [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .cashAddressChecksumToUint5Array */
/*! export cashAddressPolynomialModulo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .cashAddressPolynomialModulo */
/*! export cashAddressPolynomialToCashAddress [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .cashAddressPolynomialToCashAddress */
/*! export cashAddressSizeToBit [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .cashAddressSizeToBit */
/*! export cashAddressToLockingBytecode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .cashAddressToLockingBytecode */
/*! export decodeBase58Address [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .decodeBase58Address */
/*! export decodeBase58AddressFormat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .decodeBase58AddressFormat */
/*! export decodeBech32 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .decodeBech32 */
/*! export decodeCashAddress [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .decodeCashAddress */
/*! export decodeCashAddressFormat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .decodeCashAddressFormat */
/*! export decodeCashAddressFormatWithoutPrefix [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .decodeCashAddressFormatWithoutPrefix */
/*! export decodeCashAddressVersionByte [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .decodeCashAddressVersionByte */
/*! export encodeBase58Address [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .encodeBase58Address */
/*! export encodeBase58AddressFormat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .encodeBase58AddressFormat */
/*! export encodeBech32 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .encodeBech32 */
/*! export encodeCashAddress [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .encodeCashAddress */
/*! export encodeCashAddressFormat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .encodeCashAddressFormat */
/*! export encodeCashAddressVersionByte [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .encodeCashAddressVersionByte */
/*! export isBech32CharacterSet [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .isBech32CharacterSet */
/*! export lockingBytecodeToAddressContents [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .lockingBytecodeToAddressContents */
/*! export lockingBytecodeToBase58Address [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .lockingBytecodeToBase58Address */
/*! export lockingBytecodeToCashAddress [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .lockingBytecodeToCashAddress */
/*! export maskCashAddressPrefix [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .maskCashAddressPrefix */
/*! export regroupBits [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .regroupBits */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Base58AddressError": () => /* reexport safe */ _base58_address__WEBPACK_IMPORTED_MODULE_0__.Base58AddressError,
/* harmony export */   "Base58AddressFormatVersion": () => /* reexport safe */ _base58_address__WEBPACK_IMPORTED_MODULE_0__.Base58AddressFormatVersion,
/* harmony export */   "decodeBase58Address": () => /* reexport safe */ _base58_address__WEBPACK_IMPORTED_MODULE_0__.decodeBase58Address,
/* harmony export */   "decodeBase58AddressFormat": () => /* reexport safe */ _base58_address__WEBPACK_IMPORTED_MODULE_0__.decodeBase58AddressFormat,
/* harmony export */   "encodeBase58Address": () => /* reexport safe */ _base58_address__WEBPACK_IMPORTED_MODULE_0__.encodeBase58Address,
/* harmony export */   "encodeBase58AddressFormat": () => /* reexport safe */ _base58_address__WEBPACK_IMPORTED_MODULE_0__.encodeBase58AddressFormat,
/* harmony export */   "Bech32DecodingError": () => /* reexport safe */ _bech32__WEBPACK_IMPORTED_MODULE_1__.Bech32DecodingError,
/* harmony export */   "BitRegroupingError": () => /* reexport safe */ _bech32__WEBPACK_IMPORTED_MODULE_1__.BitRegroupingError,
/* harmony export */   "bech32CharacterSet": () => /* reexport safe */ _bech32__WEBPACK_IMPORTED_MODULE_1__.bech32CharacterSet,
/* harmony export */   "bech32CharacterSetIndex": () => /* reexport safe */ _bech32__WEBPACK_IMPORTED_MODULE_1__.bech32CharacterSetIndex,
/* harmony export */   "bech32PaddedToBin": () => /* reexport safe */ _bech32__WEBPACK_IMPORTED_MODULE_1__.bech32PaddedToBin,
/* harmony export */   "binToBech32Padded": () => /* reexport safe */ _bech32__WEBPACK_IMPORTED_MODULE_1__.binToBech32Padded,
/* harmony export */   "decodeBech32": () => /* reexport safe */ _bech32__WEBPACK_IMPORTED_MODULE_1__.decodeBech32,
/* harmony export */   "encodeBech32": () => /* reexport safe */ _bech32__WEBPACK_IMPORTED_MODULE_1__.encodeBech32,
/* harmony export */   "isBech32CharacterSet": () => /* reexport safe */ _bech32__WEBPACK_IMPORTED_MODULE_1__.isBech32CharacterSet,
/* harmony export */   "regroupBits": () => /* reexport safe */ _bech32__WEBPACK_IMPORTED_MODULE_1__.regroupBits,
/* harmony export */   "CashAddressCorrectionError": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.CashAddressCorrectionError,
/* harmony export */   "CashAddressDecodingError": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.CashAddressDecodingError,
/* harmony export */   "CashAddressEncodingError": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.CashAddressEncodingError,
/* harmony export */   "CashAddressNetworkPrefix": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.CashAddressNetworkPrefix,
/* harmony export */   "CashAddressType": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.CashAddressType,
/* harmony export */   "CashAddressVersionByte": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.CashAddressVersionByte,
/* harmony export */   "CashAddressVersionByteDecodingError": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.CashAddressVersionByteDecodingError,
/* harmony export */   "attemptCashAddressFormatErrorCorrection": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.attemptCashAddressFormatErrorCorrection,
/* harmony export */   "cashAddressBitToSize": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.cashAddressBitToSize,
/* harmony export */   "cashAddressChecksumToUint5Array": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.cashAddressChecksumToUint5Array,
/* harmony export */   "cashAddressPolynomialModulo": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.cashAddressPolynomialModulo,
/* harmony export */   "cashAddressPolynomialToCashAddress": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.cashAddressPolynomialToCashAddress,
/* harmony export */   "cashAddressSizeToBit": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.cashAddressSizeToBit,
/* harmony export */   "decodeCashAddress": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.decodeCashAddress,
/* harmony export */   "decodeCashAddressFormat": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.decodeCashAddressFormat,
/* harmony export */   "decodeCashAddressFormatWithoutPrefix": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.decodeCashAddressFormatWithoutPrefix,
/* harmony export */   "decodeCashAddressVersionByte": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.decodeCashAddressVersionByte,
/* harmony export */   "encodeCashAddress": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.encodeCashAddress,
/* harmony export */   "encodeCashAddressFormat": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.encodeCashAddressFormat,
/* harmony export */   "encodeCashAddressVersionByte": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.encodeCashAddressVersionByte,
/* harmony export */   "maskCashAddressPrefix": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.maskCashAddressPrefix,
/* harmony export */   "AddressType": () => /* reexport safe */ _locking_bytecode__WEBPACK_IMPORTED_MODULE_3__.AddressType,
/* harmony export */   "LockingBytecodeEncodingError": () => /* reexport safe */ _locking_bytecode__WEBPACK_IMPORTED_MODULE_3__.LockingBytecodeEncodingError,
/* harmony export */   "addressContentsToLockingBytecode": () => /* reexport safe */ _locking_bytecode__WEBPACK_IMPORTED_MODULE_3__.addressContentsToLockingBytecode,
/* harmony export */   "base58AddressToLockingBytecode": () => /* reexport safe */ _locking_bytecode__WEBPACK_IMPORTED_MODULE_3__.base58AddressToLockingBytecode,
/* harmony export */   "cashAddressToLockingBytecode": () => /* reexport safe */ _locking_bytecode__WEBPACK_IMPORTED_MODULE_3__.cashAddressToLockingBytecode,
/* harmony export */   "lockingBytecodeToAddressContents": () => /* reexport safe */ _locking_bytecode__WEBPACK_IMPORTED_MODULE_3__.lockingBytecodeToAddressContents,
/* harmony export */   "lockingBytecodeToBase58Address": () => /* reexport safe */ _locking_bytecode__WEBPACK_IMPORTED_MODULE_3__.lockingBytecodeToBase58Address,
/* harmony export */   "lockingBytecodeToCashAddress": () => /* reexport safe */ _locking_bytecode__WEBPACK_IMPORTED_MODULE_3__.lockingBytecodeToCashAddress
/* harmony export */ });
/* harmony import */ var _base58_address__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base58-address */ "./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js");
/* harmony import */ var _bech32__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bech32 */ "./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js");
/* harmony import */ var _cash_address__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cash-address */ "./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js");
/* harmony import */ var _locking_bytecode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./locking-bytecode */ "./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js");




//# sourceMappingURL=address.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! export Base58AddressError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Base58AddressFormatVersion [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeBase58Address [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeBase58AddressFormat [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeBase58Address [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeBase58AddressFormat [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Base58AddressFormatVersion": () => /* binding */ Base58AddressFormatVersion,
/* harmony export */   "encodeBase58AddressFormat": () => /* binding */ encodeBase58AddressFormat,
/* harmony export */   "encodeBase58Address": () => /* binding */ encodeBase58Address,
/* harmony export */   "Base58AddressError": () => /* binding */ Base58AddressError,
/* harmony export */   "decodeBase58AddressFormat": () => /* binding */ decodeBase58AddressFormat,
/* harmony export */   "decodeBase58Address": () => /* binding */ decodeBase58Address
/* harmony export */ });
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");

/**
 * Base58 version byte values for common Base58Address format versions.
 */
var Base58AddressFormatVersion;
(function (Base58AddressFormatVersion) {
    /**
     * A Pay to Public Key Hash (P2PKH) address – base58 encodes to a leading `1`.
     *
     * Hex: `0x00`
     */
    Base58AddressFormatVersion[Base58AddressFormatVersion["p2pkh"] = 0] = "p2pkh";
    /**
     * A Pay to Script Hash (P2SH) address – base58 encodes to a leading `3`.
     *
     * Hex: `0x05`
     */
    Base58AddressFormatVersion[Base58AddressFormatVersion["p2sh"] = 5] = "p2sh";
    /**
     * A private key in Wallet Import Format. For private keys used with
     * uncompressed public keys, the payload is 32 bytes and causes the version
     * to be encoded as a `5`. For private keys used with compressed public keys,
     * a final `0x01` byte is appended to the private key, increasing the payload
     * to 33 bytes, and causing the version to be encoded as a `K` or `L`.
     *
     * Hex: `0x80`
     */
    Base58AddressFormatVersion[Base58AddressFormatVersion["wif"] = 128] = "wif";
    /**
     * A testnet Pay to Public Key Hash (P2PKH) address – base58 encodes to a
     * leading `m` or `n`.
     *
     * Hex: `0x6f`
     */
    Base58AddressFormatVersion[Base58AddressFormatVersion["p2pkhTestnet"] = 111] = "p2pkhTestnet";
    /**
     * A testnet Pay to Script Hash (P2SH) address – base58 encodes to a leading
     * `2`.
     *
     * Hex: `0xc4`
     */
    Base58AddressFormatVersion[Base58AddressFormatVersion["p2shTestnet"] = 196] = "p2shTestnet";
    /**
     * A private key in Wallet Import Format intended for testnet use. For private
     * keys used with uncompressed public keys, the payload is 32 bytes and causes
     * the version to be encoded as a `9`. For private keys used with compressed
     * public keys, a final `0x01` byte is appended to the private key, increasing
     * the payload to 33 bytes, and causing the version to be encoded as a `c`.
     *
     * Hex: `0xef`
     */
    Base58AddressFormatVersion[Base58AddressFormatVersion["wifTestnet"] = 239] = "wifTestnet";
    /**
     * A Pay to Public Key Hash (P2PKH) address intended for use on the Bitcoin
     * Cash network – base58 encodes to a leading `C`. This version was
     * temporarily used by the Copay project before the CashAddress format was
     * standardized.
     *
     * Hex: `0x1c`
     */
    Base58AddressFormatVersion[Base58AddressFormatVersion["p2pkhCopayBCH"] = 28] = "p2pkhCopayBCH";
    /**
     * A Pay to Script Hash (P2SH) address intended for use on the Bitcoin
     * Cash network – base58 encodes to a leading `H`. This version was
     * temporarily used by the Copay project before the CashAddress format was
     * standardized.
     *
     * Hex: `0x28`
     */
    Base58AddressFormatVersion[Base58AddressFormatVersion["p2shCopayBCH"] = 40] = "p2shCopayBCH";
})(Base58AddressFormatVersion || (Base58AddressFormatVersion = {}));
/**
 * Encode a payload using the Base58Address format, the original address format
 * used by the Satoshi implementation.
 *
 * Note, this method does not enforce error handling via the type system. The
 * returned string will not be a valid Base58Address if `hash` is not exactly 20
 * bytes. If needed, validate the length of `hash` before calling this method.
 *
 * @remarks
 * A Base58Address includes a 1-byte prefix to indicate the address version, a
 * variable-length payload, and a 4-byte checksum:
 *
 * `[version: 1 byte] [payload: variable length] [checksum: 4 bytes]`
 *
 * The checksum is the first 4 bytes of the double-SHA256 hash of the version
 * byte followed by the payload.
 *
 * @param sha256 - an implementation of sha256 (a universal implementation is
 * available via `instantiateSha256`)
 * @param version - the address version byte (see `Base58Version`)
 * @param payload - the Uint8Array payload to encode
 */
const encodeBase58AddressFormat = (sha256, version, payload) => {
    const checksumBytes = 4;
    const content = Uint8Array.from([version, ...payload]);
    const checksum = sha256.hash(sha256.hash(content)).slice(0, checksumBytes);
    const bin = (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([content, checksum]);
    return (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.binToBase58)(bin);
};
/**
 * Encode a hash as a Base58Address.
 *
 * Note, this method does not enforce error handling via the type system. The
 * returned string will not be a valid Base58Address if `hash` is not exactly 20
 * bytes. If needed, validate the length of `hash` before calling this method.
 *
 * For other standards which use the Base58Address format but have other version
 * or length requirements, use `encodeCashAddressFormat`.
 *
 * @param sha256 - an implementation of sha256 (a universal implementation is
 * available via `instantiateSha256`)
 * @param type - the type of address to encode: `p2pkh`, `p2sh`,
 * `p2pkh-testnet`, or `p2sh-testnet`
 * @param hash - the 20-byte hash to encode
 * (`RIPEMD160(SHA256(public key or bytecode))`)
 */
const encodeBase58Address = (sha256, type, payload) => encodeBase58AddressFormat(sha256, {
    p2pkh: Base58AddressFormatVersion.p2pkh,
    'p2pkh-copay-bch': Base58AddressFormatVersion.p2pkhCopayBCH,
    'p2pkh-testnet': Base58AddressFormatVersion.p2pkhTestnet,
    p2sh: Base58AddressFormatVersion.p2sh,
    'p2sh-copay-bch': Base58AddressFormatVersion.p2shCopayBCH,
    'p2sh-testnet': Base58AddressFormatVersion.p2shTestnet,
}[type], payload);
var Base58AddressError;
(function (Base58AddressError) {
    Base58AddressError["unknownCharacter"] = "Base58Address error: address may only contain valid base58 characters.";
    Base58AddressError["tooShort"] = "Base58Address error: address is too short to be valid.";
    Base58AddressError["invalidChecksum"] = "Base58Address error: address has an invalid checksum.";
    Base58AddressError["unknownAddressVersion"] = "Base58Address error: address uses an unknown address version.";
    Base58AddressError["incorrectLength"] = "Base58Address error: the encoded payload is not the correct length (20 bytes).";
})(Base58AddressError || (Base58AddressError = {}));
/**
 * Attempt to decode a Base58Address-formatted string. This is more lenient than
 * `decodeCashAddress`, which also validates the address version.
 *
 * Returns the contents of the address or an error message as a string.
 *
 * @param sha256 - an implementation of sha256 (a universal implementation is
 * available via `instantiateSha256`)
 * @param address - the string to decode as a base58 address
 */
const decodeBase58AddressFormat = (sha256, address) => {
    const checksumBytes = 4;
    const bin = (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.base58ToBin)(address);
    if (bin === _format_format__WEBPACK_IMPORTED_MODULE_0__.BaseConversionError.unknownCharacter) {
        return Base58AddressError.unknownCharacter;
    }
    const minimumBase58AddressLength = 5;
    if (bin.length < minimumBase58AddressLength) {
        return Base58AddressError.tooShort;
    }
    const content = bin.slice(0, -checksumBytes);
    const checksum = bin.slice(-checksumBytes);
    const expectedChecksum = sha256
        .hash(sha256.hash(content))
        .slice(0, checksumBytes);
    if (!checksum.every((value, i) => value === expectedChecksum[i])) {
        return Base58AddressError.invalidChecksum;
    }
    return {
        payload: content.slice(1),
        version: content[0],
    };
};
/**
 * Decode and validate a Base58Address, strictly checking the version and
 * payload length.
 *
 * For other address-like standards which closely follow the Base58Address
 * format (but have alternative version byte requirements), use
 * `decodeBase58AddressFormat`.
 *
 * @remarks
 * Because the Wallet Import Format (WIF) private key serialization format uses
 * the Base58Address format, some libraries allow WIF key decoding via the same
 * method as base58 address decoding. This method strictly accepts only
 * Base58Address types, but WIF keys can be decoded with `decodePrivateKeyWif`.
 *
 * @param sha256 - an implementation of sha256 (a universal implementation is
 * available via `instantiateSha256`)
 * @param address - the string to decode as a base58 address
 */
const decodeBase58Address = (sha256, address) => {
    const decoded = decodeBase58AddressFormat(sha256, address);
    if (typeof decoded === 'string')
        return decoded;
    if (![
        Base58AddressFormatVersion.p2pkh,
        Base58AddressFormatVersion.p2sh,
        Base58AddressFormatVersion.p2pkhTestnet,
        Base58AddressFormatVersion.p2shTestnet,
        Base58AddressFormatVersion.p2pkhCopayBCH,
        Base58AddressFormatVersion.p2shCopayBCH,
    ].includes(decoded.version)) {
        return Base58AddressError.unknownAddressVersion;
    }
    const hash160Length = 20;
    if (decoded.payload.length !== hash160Length) {
        return Base58AddressError.incorrectLength;
    }
    return decoded;
};
//# sourceMappingURL=base58-address.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export Bech32DecodingError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export BitRegroupingError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bech32CharacterSet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bech32CharacterSetIndex [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bech32PaddedToBin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToBech32Padded [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeBech32 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeBech32 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isBech32CharacterSet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export regroupBits [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bech32CharacterSet": () => /* binding */ bech32CharacterSet,
/* harmony export */   "bech32CharacterSetIndex": () => /* binding */ bech32CharacterSetIndex,
/* harmony export */   "BitRegroupingError": () => /* binding */ BitRegroupingError,
/* harmony export */   "regroupBits": () => /* binding */ regroupBits,
/* harmony export */   "encodeBech32": () => /* binding */ encodeBech32,
/* harmony export */   "decodeBech32": () => /* binding */ decodeBech32,
/* harmony export */   "isBech32CharacterSet": () => /* binding */ isBech32CharacterSet,
/* harmony export */   "Bech32DecodingError": () => /* binding */ Bech32DecodingError,
/* harmony export */   "bech32PaddedToBin": () => /* binding */ bech32PaddedToBin,
/* harmony export */   "binToBech32Padded": () => /* binding */ binToBech32Padded
/* harmony export */ });
/**
 * The list of 32 symbols used in Bech32 encoding.
 */
// cspell: disable-next-line
const bech32CharacterSet = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';
/**
 * An object mapping each of the 32 symbols used in Bech32 encoding to their respective index in the character set.
 */
// prettier-ignore
const bech32CharacterSetIndex = { q: 0, p: 1, z: 2, r: 3, y: 4, '9': 5, x: 6, '8': 7, g: 8, f: 9, '2': 10, t: 11, v: 12, d: 13, w: 14, '0': 15, s: 16, '3': 17, j: 18, n: 19, '5': 20, '4': 21, k: 22, h: 23, c: 24, e: 25, '6': 26, m: 27, u: 28, a: 29, '7': 30, l: 31 }; // eslint-disable-line sort-keys
var BitRegroupingError;
(function (BitRegroupingError) {
    BitRegroupingError["integerOutOfRange"] = "An integer provided in the source array is out of the range of the specified source word length.";
    BitRegroupingError["hasDisallowedPadding"] = "Encountered padding when padding was disallowed.";
    BitRegroupingError["requiresDisallowedPadding"] = "Encoding requires padding while padding is disallowed.";
})(BitRegroupingError || (BitRegroupingError = {}));
/* eslint-disable functional/no-let, no-bitwise, functional/no-expression-statement, functional/no-conditional-statement, complexity */
/**
 * Given an array of integers, regroup bits from `sourceWordLength` to
 * `resultWordLength`, returning a new array of integers between 0 and
 * toWordLength^2.
 *
 * Note, if `bin` is within the range of `sourceWordLength` and `padding` is
 * `true`, this method will never error.
 *
 * A.K.A. `convertbits`
 *
 * @param bin - an array of numbers representing the bits to regroup. Each item
 * must be a number within the range of `sourceWordLength`
 * @param sourceWordLength - the bit-length of each number in `bin`, e.g. to
 * regroup bits from a `Uint8Array`, use `8` (must be a positive integer)
 * @param resultWordLength - the bit-length of each number in the desired result
 * array, e.g. to regroup bits into 4-bit numbers, use `4` (must be a positive
 * integer)
 * @param allowPadding - whether to allow the use of padding for `bin` values
 * where the provided number of bits cannot be directly mapped to an equivalent
 * result array (remaining bits are filled with `0`), defaults to `true`
 * @privateRemarks
 * Derived from: https://github.com/sipa/bech32
 */
const regroupBits = ({ bin, sourceWordLength, resultWordLength, allowPadding = true, }) => {
    let accumulator = 0;
    let bits = 0;
    const result = [];
    const maxResultInt = (1 << resultWordLength) - 1;
    // eslint-disable-next-line functional/no-loop-statement, @typescript-eslint/prefer-for-of, no-plusplus
    for (let p = 0; p < bin.length; ++p) {
        const value = bin[p];
        if (value < 0 || value >> sourceWordLength !== 0) {
            return BitRegroupingError.integerOutOfRange;
        }
        accumulator = (accumulator << sourceWordLength) | value;
        bits += sourceWordLength;
        // eslint-disable-next-line functional/no-loop-statement
        while (bits >= resultWordLength) {
            bits -= resultWordLength;
            // eslint-disable-next-line functional/immutable-data
            result.push((accumulator >> bits) & maxResultInt);
        }
    }
    if (allowPadding) {
        if (bits > 0) {
            // eslint-disable-next-line functional/immutable-data
            result.push((accumulator << (resultWordLength - bits)) & maxResultInt);
        }
    }
    else if (bits >= sourceWordLength) {
        return BitRegroupingError.hasDisallowedPadding;
    }
    else if (((accumulator << (resultWordLength - bits)) & maxResultInt) > 0) {
        return BitRegroupingError.requiresDisallowedPadding;
    }
    return result;
};
/* eslint-enable functional/no-let, no-bitwise, functional/no-expression-statement, functional/no-conditional-statement, complexity */
/**
 * Encode an array of numbers as a base32 string using the Bech32 character set.
 *
 * Note, this method always completes. For a valid result, all items in
 * `base32IntegerArray` must be between `0` and `32`.
 *
 * @param base32IntegerArray - the array of 5-bit integers to encode
 */
const encodeBech32 = (base32IntegerArray) => {
    // eslint-disable-next-line functional/no-let
    let result = '';
    // eslint-disable-next-line @typescript-eslint/prefer-for-of, functional/no-let, functional/no-loop-statement, no-plusplus
    for (let i = 0; i < base32IntegerArray.length; i++) {
        // eslint-disable-next-line functional/no-expression-statement
        result += bech32CharacterSet[base32IntegerArray[i]];
    }
    return result;
};
/**
 * Decode a Bech32-encoded string into an array of 5-bit integers.
 *
 * Note, this method always completes. If `validBech32` is not valid bech32,
 * an incorrect result will be returned. If `validBech32` is potentially
 * malformed, check it with `isBech32` before calling this method.
 *
 * @param validBech32 - the bech32-encoded string to decode
 */
const decodeBech32 = (validBech32) => {
    const result = [];
    // eslint-disable-next-line @typescript-eslint/prefer-for-of, functional/no-let, functional/no-loop-statement, no-plusplus
    for (let i = 0; i < validBech32.length; i++) {
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        result.push(bech32CharacterSetIndex[validBech32[i]]);
    }
    return result;
};
const nonBech32Characters = new RegExp(`[^${bech32CharacterSet}]`, 'u');
const base32WordLength = 5;
const base256WordLength = 8;
/**
 * Validate that a string uses only characters from the bech32 character set.
 *
 * @param maybeBech32 - a string to test for valid Bech32 encoding
 */
const isBech32CharacterSet = (maybeBech32) => !nonBech32Characters.test(maybeBech32);
var Bech32DecodingError;
(function (Bech32DecodingError) {
    Bech32DecodingError["notBech32CharacterSet"] = "Bech32 decoding error: input contains characters outside of the Bech32 character set.";
})(Bech32DecodingError || (Bech32DecodingError = {}));
/**
 * Convert a padded bech32-encoded string (without checksum) to a Uint8Array,
 * removing the padding. If the string is not valid Bech32, or if the array of
 * 5-bit integers would require padding to be regrouped into 8-bit bytes, this
 * method returns an error message.
 *
 * This method is the reverse of `binToBech32Padded`.
 *
 * @param bech32Padded - the padded bech32-encoded string to decode
 */
const bech32PaddedToBin = (bech32Padded) => {
    const result = isBech32CharacterSet(bech32Padded)
        ? regroupBits({
            allowPadding: false,
            bin: decodeBech32(bech32Padded),
            resultWordLength: base256WordLength,
            sourceWordLength: base32WordLength,
        })
        : Bech32DecodingError.notBech32CharacterSet;
    return typeof result === 'string' ? result : Uint8Array.from(result);
};
/**
 * Convert a Uint8Array to a padded bech32-encoded string (without a checksum),
 * adding padding bits as necessary to convert all bytes to 5-bit integers.
 *
 * This method is the reverse of `bech32PaddedToBin`.
 *
 * @param bytes - the Uint8Array to bech32 encode
 */
const binToBech32Padded = (bytes) => encodeBech32(regroupBits({
    bin: bytes,
    resultWordLength: base32WordLength,
    sourceWordLength: base256WordLength,
}));
//# sourceMappingURL=bech32.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js ***!
  \********************************************************************************/
/*! namespace exports */
/*! export CashAddressCorrectionError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CashAddressDecodingError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CashAddressEncodingError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CashAddressNetworkPrefix [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CashAddressType [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CashAddressVersionByte [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CashAddressVersionByteDecodingError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export attemptCashAddressFormatErrorCorrection [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cashAddressBitToSize [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cashAddressChecksumToUint5Array [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cashAddressPolynomialModulo [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cashAddressPolynomialToCashAddress [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cashAddressSizeToBit [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeCashAddress [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeCashAddressFormat [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeCashAddressFormatWithoutPrefix [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeCashAddressVersionByte [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeCashAddress [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeCashAddressFormat [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeCashAddressVersionByte [provided] [no usage info] [missing usage info prevents renaming] */
/*! export maskCashAddressPrefix [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CashAddressNetworkPrefix": () => /* binding */ CashAddressNetworkPrefix,
/* harmony export */   "cashAddressBitToSize": () => /* binding */ cashAddressBitToSize,
/* harmony export */   "cashAddressSizeToBit": () => /* binding */ cashAddressSizeToBit,
/* harmony export */   "CashAddressVersionByte": () => /* binding */ CashAddressVersionByte,
/* harmony export */   "CashAddressType": () => /* binding */ CashAddressType,
/* harmony export */   "encodeCashAddressVersionByte": () => /* binding */ encodeCashAddressVersionByte,
/* harmony export */   "CashAddressVersionByteDecodingError": () => /* binding */ CashAddressVersionByteDecodingError,
/* harmony export */   "decodeCashAddressVersionByte": () => /* binding */ decodeCashAddressVersionByte,
/* harmony export */   "maskCashAddressPrefix": () => /* binding */ maskCashAddressPrefix,
/* harmony export */   "cashAddressPolynomialModulo": () => /* binding */ cashAddressPolynomialModulo,
/* harmony export */   "cashAddressChecksumToUint5Array": () => /* binding */ cashAddressChecksumToUint5Array,
/* harmony export */   "encodeCashAddressFormat": () => /* binding */ encodeCashAddressFormat,
/* harmony export */   "CashAddressEncodingError": () => /* binding */ CashAddressEncodingError,
/* harmony export */   "encodeCashAddress": () => /* binding */ encodeCashAddress,
/* harmony export */   "CashAddressDecodingError": () => /* binding */ CashAddressDecodingError,
/* harmony export */   "decodeCashAddressFormat": () => /* binding */ decodeCashAddressFormat,
/* harmony export */   "decodeCashAddress": () => /* binding */ decodeCashAddress,
/* harmony export */   "decodeCashAddressFormatWithoutPrefix": () => /* binding */ decodeCashAddressFormatWithoutPrefix,
/* harmony export */   "cashAddressPolynomialToCashAddress": () => /* binding */ cashAddressPolynomialToCashAddress,
/* harmony export */   "CashAddressCorrectionError": () => /* binding */ CashAddressCorrectionError,
/* harmony export */   "attemptCashAddressFormatErrorCorrection": () => /* binding */ attemptCashAddressFormatErrorCorrection
/* harmony export */ });
/* harmony import */ var _bech32__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bech32 */ "./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js");

var CashAddressNetworkPrefix;
(function (CashAddressNetworkPrefix) {
    CashAddressNetworkPrefix["mainnet"] = "bitcoincash";
    CashAddressNetworkPrefix["testnet"] = "bchtest";
    CashAddressNetworkPrefix["regtest"] = "bchreg";
})(CashAddressNetworkPrefix || (CashAddressNetworkPrefix = {}));
const cashAddressBitToSize = {
    0: 160,
    1: 192,
    2: 224,
    3: 256,
    4: 320,
    5: 384,
    6: 448,
    7: 512,
};
const cashAddressSizeToBit = {
    160: 0,
    192: 1,
    224: 2,
    256: 3,
    320: 4,
    384: 5,
    448: 6,
    512: 7,
};
/**
 * The CashAddress specification standardizes the format of the version byte:
 * - Most significant bit: reserved, must be `0`
 * - next 4 bits: Address Type
 * - 3 least significant bits: Hash Size
 *
 * Only two Address Type values are currently standardized:
 * - 0 (`0b0000`): P2PKH
 * - 1 (`0b0001`): P2SH
 *
 * While both P2PKH and P2SH addresses always use 160 bit hashes, the
 * CashAddress specification standardizes other sizes for future use (or use by
 * other systems), see `CashAddressSizeBit`.
 *
 * With these constraints, only two version byte values are currently standard.
 */
var CashAddressVersionByte;
(function (CashAddressVersionByte) {
    /**
     * Pay to Public Key Hash (P2PKH): `0b00000000`
     *
     * - Most significant bit: `0` (reserved)
     * - Address Type bits: `0000` (P2PKH)
     * - Size bits: `000` (160 bits)
     */
    CashAddressVersionByte[CashAddressVersionByte["P2PKH"] = 0] = "P2PKH";
    /**
     * Pay to Script Hash (P2SH): `0b00001000`
     *
     * - Most significant bit: `0` (reserved)
     * - Address Type bits: `0001` (P2SH)
     * - Size bits: `000` (160 bits)
     */
    CashAddressVersionByte[CashAddressVersionByte["P2SH"] = 8] = "P2SH";
})(CashAddressVersionByte || (CashAddressVersionByte = {}));
/**
 * The address types currently defined in the CashAddress specification. See
 * also: `CashAddressVersionByte`.
 */
var CashAddressType;
(function (CashAddressType) {
    /**
     * Pay to Public Key Hash (P2PKH)
     */
    CashAddressType[CashAddressType["P2PKH"] = 0] = "P2PKH";
    /**
     * Pay to Script Hash (P2SH)
     */
    CashAddressType[CashAddressType["P2SH"] = 1] = "P2SH";
})(CashAddressType || (CashAddressType = {}));
const cashAddressTypeBitShift = 3;
/**
 * Encode a CashAddress version byte for the given address type and hash length.
 * See `CashAddressVersionByte` for more information.
 *
 * The `type` parameter must be a number between `0` and `15`, and `bitLength`
 * must be one of the standardized lengths. To use the contents of a variable,
 * cast it to `CashAddressType` or `CashAddressSize` respectively, e.g.:
 * ```ts
 * const type = 3 as CashAddressType;
 * const size = 160 as CashAddressSize;
 * getCashAddressVersionByte(type, size);
 * ```
 * @param type - the address type of the hash being encoded
 * @param bitLength - the bit length of the hash being encoded
 */
const encodeCashAddressVersionByte = (type, bitLength
// eslint-disable-next-line no-bitwise
) => (type << cashAddressTypeBitShift) | cashAddressSizeToBit[bitLength];
const cashAddressReservedBitMask = 0b10000000;
const cashAddressTypeBits = 0b1111;
const cashAddressSizeBits = 0b111;
const empty = 0;
var CashAddressVersionByteDecodingError;
(function (CashAddressVersionByteDecodingError) {
    CashAddressVersionByteDecodingError["reservedBitSet"] = "Reserved bit is set.";
})(CashAddressVersionByteDecodingError || (CashAddressVersionByteDecodingError = {}));
/**
 * Decode a CashAddress version byte.
 * @param version - the version byte to decode
 */
const decodeCashAddressVersionByte = (version) => 
// eslint-disable-next-line no-negated-condition, no-bitwise
(version & cashAddressReservedBitMask) !== empty
    ? CashAddressVersionByteDecodingError.reservedBitSet
    : {
        bitLength: cashAddressBitToSize[
        // eslint-disable-next-line no-bitwise
        (version & cashAddressSizeBits)],
        // eslint-disable-next-line no-bitwise
        type: (version >>> cashAddressTypeBitShift) & cashAddressTypeBits,
    };
/**
 * In ASCII, each pair of upper and lower case characters share the same 5 least
 * significant bits.
 */
const asciiCaseInsensitiveBits = 0b11111;
/**
 * Convert a string into an array of 5-bit numbers, representing the
 * characters in a case-insensitive way.
 * @param prefix - the prefix to mask
 */
const maskCashAddressPrefix = (prefix) => {
    const result = [];
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus
    for (let i = 0; i < prefix.length; i++) {
        // eslint-disable-next-line functional/no-expression-statement, no-bitwise, functional/immutable-data
        result.push(prefix.charCodeAt(i) & asciiCaseInsensitiveBits);
    }
    return result;
};
// prettier-ignore
const bech32GeneratorMostSignificantByte = [0x98, 0x79, 0xf3, 0xae, 0x1e]; // eslint-disable-line @typescript-eslint/no-magic-numbers
// prettier-ignore
const bech32GeneratorRemainingBytes = [0xf2bc8e61, 0xb76d99e2, 0x3e5fb3c4, 0x2eabe2a8, 0x4f43e470]; // eslint-disable-line @typescript-eslint/no-magic-numbers
/**
 * Perform the CashAddress polynomial modulo operation, which is based on the
 * Bech32 polynomial modulo operation, but the returned checksum is 40 bits,
 * rather than 30.
 *
 * A.K.A. `PolyMod`
 *
 * @remarks
 * Notes from Bitcoin ABC:
 * This function will compute what 8 5-bit values to XOR into the last 8 input
 * values, in order to make the checksum 0. These 8 values are packed together
 * in a single 40-bit integer. The higher bits correspond to earlier values.
 *
 * The input is interpreted as a list of coefficients of a polynomial over F
 * = GF(32), with an implicit 1 in front. If the input is [v0,v1,v2,v3,v4],
 * that polynomial is v(x) = 1*x^5 + v0*x^4 + v1*x^3 + v2*x^2 + v3*x + v4.
 * The implicit 1 guarantees that [v0,v1,v2,...] has a distinct checksum
 * from [0,v0,v1,v2,...].
 *
 * The output is a 40-bit integer whose 5-bit groups are the coefficients of
 * the remainder of v(x) mod g(x), where g(x) is the cashaddr generator, x^8
 * + [19]*x^7 + [3]*x^6 + [25]*x^5 + [11]*x^4 + [25]*x^3 + [3]*x^2 + [19]*x
 * + [1]. g(x) is chosen in such a way that the resulting code is a BCH
 * code, guaranteeing detection of up to 4 errors within a window of 1025
 * characters. Among the various possible BCH codes, one was selected to in
 * fact guarantee detection of up to 5 errors within a window of 160
 * characters and 6 errors within a window of 126 characters. In addition,
 * the code guarantee the detection of a burst of up to 8 errors.
 *
 * Note that the coefficients are elements of GF(32), here represented as
 * decimal numbers between []. In this finite field, addition is just XOR of
 * the corresponding numbers. For example, [27] + [13] = [27 ^ 13] = [22].
 * Multiplication is more complicated, and requires treating the bits of
 * values themselves as coefficients of a polynomial over a smaller field,
 * GF(2), and multiplying those polynomials mod a^5 + a^3 + 1. For example,
 * [5] * [26] = (a^2 + 1) * (a^4 + a^3 + a) = (a^4 + a^3 + a) * a^2 + (a^4 +
 * a^3 + a) = a^6 + a^5 + a^4 + a = a^3 + 1 (mod a^5 + a^3 + 1) = [9].
 *
 * During the course of the loop below, `c` contains the bit-packed
 * coefficients of the polynomial constructed from just the values of v that
 * were processed so far, mod g(x). In the above example, `c` initially
 * corresponds to 1 mod (x), and after processing 2 inputs of v, it
 * corresponds to x^2 + v0*x + v1 mod g(x). As 1 mod g(x) = 1, that is the
 * starting value for `c`.
 *
 * @privateRemarks
 * Derived from the `bitcore-lib-cash` implementation, which does not require
 * BigInt: https://github.com/bitpay/bitcore
 *
 * @param v - Array of 5-bit integers over which the checksum is to be computed
 */
const cashAddressPolynomialModulo = (v) => {
    /* eslint-disable functional/no-let, functional/no-loop-statement, functional/no-expression-statement, no-bitwise, @typescript-eslint/no-magic-numbers */
    let mostSignificantByte = 0;
    let lowerBytes = 1;
    let c = 0;
    // eslint-disable-next-line @typescript-eslint/prefer-for-of, no-plusplus
    for (let j = 0; j < v.length; j++) {
        c = mostSignificantByte >>> 3;
        mostSignificantByte &= 0x07;
        mostSignificantByte <<= 5;
        mostSignificantByte |= lowerBytes >>> 27;
        lowerBytes &= 0x07ffffff;
        lowerBytes <<= 5;
        lowerBytes ^= v[j];
        // eslint-disable-next-line no-plusplus
        for (let i = 0; i < bech32GeneratorMostSignificantByte.length; ++i) {
            // eslint-disable-next-line functional/no-conditional-statement
            if (c & (1 << i)) {
                mostSignificantByte ^= bech32GeneratorMostSignificantByte[i];
                lowerBytes ^= bech32GeneratorRemainingBytes[i];
            }
        }
    }
    lowerBytes ^= 1;
    // eslint-disable-next-line functional/no-conditional-statement
    if (lowerBytes < 0) {
        lowerBytes ^= 1 << 31;
        lowerBytes += (1 << 30) * 2;
    }
    return mostSignificantByte * (1 << 30) * 4 + lowerBytes;
    /* eslint-enable functional/no-let, functional/no-loop-statement, functional/no-expression-statement, no-bitwise, @typescript-eslint/no-magic-numbers */
};
const base32WordLength = 5;
const base256WordLength = 8;
/**
 * Convert the checksum returned by `cashAddressPolynomialModulo` to an array of
 * 5-bit positive integers which can be Base32 encoded.
 * @param checksum - a 40 bit checksum returned by `cashAddressPolynomialModulo`
 */
const cashAddressChecksumToUint5Array = (checksum) => {
    const result = [];
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus
    for (let i = 0; i < base256WordLength; ++i) {
        // eslint-disable-next-line functional/no-expression-statement, no-bitwise, @typescript-eslint/no-magic-numbers, functional/immutable-data
        result.push(checksum & 31);
        // eslint-disable-next-line functional/no-expression-statement, @typescript-eslint/no-magic-numbers, no-param-reassign
        checksum /= 32;
    }
    // eslint-disable-next-line functional/immutable-data
    return result.reverse();
};
const payloadSeparator = 0;
/**
 * Encode a hash as a CashAddress-like string using the CashAddress format.
 *
 * To encode a standard CashAddress, use `encodeCashAddress`.
 *
 * @param prefix - a valid prefix indicating the network for which to encode the
 * address – must be only lowercase letters
 * @param version - a single byte indicating the version of this address
 * @param hash - the hash to encode
 */
const encodeCashAddressFormat = (prefix, version, hash) => {
    const checksum40BitPlaceholder = [0, 0, 0, 0, 0, 0, 0, 0];
    const payloadContents = (0,_bech32__WEBPACK_IMPORTED_MODULE_0__.regroupBits)({
        bin: Uint8Array.from([version, ...hash]),
        resultWordLength: base32WordLength,
        sourceWordLength: base256WordLength,
    });
    const checksumContents = [
        ...maskCashAddressPrefix(prefix),
        payloadSeparator,
        ...payloadContents,
        ...checksum40BitPlaceholder,
    ];
    const checksum = cashAddressPolynomialModulo(checksumContents);
    const payload = [
        ...payloadContents,
        ...cashAddressChecksumToUint5Array(checksum),
    ];
    return `${prefix}:${(0,_bech32__WEBPACK_IMPORTED_MODULE_0__.encodeBech32)(payload)}`;
};
var CashAddressEncodingError;
(function (CashAddressEncodingError) {
    CashAddressEncodingError["unsupportedHashLength"] = "CashAddress encoding error: a hash of this length can not be encoded as a valid CashAddress.";
})(CashAddressEncodingError || (CashAddressEncodingError = {}));
const isValidBitLength = (bitLength) => cashAddressSizeToBit[bitLength] !== undefined;
/**
 * Encode a hash as a CashAddress.
 *
 * Note, this method does not enforce error handling via the type system. The
 * returned string may be a `CashAddressEncodingError.unsupportedHashLength`
 * if `hash` is not a valid length. Check the result if the input is potentially
 * malformed.
 *
 * For other address standards which closely follow the CashAddress
 * specification (but have alternative version byte requirements), use
 * `encodeCashAddressFormat`.
 *
 * @param prefix - a valid prefix indicating the network for which to encode the
 * address (usually a `CashAddressNetworkPrefix`) – must be only lowercase
 * letters
 * @param type - the `CashAddressType` to encode in the version byte – usually a
 * `CashAddressType`
 * @param hash - the hash to encode (for P2PKH, the public key hash; for P2SH,
 * the redeeming bytecode hash)
 */
const encodeCashAddress = (prefix, type, hash) => {
    const bitLength = hash.length * base256WordLength;
    if (!isValidBitLength(bitLength)) {
        return CashAddressEncodingError.unsupportedHashLength;
    }
    return encodeCashAddressFormat(prefix, encodeCashAddressVersionByte(type, bitLength), hash);
};
var CashAddressDecodingError;
(function (CashAddressDecodingError) {
    CashAddressDecodingError["improperPadding"] = "CashAddress decoding error: the payload is improperly padded.";
    CashAddressDecodingError["invalidCharacters"] = "CashAddress decoding error: the payload contains non-bech32 characters.";
    CashAddressDecodingError["invalidChecksum"] = "CashAddress decoding error: please review the address for errors.";
    CashAddressDecodingError["invalidFormat"] = "CashAddress decoding error: CashAddresses should be of the form \"prefix:payload\".";
    CashAddressDecodingError["mismatchedHashLength"] = "CashAddress decoding error: mismatched hash length for specified address version.";
    CashAddressDecodingError["reservedByte"] = "CashAddress decoding error: unknown CashAddress version, reserved byte set.";
})(CashAddressDecodingError || (CashAddressDecodingError = {}));
/**
 * Decode and validate a string using the CashAddress format. This is more
 * lenient than `decodeCashAddress`, which also validates the contents of the
 * version byte.
 *
 * Note, this method requires `address` to include a network prefix. To
 * decode a string with an unknown prefix, try
 * `decodeCashAddressFormatWithoutPrefix`.
 *
 * @param address - the CashAddress-like string to decode
 */
// eslint-disable-next-line complexity
const decodeCashAddressFormat = (address) => {
    const parts = address.toLowerCase().split(':');
    // eslint-disable-next-line @typescript-eslint/no-magic-numbers
    if (parts.length !== 2 || parts[0] === '' || parts[1] === '') {
        return CashAddressDecodingError.invalidFormat;
    }
    const [prefix, payload] = parts;
    if (!(0,_bech32__WEBPACK_IMPORTED_MODULE_0__.isBech32CharacterSet)(payload)) {
        return CashAddressDecodingError.invalidCharacters;
    }
    const decodedPayload = (0,_bech32__WEBPACK_IMPORTED_MODULE_0__.decodeBech32)(payload);
    const polynomial = [
        ...maskCashAddressPrefix(prefix),
        payloadSeparator,
        ...decodedPayload,
    ];
    if (cashAddressPolynomialModulo(polynomial) !== 0) {
        return CashAddressDecodingError.invalidChecksum;
    }
    const checksum40BitPlaceholderLength = 8;
    const payloadContents = (0,_bech32__WEBPACK_IMPORTED_MODULE_0__.regroupBits)({
        allowPadding: false,
        bin: decodedPayload.slice(0, -checksum40BitPlaceholderLength),
        resultWordLength: base256WordLength,
        sourceWordLength: base32WordLength,
    });
    if (typeof payloadContents === 'string') {
        return CashAddressDecodingError.improperPadding;
    }
    const [version, ...hashContents] = payloadContents;
    const hash = Uint8Array.from(hashContents);
    return { hash, prefix, version };
};
/**
 * Decode and validate a CashAddress, strictly checking the version byte
 * according to the CashAddress specification. This is important for error
 * detection in CashAddresses.
 *
 * For other address-like standards which closely follow the CashAddress
 * specification (but have alternative version byte requirements), use
 * `decodeCashAddressFormat`.
 *
 * Note, this method requires that CashAddresses include a network prefix. To
 * decode an address with an unknown prefix, try
 * `decodeCashAddressFormatWithoutPrefix`.
 *
 * @param address - the CashAddress to decode
 */
const decodeCashAddress = (address) => {
    const decoded = decodeCashAddressFormat(address);
    if (typeof decoded === 'string') {
        return decoded;
    }
    const info = decodeCashAddressVersionByte(decoded.version);
    if (info === CashAddressVersionByteDecodingError.reservedBitSet) {
        return CashAddressDecodingError.reservedByte;
    }
    if (decoded.hash.length * base256WordLength !== info.bitLength) {
        return CashAddressDecodingError.mismatchedHashLength;
    }
    return {
        hash: decoded.hash,
        prefix: decoded.prefix,
        type: info.type,
    };
};
/**
 * Attempt to decode and validate a CashAddress against a list of possible
 * prefixes. If the correct prefix is known, use `decodeCashAddress`.
 *
 * @param address - the CashAddress to decode
 * @param possiblePrefixes - the network prefixes to try
 */
// decodeCashAddressWithoutPrefix
const decodeCashAddressFormatWithoutPrefix = (address, possiblePrefixes = [
    CashAddressNetworkPrefix.mainnet,
    CashAddressNetworkPrefix.testnet,
    CashAddressNetworkPrefix.regtest,
]) => {
    // eslint-disable-next-line functional/no-loop-statement
    for (const prefix of possiblePrefixes) {
        const attempt = decodeCashAddressFormat(`${prefix}:${address}`);
        if (attempt !== CashAddressDecodingError.invalidChecksum) {
            return attempt;
        }
    }
    return CashAddressDecodingError.invalidChecksum;
};
const asciiLowerCaseStart = 96;
/**
 * Convert a CashAddress polynomial to CashAddress string format.
 *
 * @remarks
 * CashAddress polynomials take the form:
 *
 * `[lowest 5 bits of each prefix character] 0 [payload + checksum]`
 *
 * This method remaps the 5-bit integers in the prefix location to the matching
 * ASCII lowercase characters, replaces the separator with `:`, and then Bech32
 * encodes the remaining payload and checksum.
 *
 * @param polynomial - an array of 5-bit integers representing the terms of a
 * CashAddress polynomial
 */
const cashAddressPolynomialToCashAddress = (polynomial) => {
    const separatorPosition = polynomial.indexOf(0);
    const prefix = polynomial
        .slice(0, separatorPosition)
        .map((integer) => String.fromCharCode(asciiLowerCaseStart + integer))
        .join('');
    const contents = (0,_bech32__WEBPACK_IMPORTED_MODULE_0__.encodeBech32)(polynomial.slice(separatorPosition + 1));
    return `${prefix}:${contents}`;
};
var CashAddressCorrectionError;
(function (CashAddressCorrectionError) {
    CashAddressCorrectionError["tooManyErrors"] = "This address has more than 2 errors and cannot be corrected.";
})(CashAddressCorrectionError || (CashAddressCorrectionError = {}));
const finiteFieldOrder = 32;
/**
 * Attempt to correct up to 2 errors in a CashAddress. The CashAddress must be
 * properly formed (include a prefix and only contain Bech32 characters).
 *
 * ## **Improper use of this method carries the risk of lost funds.**
 *
 * It is strongly advised that this method only be used under explicit user
 * control. With enough errors, this method is likely to find a plausible
 * correction for any address (but for which no private key exists). This is
 * effectively equivalent to burning the funds.
 *
 * Only 2 substitution errors can be corrected (or a single swap) – deletions
 * and insertions (errors which shift many other characters and change the
 * length of the payload) can never be safely corrected and will produce an
 * error.
 *
 * Errors can be corrected in both the prefix and the payload, but attempting to
 * correct errors in the prefix prior to this method can improve results, e.g.
 * for `bchtest:qq2azmyyv6dtgczexyalqar70q036yund53jvfde0x`, the string
 * `bchtest:qq2azmyyv6dtgczexyalqar70q036yund53jvfdecc` can be corrected, while
 * `typo:qq2azmyyv6dtgczexyalqar70q036yund53jvfdecc` can not.
 *
 * @privateRemarks
 * Derived from: https://github.com/deadalnix/cashaddressed
 *
 * @param address - the CashAddress on which to attempt error correction
 */
// eslint-disable-next-line complexity
const attemptCashAddressFormatErrorCorrection = (address) => {
    const parts = address.toLowerCase().split(':');
    // eslint-disable-next-line @typescript-eslint/no-magic-numbers
    if (parts.length !== 2 || parts[0] === '' || parts[1] === '') {
        return CashAddressDecodingError.invalidFormat;
    }
    const [prefix, payload] = parts;
    if (!(0,_bech32__WEBPACK_IMPORTED_MODULE_0__.isBech32CharacterSet)(payload)) {
        return CashAddressDecodingError.invalidCharacters;
    }
    const decodedPayload = (0,_bech32__WEBPACK_IMPORTED_MODULE_0__.decodeBech32)(payload);
    const polynomial = [...maskCashAddressPrefix(prefix), 0, ...decodedPayload];
    const originalChecksum = cashAddressPolynomialModulo(polynomial);
    if (originalChecksum === 0) {
        return {
            address: cashAddressPolynomialToCashAddress(polynomial),
            corrections: [],
        };
    }
    const syndromes = {};
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus
    for (let term = 0; term < polynomial.length; term++) {
        // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus
        for (let errorVector = 1; errorVector < finiteFieldOrder; errorVector++) {
            // eslint-disable-next-line functional/no-expression-statement, no-bitwise, functional/immutable-data
            polynomial[term] ^= errorVector;
            const correct = cashAddressPolynomialModulo(polynomial);
            if (correct === 0) {
                return {
                    address: cashAddressPolynomialToCashAddress(polynomial),
                    corrections: [term],
                };
            }
            // eslint-disable-next-line no-bitwise
            const s0 = (BigInt(correct) ^ BigInt(originalChecksum)).toString();
            // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
            syndromes[s0] = term * finiteFieldOrder + errorVector;
            // eslint-disable-next-line functional/no-expression-statement, no-bitwise, functional/immutable-data
            polynomial[term] ^= errorVector;
        }
    }
    // eslint-disable-next-line functional/no-loop-statement
    for (const [s0, pe] of Object.entries(syndromes)) {
        // eslint-disable-next-line no-bitwise
        const s1Location = (BigInt(s0) ^ BigInt(originalChecksum)).toString();
        const s1 = syndromes[s1Location];
        if (s1 !== undefined) {
            const correctionIndex1 = Math.trunc(pe / finiteFieldOrder);
            const correctionIndex2 = Math.trunc(s1 / finiteFieldOrder);
            // eslint-disable-next-line functional/no-expression-statement, no-bitwise, functional/immutable-data
            polynomial[correctionIndex1] ^= pe % finiteFieldOrder;
            // eslint-disable-next-line functional/no-expression-statement, no-bitwise, functional/immutable-data
            polynomial[correctionIndex2] ^= s1 % finiteFieldOrder;
            return {
                address: cashAddressPolynomialToCashAddress(polynomial),
                corrections: [correctionIndex1, correctionIndex2].sort((a, b) => a - b),
            };
        }
    }
    return CashAddressCorrectionError.tooManyErrors;
};
//# sourceMappingURL=cash-address.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js ***!
  \************************************************************************************/
/*! namespace exports */
/*! export AddressType [provided] [no usage info] [missing usage info prevents renaming] */
/*! export LockingBytecodeEncodingError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export addressContentsToLockingBytecode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export base58AddressToLockingBytecode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cashAddressToLockingBytecode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export lockingBytecodeToAddressContents [provided] [no usage info] [missing usage info prevents renaming] */
/*! export lockingBytecodeToBase58Address [provided] [no usage info] [missing usage info prevents renaming] */
/*! export lockingBytecodeToCashAddress [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AddressType": () => /* binding */ AddressType,
/* harmony export */   "lockingBytecodeToAddressContents": () => /* binding */ lockingBytecodeToAddressContents,
/* harmony export */   "addressContentsToLockingBytecode": () => /* binding */ addressContentsToLockingBytecode,
/* harmony export */   "lockingBytecodeToCashAddress": () => /* binding */ lockingBytecodeToCashAddress,
/* harmony export */   "LockingBytecodeEncodingError": () => /* binding */ LockingBytecodeEncodingError,
/* harmony export */   "cashAddressToLockingBytecode": () => /* binding */ cashAddressToLockingBytecode,
/* harmony export */   "lockingBytecodeToBase58Address": () => /* binding */ lockingBytecodeToBase58Address,
/* harmony export */   "base58AddressToLockingBytecode": () => /* binding */ base58AddressToLockingBytecode
/* harmony export */ });
/* harmony import */ var _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vm/instruction-sets/common/opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js");
/* harmony import */ var _base58_address__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base58-address */ "./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js");
/* harmony import */ var _cash_address__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cash-address */ "./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js");



/**
 * The most common address types used on bitcoin and bitcoin-like networks. Each
 * address type represents a commonly used locking bytecode pattern.
 *
 * @remarks
 * Addresses are strings which encode information about the network and
 * `lockingBytecode` to which a transaction output can pay.
 *
 * Several address formats exist – `Base58Address` was the format used by the
 * original satoshi client, and is still in use on several active chains (see
 * `encodeBase58Address`). On Bitcoin Cash, the `CashAddress` standard is most
 * common (See `encodeCashAddress`).
 */
var AddressType;
(function (AddressType) {
    /**
     * Pay to Public Key (P2PK). This address type is uncommon, and primarily
     * occurs in early blocks because the original satoshi implementation mined
     * rewards to P2PK addresses.
     *
     * There are no standardized address formats for representing a P2PK address.
     * Instead, most applications use the `AddressType.p2pkh` format.
     */
    AddressType["p2pk"] = "P2PK";
    /**
     * Pay to Public Key Hash (P2PKH). The most common address type. P2PKH
     * addresses lock funds using a single private key.
     */
    AddressType["p2pkh"] = "P2PKH";
    /**
     * Pay to Script Hash (P2SH). An address type which locks funds to the hash of
     * a script provided in the spending transaction. See BIP13 for details.
     */
    AddressType["p2sh"] = "P2SH";
    /**
     * This `AddressType` represents an address using an unknown or uncommon
     * locking bytecode pattern for which no standardized address formats exist.
     */
    AddressType["unknown"] = "unknown";
})(AddressType || (AddressType = {}));
/**
 * Attempt to match a lockingBytecode to a standard address type for use in
 * address encoding. (See `AddressType` for details.)
 *
 * For a locking bytecode matching the Pay to Public Key Hash (P2PKH) pattern,
 * the returned `type` is `AddressType.p2pkh` and `payload` is the `HASH160` of
 * the public key.
 *
 * For a locking bytecode matching the Pay to Script Hash (P2SH) pattern, the
 * returned `type` is `AddressType.p2sh` and `payload` is the `HASH160` of the
 * redeeming bytecode, A.K.A. "redeem script hash".
 *
 * For a locking bytecode matching the Pay to Public Key (P2PK) pattern, the
 * returned `type` is `AddressType.p2pk` and `payload` is the full public key.
 *
 * Any other locking bytecode will return a `type` of `AddressType.unknown` and
 * a payload of the unmodified `bytecode`.
 *
 * @param bytecode - the locking bytecode to match
 */
// eslint-disable-next-line complexity
const lockingBytecodeToAddressContents = (bytecode) => {
    const p2pkhLength = 25;
    if (bytecode.length === p2pkhLength &&
        bytecode[0] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_DUP &&
        bytecode[1] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_HASH160 &&
        bytecode[2] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_PUSHBYTES_20 &&
        bytecode[23] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_EQUALVERIFY &&
        bytecode[24] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_CHECKSIG) {
        const start = 3;
        const end = 23;
        return { payload: bytecode.slice(start, end), type: AddressType.p2pkh };
    }
    const p2shLength = 23;
    if (bytecode.length === p2shLength &&
        bytecode[0] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_HASH160 &&
        bytecode[1] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_PUSHBYTES_20 &&
        bytecode[22] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_EQUAL) {
        const start = 2;
        const end = 22;
        return { payload: bytecode.slice(start, end), type: AddressType.p2sh };
    }
    const p2pkUncompressedLength = 67;
    if (bytecode.length === p2pkUncompressedLength &&
        bytecode[0] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_PUSHBYTES_65 &&
        bytecode[66] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_CHECKSIG) {
        const start = 1;
        const end = 66;
        return { payload: bytecode.slice(start, end), type: AddressType.p2pk };
    }
    const p2pkCompressedLength = 35;
    if (bytecode.length === p2pkCompressedLength &&
        bytecode[0] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_PUSHBYTES_33 &&
        bytecode[34] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_CHECKSIG) {
        const start = 1;
        const end = 34;
        return { payload: bytecode.slice(start, end), type: AddressType.p2pk };
    }
    return {
        payload: bytecode.slice(),
        type: AddressType.unknown,
    };
};
/**
 * Get the locking bytecode for a valid `AddressContents` object. See
 * `lockingBytecodeToAddressContents` for details.
 *
 * For `AddressContents` of `type` `AddressType.unknown`, this method returns
 * the `payload` without modification.
 *
 * @param addressContents - the `AddressContents` to encode
 */
const addressContentsToLockingBytecode = (addressContents) => {
    if (addressContents.type === AddressType.p2pkh) {
        return Uint8Array.from([
            _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_DUP,
            _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_HASH160,
            _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_PUSHBYTES_20,
            ...addressContents.payload,
            _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_EQUALVERIFY,
            _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_CHECKSIG,
        ]);
    }
    if (addressContents.type === AddressType.p2sh) {
        return Uint8Array.from([
            _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_HASH160,
            _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_PUSHBYTES_20,
            ...addressContents.payload,
            _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_EQUAL,
        ]);
    }
    if (addressContents.type === AddressType.p2pk) {
        const compressedPublicKeyLength = 33;
        return addressContents.payload.length === compressedPublicKeyLength
            ? Uint8Array.from([
                _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_PUSHBYTES_33,
                ...addressContents.payload,
                _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_CHECKSIG,
            ])
            : Uint8Array.from([
                _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_PUSHBYTES_65,
                ...addressContents.payload,
                _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_CHECKSIG,
            ]);
    }
    return addressContents.payload;
};
/**
 * Encode a locking bytecode as a CashAddress given a network prefix.
 *
 * If `bytecode` matches either the P2PKH or P2SH pattern, it is encoded using
 * the proper address type and returned as a valid CashAddress (string).
 *
 * If `bytecode` cannot be encoded as an address (i.e. because the pattern is
 * not standard), the resulting `AddressContents` is returned.
 *
 * @param bytecode - the locking bytecode to encode
 * @param prefix - the network prefix to use, e.g. `bitcoincash`, `bchtest`, or
 * `bchreg`
 */
const lockingBytecodeToCashAddress = (bytecode, prefix) => {
    const contents = lockingBytecodeToAddressContents(bytecode);
    if (contents.type === AddressType.p2pkh) {
        return (0,_cash_address__WEBPACK_IMPORTED_MODULE_2__.encodeCashAddress)(prefix, _cash_address__WEBPACK_IMPORTED_MODULE_2__.CashAddressType.P2PKH, contents.payload);
    }
    if (contents.type === AddressType.p2sh) {
        return (0,_cash_address__WEBPACK_IMPORTED_MODULE_2__.encodeCashAddress)(prefix, _cash_address__WEBPACK_IMPORTED_MODULE_2__.CashAddressType.P2SH, contents.payload);
    }
    return contents;
};
var LockingBytecodeEncodingError;
(function (LockingBytecodeEncodingError) {
    LockingBytecodeEncodingError["unknownCashAddressType"] = "This CashAddress uses an unknown address type.";
})(LockingBytecodeEncodingError || (LockingBytecodeEncodingError = {}));
/**
 * Convert a CashAddress to its respective locking bytecode.
 *
 * This method returns the locking bytecode and network prefix. If an error
 * occurs, an error message is returned as a string.
 *
 * @param address - the CashAddress to convert
 */
const cashAddressToLockingBytecode = (address) => {
    const decoded = (0,_cash_address__WEBPACK_IMPORTED_MODULE_2__.decodeCashAddress)(address);
    if (typeof decoded === 'string')
        return decoded;
    if (decoded.type === _cash_address__WEBPACK_IMPORTED_MODULE_2__.CashAddressType.P2PKH) {
        return {
            bytecode: addressContentsToLockingBytecode({
                payload: decoded.hash,
                type: AddressType.p2pkh,
            }),
            prefix: decoded.prefix,
        };
    }
    if (decoded.type === _cash_address__WEBPACK_IMPORTED_MODULE_2__.CashAddressType.P2SH) {
        return {
            bytecode: addressContentsToLockingBytecode({
                payload: decoded.hash,
                type: AddressType.p2sh,
            }),
            prefix: decoded.prefix,
        };
    }
    return LockingBytecodeEncodingError.unknownCashAddressType;
};
/**
 * Encode a locking bytecode as a Base58Address for a given network.
 *
 * If `bytecode` matches either the P2PKH or P2SH pattern, it is encoded using
 * the proper address type and returned as a valid Base58Address (string).
 *
 * If `bytecode` cannot be encoded as an address (i.e. because the pattern is
 * not standard), the resulting `AddressContents` is returned.
 *
 * @param sha256 - an implementation of sha256 (a universal implementation is
 * available via `instantiateSha256`)
 * @param bytecode - the locking bytecode to encode
 * @param network - the network for which to encode the address (`mainnet` or
 * `testnet`)
 */
const lockingBytecodeToBase58Address = (sha256, bytecode, network) => {
    const contents = lockingBytecodeToAddressContents(bytecode);
    if (contents.type === AddressType.p2pkh) {
        return (0,_base58_address__WEBPACK_IMPORTED_MODULE_1__.encodeBase58AddressFormat)(sha256, {
            'copay-bch': _base58_address__WEBPACK_IMPORTED_MODULE_1__.Base58AddressFormatVersion.p2pkhCopayBCH,
            mainnet: _base58_address__WEBPACK_IMPORTED_MODULE_1__.Base58AddressFormatVersion.p2pkh,
            testnet: _base58_address__WEBPACK_IMPORTED_MODULE_1__.Base58AddressFormatVersion.p2pkhTestnet,
        }[network], contents.payload);
    }
    if (contents.type === AddressType.p2sh) {
        return (0,_base58_address__WEBPACK_IMPORTED_MODULE_1__.encodeBase58AddressFormat)(sha256, {
            'copay-bch': _base58_address__WEBPACK_IMPORTED_MODULE_1__.Base58AddressFormatVersion.p2shCopayBCH,
            mainnet: _base58_address__WEBPACK_IMPORTED_MODULE_1__.Base58AddressFormatVersion.p2sh,
            testnet: _base58_address__WEBPACK_IMPORTED_MODULE_1__.Base58AddressFormatVersion.p2shTestnet,
        }[network], contents.payload);
    }
    return contents;
};
/**
 * Convert a Base58Address to its respective locking bytecode.
 *
 * This method returns the locking bytecode and network version. If an error
 * occurs, an error message is returned as a string.
 *
 * @param address - the CashAddress to convert
 */
const base58AddressToLockingBytecode = (sha256, address) => {
    const decoded = (0,_base58_address__WEBPACK_IMPORTED_MODULE_1__.decodeBase58Address)(sha256, address);
    if (typeof decoded === 'string')
        return decoded;
    return {
        bytecode: addressContentsToLockingBytecode({
            payload: decoded.payload,
            type: [
                _base58_address__WEBPACK_IMPORTED_MODULE_1__.Base58AddressFormatVersion.p2pkh,
                _base58_address__WEBPACK_IMPORTED_MODULE_1__.Base58AddressFormatVersion.p2pkhCopayBCH,
                _base58_address__WEBPACK_IMPORTED_MODULE_1__.Base58AddressFormatVersion.p2pkhTestnet,
            ].includes(decoded.version)
                ? AddressType.p2pkh
                : AddressType.p2sh,
        }),
        version: decoded.version,
    };
};
//# sourceMappingURL=locking-bytecode.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/bin/bin.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/bin/bin.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export CompressionFlag [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm-types.js .CompressionFlag */
/*! export ContextFlag [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm-types.js .ContextFlag */
/*! export getEmbeddedSecp256k1Binary [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm.js .getEmbeddedSecp256k1Binary */
/*! export instantiateRustWasm [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/hashes.js .instantiateRustWasm */
/*! export instantiateSecp256k1Wasm [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm.js .instantiateSecp256k1Wasm */
/*! export instantiateSecp256k1WasmBytes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm.js .instantiateSecp256k1WasmBytes */
/*! export ripemd160Base64Bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/ripemd160/ripemd160.base64.js .ripemd160Base64Bytes */
/*! export sha1Base64Bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/sha1/sha1.base64.js .sha1Base64Bytes */
/*! export sha256Base64Bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/sha256/sha256.base64.js .sha256Base64Bytes */
/*! export sha512Base64Bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/sha512/sha512.base64.js .sha512Base64Bytes */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "instantiateRustWasm": () => /* reexport safe */ _hashes__WEBPACK_IMPORTED_MODULE_0__.instantiateRustWasm,
/* harmony export */   "ripemd160Base64Bytes": () => /* reexport safe */ _ripemd160_ripemd160_base64__WEBPACK_IMPORTED_MODULE_1__.ripemd160Base64Bytes,
/* harmony export */   "CompressionFlag": () => /* reexport safe */ _secp256k1_secp256k1_wasm__WEBPACK_IMPORTED_MODULE_2__.CompressionFlag,
/* harmony export */   "ContextFlag": () => /* reexport safe */ _secp256k1_secp256k1_wasm__WEBPACK_IMPORTED_MODULE_2__.ContextFlag,
/* harmony export */   "getEmbeddedSecp256k1Binary": () => /* reexport safe */ _secp256k1_secp256k1_wasm__WEBPACK_IMPORTED_MODULE_2__.getEmbeddedSecp256k1Binary,
/* harmony export */   "instantiateSecp256k1Wasm": () => /* reexport safe */ _secp256k1_secp256k1_wasm__WEBPACK_IMPORTED_MODULE_2__.instantiateSecp256k1Wasm,
/* harmony export */   "instantiateSecp256k1WasmBytes": () => /* reexport safe */ _secp256k1_secp256k1_wasm__WEBPACK_IMPORTED_MODULE_2__.instantiateSecp256k1WasmBytes,
/* harmony export */   "sha1Base64Bytes": () => /* reexport safe */ _sha1_sha1_base64__WEBPACK_IMPORTED_MODULE_3__.sha1Base64Bytes,
/* harmony export */   "sha256Base64Bytes": () => /* reexport safe */ _sha256_sha256_base64__WEBPACK_IMPORTED_MODULE_4__.sha256Base64Bytes,
/* harmony export */   "sha512Base64Bytes": () => /* reexport safe */ _sha512_sha512_base64__WEBPACK_IMPORTED_MODULE_5__.sha512Base64Bytes
/* harmony export */ });
/* harmony import */ var _hashes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hashes */ "./node_modules/@bitauth/libauth/build/module/lib/bin/hashes.js");
/* harmony import */ var _ripemd160_ripemd160_base64__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ripemd160/ripemd160.base64 */ "./node_modules/@bitauth/libauth/build/module/lib/bin/ripemd160/ripemd160.base64.js");
/* harmony import */ var _secp256k1_secp256k1_wasm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./secp256k1/secp256k1-wasm */ "./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm.js");
/* harmony import */ var _sha1_sha1_base64__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sha1/sha1.base64 */ "./node_modules/@bitauth/libauth/build/module/lib/bin/sha1/sha1.base64.js");
/* harmony import */ var _sha256_sha256_base64__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sha256/sha256.base64 */ "./node_modules/@bitauth/libauth/build/module/lib/bin/sha256/sha256.base64.js");
/* harmony import */ var _sha512_sha512_base64__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sha512/sha512.base64 */ "./node_modules/@bitauth/libauth/build/module/lib/bin/sha512/sha512.base64.js");






//# sourceMappingURL=bin.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/bin/hashes.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/bin/hashes.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export instantiateRustWasm [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "instantiateRustWasm": () => /* binding */ instantiateRustWasm
/* harmony export */ });
/* eslint-disable functional/no-conditional-statement, functional/no-let, functional/no-expression-statement, no-underscore-dangle, functional/no-try-statement, @typescript-eslint/no-magic-numbers, max-params, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment */
/**
 * Note, most of this method is translated and boiled-down from the wasm-pack
 * workflow. Significant changes to wasm-bindgen or wasm-pack build will likely
 * require modifications to this method.
 */
const instantiateRustWasm = async (webassemblyBytes, expectedImportModuleName, hashExportName, initExportName, updateExportName, finalExportName) => {
    const wasm = (await WebAssembly.instantiate(webassemblyBytes, {
        [expectedImportModuleName]: {
            /**
             * This would only be called in cases where a `__wbindgen_malloc` failed.
             * Since `__wbindgen_malloc` isn't exposed to consumers, this error
             * can only be encountered if the code below is broken.
             */
            // eslint-disable-next-line camelcase, @typescript-eslint/naming-convention
            __wbindgen_throw: /* istanbul ignore next */ (ptr, len) => {
                // eslint-disable-next-line functional/no-throw-statement
                throw new Error(
                // eslint-disable-next-line @typescript-eslint/no-use-before-define
                Array.from(getUint8Memory().subarray(ptr, ptr + len))
                    .map((num) => String.fromCharCode(num))
                    .join(''));
            },
        },
    })).instance.exports; // eslint-disable-line @typescript-eslint/no-explicit-any
    let cachedUint8Memory; // eslint-disable-line @typescript-eslint/init-declarations
    let cachedUint32Memory; // eslint-disable-line @typescript-eslint/init-declarations
    let cachedGlobalArgumentPtr; // eslint-disable-line @typescript-eslint/init-declarations
    const globalArgumentPtr = () => {
        if (cachedGlobalArgumentPtr === undefined) {
            cachedGlobalArgumentPtr = wasm.__wbindgen_global_argument_ptr();
        }
        return cachedGlobalArgumentPtr;
    };
    /**
     * Must be hoisted for `__wbindgen_throw`.
     */
    // eslint-disable-next-line func-style
    function getUint8Memory() {
        if (cachedUint8Memory === undefined ||
            cachedUint8Memory.buffer !== wasm.memory.buffer) {
            cachedUint8Memory = new Uint8Array(wasm.memory.buffer);
        }
        return cachedUint8Memory;
    }
    const getUint32Memory = () => {
        if (cachedUint32Memory === undefined ||
            cachedUint32Memory.buffer !== wasm.memory.buffer) {
            cachedUint32Memory = new Uint32Array(wasm.memory.buffer);
        }
        return cachedUint32Memory;
    };
    const passArray8ToWasm = (array) => {
        const ptr = wasm.__wbindgen_malloc(array.length);
        getUint8Memory().set(array, ptr);
        return [ptr, array.length];
    };
    const getArrayU8FromWasm = (ptr, len) => getUint8Memory().subarray(ptr, ptr + len);
    const hash = (input) => {
        const [ptr0, len0] = passArray8ToWasm(input);
        const retPtr = globalArgumentPtr();
        try {
            wasm[hashExportName](retPtr, ptr0, len0);
            const mem = getUint32Memory();
            const ptr = mem[retPtr / 4];
            const len = mem[retPtr / 4 + 1];
            const realRet = getArrayU8FromWasm(ptr, len).slice();
            wasm.__wbindgen_free(ptr, len);
            return realRet;
        }
        finally {
            wasm.__wbindgen_free(ptr0, len0);
        }
    };
    const init = () => {
        const retPtr = globalArgumentPtr();
        wasm[initExportName](retPtr);
        const mem = getUint32Memory();
        const ptr = mem[retPtr / 4];
        const len = mem[retPtr / 4 + 1];
        const realRet = getArrayU8FromWasm(ptr, len).slice();
        wasm.__wbindgen_free(ptr, len);
        return realRet;
    };
    const update = (rawState, input) => {
        const [ptr0, len0] = passArray8ToWasm(rawState);
        const [ptr1, len1] = passArray8ToWasm(input);
        const retPtr = globalArgumentPtr();
        try {
            wasm[updateExportName](retPtr, ptr0, len0, ptr1, len1);
            const mem = getUint32Memory();
            const ptr = mem[retPtr / 4];
            const len = mem[retPtr / 4 + 1];
            const realRet = getArrayU8FromWasm(ptr, len).slice();
            wasm.__wbindgen_free(ptr, len);
            return realRet;
        }
        finally {
            rawState.set(getUint8Memory().subarray(ptr0 / 1, ptr0 / 1 + len0));
            wasm.__wbindgen_free(ptr0, len0);
            wasm.__wbindgen_free(ptr1, len1);
        }
    };
    const final = (rawState) => {
        const [ptr0, len0] = passArray8ToWasm(rawState);
        const retPtr = globalArgumentPtr();
        try {
            wasm[finalExportName](retPtr, ptr0, len0);
            const mem = getUint32Memory();
            const ptr = mem[retPtr / 4];
            const len = mem[retPtr / 4 + 1];
            const realRet = getArrayU8FromWasm(ptr, len).slice();
            wasm.__wbindgen_free(ptr, len);
            return realRet;
        }
        finally {
            rawState.set(getUint8Memory().subarray(ptr0 / 1, ptr0 / 1 + len0));
            wasm.__wbindgen_free(ptr0, len0);
        }
    };
    return {
        final,
        hash,
        init,
        update,
    };
};
/* eslint-enable functional/no-conditional-statement, functional/no-let, functional/no-expression-statement, no-underscore-dangle, functional/no-try-statement, @typescript-eslint/no-magic-numbers, max-params, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment */
//# sourceMappingURL=hashes.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/bin/ripemd160/ripemd160.base64.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/bin/ripemd160/ripemd160.base64.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! export ripemd160Base64Bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ripemd160Base64Bytes": () => /* binding */ ripemd160Base64Bytes
/* harmony export */ });
/* eslint-disable tsdoc/syntax */
/**
 * @hidden
 */
// prettier-ignore
const ripemd160Base64Bytes = '';
//# sourceMappingURL=ripemd160.base64.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm-types.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm-types.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! export CompressionFlag [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ContextFlag [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ContextFlag": () => /* binding */ ContextFlag,
/* harmony export */   "CompressionFlag": () => /* binding */ CompressionFlag
/* harmony export */ });
// cSpell:ignore noncefp, ndata, outputlen
/**
 * bitflags used in secp256k1's public API (translated from secp256k1.h)
 */
/* eslint-disable no-bitwise, @typescript-eslint/no-magic-numbers */
/** All flags' lower 8 bits indicate what they're for. Do not use directly. */
// const SECP256K1_FLAGS_TYPE_MASK = (1 << 8) - 1;
const SECP256K1_FLAGS_TYPE_CONTEXT = 1 << 0;
const SECP256K1_FLAGS_TYPE_COMPRESSION = 1 << 1;
/** The higher bits contain the actual data. Do not use directly. */
const SECP256K1_FLAGS_BIT_CONTEXT_VERIFY = 1 << 8;
const SECP256K1_FLAGS_BIT_CONTEXT_SIGN = 1 << 9;
const SECP256K1_FLAGS_BIT_COMPRESSION = 1 << 8;
/** Flags to pass to secp256k1_context_create. */
const SECP256K1_CONTEXT_VERIFY = SECP256K1_FLAGS_TYPE_CONTEXT | SECP256K1_FLAGS_BIT_CONTEXT_VERIFY;
const SECP256K1_CONTEXT_SIGN = SECP256K1_FLAGS_TYPE_CONTEXT | SECP256K1_FLAGS_BIT_CONTEXT_SIGN;
const SECP256K1_CONTEXT_NONE = SECP256K1_FLAGS_TYPE_CONTEXT;
/** Flag to pass to secp256k1_ec_pubkey_serialize and secp256k1_ec_privkey_export. */
const SECP256K1_EC_COMPRESSED = SECP256K1_FLAGS_TYPE_COMPRESSION | SECP256K1_FLAGS_BIT_COMPRESSION;
const SECP256K1_EC_UNCOMPRESSED = SECP256K1_FLAGS_TYPE_COMPRESSION;
/**
 * Flag to pass to a Secp256k1.contextCreate method.
 *
 * The purpose of context structures is to cache large precomputed data tables
 * that are expensive to construct, and also to maintain the randomization data
 * for blinding.
 *
 * You can create a context with only VERIFY or only SIGN capabilities, or you
 * can use BOTH. (NONE can be used for conversion/serialization.)
 */
var ContextFlag;
(function (ContextFlag) {
    ContextFlag[ContextFlag["NONE"] = SECP256K1_CONTEXT_NONE] = "NONE";
    ContextFlag[ContextFlag["VERIFY"] = SECP256K1_CONTEXT_VERIFY] = "VERIFY";
    ContextFlag[ContextFlag["SIGN"] = SECP256K1_CONTEXT_SIGN] = "SIGN";
    ContextFlag[ContextFlag["BOTH"] = SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY] = "BOTH";
})(ContextFlag || (ContextFlag = {}));
/**
 * Flag to pass a Secp256k1 public key serialization method.
 *
 * You can indicate COMPRESSED (33 bytes, header byte 0x02 or 0x03) or
 * UNCOMPRESSED (65 bytes, header byte 0x04) format.
 */
var CompressionFlag;
(function (CompressionFlag) {
    CompressionFlag[CompressionFlag["COMPRESSED"] = SECP256K1_EC_COMPRESSED] = "COMPRESSED";
    CompressionFlag[CompressionFlag["UNCOMPRESSED"] = SECP256K1_EC_UNCOMPRESSED] = "UNCOMPRESSED";
})(CompressionFlag || (CompressionFlag = {}));
//# sourceMappingURL=secp256k1-wasm-types.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm.js ***!
  \****************************************************************************************/
/*! namespace exports */
/*! export CompressionFlag [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm-types.js .CompressionFlag */
/*! export ContextFlag [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm-types.js .ContextFlag */
/*! export getEmbeddedSecp256k1Binary [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateSecp256k1Wasm [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateSecp256k1WasmBytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ContextFlag": () => /* reexport safe */ _secp256k1_wasm_types__WEBPACK_IMPORTED_MODULE_1__.ContextFlag,
/* harmony export */   "CompressionFlag": () => /* reexport safe */ _secp256k1_wasm_types__WEBPACK_IMPORTED_MODULE_1__.CompressionFlag,
/* harmony export */   "instantiateSecp256k1WasmBytes": () => /* binding */ instantiateSecp256k1WasmBytes,
/* harmony export */   "getEmbeddedSecp256k1Binary": () => /* binding */ getEmbeddedSecp256k1Binary,
/* harmony export */   "instantiateSecp256k1Wasm": () => /* binding */ instantiateSecp256k1Wasm
/* harmony export */ });
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");
/* harmony import */ var _secp256k1_wasm_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./secp256k1-wasm-types */ "./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm-types.js");
/* harmony import */ var _secp256k1_base64__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./secp256k1.base64 */ "./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1.base64.js");
/* eslint-disable no-underscore-dangle, max-params, @typescript-eslint/naming-convention */
// cSpell:ignore memcpy, anyfunc




/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment */
const wrapSecp256k1Wasm = (instance, heapU8, heapU32) => ({
    contextCreate: (context) => instance.exports._secp256k1_context_create(context),
    contextRandomize: (contextPtr, seedPtr) => instance.exports._secp256k1_context_randomize(contextPtr, seedPtr),
    free: (pointer) => instance.exports._free(pointer),
    heapU32,
    heapU8,
    instance,
    malloc: (bytes) => instance.exports._malloc(bytes),
    mallocSizeT: (num) => {
        // eslint-disable-next-line @typescript-eslint/no-magic-numbers
        const pointer = instance.exports._malloc(4);
        // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers
        const pointerView32 = pointer >> 2;
        // eslint-disable-next-line functional/no-expression-statement
        heapU32.set([num], pointerView32);
        return pointer;
    },
    mallocUint8Array: (array) => {
        const pointer = instance.exports._malloc(array.length);
        // eslint-disable-next-line functional/no-expression-statement
        heapU8.set(array, pointer);
        return pointer;
    },
    privkeyTweakAdd: (contextPtr, secretKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_privkey_tweak_add(contextPtr, secretKeyPtr, tweakNum256Ptr),
    privkeyTweakMul: (contextPtr, secretKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_privkey_tweak_mul(contextPtr, secretKeyPtr, tweakNum256Ptr),
    pubkeyCreate: (contextPtr, publicKeyPtr, secretKeyPtr) => instance.exports._secp256k1_ec_pubkey_create(contextPtr, publicKeyPtr, secretKeyPtr),
    pubkeyParse: (contextPtr, publicKeyOutPtr, publicKeyInPtr, publicKeyInLength) => instance.exports._secp256k1_ec_pubkey_parse(contextPtr, publicKeyOutPtr, publicKeyInPtr, publicKeyInLength),
    pubkeySerialize: (contextPtr, outputPtr, outputLengthPtr, publicKeyPtr, compression) => instance.exports._secp256k1_ec_pubkey_serialize(contextPtr, outputPtr, outputLengthPtr, publicKeyPtr, compression),
    pubkeyTweakAdd: (contextPtr, publicKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_pubkey_tweak_add(contextPtr, publicKeyPtr, tweakNum256Ptr),
    pubkeyTweakMul: (contextPtr, publicKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_pubkey_tweak_mul(contextPtr, publicKeyPtr, tweakNum256Ptr),
    readHeapU8: (pointer, bytes) => new Uint8Array(heapU8.buffer, pointer, bytes),
    readSizeT: (pointer) => {
        // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers
        const pointerView32 = pointer >> 2;
        return heapU32[pointerView32];
    },
    recover: (contextPtr, outputPubkeyPointer, rSigPtr, msg32Ptr) => instance.exports._secp256k1_ecdsa_recover(contextPtr, outputPubkeyPointer, rSigPtr, msg32Ptr),
    recoverableSignatureParse: (contextPtr, outputRSigPtr, inputSigPtr, rid) => instance.exports._secp256k1_ecdsa_recoverable_signature_parse_compact(contextPtr, outputRSigPtr, inputSigPtr, rid),
    recoverableSignatureSerialize: (contextPtr, sigOutPtr, recIDOutPtr, rSigPtr) => instance.exports._secp256k1_ecdsa_recoverable_signature_serialize_compact(contextPtr, sigOutPtr, recIDOutPtr, rSigPtr),
    schnorrSign: (contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr) => instance.exports._secp256k1_schnorr_sign(contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr),
    schnorrVerify: (contextPtr, sigPtr, msg32Ptr, publicKeyPtr) => instance.exports._secp256k1_schnorr_verify(contextPtr, sigPtr, msg32Ptr, publicKeyPtr),
    seckeyVerify: (contextPtr, secretKeyPtr) => instance.exports._secp256k1_ec_seckey_verify(contextPtr, secretKeyPtr),
    sign: (contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr) => instance.exports._secp256k1_ecdsa_sign(contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr),
    signRecoverable: (contextPtr, outputRSigPtr, msg32Ptr, secretKeyPtr) => instance.exports._secp256k1_ecdsa_sign_recoverable(contextPtr, outputRSigPtr, msg32Ptr, secretKeyPtr),
    signatureMalleate: (contextPtr, outputSigPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_malleate(contextPtr, outputSigPtr, inputSigPtr),
    signatureNormalize: (contextPtr, outputSigPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_normalize(contextPtr, outputSigPtr, inputSigPtr),
    signatureParseCompact: (contextPtr, sigOutPtr, compactSigInPtr) => instance.exports._secp256k1_ecdsa_signature_parse_compact(contextPtr, sigOutPtr, compactSigInPtr),
    signatureParseDER: (contextPtr, sigOutPtr, sigDERInPtr, sigDERInLength) => instance.exports._secp256k1_ecdsa_signature_parse_der(contextPtr, sigOutPtr, sigDERInPtr, sigDERInLength),
    signatureSerializeCompact: (contextPtr, outputCompactSigPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_serialize_compact(contextPtr, outputCompactSigPtr, inputSigPtr),
    signatureSerializeDER: (contextPtr, outputDERSigPtr, outputDERSigLengthPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_serialize_der(contextPtr, outputDERSigPtr, outputDERSigLengthPtr, inputSigPtr),
    verify: (contextPtr, sigPtr, msg32Ptr, pubkeyPtr) => instance.exports._secp256k1_ecdsa_verify(contextPtr, sigPtr, msg32Ptr, pubkeyPtr),
});
/* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment */
/* eslint-disable functional/immutable-data, functional/no-expression-statement, @typescript-eslint/no-magic-numbers, functional/no-conditional-statement, no-bitwise, functional/no-throw-statement */
/**
 * Method extracted from Emscripten's preamble.js
 */
const isLittleEndian = (buffer) => {
    const littleEndian = true;
    const notLittleEndian = false;
    const heap16 = new Int16Array(buffer);
    const heap32 = new Int32Array(buffer);
    const heapU8 = new Uint8Array(buffer);
    heap32[0] = 1668509029;
    heap16[1] = 25459;
    return heapU8[2] !== 115 || heapU8[3] !== 99
        ? /* istanbul ignore next */ notLittleEndian
        : littleEndian;
};
/**
 * Method derived from Emscripten's preamble.js
 */
const alignMemory = (factor, size) => Math.ceil(size / factor) * factor;
/**
 * The most performant way to instantiate secp256k1 functionality. To avoid
 * using Node.js or DOM-specific APIs, you can use `instantiateSecp256k1`.
 *
 * Note, most of this method is translated and boiled-down from Emscripten's
 * preamble.js. Significant changes to the WASM build or breaking updates to
 * Emscripten will likely require modifications to this method.
 *
 * @param webassemblyBytes - A buffer containing the secp256k1 binary.
 */
const instantiateSecp256k1WasmBytes = async (webassemblyBytes) => {
    const STACK_ALIGN = 16;
    const GLOBAL_BASE = 1024;
    const WASM_PAGE_SIZE = 65536;
    const TOTAL_STACK = 5242880;
    const TOTAL_MEMORY = 16777216;
    const wasmMemory = new WebAssembly.Memory({
        initial: TOTAL_MEMORY / WASM_PAGE_SIZE,
        maximum: TOTAL_MEMORY / WASM_PAGE_SIZE,
    });
    /* istanbul ignore if  */
    if (!isLittleEndian(wasmMemory.buffer)) {
        /*
         * note: this block is excluded from test coverage. It's A) hard to test
         * (must be either tested on big-endian hardware or a big-endian buffer
         * mock) and B) extracted from Emscripten's preamble.js, where it should
         * be tested properly.
         */
        throw new Error('Runtime error: expected the system to be little-endian.');
    }
    const STATIC_BASE = GLOBAL_BASE;
    const STATICTOP_INITIAL = STATIC_BASE + 67696 + 16;
    const DYNAMICTOP_PTR = STATICTOP_INITIAL;
    const DYNAMICTOP_PTR_SIZE = 4;
    const STATICTOP = (STATICTOP_INITIAL + DYNAMICTOP_PTR_SIZE + 15) & -16;
    const STACKTOP = alignMemory(STACK_ALIGN, STATICTOP);
    const STACK_BASE = STACKTOP;
    const STACK_MAX = STACK_BASE + TOTAL_STACK;
    const DYNAMIC_BASE = alignMemory(STACK_ALIGN, STACK_MAX);
    const heapU8 = new Uint8Array(wasmMemory.buffer);
    const heap32 = new Int32Array(wasmMemory.buffer);
    const heapU32 = new Uint32Array(wasmMemory.buffer);
    heap32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;
    const TABLE_SIZE = 6;
    const MAX_TABLE_SIZE = 6;
    // eslint-disable-next-line functional/no-let, @typescript-eslint/init-declarations
    let getErrNoLocation;
    /*
     * note: A number of methods below are excluded from test coverage. They are
     * a) not part of the regular usage of this library (should only be evaluated
     * if the consumer mis-implements the library and exist only to make
     * debugging easier) and B) already tested adequately in Emscripten, from
     * which this section is extracted.
     */
    const env = {
        DYNAMICTOP_PTR,
        STACKTOP,
        ___setErrNo: /* istanbul ignore next */ (value) => {
            if (getErrNoLocation !== undefined) {
                heap32[getErrNoLocation() >> 2] = value;
            }
            return value;
        },
        _abort: /* istanbul ignore next */ (err = 'Secp256k1 Error') => {
            throw new Error(err);
        },
        // eslint-disable-next-line camelcase
        _emscripten_memcpy_big: /* istanbul ignore next */ (dest, src, num) => {
            heapU8.set(heapU8.subarray(src, src + num), dest);
            return dest;
        },
        abort: /* istanbul ignore next */ (err = 'Secp256k1 Error') => {
            throw new Error(err);
        },
        abortOnCannotGrowMemory: /* istanbul ignore next */ () => {
            throw new Error('Secp256k1 Error: abortOnCannotGrowMemory was called.');
        },
        enlargeMemory: /* istanbul ignore next */ () => {
            throw new Error('Secp256k1 Error: enlargeMemory was called.');
        },
        getTotalMemory: () => TOTAL_MEMORY,
    };
    const info = {
        env: {
            ...env,
            memory: wasmMemory,
            memoryBase: STATIC_BASE,
            table: new WebAssembly.Table({
                element: 'anyfunc',
                initial: TABLE_SIZE,
                maximum: MAX_TABLE_SIZE,
            }),
            tableBase: 0,
        },
        global: { Infinity, NaN },
    };
    return WebAssembly.instantiate(webassemblyBytes, info).then((result) => {
        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-assignment
        getErrNoLocation = result.instance.exports.___errno_location;
        return wrapSecp256k1Wasm(result.instance, heapU8, heapU32);
    });
};
/* eslint-enable functional/immutable-data, functional/no-expression-statement, @typescript-eslint/no-magic-numbers, functional/no-conditional-statement, no-bitwise, functional/no-throw-statement */
const getEmbeddedSecp256k1Binary = () => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.base64ToBin)(_secp256k1_base64__WEBPACK_IMPORTED_MODULE_2__.secp256k1Base64Bytes).buffer;
/**
 * An ultimately-portable (but slower) version of `instantiateSecp256k1Bytes`
 * which does not require the consumer to provide the secp256k1 binary buffer.
 */
const instantiateSecp256k1Wasm = async () => instantiateSecp256k1WasmBytes(getEmbeddedSecp256k1Binary());
//# sourceMappingURL=secp256k1-wasm.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1.base64.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1.base64.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! export secp256k1Base64Bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "secp256k1Base64Bytes": () => /* binding */ secp256k1Base64Bytes
/* harmony export */ });
/* eslint-disable tsdoc/syntax */
/**
 * @hidden
 */
// prettier-ignore
const secp256k1Base64Bytes = '';
//# sourceMappingURL=secp256k1.base64.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/bin/sha1/sha1.base64.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/bin/sha1/sha1.base64.js ***!
  \********************************************************************************/
/*! namespace exports */
/*! export sha1Base64Bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sha1Base64Bytes": () => /* binding */ sha1Base64Bytes
/* harmony export */ });
/* eslint-disable tsdoc/syntax */
/**
 * @hidden
 */
// prettier-ignore
const sha1Base64Bytes = '';
//# sourceMappingURL=sha1.base64.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/bin/sha256/sha256.base64.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/bin/sha256/sha256.base64.js ***!
  \************************************************************************************/
/*! namespace exports */
/*! export sha256Base64Bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sha256Base64Bytes": () => /* binding */ sha256Base64Bytes
/* harmony export */ });
/* eslint-disable tsdoc/syntax */
/**
 * @hidden
 */
// prettier-ignore
const sha256Base64Bytes = '';
//# sourceMappingURL=sha256.base64.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/bin/sha512/sha512.base64.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/bin/sha512/sha512.base64.js ***!
  \************************************************************************************/
/*! namespace exports */
/*! export sha512Base64Bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sha512Base64Bytes": () => /* binding */ sha512Base64Bytes
/* harmony export */ });
/* eslint-disable tsdoc/syntax */
/**
 * @hidden
 */
// prettier-ignore
const sha512Base64Bytes = '';
//# sourceMappingURL=sha512.base64.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/crypto/crypto.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/crypto/crypto.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export getEmbeddedRipemd160Binary [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/ripemd160.js .getEmbeddedRipemd160Binary */
/*! export getEmbeddedSha1Binary [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha1.js .getEmbeddedSha1Binary */
/*! export getEmbeddedSha256Binary [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha256.js .getEmbeddedSha256Binary */
/*! export getEmbeddedSha512Binary [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha512.js .getEmbeddedSha512Binary */
/*! export hmacSha256 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/hmac.js .hmacSha256 */
/*! export hmacSha512 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/hmac.js .hmacSha512 */
/*! export instantiateHmacFunction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/hmac.js .instantiateHmacFunction */
/*! export instantiateRipemd160 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/ripemd160.js .instantiateRipemd160 */
/*! export instantiateRipemd160Bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/ripemd160.js .instantiateRipemd160Bytes */
/*! export instantiateSecp256k1 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/secp256k1.js .instantiateSecp256k1 */
/*! export instantiateSecp256k1Bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/secp256k1.js .instantiateSecp256k1Bytes */
/*! export instantiateSha1 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha1.js .instantiateSha1 */
/*! export instantiateSha1Bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha1.js .instantiateSha1Bytes */
/*! export instantiateSha256 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha256.js .instantiateSha256 */
/*! export instantiateSha256Bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha256.js .instantiateSha256Bytes */
/*! export instantiateSha512 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha512.js .instantiateSha512 */
/*! export instantiateSha512Bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha512.js .instantiateSha512Bytes */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hmacSha256": () => /* reexport safe */ _hmac__WEBPACK_IMPORTED_MODULE_0__.hmacSha256,
/* harmony export */   "hmacSha512": () => /* reexport safe */ _hmac__WEBPACK_IMPORTED_MODULE_0__.hmacSha512,
/* harmony export */   "instantiateHmacFunction": () => /* reexport safe */ _hmac__WEBPACK_IMPORTED_MODULE_0__.instantiateHmacFunction,
/* harmony export */   "getEmbeddedRipemd160Binary": () => /* reexport safe */ _ripemd160__WEBPACK_IMPORTED_MODULE_1__.getEmbeddedRipemd160Binary,
/* harmony export */   "instantiateRipemd160": () => /* reexport safe */ _ripemd160__WEBPACK_IMPORTED_MODULE_1__.instantiateRipemd160,
/* harmony export */   "instantiateRipemd160Bytes": () => /* reexport safe */ _ripemd160__WEBPACK_IMPORTED_MODULE_1__.instantiateRipemd160Bytes,
/* harmony export */   "instantiateSecp256k1": () => /* reexport safe */ _secp256k1__WEBPACK_IMPORTED_MODULE_2__.instantiateSecp256k1,
/* harmony export */   "instantiateSecp256k1Bytes": () => /* reexport safe */ _secp256k1__WEBPACK_IMPORTED_MODULE_2__.instantiateSecp256k1Bytes,
/* harmony export */   "getEmbeddedSha1Binary": () => /* reexport safe */ _sha1__WEBPACK_IMPORTED_MODULE_3__.getEmbeddedSha1Binary,
/* harmony export */   "instantiateSha1": () => /* reexport safe */ _sha1__WEBPACK_IMPORTED_MODULE_3__.instantiateSha1,
/* harmony export */   "instantiateSha1Bytes": () => /* reexport safe */ _sha1__WEBPACK_IMPORTED_MODULE_3__.instantiateSha1Bytes,
/* harmony export */   "getEmbeddedSha256Binary": () => /* reexport safe */ _sha256__WEBPACK_IMPORTED_MODULE_4__.getEmbeddedSha256Binary,
/* harmony export */   "instantiateSha256": () => /* reexport safe */ _sha256__WEBPACK_IMPORTED_MODULE_4__.instantiateSha256,
/* harmony export */   "instantiateSha256Bytes": () => /* reexport safe */ _sha256__WEBPACK_IMPORTED_MODULE_4__.instantiateSha256Bytes,
/* harmony export */   "getEmbeddedSha512Binary": () => /* reexport safe */ _sha512__WEBPACK_IMPORTED_MODULE_5__.getEmbeddedSha512Binary,
/* harmony export */   "instantiateSha512": () => /* reexport safe */ _sha512__WEBPACK_IMPORTED_MODULE_5__.instantiateSha512,
/* harmony export */   "instantiateSha512Bytes": () => /* reexport safe */ _sha512__WEBPACK_IMPORTED_MODULE_5__.instantiateSha512Bytes
/* harmony export */ });
/* harmony import */ var _hmac__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hmac */ "./node_modules/@bitauth/libauth/build/module/lib/crypto/hmac.js");
/* harmony import */ var _ripemd160__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ripemd160 */ "./node_modules/@bitauth/libauth/build/module/lib/crypto/ripemd160.js");
/* harmony import */ var _secp256k1__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./secp256k1 */ "./node_modules/@bitauth/libauth/build/module/lib/crypto/secp256k1.js");
/* harmony import */ var _sha1__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sha1 */ "./node_modules/@bitauth/libauth/build/module/lib/crypto/sha1.js");
/* harmony import */ var _sha256__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sha256 */ "./node_modules/@bitauth/libauth/build/module/lib/crypto/sha256.js");
/* harmony import */ var _sha512__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sha512 */ "./node_modules/@bitauth/libauth/build/module/lib/crypto/sha512.js");






//# sourceMappingURL=crypto.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/crypto/hmac.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/crypto/hmac.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export hmacSha256 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hmacSha512 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateHmacFunction [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "instantiateHmacFunction": () => /* binding */ instantiateHmacFunction,
/* harmony export */   "hmacSha256": () => /* binding */ hmacSha256,
/* harmony export */   "hmacSha512": () => /* binding */ hmacSha512
/* harmony export */ });
/* harmony import */ var _format_hex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../format/hex */ "./node_modules/@bitauth/libauth/build/module/lib/format/hex.js");

/**
 * Instantiate a hash-based message authentication code (HMAC) function as
 * specified by RFC 2104.
 *
 * @param hashFunction - a cryptographic hash function which iterates a basic
 * compression function on blocks of data
 * @param blockByteLength - the byte-length of blocks used in `hashFunction`
 */
const instantiateHmacFunction = (hashFunction, blockByteLength) => (secret, message) => {
    const key = new Uint8Array(blockByteLength).fill(0);
    // eslint-disable-next-line functional/no-expression-statement
    key.set(secret.length > blockByteLength ? hashFunction(secret) : secret, 0);
    const innerPaddingFill = 0x36;
    const innerPadding = new Uint8Array(blockByteLength).fill(innerPaddingFill);
    // eslint-disable-next-line no-bitwise
    const innerPrefix = innerPadding.map((pad, index) => pad ^ key[index]);
    const innerContent = (0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([innerPrefix, message]);
    const innerResult = hashFunction(innerContent);
    const outerPaddingFill = 0x5c;
    const outerPadding = new Uint8Array(blockByteLength).fill(outerPaddingFill);
    // eslint-disable-next-line no-bitwise
    const outerPrefix = outerPadding.map((pad, index) => pad ^ key[index]);
    return hashFunction((0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([outerPrefix, innerResult]));
};
const sha256BlockByteLength = 64;
/**
 * Create a hash-based message authentication code using HMAC-SHA256 as
 * specified in `RFC 4231`. Returns a 32-byte Uint8Array.
 *
 * Secrets longer than the block byte-length (64 bytes) are hashed before
 * use, shortening their length to the minimum recommended length (32 bytes).
 * See `RFC 2104` for details.
 *
 * @param sha256 - an implementation of Sha256
 * @param secret - the secret key (recommended length: 32-64 bytes)
 * @param message - the message to authenticate
 */
const hmacSha256 = (sha256, secret, message) => instantiateHmacFunction(sha256.hash, sha256BlockByteLength)(secret, message);
const sha512BlockByteLength = 128;
/**
 * Create a hash-based message authentication code using HMAC-SHA512 as
 * specified in `RFC 4231`. Returns a 64-byte Uint8Array.
 *
 * Secrets longer than the block byte-length (128 bytes) are hashed before
 * use, shortening their length to the minimum recommended length (64 bytes).
 * See `RFC 2104` for details.
 *
 * @param sha512 - an implementation of Sha512
 * @param secret - the secret key (recommended length: 64-128 bytes)
 * @param message - the message to authenticate
 */
const hmacSha512 = (sha512, secret, message) => instantiateHmacFunction(sha512.hash, sha512BlockByteLength)(secret, message);
//# sourceMappingURL=hmac.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/crypto/ripemd160.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/crypto/ripemd160.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export getEmbeddedRipemd160Binary [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateRipemd160 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateRipemd160Bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "instantiateRipemd160Bytes": () => /* binding */ instantiateRipemd160Bytes,
/* harmony export */   "getEmbeddedRipemd160Binary": () => /* binding */ getEmbeddedRipemd160Binary,
/* harmony export */   "instantiateRipemd160": () => /* binding */ instantiateRipemd160
/* harmony export */ });
/* harmony import */ var _bin_bin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bin/bin */ "./node_modules/@bitauth/libauth/build/module/lib/bin/bin.js");
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");


/**
 * The most performant way to instantiate ripemd160 functionality. To avoid
 * using Node.js or DOM-specific APIs, you can use `instantiateRipemd160`.
 *
 * @param webassemblyBytes - A buffer containing the ripemd160 binary.
 */
const instantiateRipemd160Bytes = async (webassemblyBytes) => {
    const wasm = await (0,_bin_bin__WEBPACK_IMPORTED_MODULE_0__.instantiateRustWasm)(webassemblyBytes, './ripemd160', 'ripemd160', 'ripemd160_init', 'ripemd160_update', 'ripemd160_final');
    return {
        final: wasm.final,
        hash: wasm.hash,
        init: wasm.init,
        update: wasm.update,
    };
};
const getEmbeddedRipemd160Binary = () => (0,_format_format__WEBPACK_IMPORTED_MODULE_1__.base64ToBin)(_bin_bin__WEBPACK_IMPORTED_MODULE_0__.ripemd160Base64Bytes).buffer;
const cachedRipemd160 = {};
/**
 * An ultimately-portable (but slower) version of `instantiateRipemd160Bytes`
 * which does not require the consumer to provide the ripemd160 binary buffer.
 */
const instantiateRipemd160 = async () => {
    if (cachedRipemd160.cache !== undefined) {
        return cachedRipemd160.cache;
    }
    const result = instantiateRipemd160Bytes(getEmbeddedRipemd160Binary());
    // eslint-disable-next-line functional/immutable-data, functional/no-expression-statement
    cachedRipemd160.cache = result;
    return result;
};
//# sourceMappingURL=ripemd160.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/crypto/secp256k1.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/crypto/secp256k1.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export instantiateSecp256k1 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateSecp256k1Bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "instantiateSecp256k1Bytes": () => /* binding */ instantiateSecp256k1Bytes,
/* harmony export */   "instantiateSecp256k1": () => /* binding */ instantiateSecp256k1
/* harmony export */ });
/* harmony import */ var _bin_bin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bin/bin */ "./node_modules/@bitauth/libauth/build/module/lib/bin/bin.js");
/* eslint-disable functional/no-conditional-statement, functional/no-expression-statement, functional/no-throw-statement */

/**
 * @param secp256k1Wasm - a Secp256k1Wasm object
 * @param randomSeed - a 32-byte random seed used to randomize the context after
 * creation
 */
const wrapSecp256k1Wasm = (secp256k1Wasm, randomSeed) => {
    /**
     * Currently, this wrapper creates a context with both SIGN and VERIFY
     * capabilities. For better initialization performance, consumers could
     * re-implement a wrapper with only the capabilities they require.
     */
    const contextPtr = secp256k1Wasm.contextCreate(_bin_bin__WEBPACK_IMPORTED_MODULE_0__.ContextFlag.BOTH);
    /**
     * Since all of these methods are single-threaded and synchronous, we can
     * reuse allocated WebAssembly memory for each method without worrying about
     * calls interfering with each other. Likewise, these spaces never need to be
     * `free`d, since we will continue using them until this entire object (and
     * with it, the entire WebAssembly instance) is garbage collected.
     *
     * If malicious javascript gained access to this object, it should be
     * considered a critical vulnerability in the consumer. However, as a best
     * practice, we zero out private keys below when we're finished with them.
     */
    const sigScratch = secp256k1Wasm.malloc(72 /* maxECDSASig */);
    const publicKeyScratch = secp256k1Wasm.malloc(65 /* maxPublicKey */);
    const messageHashScratch = secp256k1Wasm.malloc(32 /* messageHash */);
    const internalPublicKeyPtr = secp256k1Wasm.malloc(64 /* internalPublicKey */);
    const internalSigPtr = secp256k1Wasm.malloc(64 /* internalSig */);
    const schnorrSigPtr = secp256k1Wasm.malloc(64 /* schnorrSig */);
    const privateKeyPtr = secp256k1Wasm.malloc(32 /* privateKey */);
    const internalRSigPtr = secp256k1Wasm.malloc(65 /* recoverableSig */);
    // eslint-disable-next-line @typescript-eslint/no-magic-numbers
    const recoveryNumPtr = secp256k1Wasm.malloc(4);
    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers
    const recoveryNumPtrView32 = recoveryNumPtr >> 2;
    const getRecoveryNumPtr = () => secp256k1Wasm.heapU32[recoveryNumPtrView32];
    // eslint-disable-next-line @typescript-eslint/no-magic-numbers
    const lengthPtr = secp256k1Wasm.malloc(4);
    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers
    const lengthPtrView32 = lengthPtr >> 2;
    const parsePublicKey = (publicKey) => {
        secp256k1Wasm.heapU8.set(publicKey, publicKeyScratch);
        return (secp256k1Wasm.pubkeyParse(contextPtr, internalPublicKeyPtr, publicKeyScratch, 
        // eslint-disable-next-line @typescript-eslint/no-magic-numbers
        publicKey.length) === 1);
    };
    const setLengthPtr = (value) => {
        secp256k1Wasm.heapU32.set([value], lengthPtrView32);
    };
    const getLengthPtr = () => secp256k1Wasm.heapU32[lengthPtrView32];
    const serializePublicKey = (length, flag) => {
        setLengthPtr(length);
        secp256k1Wasm.pubkeySerialize(contextPtr, publicKeyScratch, lengthPtr, internalPublicKeyPtr, flag);
        return secp256k1Wasm.readHeapU8(publicKeyScratch, getLengthPtr()).slice();
    };
    const getSerializedPublicKey = (compressed) => compressed
        ? serializePublicKey(33 /* compressedPublicKey */, _bin_bin__WEBPACK_IMPORTED_MODULE_0__.CompressionFlag.COMPRESSED)
        : serializePublicKey(65 /* uncompressedPublicKey */, _bin_bin__WEBPACK_IMPORTED_MODULE_0__.CompressionFlag.UNCOMPRESSED);
    const convertPublicKey = (compressed) => (publicKey) => {
        if (!parsePublicKey(publicKey)) {
            throw new Error('Failed to parse public key.');
        }
        return getSerializedPublicKey(compressed);
    };
    const parseSignature = (signature, isDer) => {
        secp256k1Wasm.heapU8.set(signature, sigScratch);
        return isDer
            ? secp256k1Wasm.signatureParseDER(contextPtr, internalSigPtr, sigScratch, signature.length) === 1
            : secp256k1Wasm.signatureParseCompact(contextPtr, internalSigPtr, sigScratch) === 1;
    };
    const parseOrThrow = (signature, isDer) => {
        if (!parseSignature(signature, isDer)) {
            throw new Error('Failed to parse signature.');
        }
    };
    const getCompactSig = () => {
        secp256k1Wasm.signatureSerializeCompact(contextPtr, sigScratch, internalSigPtr);
        return secp256k1Wasm.readHeapU8(sigScratch, 64 /* compactSig */).slice();
    };
    const getDERSig = () => {
        setLengthPtr(72 /* maxECDSASig */);
        secp256k1Wasm.signatureSerializeDER(contextPtr, sigScratch, lengthPtr, internalSigPtr);
        return secp256k1Wasm.readHeapU8(sigScratch, getLengthPtr()).slice();
    };
    const convertSignature = (wasDER) => (signature) => {
        parseOrThrow(signature, wasDER);
        return wasDER ? getCompactSig() : getDERSig();
    };
    const fillPrivateKeyPtr = (privateKey) => {
        secp256k1Wasm.heapU8.set(privateKey, privateKeyPtr);
    };
    const zeroOutPtr = (pointer, bytes) => {
        secp256k1Wasm.heapU8.fill(0, pointer, pointer + bytes);
    };
    const zeroOutPrivateKeyPtr = () => {
        zeroOutPtr(privateKeyPtr, 32 /* privateKey */);
    };
    const withPrivateKey = (privateKey, instructions) => {
        fillPrivateKeyPtr(privateKey);
        const ret = instructions();
        zeroOutPrivateKeyPtr();
        return ret;
    };
    const derivePublicKey = (compressed) => (privateKey) => {
        const invalid = withPrivateKey(privateKey, () => secp256k1Wasm.pubkeyCreate(contextPtr, internalPublicKeyPtr, privateKeyPtr) !== 1);
        if (invalid) {
            throw new Error('Cannot derive public key from invalid private key.');
        }
        return getSerializedPublicKey(compressed);
    };
    const fillMessageHashScratch = (messageHash) => {
        secp256k1Wasm.heapU8.set(messageHash, messageHashScratch);
    };
    const normalizeSignature = () => {
        secp256k1Wasm.signatureNormalize(contextPtr, internalSigPtr, internalSigPtr);
    };
    const modifySignature = (isDer, normalize) => (signature) => {
        parseOrThrow(signature, isDer);
        if (normalize) {
            normalizeSignature();
        }
        else {
            secp256k1Wasm.signatureMalleate(contextPtr, internalSigPtr, internalSigPtr);
        }
        return isDer ? getDERSig() : getCompactSig();
    };
    const parseAndNormalizeSignature = (signature, isDer, normalize) => {
        const ret = parseSignature(signature, isDer);
        if (normalize) {
            normalizeSignature();
        }
        return ret;
    };
    const signMessageHash = (isDer) => (privateKey, messageHash) => {
        fillMessageHashScratch(messageHash);
        return withPrivateKey(privateKey, () => {
            const failed = secp256k1Wasm.sign(contextPtr, internalSigPtr, messageHashScratch, privateKeyPtr) !== 1;
            if (failed) {
                throw new Error('Failed to sign message hash. The private key is not valid.');
            }
            if (isDer) {
                setLengthPtr(72 /* maxECDSASig */);
                secp256k1Wasm.signatureSerializeDER(contextPtr, sigScratch, lengthPtr, internalSigPtr);
                return secp256k1Wasm.readHeapU8(sigScratch, getLengthPtr()).slice();
            }
            secp256k1Wasm.signatureSerializeCompact(contextPtr, sigScratch, internalSigPtr);
            return secp256k1Wasm
                .readHeapU8(sigScratch, 64 /* compactSig */)
                .slice();
        });
    };
    const signMessageHashSchnorr = () => (privateKey, messageHash) => {
        fillMessageHashScratch(messageHash);
        return withPrivateKey(privateKey, () => {
            const failed = secp256k1Wasm.schnorrSign(contextPtr, schnorrSigPtr, messageHashScratch, privateKeyPtr) !== 1;
            if (failed) {
                throw new Error('Failed to sign message hash. The private key is not valid.');
            }
            return secp256k1Wasm
                .readHeapU8(schnorrSigPtr, 64 /* schnorrSig */)
                .slice();
        });
    };
    const verifyMessage = (messageHash) => {
        fillMessageHashScratch(messageHash);
        return (secp256k1Wasm.verify(contextPtr, internalSigPtr, messageHashScratch, internalPublicKeyPtr) === 1);
    };
    const verifySignature = (isDer, normalize) => (signature, publicKey, messageHash) => parsePublicKey(publicKey) &&
        parseAndNormalizeSignature(signature, isDer, normalize) &&
        verifyMessage(messageHash);
    const verifyMessageSchnorr = (messageHash, signature) => {
        fillMessageHashScratch(messageHash);
        secp256k1Wasm.heapU8.set(signature, schnorrSigPtr);
        return (secp256k1Wasm.schnorrVerify(contextPtr, schnorrSigPtr, messageHashScratch, internalPublicKeyPtr) === 1);
    };
    const verifySignatureSchnorr = () => (signature, publicKey, messageHash) => parsePublicKey(publicKey)
        ? verifyMessageSchnorr(messageHash, signature)
        : false;
    const signMessageHashRecoverable = (privateKey, messageHash) => {
        fillMessageHashScratch(messageHash);
        return withPrivateKey(privateKey, () => {
            if (secp256k1Wasm.signRecoverable(contextPtr, internalRSigPtr, messageHashScratch, privateKeyPtr) !== 1) {
                throw new Error('Failed to sign message hash. The private key is not valid.');
            }
            secp256k1Wasm.recoverableSignatureSerialize(contextPtr, sigScratch, recoveryNumPtr, internalRSigPtr);
            return {
                recoveryId: getRecoveryNumPtr(),
                signature: secp256k1Wasm
                    .readHeapU8(sigScratch, 64 /* compactSig */)
                    .slice(),
            };
        });
    };
    const recoverPublicKey = (compressed) => (signature, recoveryId, messageHash) => {
        fillMessageHashScratch(messageHash);
        secp256k1Wasm.heapU8.set(signature, sigScratch);
        if (secp256k1Wasm.recoverableSignatureParse(contextPtr, internalRSigPtr, sigScratch, recoveryId) !== 1) {
            throw new Error('Failed to recover public key. Could not parse signature.');
        }
        if (secp256k1Wasm.recover(contextPtr, internalPublicKeyPtr, internalRSigPtr, messageHashScratch) !== 1) {
            throw new Error('Failed to recover public key. The compact signature, recovery, or message hash is invalid.');
        }
        return getSerializedPublicKey(compressed);
    };
    const addTweakPrivateKey = (privateKey, tweakValue) => {
        fillMessageHashScratch(tweakValue);
        return withPrivateKey(privateKey, () => {
            if (secp256k1Wasm.privkeyTweakAdd(contextPtr, privateKeyPtr, messageHashScratch) !== 1) {
                throw new Error('Private key is invalid or adding failed.');
            }
            return secp256k1Wasm
                .readHeapU8(privateKeyPtr, 32 /* privateKey */)
                .slice();
        });
    };
    const mulTweakPrivateKey = (privateKey, tweakValue) => {
        fillMessageHashScratch(tweakValue);
        return withPrivateKey(privateKey, () => {
            if (secp256k1Wasm.privkeyTweakMul(contextPtr, privateKeyPtr, messageHashScratch) !== 1) {
                throw new Error('Private key is invalid or multiplying failed.');
            }
            return secp256k1Wasm
                .readHeapU8(privateKeyPtr, 32 /* privateKey */)
                .slice();
        });
    };
    const addTweakPublicKey = (compressed) => (publicKey, tweakValue) => {
        if (!parsePublicKey(publicKey)) {
            throw new Error('Failed to parse public key.');
        }
        fillMessageHashScratch(tweakValue);
        if (secp256k1Wasm.pubkeyTweakAdd(contextPtr, internalPublicKeyPtr, messageHashScratch) !== 1) {
            throw new Error('Adding failed');
        }
        return getSerializedPublicKey(compressed);
    };
    const mulTweakPublicKey = (compressed) => (publicKey, tweakValue) => {
        if (!parsePublicKey(publicKey)) {
            throw new Error('Failed to parse public key.');
        }
        fillMessageHashScratch(tweakValue);
        if (secp256k1Wasm.pubkeyTweakMul(contextPtr, internalPublicKeyPtr, messageHashScratch) !== 1) {
            throw new Error('Multiplying failed');
        }
        return getSerializedPublicKey(compressed);
    };
    /**
     * The value of this precaution is debatable, especially in the context of
     * javascript and WebAssembly.
     *
     * In the secp256k1 C library, context randomization is an additional layer of
     * security from side-channel attacks which attempt to extract private key
     * information by analyzing things like a CPU's emitted radio frequencies or
     * power usage.
     *
     * In this library, these attacks seem even less likely, since the "platform"
     * on which this code will be executed (e.g. V8) is likely to obscure any
     * such signals.
     *
     * Still, out of an abundance of caution (and because no one has produced a
     * definitive proof indicating that this is not helpful), this library exposes
     * the ability to randomize the context like the C library. Depending on the
     * intended application, consumers can decide whether or not to randomize.
     */
    if (randomSeed !== undefined) {
        const randomSeedPtr = messageHashScratch;
        secp256k1Wasm.heapU8.set(randomSeed, randomSeedPtr);
        secp256k1Wasm.contextRandomize(contextPtr, randomSeedPtr);
        zeroOutPtr(randomSeedPtr, 32 /* randomSeed */);
    }
    return {
        addTweakPrivateKey,
        addTweakPublicKeyCompressed: addTweakPublicKey(true),
        addTweakPublicKeyUncompressed: addTweakPublicKey(false),
        compressPublicKey: convertPublicKey(true),
        derivePublicKeyCompressed: derivePublicKey(true),
        derivePublicKeyUncompressed: derivePublicKey(false),
        malleateSignatureCompact: modifySignature(false, false),
        malleateSignatureDER: modifySignature(true, false),
        mulTweakPrivateKey,
        mulTweakPublicKeyCompressed: mulTweakPublicKey(true),
        mulTweakPublicKeyUncompressed: mulTweakPublicKey(false),
        normalizeSignatureCompact: modifySignature(false, true),
        normalizeSignatureDER: modifySignature(true, true),
        recoverPublicKeyCompressed: recoverPublicKey(true),
        recoverPublicKeyUncompressed: recoverPublicKey(false),
        signMessageHashCompact: signMessageHash(false),
        signMessageHashDER: signMessageHash(true),
        signMessageHashRecoverableCompact: signMessageHashRecoverable,
        signMessageHashSchnorr: signMessageHashSchnorr(),
        signatureCompactToDER: convertSignature(false),
        signatureDERToCompact: convertSignature(true),
        uncompressPublicKey: convertPublicKey(false),
        validatePrivateKey: (privateKey) => withPrivateKey(privateKey, () => secp256k1Wasm.seckeyVerify(contextPtr, privateKeyPtr) === 1),
        verifySignatureCompact: verifySignature(false, true),
        verifySignatureCompactLowS: verifySignature(false, false),
        verifySignatureDER: verifySignature(true, true),
        verifySignatureDERLowS: verifySignature(true, false),
        verifySignatureSchnorr: verifySignatureSchnorr(),
    };
};
/**
 * This method is like `instantiateSecp256k1`, but requires the consumer to
 * `Window.fetch` or `fs.readFile` the `secp256k1.wasm` binary and provide it to
 * this method as `webassemblyBytes`. This skips a base64 decoding of an
 * embedded binary.
 *
 * ### Randomizing the Context with `randomSeed`
 * This method also accepts an optional, 32-byte `randomSeed`, which is passed
 * to the `contextRandomize` method in the underlying WebAssembly.
 *
 * The value of this precaution is debatable, especially in the context of
 * javascript and WebAssembly.
 *
 * In the secp256k1 C library, context randomization is an additional layer of
 * security from side-channel attacks which attempt to extract private key
 * information by analyzing things like a CPU's emitted radio frequencies or
 * power usage.
 *
 * In this library, these attacks seem even less likely, since the "platform"
 * on which this code will be executed (e.g. V8) is likely to obscure any
 * such signals.
 *
 * Still, out of an abundance of caution (and because no one has produced a
 * definitive proof indicating that this is not helpful), this library exposes
 * the ability to randomize the context like the C library. Depending on the
 * intended application, consumers can decide whether or not to randomize.
 *
 * @param webassemblyBytes - an ArrayBuffer containing the bytes from Libauth's
 * `secp256k1.wasm` binary. Providing this buffer manually may be faster than
 * the internal base64 decode which happens in `instantiateSecp256k1`.
 * @param randomSeed - a 32-byte random seed used to randomize the secp256k1
 * context after creation. See above for details.
 */
const instantiateSecp256k1Bytes = async (webassemblyBytes, randomSeed) => wrapSecp256k1Wasm(await (0,_bin_bin__WEBPACK_IMPORTED_MODULE_0__.instantiateSecp256k1WasmBytes)(webassemblyBytes), randomSeed);
const cachedSecp256k1 = {};
/**
 * Create and wrap a Secp256k1 WebAssembly instance to expose a set of
 * purely-functional Secp256k1 methods. For slightly faster initialization, use
 * `instantiateSecp256k1Bytes`.
 *
 * @param randomSeed - a 32-byte random seed used to randomize the secp256k1
 * context after creation. See the description in `instantiateSecp256k1Bytes`
 * for details.
 */
const instantiateSecp256k1 = async (randomSeed) => {
    if (cachedSecp256k1.cache !== undefined) {
        return cachedSecp256k1.cache;
    }
    const result = Promise.resolve(wrapSecp256k1Wasm(await (0,_bin_bin__WEBPACK_IMPORTED_MODULE_0__.instantiateSecp256k1Wasm)(), randomSeed));
    // eslint-disable-next-line require-atomic-updates, functional/immutable-data
    cachedSecp256k1.cache = result;
    return result;
};
//# sourceMappingURL=secp256k1.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/crypto/sha1.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha1.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export getEmbeddedSha1Binary [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateSha1 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateSha1Bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "instantiateSha1Bytes": () => /* binding */ instantiateSha1Bytes,
/* harmony export */   "getEmbeddedSha1Binary": () => /* binding */ getEmbeddedSha1Binary,
/* harmony export */   "instantiateSha1": () => /* binding */ instantiateSha1
/* harmony export */ });
/* harmony import */ var _bin_bin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bin/bin */ "./node_modules/@bitauth/libauth/build/module/lib/bin/bin.js");
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");


/**
 * The most performant way to instantiate sha1 functionality. To avoid
 * using Node.js or DOM-specific APIs, you can use `instantiateSha1`.
 *
 * @param webassemblyBytes - A buffer containing the sha1 binary.
 */
const instantiateSha1Bytes = async (webassemblyBytes) => {
    const wasm = await (0,_bin_bin__WEBPACK_IMPORTED_MODULE_0__.instantiateRustWasm)(webassemblyBytes, './sha1', 'sha1', 'sha1_init', 'sha1_update', 'sha1_final');
    return {
        final: wasm.final,
        hash: wasm.hash,
        init: wasm.init,
        update: wasm.update,
    };
};
const getEmbeddedSha1Binary = () => (0,_format_format__WEBPACK_IMPORTED_MODULE_1__.base64ToBin)(_bin_bin__WEBPACK_IMPORTED_MODULE_0__.sha1Base64Bytes).buffer;
const cachedSha1 = {};
/**
 * An ultimately-portable (but slower) version of `instantiateSha1Bytes`
 * which does not require the consumer to provide the sha1 binary buffer.
 */
const instantiateSha1 = async () => {
    if (cachedSha1.cache !== undefined) {
        return cachedSha1.cache;
    }
    const result = instantiateSha1Bytes(getEmbeddedSha1Binary());
    // eslint-disable-next-line functional/immutable-data, functional/no-expression-statement
    cachedSha1.cache = result;
    return result;
};
//# sourceMappingURL=sha1.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/crypto/sha256.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha256.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export getEmbeddedSha256Binary [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateSha256 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateSha256Bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "instantiateSha256Bytes": () => /* binding */ instantiateSha256Bytes,
/* harmony export */   "getEmbeddedSha256Binary": () => /* binding */ getEmbeddedSha256Binary,
/* harmony export */   "instantiateSha256": () => /* binding */ instantiateSha256
/* harmony export */ });
/* harmony import */ var _bin_bin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bin/bin */ "./node_modules/@bitauth/libauth/build/module/lib/bin/bin.js");
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");


/**
 * The most performant way to instantiate sha256 functionality. To avoid
 * using Node.js or DOM-specific APIs, you can use `instantiateSha256`.
 *
 * @param webassemblyBytes - A buffer containing the sha256 binary.
 */
const instantiateSha256Bytes = async (webassemblyBytes) => {
    const wasm = await (0,_bin_bin__WEBPACK_IMPORTED_MODULE_0__.instantiateRustWasm)(webassemblyBytes, './sha256', 'sha256', 'sha256_init', 'sha256_update', 'sha256_final');
    return {
        final: wasm.final,
        hash: wasm.hash,
        init: wasm.init,
        update: wasm.update,
    };
};
const getEmbeddedSha256Binary = () => (0,_format_format__WEBPACK_IMPORTED_MODULE_1__.base64ToBin)(_bin_bin__WEBPACK_IMPORTED_MODULE_0__.sha256Base64Bytes).buffer;
const cachedSha256 = {};
/**
 * An ultimately-portable (but possibly slower) version of
 * `instantiateSha256Bytes` which does not require the consumer to provide the
 * sha256 binary buffer.
 */
const instantiateSha256 = async () => {
    if (cachedSha256.cache !== undefined) {
        return cachedSha256.cache;
    }
    const result = instantiateSha256Bytes(getEmbeddedSha256Binary());
    // eslint-disable-next-line functional/immutable-data, functional/no-expression-statement
    cachedSha256.cache = result;
    return result;
};
//# sourceMappingURL=sha256.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/crypto/sha512.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha512.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export getEmbeddedSha512Binary [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateSha512 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateSha512Bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "instantiateSha512Bytes": () => /* binding */ instantiateSha512Bytes,
/* harmony export */   "getEmbeddedSha512Binary": () => /* binding */ getEmbeddedSha512Binary,
/* harmony export */   "instantiateSha512": () => /* binding */ instantiateSha512
/* harmony export */ });
/* harmony import */ var _bin_bin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bin/bin */ "./node_modules/@bitauth/libauth/build/module/lib/bin/bin.js");
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");


/**
 * The most performant way to instantiate sha512 functionality. To avoid
 * using Node.js or DOM-specific APIs, you can use `instantiateSha512`.
 *
 * @param webassemblyBytes - A buffer containing the sha512 binary.
 */
const instantiateSha512Bytes = async (webassemblyBytes) => {
    const wasm = await (0,_bin_bin__WEBPACK_IMPORTED_MODULE_0__.instantiateRustWasm)(webassemblyBytes, './sha512', 'sha512', 'sha512_init', 'sha512_update', 'sha512_final');
    return {
        final: wasm.final,
        hash: wasm.hash,
        init: wasm.init,
        update: wasm.update,
    };
};
const getEmbeddedSha512Binary = () => (0,_format_format__WEBPACK_IMPORTED_MODULE_1__.base64ToBin)(_bin_bin__WEBPACK_IMPORTED_MODULE_0__.sha512Base64Bytes).buffer;
const cachedSha512 = {};
/**
 * An ultimately-portable (but slower) version of `instantiateSha512Bytes`
 * which does not require the consumer to provide the sha512 binary buffer.
 */
const instantiateSha512 = async () => {
    if (cachedSha512.cache !== undefined) {
        return cachedSha512.cache;
    }
    const result = instantiateSha512Bytes(getEmbeddedSha512Binary());
    // eslint-disable-next-line functional/immutable-data, functional/no-expression-statement
    cachedSha512.cache = result;
    return result;
};
//# sourceMappingURL=sha512.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/format/base-convert.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/format/base-convert.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export BaseConversionError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export base58ToBin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToBase58 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bitcoinBase58Alphabet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createBaseConverter [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BaseConversionError": () => /* binding */ BaseConversionError,
/* harmony export */   "createBaseConverter": () => /* binding */ createBaseConverter,
/* harmony export */   "bitcoinBase58Alphabet": () => /* binding */ bitcoinBase58Alphabet,
/* harmony export */   "base58ToBin": () => /* binding */ base58ToBin,
/* harmony export */   "binToBase58": () => /* binding */ binToBase58
/* harmony export */ });
var BaseConversionError;
(function (BaseConversionError) {
    BaseConversionError["tooLong"] = "An alphabet may be no longer than 254 characters.";
    BaseConversionError["ambiguousCharacter"] = "A character code may only appear once in a single alphabet.";
    BaseConversionError["unknownCharacter"] = "Encountered an unknown character for this alphabet.";
})(BaseConversionError || (BaseConversionError = {}));
/**
 * Create a `BaseConverter`, which exposes methods for encoding and decoding
 * `Uint8Array`s using bitcoin-style padding: each leading zero in the input is
 * replaced with the zero-index character of the `alphabet`, then the remainder
 * of the input is encoded as a large number in the specified alphabet.
 *
 * For example, using the alphabet `01`, the input `[0, 15]` is encoded `01111`
 * – a single `0` represents the leading padding, followed by the base2 encoded
 * `0x1111` (15). With the same alphabet, the input `[0, 0, 255]` is encoded
 * `0011111111` - only two `0` characters are required to represent both
 * leading zeros, followed by the base2 encoded `0x11111111` (255).
 *
 * **This is not compatible with `RFC 3548`'s `Base16`, `Base32`, or `Base64`.**
 *
 * If the alphabet is malformed, this method returns the error as a `string`.
 *
 * @param alphabet - an ordered string which maps each index to a character,
 * e.g. `0123456789`.
 * @privateRemarks
 * Algorithm from the `base-x` implementation (which is derived from the
 * original Satoshi implementation): https://github.com/cryptocoinjs/base-x
 */
const createBaseConverter = (alphabet) => {
    const undefinedValue = 255;
    const uint8ArrayBase = 256;
    if (alphabet.length >= undefinedValue)
        return BaseConversionError.tooLong;
    const alphabetMap = new Uint8Array(uint8ArrayBase).fill(undefinedValue);
    // eslint-disable-next-line functional/no-loop-statement, functional/no-let, no-plusplus
    for (let index = 0; index < alphabet.length; index++) {
        const characterCode = alphabet.charCodeAt(index);
        if (alphabetMap[characterCode] !== undefinedValue) {
            return BaseConversionError.ambiguousCharacter;
        }
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        alphabetMap[characterCode] = index;
    }
    const base = alphabet.length;
    const paddingCharacter = alphabet.charAt(0);
    const factor = Math.log(base) / Math.log(uint8ArrayBase);
    const inverseFactor = Math.log(uint8ArrayBase) / Math.log(base);
    return {
        // eslint-disable-next-line complexity
        decode: (input) => {
            if (input.length === 0)
                return Uint8Array.of();
            const firstNonZeroIndex = input
                .split('')
                .findIndex((character) => character !== paddingCharacter);
            if (firstNonZeroIndex === -1) {
                return new Uint8Array(input.length);
            }
            const requiredLength = Math.floor((input.length - firstNonZeroIndex) * factor + 1);
            const decoded = new Uint8Array(requiredLength);
            /* eslint-disable functional/no-let, functional/no-expression-statement */
            let nextByte = firstNonZeroIndex;
            let remainingBytes = 0;
            // eslint-disable-next-line functional/no-loop-statement
            while (input[nextByte] !== undefined) {
                let carry = alphabetMap[input.charCodeAt(nextByte)];
                if (carry === undefinedValue)
                    return BaseConversionError.unknownCharacter;
                let digit = 0;
                // eslint-disable-next-line functional/no-loop-statement
                for (let steps = requiredLength - 1; (carry !== 0 || digit < remainingBytes) && steps !== -1; 
                // eslint-disable-next-line no-plusplus
                steps--, digit++) {
                    carry += Math.floor(base * decoded[steps]);
                    // eslint-disable-next-line functional/immutable-data
                    decoded[steps] = Math.floor(carry % uint8ArrayBase);
                    carry = Math.floor(carry / uint8ArrayBase);
                }
                remainingBytes = digit;
                // eslint-disable-next-line no-plusplus
                nextByte++;
            }
            /* eslint-enable functional/no-let, functional/no-expression-statement */
            const firstNonZeroResultDigit = decoded.findIndex((value) => value !== 0);
            const bin = new Uint8Array(firstNonZeroIndex + (requiredLength - firstNonZeroResultDigit));
            // eslint-disable-next-line functional/no-expression-statement
            bin.set(decoded.slice(firstNonZeroResultDigit), firstNonZeroIndex);
            return bin;
        },
        // eslint-disable-next-line complexity
        encode: (input) => {
            if (input.length === 0)
                return '';
            const firstNonZeroIndex = input.findIndex((byte) => byte !== 0);
            if (firstNonZeroIndex === -1) {
                return paddingCharacter.repeat(input.length);
            }
            const requiredLength = Math.floor((input.length - firstNonZeroIndex) * inverseFactor + 1);
            const encoded = new Uint8Array(requiredLength);
            /* eslint-disable functional/no-let, functional/no-expression-statement */
            let nextByte = firstNonZeroIndex;
            let remainingBytes = 0;
            // eslint-disable-next-line functional/no-loop-statement
            while (nextByte !== input.length) {
                let carry = input[nextByte];
                let digit = 0;
                // eslint-disable-next-line functional/no-loop-statement
                for (let steps = requiredLength - 1; (carry !== 0 || digit < remainingBytes) && steps !== -1; 
                // eslint-disable-next-line no-plusplus
                steps--, digit++) {
                    carry += Math.floor(uint8ArrayBase * encoded[steps]);
                    // eslint-disable-next-line functional/immutable-data
                    encoded[steps] = Math.floor(carry % base);
                    carry = Math.floor(carry / base);
                }
                remainingBytes = digit;
                // eslint-disable-next-line no-plusplus
                nextByte++;
            }
            /* eslint-enable functional/no-let, functional/no-expression-statement */
            const firstNonZeroResultDigit = encoded.findIndex((value) => value !== 0);
            const padding = paddingCharacter.repeat(firstNonZeroIndex);
            return encoded
                .slice(firstNonZeroResultDigit)
                .reduce((all, digit) => all + alphabet.charAt(digit), padding);
        },
    };
};
const bitcoinBase58Alphabet = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';
const base58 = createBaseConverter(bitcoinBase58Alphabet);
/**
 * Convert a bitcoin-style base58-encoded string to a Uint8Array.
 *
 * See `createBaseConverter` for format details.
 * @param input - a valid base58-encoded string to decode
 */
const base58ToBin = base58.decode;
/**
 * Convert a Uint8Array to a bitcoin-style base58-encoded string.
 *
 * See `createBaseConverter` for format details.
 * @param input - the Uint8Array to base58 encode
 */
const binToBase58 = base58.encode;
//# sourceMappingURL=base-convert.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/format/base64.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/format/base64.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export base64ToBin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToBase64 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isBase64 [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isBase64": () => /* binding */ isBase64,
/* harmony export */   "base64ToBin": () => /* binding */ base64ToBin,
/* harmony export */   "binToBase64": () => /* binding */ binToBase64
/* harmony export */ });
// base64 encode/decode derived from: https://github.com/niklasvh/base64-arraybuffer
const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
const base64GroupLength = 4;
const nonBase64Chars = new RegExp(`[^${chars}=]`, 'u');
/**
 * For use before `base64ToBin`. Returns true if the provided string is valid
 * base64 (length is divisible by 4, only uses base64 characters).
 * @param maybeHex - a string to test
 */
const isBase64 = (maybeBase64) => maybeBase64.length % base64GroupLength === 0 &&
    !nonBase64Chars.test(maybeBase64);
/* eslint-disable functional/no-expression-statement, functional/immutable-data, @typescript-eslint/no-magic-numbers, no-bitwise, no-plusplus */
/**
 * Convert a base64-encoded string to a Uint8Array.
 *
 * Note, this method always completes. If `validBase64` is not valid base64, an
 * incorrect result will be returned. If `validBase64` is potentially malformed,
 * check it with `isBase64` before calling this method.
 *
 * @param validBase64 - a valid base64-encoded string to decode
 */
const base64ToBin = (validBase64) => {
    const lookup = new Uint8Array(123);
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement
    for (let i = 0; i < chars.length; i++) {
        lookup[chars.charCodeAt(i)] = i;
    }
    const bufferLengthEstimate = validBase64.length * 0.75;
    const stringLength = validBase64.length;
    const bufferLength = validBase64[validBase64.length - 1] === '=' // eslint-disable-line @typescript-eslint/prefer-string-starts-ends-with
        ? validBase64[validBase64.length - 2] === '='
            ? bufferLengthEstimate - 2
            : bufferLengthEstimate - 1
        : bufferLengthEstimate;
    const buffer = new ArrayBuffer(bufferLength);
    const bytes = new Uint8Array(buffer);
    // eslint-disable-next-line functional/no-let
    let p = 0;
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement
    for (let i = 0; i < stringLength; i += 4) {
        const encoded1 = lookup[validBase64.charCodeAt(i)];
        const encoded2 = lookup[validBase64.charCodeAt(i + 1)];
        const encoded3 = lookup[validBase64.charCodeAt(i + 2)];
        const encoded4 = lookup[validBase64.charCodeAt(i + 3)];
        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);
        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);
        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);
    }
    return bytes;
};
/**
 * Convert a Uint8Array to a base64-encoded string.
 * @param bytes - the Uint8Array to base64 encode
 */
const binToBase64 = (bytes) => {
    // eslint-disable-next-line functional/no-let
    let result = '';
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement
    for (let i = 0; i < bytes.length; i += 3) {
        result += chars[bytes[i] >> 2];
        result += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];
        result += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];
        result += chars[bytes[i + 2] & 63];
    }
    const padded = bytes.length % 3 === 2
        ? `${result.substring(0, result.length - 1)}=`
        : bytes.length % 3 === 1
            ? `${result.substring(0, result.length - 2)}==`
            : result;
    return padded;
};
/* eslint-enable functional/no-expression-statement, functional/immutable-data, @typescript-eslint/no-magic-numbers, no-bitwise, no-plusplus */
//# sourceMappingURL=base64.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/format/bin-string.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/format/bin-string.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export binStringToBin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToBinString [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isBinString [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "binStringToBin": () => /* binding */ binStringToBin,
/* harmony export */   "binToBinString": () => /* binding */ binToBinString,
/* harmony export */   "isBinString": () => /* binding */ isBinString
/* harmony export */ });
/* harmony import */ var _hex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hex */ "./node_modules/@bitauth/libauth/build/module/lib/format/hex.js");

const binaryByteWidth = 8;
const binary = 2;
/**
 * Decode a binary-encoded string into a Uint8Array.
 *
 * E.g.: `binStringToBin('0010101001100100')` → `new Uint8Array([42, 100])`
 *
 * Note, this method always completes. If `binaryDigits` is not divisible by 8,
 * the final byte will be parsed as if it were prepended with `0`s (e.g. `1`
 * is interpreted as `00000001`). If `binaryDigits` is potentially malformed,
 * check it with `isBinString` before calling this method.
 *
 * @param validHex - a string of valid, hexadecimal-encoded data
 */
const binStringToBin = (binaryDigits) => Uint8Array.from((0,_hex__WEBPACK_IMPORTED_MODULE_0__.splitEvery)(binaryDigits, binaryByteWidth).map((byteString) => parseInt(byteString, binary)));
/**
 * Encode a Uint8Array into a binary-encoded string.
 *
 * E.g.: `binToBinString(Uint8Array.from([42, 100]))` → `'0010101001100100'`
 *
 * @param bytes - a Uint8Array to encode
 */
const binToBinString = (bytes) => bytes.reduce((str, byte) => str + byte.toString(binary).padStart(binaryByteWidth, '0'), '');
/**
 * For use before `binStringToBin`. Returns true if the provided string is a
 * valid binary string (length is divisible by 8 and only uses the characters
 * `0` and `1`).
 * @param maybeBinString - a string to test
 */
const isBinString = (maybeBinString) => maybeBinString.length % binaryByteWidth === 0 &&
    !/[^01]/u.test(maybeBinString);
//# sourceMappingURL=bin-string.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/format/format.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export BaseConversionError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/base-convert.js .BaseConversionError */
/*! export LocktimeError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/time.js .LocktimeError */
/*! export base58ToBin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/base-convert.js .base58ToBin */
/*! export base64ToBin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/base64.js .base64ToBin */
/*! export bigIntToBinUint256BEClamped [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .bigIntToBinUint256BEClamped */
/*! export bigIntToBinUint64LE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .bigIntToBinUint64LE */
/*! export bigIntToBinUint64LEClamped [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .bigIntToBinUint64LEClamped */
/*! export bigIntToBinUintLE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .bigIntToBinUintLE */
/*! export bigIntToBitcoinVarInt [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .bigIntToBitcoinVarInt */
/*! export binStringToBin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/bin-string.js .binStringToBin */
/*! export binToBase58 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/base-convert.js .binToBase58 */
/*! export binToBase64 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/base64.js .binToBase64 */
/*! export binToBigIntUint256BE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .binToBigIntUint256BE */
/*! export binToBigIntUint64LE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .binToBigIntUint64LE */
/*! export binToBigIntUintBE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .binToBigIntUintBE */
/*! export binToBigIntUintLE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .binToBigIntUintLE */
/*! export binToBinString [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/bin-string.js .binToBinString */
/*! export binToFixedLength [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .binToFixedLength */
/*! export binToHex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/hex.js .binToHex */
/*! export binToNumberUint16LE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .binToNumberUint16LE */
/*! export binToNumberUint32LE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .binToNumberUint32LE */
/*! export binToNumberUintLE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .binToNumberUintLE */
/*! export binToUtf8 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export bitcoinBase58Alphabet [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/base-convert.js .bitcoinBase58Alphabet */
/*! export createBaseConverter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/base-convert.js .createBaseConverter */
/*! export dateToLocktime [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/time.js .dateToLocktime */
/*! export dateToLocktimeBin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/time.js .dateToLocktimeBin */
/*! export default [not provided] [no usage info] [missing usage info prevents renaming] */
/*! export flattenBinArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/hex.js .flattenBinArray */
/*! export hexToBin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/hex.js .hexToBin */
/*! export isBase64 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/base64.js .isBase64 */
/*! export isBinString [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/bin-string.js .isBinString */
/*! export isHex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/hex.js .isHex */
/*! export locktimeToDate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/time.js .locktimeToDate */
/*! export maximumLocktimeDate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/time.js .maximumLocktimeDate */
/*! export maximumLocktimeTimestamp [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/time.js .maximumLocktimeTimestamp */
/*! export minimumLocktimeDate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/time.js .minimumLocktimeDate */
/*! export minimumLocktimeTimestamp [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/time.js .minimumLocktimeTimestamp */
/*! export numberToBinInt32TwosCompliment [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .numberToBinInt32TwosCompliment */
/*! export numberToBinUint16BE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .numberToBinUint16BE */
/*! export numberToBinUint16LE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .numberToBinUint16LE */
/*! export numberToBinUint16LEClamped [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .numberToBinUint16LEClamped */
/*! export numberToBinUint32BE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .numberToBinUint32BE */
/*! export numberToBinUint32LE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .numberToBinUint32LE */
/*! export numberToBinUint32LEClamped [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .numberToBinUint32LEClamped */
/*! export numberToBinUintLE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .numberToBinUintLE */
/*! export parseLocktimeBin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/time.js .parseLocktimeBin */
/*! export range [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/hex.js .range */
/*! export readBitcoinVarInt [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .readBitcoinVarInt */
/*! export sortObjectKeys [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/log.js .sortObjectKeys */
/*! export splitEvery [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/hex.js .splitEvery */
/*! export stringify [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/log.js .stringify */
/*! export stringifyTestVector [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/log.js .stringifyTestVector */
/*! export swapEndianness [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/hex.js .swapEndianness */
/*! export utf8ToBin [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export varIntPrefixToSize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .varIntPrefixToSize */
/*! other exports [maybe provided (runtime-defined)] [no usage info] -> ./node_modules/@bitauth/libauth/build/module/lib/format/type-utils.js */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.n, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "binToHex": () => /* reexport safe */ _hex__WEBPACK_IMPORTED_MODULE_0__.binToHex,
/* harmony export */   "flattenBinArray": () => /* reexport safe */ _hex__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray,
/* harmony export */   "hexToBin": () => /* reexport safe */ _hex__WEBPACK_IMPORTED_MODULE_0__.hexToBin,
/* harmony export */   "isHex": () => /* reexport safe */ _hex__WEBPACK_IMPORTED_MODULE_0__.isHex,
/* harmony export */   "range": () => /* reexport safe */ _hex__WEBPACK_IMPORTED_MODULE_0__.range,
/* harmony export */   "splitEvery": () => /* reexport safe */ _hex__WEBPACK_IMPORTED_MODULE_0__.splitEvery,
/* harmony export */   "swapEndianness": () => /* reexport safe */ _hex__WEBPACK_IMPORTED_MODULE_0__.swapEndianness,
/* harmony export */   "binStringToBin": () => /* reexport safe */ _bin_string__WEBPACK_IMPORTED_MODULE_1__.binStringToBin,
/* harmony export */   "binToBinString": () => /* reexport safe */ _bin_string__WEBPACK_IMPORTED_MODULE_1__.binToBinString,
/* harmony export */   "isBinString": () => /* reexport safe */ _bin_string__WEBPACK_IMPORTED_MODULE_1__.isBinString,
/* harmony export */   "BaseConversionError": () => /* reexport safe */ _base_convert__WEBPACK_IMPORTED_MODULE_2__.BaseConversionError,
/* harmony export */   "base58ToBin": () => /* reexport safe */ _base_convert__WEBPACK_IMPORTED_MODULE_2__.base58ToBin,
/* harmony export */   "binToBase58": () => /* reexport safe */ _base_convert__WEBPACK_IMPORTED_MODULE_2__.binToBase58,
/* harmony export */   "bitcoinBase58Alphabet": () => /* reexport safe */ _base_convert__WEBPACK_IMPORTED_MODULE_2__.bitcoinBase58Alphabet,
/* harmony export */   "createBaseConverter": () => /* reexport safe */ _base_convert__WEBPACK_IMPORTED_MODULE_2__.createBaseConverter,
/* harmony export */   "base64ToBin": () => /* reexport safe */ _base64__WEBPACK_IMPORTED_MODULE_3__.base64ToBin,
/* harmony export */   "binToBase64": () => /* reexport safe */ _base64__WEBPACK_IMPORTED_MODULE_3__.binToBase64,
/* harmony export */   "isBase64": () => /* reexport safe */ _base64__WEBPACK_IMPORTED_MODULE_3__.isBase64,
/* harmony export */   "bigIntToBinUint256BEClamped": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.bigIntToBinUint256BEClamped,
/* harmony export */   "bigIntToBinUint64LE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.bigIntToBinUint64LE,
/* harmony export */   "bigIntToBinUint64LEClamped": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.bigIntToBinUint64LEClamped,
/* harmony export */   "bigIntToBinUintLE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.bigIntToBinUintLE,
/* harmony export */   "bigIntToBitcoinVarInt": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.bigIntToBitcoinVarInt,
/* harmony export */   "binToBigIntUint256BE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.binToBigIntUint256BE,
/* harmony export */   "binToBigIntUint64LE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.binToBigIntUint64LE,
/* harmony export */   "binToBigIntUintBE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.binToBigIntUintBE,
/* harmony export */   "binToBigIntUintLE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.binToBigIntUintLE,
/* harmony export */   "binToFixedLength": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.binToFixedLength,
/* harmony export */   "binToNumberUint16LE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.binToNumberUint16LE,
/* harmony export */   "binToNumberUint32LE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.binToNumberUint32LE,
/* harmony export */   "binToNumberUintLE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.binToNumberUintLE,
/* harmony export */   "numberToBinInt32TwosCompliment": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.numberToBinInt32TwosCompliment,
/* harmony export */   "numberToBinUint16BE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.numberToBinUint16BE,
/* harmony export */   "numberToBinUint16LE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.numberToBinUint16LE,
/* harmony export */   "numberToBinUint16LEClamped": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.numberToBinUint16LEClamped,
/* harmony export */   "numberToBinUint32BE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.numberToBinUint32BE,
/* harmony export */   "numberToBinUint32LE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.numberToBinUint32LE,
/* harmony export */   "numberToBinUint32LEClamped": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.numberToBinUint32LEClamped,
/* harmony export */   "numberToBinUintLE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.numberToBinUintLE,
/* harmony export */   "readBitcoinVarInt": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.readBitcoinVarInt,
/* harmony export */   "varIntPrefixToSize": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.varIntPrefixToSize,
/* harmony export */   "sortObjectKeys": () => /* reexport safe */ _log__WEBPACK_IMPORTED_MODULE_5__.sortObjectKeys,
/* harmony export */   "stringify": () => /* reexport safe */ _log__WEBPACK_IMPORTED_MODULE_5__.stringify,
/* harmony export */   "stringifyTestVector": () => /* reexport safe */ _log__WEBPACK_IMPORTED_MODULE_5__.stringifyTestVector,
/* harmony export */   "LocktimeError": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_6__.LocktimeError,
/* harmony export */   "dateToLocktime": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_6__.dateToLocktime,
/* harmony export */   "dateToLocktimeBin": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_6__.dateToLocktimeBin,
/* harmony export */   "locktimeToDate": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_6__.locktimeToDate,
/* harmony export */   "maximumLocktimeDate": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_6__.maximumLocktimeDate,
/* harmony export */   "maximumLocktimeTimestamp": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_6__.maximumLocktimeTimestamp,
/* harmony export */   "minimumLocktimeDate": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_6__.minimumLocktimeDate,
/* harmony export */   "minimumLocktimeTimestamp": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_6__.minimumLocktimeTimestamp,
/* harmony export */   "parseLocktimeBin": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_6__.parseLocktimeBin,
/* harmony export */   "binToUtf8": () => /* reexport safe */ _utf8__WEBPACK_IMPORTED_MODULE_8__.binToUtf8,
/* harmony export */   "utf8ToBin": () => /* reexport safe */ _utf8__WEBPACK_IMPORTED_MODULE_8__.utf8ToBin
/* harmony export */ });
/* harmony import */ var _hex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hex */ "./node_modules/@bitauth/libauth/build/module/lib/format/hex.js");
/* harmony import */ var _bin_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bin-string */ "./node_modules/@bitauth/libauth/build/module/lib/format/bin-string.js");
/* harmony import */ var _base_convert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base-convert */ "./node_modules/@bitauth/libauth/build/module/lib/format/base-convert.js");
/* harmony import */ var _base64__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base64 */ "./node_modules/@bitauth/libauth/build/module/lib/format/base64.js");
/* harmony import */ var _numbers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./numbers */ "./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./log */ "./node_modules/@bitauth/libauth/build/module/lib/format/log.js");
/* harmony import */ var _time__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./time */ "./node_modules/@bitauth/libauth/build/module/lib/format/time.js");
/* harmony import */ var _type_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./type-utils */ "./node_modules/@bitauth/libauth/build/module/lib/format/type-utils.js");
/* harmony import */ var _type_utils__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_type_utils__WEBPACK_IMPORTED_MODULE_7__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _type_utils__WEBPACK_IMPORTED_MODULE_7__) if(["default","binToHex","flattenBinArray","hexToBin","isHex","range","splitEvery","swapEndianness","binStringToBin","binToBinString","isBinString","BaseConversionError","base58ToBin","binToBase58","bitcoinBase58Alphabet","createBaseConverter","base64ToBin","binToBase64","isBase64","bigIntToBinUint256BEClamped","bigIntToBinUint64LE","bigIntToBinUint64LEClamped","bigIntToBinUintLE","bigIntToBitcoinVarInt","binToBigIntUint256BE","binToBigIntUint64LE","binToBigIntUintBE","binToBigIntUintLE","binToFixedLength","binToNumberUint16LE","binToNumberUint32LE","binToNumberUintLE","numberToBinInt32TwosCompliment","numberToBinUint16BE","numberToBinUint16LE","numberToBinUint16LEClamped","numberToBinUint32BE","numberToBinUint32LE","numberToBinUint32LEClamped","numberToBinUintLE","readBitcoinVarInt","varIntPrefixToSize","sortObjectKeys","stringify","stringifyTestVector","LocktimeError","dateToLocktime","dateToLocktimeBin","locktimeToDate","maximumLocktimeDate","maximumLocktimeTimestamp","minimumLocktimeDate","minimumLocktimeTimestamp","parseLocktimeBin"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _type_utils__WEBPACK_IMPORTED_MODULE_7__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _utf8__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utf8 */ "./node_modules/@bitauth/libauth/build/module/lib/format/utf8.js");









//# sourceMappingURL=format.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/format/hex.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/format/hex.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export binToHex [provided] [no usage info] [missing usage info prevents renaming] */
/*! export flattenBinArray [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hexToBin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isHex [provided] [no usage info] [missing usage info prevents renaming] */
/*! export range [provided] [no usage info] [missing usage info prevents renaming] */
/*! export splitEvery [provided] [no usage info] [missing usage info prevents renaming] */
/*! export swapEndianness [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "range": () => /* binding */ range,
/* harmony export */   "splitEvery": () => /* binding */ splitEvery,
/* harmony export */   "hexToBin": () => /* binding */ hexToBin,
/* harmony export */   "isHex": () => /* binding */ isHex,
/* harmony export */   "binToHex": () => /* binding */ binToHex,
/* harmony export */   "swapEndianness": () => /* binding */ swapEndianness,
/* harmony export */   "flattenBinArray": () => /* binding */ flattenBinArray
/* harmony export */ });
/**
 * Returns an array of incrementing values starting at `begin` and incrementing by one for `length`.
 *
 * E.g.: `range(3)` → `[0, 1, 2]` and `range(3, 1)` → `[1, 2, 3]`
 *
 * @param length - the number of elements in the array
 * @param begin - the index at which the range starts (default: `0`)
 */
const range = (length, begin = 0) => Array.from({ length }, (_, index) => begin + index);
/**
 * Split a string into an array of `chunkLength` strings. The final string may have a length between 1 and `chunkLength`.
 *
 * E.g.: `splitEvery('abcde', 2)` → `['ab', 'cd', 'e']`
 */
const splitEvery = (input, chunkLength) => range(Math.ceil(input.length / chunkLength))
    .map((index) => index * chunkLength)
    .map((begin) => input.slice(begin, begin + chunkLength));
const hexByteWidth = 2;
const hexadecimal = 16;
/**
 * Decode a hexadecimal-encoded string into a Uint8Array.
 *
 * E.g.: `hexToBin('2a64ff')` → `new Uint8Array([42, 100, 255])`
 *
 * Note, this method always completes. If `validHex` is not divisible by 2,
 * the final byte will be parsed as if it were prepended with a `0` (e.g. `aaa`
 * is interpreted as `aa0a`). If `validHex` is potentially malformed, check
 * it with `isHex` before calling this method.
 *
 * @param validHex - a string of valid, hexadecimal-encoded data
 */
const hexToBin = (validHex) => Uint8Array.from(splitEvery(validHex, hexByteWidth).map((byte) => parseInt(byte, hexadecimal)));
/**
 * For use before `hexToBin`. Returns true if the provided string is valid
 * hexadecimal (length is divisible by 2, only uses hexadecimal characters).
 * @param maybeHex - a string to test
 */
const isHex = (maybeHex) => maybeHex.length % hexByteWidth === 0 && !/[^a-fA-F0-9]/u.test(maybeHex);
/**
 * Encode a Uint8Array into a hexadecimal-encoded string.
 *
 * E.g.: `binToHex(new Uint8Array([42, 100, 255]))` → `'2a64ff'`
 *
 * @param bytes - a Uint8Array to encode
 */
const binToHex = (bytes) => bytes.reduce((str, byte) => str + byte.toString(hexadecimal).padStart(hexByteWidth, '0'), '');
/**
 * Decode a hexadecimal-encoded string into bytes, reverse it, then re-encode.
 *
 * @param validHex - a string of valid, hexadecimal-encoded data. See
 * `hexToBin` for more information.
 */
const swapEndianness = (validHex) => binToHex(hexToBin(validHex).reverse());
/**
 * Reduce an array of `Uint8Array`s into a single `Uint8Array`.
 * @param array - the array of `Uint8Array`s to flatten
 */
const flattenBinArray = (array) => {
    const totalLength = array.reduce((total, bin) => total + bin.length, 0);
    const flattened = new Uint8Array(totalLength);
    // eslint-disable-next-line functional/no-expression-statement
    array.reduce((index, bin) => {
        // eslint-disable-next-line functional/no-expression-statement
        flattened.set(bin, index);
        return index + bin.length;
    }, 0);
    return flattened;
};
//# sourceMappingURL=hex.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/format/log.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/format/log.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export sortObjectKeys [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stringify [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stringifyTestVector [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "stringify": () => /* binding */ stringify,
/* harmony export */   "sortObjectKeys": () => /* binding */ sortObjectKeys,
/* harmony export */   "stringifyTestVector": () => /* binding */ stringifyTestVector
/* harmony export */ });
/* harmony import */ var _hex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hex */ "./node_modules/@bitauth/libauth/build/module/lib/format/hex.js");

const defaultStringifySpacing = 2;
/**
 * A safe method to `JSON.stringify` a value, useful for debugging and logging
 * purposes.
 *
 * @remarks
 * Without modifications, `JSON.stringify` has several shortcomings in
 * debugging and logging usage:
 * - throws when serializing anything containing a `bigint`
 * - `Uint8Array`s are often serialized in base 10 with newlines between each
 *   index item
 * - `functions` and `symbols` are not clearly marked
 *
 * This method is more helpful in these cases:
 * - `bigint`: `0n` → `<bigint: 0n>`
 * - `Uint8Array`: `Uint8Array.of(0,0)` → `<Uint8Array: 0x0000>`
 * - `function`: `(x) => x * 2` → `<function: (x) => x * 2>`
 * - `symbol`: `Symbol(A)` → `<symbol: Symbol(A)>`
 *
 * @param value - the data to serialize
 * @param spacing - the number of spaces to use in
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const stringify = (value, spacing = defaultStringifySpacing) => JSON.stringify(value, 
// eslint-disable-next-line complexity
(_, item) => {
    const type = typeof item;
    const name = typeof item === 'object' && item !== null
        ? item.constructor.name
        : type;
    switch (name) {
        case 'Uint8Array':
            return `<Uint8Array: 0x${(0,_hex__WEBPACK_IMPORTED_MODULE_0__.binToHex)(item)}>`;
        case 'bigint':
            return `<bigint: ${item.toString()}n>`;
        case 'function':
        case 'symbol':
            // eslint-disable-next-line @typescript-eslint/ban-types
            return `<${name}: ${item.toString()}>`;
        default:
            return item;
    }
}, spacing);
/**
 * Given a value, recursively sort the keys of all objects it references
 * (without sorting arrays).
 *
 * @param objectOrArray - the object or array in which to sort object keys
 */
const sortObjectKeys = (objectOrArray
// eslint-disable-next-line @typescript-eslint/no-explicit-any
) => {
    if (Array.isArray(objectOrArray)) {
        // eslint-disable-next-line @typescript-eslint/no-unsafe-return
        return objectOrArray.map(sortObjectKeys);
    }
    if (typeof objectOrArray !== 'object' ||
        objectOrArray === null ||
        objectOrArray.constructor.name !== 'Object') {
        return objectOrArray;
    }
    // eslint-disable-next-line functional/immutable-data
    const keys = Object.keys(objectOrArray).sort((a, b) => a.localeCompare(b));
    return keys.reduce((all, key) => ({
        ...all,
        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
        [key]: sortObjectKeys(objectOrArray[key]),
    }), {});
};
const uint8ArrayRegex = /"<Uint8Array: 0x(?<hex>[0-9a-f]*)>"/gu;
const bigIntRegex = /"<bigint: (?<bigint>[0-9]*)n>"/gu;
/**
 * An alternative to `stringify` which produces valid JavaScript for use as a
 * test vector in this library. `Uint8Array`s are constructed using `hexToBin`
 * and `bigint` values use the `BigInt` constructor. If `alphabetize` is `true`,
 * all objects will be sorted in the output.
 *
 * Note, this assumes all strings which match the expected regular expressions
 * are values of type `Uint8Array` and `bigint` respectively. String values
 * which otherwise happen to match these regular expressions will be converted
 * incorrectly.
 *
 * @param stringified - the result of `stringify`
 */
const stringifyTestVector = (
// eslint-disable-next-line @typescript-eslint/no-explicit-any
value, alphabetize = true) => {
    const stringified = alphabetize
        ? stringify(sortObjectKeys(value))
        : stringify(value);
    return stringified
        .replace(uint8ArrayRegex, "hexToBin('$1')")
        .replace(bigIntRegex, "BigInt('$1')");
};
//# sourceMappingURL=log.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export bigIntToBinUint256BEClamped [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bigIntToBinUint64LE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bigIntToBinUint64LEClamped [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bigIntToBinUintLE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bigIntToBitcoinVarInt [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToBigIntUint256BE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToBigIntUint64LE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToBigIntUintBE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToBigIntUintLE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToFixedLength [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToNumberUint16LE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToNumberUint32LE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToNumberUintLE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export numberToBinInt32TwosCompliment [provided] [no usage info] [missing usage info prevents renaming] */
/*! export numberToBinUint16BE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export numberToBinUint16LE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export numberToBinUint16LEClamped [provided] [no usage info] [missing usage info prevents renaming] */
/*! export numberToBinUint32BE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export numberToBinUint32LE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export numberToBinUint32LEClamped [provided] [no usage info] [missing usage info prevents renaming] */
/*! export numberToBinUintLE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export readBitcoinVarInt [provided] [no usage info] [missing usage info prevents renaming] */
/*! export varIntPrefixToSize [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "numberToBinUintLE": () => /* binding */ numberToBinUintLE,
/* harmony export */   "binToFixedLength": () => /* binding */ binToFixedLength,
/* harmony export */   "numberToBinUint16LEClamped": () => /* binding */ numberToBinUint16LEClamped,
/* harmony export */   "numberToBinUint32LEClamped": () => /* binding */ numberToBinUint32LEClamped,
/* harmony export */   "numberToBinUint16LE": () => /* binding */ numberToBinUint16LE,
/* harmony export */   "numberToBinUint16BE": () => /* binding */ numberToBinUint16BE,
/* harmony export */   "numberToBinUint32LE": () => /* binding */ numberToBinUint32LE,
/* harmony export */   "numberToBinUint32BE": () => /* binding */ numberToBinUint32BE,
/* harmony export */   "bigIntToBinUintLE": () => /* binding */ bigIntToBinUintLE,
/* harmony export */   "bigIntToBinUint64LEClamped": () => /* binding */ bigIntToBinUint64LEClamped,
/* harmony export */   "bigIntToBinUint64LE": () => /* binding */ bigIntToBinUint64LE,
/* harmony export */   "numberToBinInt32TwosCompliment": () => /* binding */ numberToBinInt32TwosCompliment,
/* harmony export */   "binToNumberUintLE": () => /* binding */ binToNumberUintLE,
/* harmony export */   "binToNumberUint16LE": () => /* binding */ binToNumberUint16LE,
/* harmony export */   "binToNumberUint32LE": () => /* binding */ binToNumberUint32LE,
/* harmony export */   "binToBigIntUintBE": () => /* binding */ binToBigIntUintBE,
/* harmony export */   "binToBigIntUint256BE": () => /* binding */ binToBigIntUint256BE,
/* harmony export */   "bigIntToBinUint256BEClamped": () => /* binding */ bigIntToBinUint256BEClamped,
/* harmony export */   "binToBigIntUintLE": () => /* binding */ binToBigIntUintLE,
/* harmony export */   "binToBigIntUint64LE": () => /* binding */ binToBigIntUint64LE,
/* harmony export */   "varIntPrefixToSize": () => /* binding */ varIntPrefixToSize,
/* harmony export */   "readBitcoinVarInt": () => /* binding */ readBitcoinVarInt,
/* harmony export */   "bigIntToBitcoinVarInt": () => /* binding */ bigIntToBitcoinVarInt
/* harmony export */ });
/**
 * Encode a positive integer as a little-endian Uint8Array. For values exceeding
 * `Number.MAX_SAFE_INTEGER` (`9007199254740991`), use `bigIntToBinUintLE`.
 * Negative values will return the same result as `0`.
 *
 * @param value - the number to encode
 */
const numberToBinUintLE = (value) => {
    const baseUint8Array = 256;
    const result = [];
    // eslint-disable-next-line functional/no-let
    let remaining = value;
    // eslint-disable-next-line functional/no-loop-statement
    while (remaining >= baseUint8Array) {
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        result.push(remaining % baseUint8Array);
        // eslint-disable-next-line functional/no-expression-statement
        remaining = Math.floor(remaining / baseUint8Array);
    }
    // eslint-disable-next-line functional/no-conditional-statement, functional/no-expression-statement, functional/immutable-data
    if (remaining > 0)
        result.push(remaining);
    return Uint8Array.from(result);
};
/**
 * Fill a new Uint8Array of a specific byte-length with the contents of a given
 * Uint8Array, truncating or padding the Uint8Array with zeros.
 *
 * @param bin - the Uint8Array to resize
 * @param bytes - the desired byte-length
 */
const binToFixedLength = (bin, bytes) => {
    const fixedBytes = new Uint8Array(bytes);
    const maxValue = 255;
    // eslint-disable-next-line functional/no-expression-statement
    bin.length > bytes ? fixedBytes.fill(maxValue) : fixedBytes.set(bin);
    // TODO: re-enable eslint-disable-next-line @typescript-eslint/no-unused-expressions
    return fixedBytes;
};
/**
 * Encode a positive integer as a 2-byte Uint16LE Uint8Array, clamping the
 * results. (Values exceeding `0xffff` return the same result as `0xffff`,
 * negative values will return the same result as `0`.)
 *
 * @param value - the number to encode
 */
const numberToBinUint16LEClamped = (value) => {
    const uint16 = 2;
    return binToFixedLength(numberToBinUintLE(value), uint16);
};
/**
 * Encode a positive integer as a 4-byte Uint32LE Uint8Array, clamping the
 * results. (Values exceeding `0xffffffff` return the same result as
 * `0xffffffff`, negative values will return the same result as `0`.)
 *
 * @param value - the number to encode
 */
const numberToBinUint32LEClamped = (value) => {
    const uint32 = 4;
    return binToFixedLength(numberToBinUintLE(value), uint32);
};
/**
 * Encode a positive integer as a 2-byte Uint16LE Uint8Array.
 *
 * This method will return an incorrect result for values outside of the range
 * `0` to `0xffff`.
 *
 * @param value - the number to encode
 */
const numberToBinUint16LE = (value) => {
    const uint16Length = 2;
    const bin = new Uint8Array(uint16Length);
    const writeAsLittleEndian = true;
    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);
    // eslint-disable-next-line functional/no-expression-statement
    view.setUint16(0, value, writeAsLittleEndian);
    return bin;
};
/**
 * Encode a positive integer as a 2-byte Uint16LE Uint8Array.
 *
 * This method will return an incorrect result for values outside of the range
 * `0` to `0xffff`.
 *
 * @param value - the number to encode
 */
const numberToBinUint16BE = (value) => {
    const uint16Length = 2;
    const bin = new Uint8Array(uint16Length);
    const writeAsLittleEndian = false;
    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);
    // eslint-disable-next-line functional/no-expression-statement
    view.setUint16(0, value, writeAsLittleEndian);
    return bin;
};
/**
 * Encode a positive number as a 4-byte Uint32LE Uint8Array.
 *
 * This method will return an incorrect result for values outside of the range
 * `0` to `0xffffffff`.
 *
 * @param value - the number to encode
 */
const numberToBinUint32LE = (value) => {
    const uint32Length = 4;
    const bin = new Uint8Array(uint32Length);
    const writeAsLittleEndian = true;
    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);
    // eslint-disable-next-line functional/no-expression-statement
    view.setUint32(0, value, writeAsLittleEndian);
    return bin;
};
/**
 * Encode a positive number as a 4-byte Uint32BE Uint8Array.
 *
 * This method will return an incorrect result for values outside of the range
 * `0` to `0xffffffff`.
 *
 * @param value - the number to encode
 */
const numberToBinUint32BE = (value) => {
    const uint32Length = 4;
    const bin = new Uint8Array(uint32Length);
    const writeAsLittleEndian = false;
    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);
    // eslint-disable-next-line functional/no-expression-statement
    view.setUint32(0, value, writeAsLittleEndian);
    return bin;
};
/**
 * Encode a positive BigInt as little-endian Uint8Array. Negative values will
 * return the same result as `0`.
 *
 * @param value - the number to encode
 */
const bigIntToBinUintLE = (value) => {
    const baseUint8Array = 256;
    const base = BigInt(baseUint8Array);
    const result = [];
    // eslint-disable-next-line functional/no-let
    let remaining = value;
    // eslint-disable-next-line functional/no-loop-statement
    while (remaining >= base) {
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        result.push(Number(remaining % base));
        // eslint-disable-next-line functional/no-expression-statement
        remaining /= base;
    }
    // eslint-disable-next-line functional/no-conditional-statement, functional/no-expression-statement, functional/immutable-data
    if (remaining > BigInt(0))
        result.push(Number(remaining));
    return Uint8Array.from(result.length > 0 ? result : [0]);
};
/**
 * Encode a positive BigInt as an 8-byte Uint64LE Uint8Array, clamping the
 * results. (Values exceeding `0xffff_ffff_ffff_ffff` return the same result as
 * `0xffff_ffff_ffff_ffff`, negative values return the same result as `0`.)
 *
 * @param value - the number to encode
 */
const bigIntToBinUint64LEClamped = (value) => {
    const uint64 = 8;
    return binToFixedLength(bigIntToBinUintLE(value), uint64);
};
/**
 * Encode a positive BigInt as an 8-byte Uint64LE Uint8Array.
 *
 * This method will return an incorrect result for values outside of the range
 * `0` to `0xffff_ffff_ffff_ffff`.
 *
 * @param value - the number to encode
 */
const bigIntToBinUint64LE = (value) => {
    const uint64Length = 8;
    const bin = new Uint8Array(uint64Length);
    const writeAsLittleEndian = true;
    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);
    // eslint-disable-next-line functional/no-expression-statement
    view.setBigUint64(0, value, writeAsLittleEndian);
    return bin;
};
/**
 * Encode an integer as a 4-byte, little-endian Uint8Array using the number's
 * two's compliment representation (the format used by JavaScript's bitwise
 * operators).
 *
 * @remarks
 * The C++ bitcoin implementations sometimes represent short vectors using
 * signed 32-bit integers (e.g. `sighashType`). This method can be used to test
 * compatibility with those implementations.
 *
 * @param value - the number to encode
 */
const numberToBinInt32TwosCompliment = (value) => {
    const bytes = 4;
    const bitsInAByte = 8;
    const bin = new Uint8Array(bytes);
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus
    for (let offset = 0; offset < bytes; offset++) {
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        bin[offset] = value;
        // eslint-disable-next-line functional/no-expression-statement, no-bitwise, no-param-reassign
        value >>>= bitsInAByte;
    }
    return bin;
};
/**
 * Decode a little-endian Uint8Array of any length into a number. For numbers
 * larger than `Number.MAX_SAFE_INTEGER` (`9007199254740991`), use
 * `binToBigIntUintLE`.
 *
 * The `bytes` parameter can be set to constrain the expected length (default:
 * `bin.length`). This method throws if `bin.length` is not equal to `bytes`.
 *
 * @privateRemarks
 * We avoid a bitwise strategy here because JavaScript uses 32-bit signed
 * integers for bitwise math, so larger numbers are converted incorrectly. E.g.
 * `2147483648 << 8` is `0`, while `2147483648n << 8n` is `549755813888n`.
 *
 * @param bin - the Uint8Array to decode
 * @param bytes - the number of bytes to read (default: `bin.length`)
 */
const binToNumberUintLE = (bin, bytes = bin.length) => {
    const base = 2;
    const bitsInAByte = 8;
    // eslint-disable-next-line functional/no-conditional-statement
    if (bin.length !== bytes) {
        // eslint-disable-next-line functional/no-throw-statement
        throw new TypeError(`Bin length must be ${bytes}.`);
    }
    return new Uint8Array(bin.buffer, bin.byteOffset, bin.length).reduce((accumulated, byte, i) => accumulated + byte * base ** (bitsInAByte * i), 0);
};
/**
 * Decode a 2-byte Uint16LE Uint8Array into a number.
 *
 * Throws if `bin` is shorter than 2 bytes.
 *
 * @param bin - the Uint8Array to decode
 */
const binToNumberUint16LE = (bin) => {
    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);
    const readAsLittleEndian = true;
    return view.getUint16(0, readAsLittleEndian);
};
/**
 * Decode a 4-byte Uint32LE Uint8Array into a number.
 *
 * Throws if `bin` is shorter than 4 bytes.
 *
 * @param bin - the Uint8Array to decode
 */
const binToNumberUint32LE = (bin) => {
    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);
    const readAsLittleEndian = true;
    return view.getUint32(0, readAsLittleEndian);
};
/**
 * Decode a big-endian Uint8Array of any length into a BigInt. If starting from
 * a hex value, consider using the BigInt constructor instead:
 * ```
 * BigInt(`0x${hex}`)
 * ```
 *
 * The `bytes` parameter can be set to constrain the expected length (default:
 * `bin.length`). This method throws if `bin.length` is not equal to `bytes`.
 *
 * @param bin - the Uint8Array to decode
 * @param bytes - the number of bytes to read (default: `bin.length`)
 */
const binToBigIntUintBE = (bin, bytes = bin.length) => {
    const bitsInAByte = 8;
    const shift = BigInt(bitsInAByte);
    // eslint-disable-next-line functional/no-conditional-statement
    if (bin.length !== bytes) {
        // eslint-disable-next-line functional/no-throw-statement
        throw new TypeError(`Bin length must be ${bytes}.`);
    }
    return new Uint8Array(bin.buffer, bin.byteOffset, bin.length).reduce(
    // eslint-disable-next-line no-bitwise
    (accumulated, byte) => (accumulated << shift) | BigInt(byte), BigInt(0));
};
/**
 * Decode an unsigned, 32-byte big-endian Uint8Array into a BigInt. This can be
 * used to decode Uint8Array-encoded cryptographic primitives like private
 * keys, public keys, curve parameters, and signature points.
 *
 * If starting from a hex value, consider using the BigInt constructor instead:
 * ```
 * BigInt(`0x${hex}`)
 * ```
 * @param bin - the Uint8Array to decode
 */
const binToBigIntUint256BE = (bin) => {
    const uint256Bytes = 32;
    return binToBigIntUintBE(bin, uint256Bytes);
};
/**
 * Encode a positive BigInt into an unsigned 32-byte big-endian Uint8Array. This
 * can be used to encoded numbers for cryptographic primitives like private
 * keys, public keys, curve parameters, and signature points.
 *
 * Negative values will return the same result as `0`, values higher than
 * 2^256-1 will return the maximum expressible unsigned 256-bit value
 * (`0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff`).
 *
 * @param value - the BigInt to encode
 */
const bigIntToBinUint256BEClamped = (value) => {
    const uint256Bytes = 32;
    return binToFixedLength(bigIntToBinUintLE(value), uint256Bytes).reverse();
};
/**
 * Decode a little-endian Uint8Array of any length into a BigInt.
 *
 * The `bytes` parameter can be set to constrain the expected length (default:
 * `bin.length`). This method throws if `bin.length` is not equal to `bytes`.
 *
 * @param bin - the Uint8Array to decode
 * @param bytes - the number of bytes to read (default: `bin.length`)
 */
const binToBigIntUintLE = (bin, bytes = bin.length) => {
    const bitsInAByte = 8;
    // eslint-disable-next-line functional/no-conditional-statement
    if (bin.length !== bytes) {
        // eslint-disable-next-line functional/no-throw-statement
        throw new TypeError(`Bin length must be ${bytes}.`);
    }
    return new Uint8Array(bin.buffer, bin.byteOffset, bin.length).reduceRight(
    // eslint-disable-next-line no-bitwise
    (accumulated, byte) => (accumulated << BigInt(bitsInAByte)) | BigInt(byte), BigInt(0));
};
/**
 * Decode an 8-byte Uint64LE Uint8Array into a BigInt.
 *
 * Throws if `bin` is shorter than 8 bytes.
 *
 * @param bin - the Uint8Array to decode
 */
const binToBigIntUint64LE = (bin) => {
    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);
    const readAsLittleEndian = true;
    return view.getBigUint64(0, readAsLittleEndian);
};
/**
 * Get the expected byte length of a Bitcoin VarInt given a first byte.
 *
 * @param firstByte - the first byte of the VarInt
 */
const varIntPrefixToSize = (firstByte) => {
    const uint8 = 1;
    const uint16 = 2;
    const uint32 = 4;
    const uint64 = 8;
    switch (firstByte) {
        case 253 /* uint16Prefix */:
            return uint16 + 1;
        case 254 /* uint32Prefix */:
            return uint32 + 1;
        case 255 /* uint64Prefix */:
            return uint64 + 1;
        default:
            return uint8;
    }
};
/**
 * Read a Bitcoin VarInt (Variable-length integer) from a Uint8Array, returning
 * the `nextOffset` after the VarInt and the value as a BigInt.
 *
 * @param bin - the Uint8Array from which to read the VarInt
 * @param offset - the offset at which the VarInt begins
 */
const readBitcoinVarInt = (bin, offset = 0) => {
    const bytes = varIntPrefixToSize(bin[offset]);
    const hasPrefix = bytes !== 1;
    return {
        nextOffset: offset + bytes,
        value: hasPrefix
            ? binToBigIntUintLE(bin.subarray(offset + 1, offset + bytes), bytes - 1)
            : binToBigIntUintLE(bin.subarray(offset, offset + bytes), 1),
    };
};
/**
 * Encode a positive BigInt as a Bitcoin VarInt (Variable-length integer).
 *
 * Note: the maximum value of a Bitcoin VarInt is `0xffff_ffff_ffff_ffff`. This
 * method will return an incorrect result for values outside of the range `0` to
 * `0xffff_ffff_ffff_ffff`.
 *
 * @param value - the BigInt to encode (no larger than `0xffff_ffff_ffff_ffff`)
 */
const bigIntToBitcoinVarInt = (value) => value <= BigInt(252 /* uint8MaxValue */)
    ? Uint8Array.of(Number(value))
    : value <= BigInt(65535 /* uint16MaxValue */)
        ? Uint8Array.from([
            253 /* uint16Prefix */,
            ...numberToBinUint16LE(Number(value)),
        ])
        : value <= BigInt(4294967295 /* uint32MaxValue */)
            ? Uint8Array.from([
                254 /* uint32Prefix */,
                ...numberToBinUint32LE(Number(value)),
            ])
            : Uint8Array.from([255 /* uint64Prefix */, ...bigIntToBinUint64LE(value)]);
//# sourceMappingURL=numbers.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/format/time.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/format/time.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export LocktimeError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export dateToLocktime [provided] [no usage info] [missing usage info prevents renaming] */
/*! export dateToLocktimeBin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export locktimeToDate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export maximumLocktimeDate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export maximumLocktimeTimestamp [provided] [no usage info] [missing usage info prevents renaming] */
/*! export minimumLocktimeDate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export minimumLocktimeTimestamp [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseLocktimeBin [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "minimumLocktimeTimestamp": () => /* binding */ minimumLocktimeTimestamp,
/* harmony export */   "maximumLocktimeTimestamp": () => /* binding */ maximumLocktimeTimestamp,
/* harmony export */   "minimumLocktimeDate": () => /* binding */ minimumLocktimeDate,
/* harmony export */   "maximumLocktimeDate": () => /* binding */ maximumLocktimeDate,
/* harmony export */   "LocktimeError": () => /* binding */ LocktimeError,
/* harmony export */   "dateToLocktime": () => /* binding */ dateToLocktime,
/* harmony export */   "locktimeToDate": () => /* binding */ locktimeToDate,
/* harmony export */   "dateToLocktimeBin": () => /* binding */ dateToLocktimeBin,
/* harmony export */   "parseLocktimeBin": () => /* binding */ parseLocktimeBin
/* harmony export */ });
/* harmony import */ var _numbers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./numbers */ "./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js");

const msPerLocktimeSecond = 1000;
/**
 * The minimum Unix timestamp (inclusive) which can be encoded by a
 * transaction's `locktime`.
 */
const minimumLocktimeTimestamp = 500000000;
/**
 * The maximum Unix timestamp (inclusive) which can be encoded by a
 * transaction's `locktime`.
 */
const maximumLocktimeTimestamp = 0xffffffff;
/**
 * The minimum Date (inclusive) which can be encoded by a transaction's
 * `locktime`.
 */
const minimumLocktimeDate = new Date(minimumLocktimeTimestamp * msPerLocktimeSecond);
/**
 * The maximum Date (inclusive) which can be encoded by a transaction's
 * `locktime`.
 */
const maximumLocktimeDate = new Date(maximumLocktimeTimestamp * msPerLocktimeSecond);
var LocktimeError;
(function (LocktimeError) {
    LocktimeError["dateOutOfRange"] = "The provided Date is outside of the range which can be encoded in locktime.";
    LocktimeError["locktimeOutOfRange"] = "The provided locktime is outside of the range which can be encoded as a Date (greater than or equal to 500000000 and less than or equal to 4294967295).";
    LocktimeError["incorrectLength"] = "The provided locktime is not the correct length (4 bytes).";
})(LocktimeError || (LocktimeError = {}));
/**
 * Convert a JavaScript `Date` object to its equivalent transaction `locktime`
 * representation. The `date` is rounded to the nearest second (the precision of
 * `locktime` Dates).
 *
 * Note, a locktime values greater than or equal to `500000000`
 * See `Transaction.locktime` for details.
 *
 * @param date - the Date to convert to a locktime number
 */
const dateToLocktime = (date) => date < minimumLocktimeDate || date > maximumLocktimeDate
    ? LocktimeError.dateOutOfRange
    : Math.round(date.getTime() / msPerLocktimeSecond);
/**
 * Convert a transaction `locktime` to its equivalent JavaScript `Date` object.
 * If locktime is outside the possible range (greater than or equal to
 * `500000000` and less than or equal to `4294967295`), an error message is
 * returned.
 *
 * @param locktime - a positive integer between `500000000` and `4294967295`,
 * inclusive
 */
const locktimeToDate = (locktime) => locktime < minimumLocktimeTimestamp || locktime > maximumLocktimeTimestamp
    ? LocktimeError.locktimeOutOfRange
    : new Date(locktime * msPerLocktimeSecond);
/**
 * Convert a JavaScript `Date` object to its equivalent transaction `locktime`
 * bytecode representation. The `date` is rounded to the nearest second (the
 * precision of `locktime` Dates).
 *
 * Note: a block-based locktime can simply be encoded with `numberToBinUint32LE`
 * (provided it is no larger than the maximum, `499999999`).
 *
 * @param date - the Date to convert to a locktime Uint8Array
 */
const dateToLocktimeBin = (date) => {
    const result = dateToLocktime(date);
    return typeof result === 'string' ? result : (0,_numbers__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(result);
};
const locktimeByteLength = 4;
/**
 * Parse a locktime, returning a `number` for block heights, a `Date` for block
 * times, or a string for parsing errors.
 *
 * @param bin - the 4-byte Uint8Array locktime to parse
 */
const parseLocktimeBin = (bin) => {
    if (bin.length !== locktimeByteLength)
        return LocktimeError.incorrectLength;
    const parsed = (0,_numbers__WEBPACK_IMPORTED_MODULE_0__.binToNumberUint32LE)(bin);
    return parsed >= minimumLocktimeTimestamp
        ? new Date(parsed * msPerLocktimeSecond)
        : parsed;
};
//# sourceMappingURL=time.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/format/type-utils.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/format/type-utils.js ***!
  \*****************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
/***/ (() => {

/*
 * const canBeAssigned: Immutable<Uint8Array> = Uint8Array.of(0, 0);
 * const canBeSpread = [...canBeAssigned];
 * const spreadResultWorks = Uint8Array.from(canBeSpread);
 * const functionRequiringIt = (bin: Immutable<Uint8Array>) => bin;
 * const canAcceptNonMutable = functionRequiringIt(Uint8Array.of());
 */
//# sourceMappingURL=type-utils.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/format/utf8.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/format/utf8.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export binToUtf8 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export utf8ToBin [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "utf8ToBin": () => /* binding */ utf8ToBin,
/* harmony export */   "binToUtf8": () => /* binding */ binToUtf8
/* harmony export */ });
/**
 * This implementations is derived from:
 * https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js
 *
 * Copyright 2008 The Closure Library Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* eslint-disable complexity, functional/no-let, functional/immutable-data, no-bitwise, @typescript-eslint/no-magic-numbers, functional/no-expression-statement, functional/no-conditional-statement, functional/no-loop-statement, no-plusplus */
/**
 * Interpret a string as UTF-8 and encode it as a Uint8Array.
 * @param utf8 - the string to encode
 */
const utf8ToBin = (utf8) => {
    const out = [];
    let p = 0;
    for (let i = 0; i < utf8.length; i++) {
        let c = utf8.charCodeAt(i);
        if (c < 128) {
            out[p++] = c;
        }
        else if (c < 2048) {
            out[p++] = (c >> 6) | 192;
            out[p++] = (c & 63) | 128;
        }
        else if ((c & 0xfc00) === 0xd800 &&
            i + 1 < utf8.length &&
            (utf8.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {
            c = ((c & 0x03ff) << 10) + 0x10000 + (utf8.charCodeAt((i += 1)) & 0x03ff);
            out[p++] = (c >> 18) | 240;
            out[p++] = ((c >> 12) & 63) | 128;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
        else {
            out[p++] = (c >> 12) | 224;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
    }
    return new Uint8Array(out);
};
/**
 * Decode a Uint8Array as a UTF-8 string.
 * @param bytes - the Uint8Array to decode
 */
const binToUtf8 = (bytes) => {
    const out = [];
    let pos = 0;
    let c = 0;
    while (pos < bytes.length) {
        const c1 = bytes[pos++];
        if (c1 < 128) {
            out[c++] = String.fromCharCode(c1);
        }
        else if (c1 > 191 && c1 < 224) {
            const c2 = bytes[pos++];
            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));
        }
        else if (c1 > 239 && c1 < 365) {
            const c2 = bytes[pos++];
            const c3 = bytes[pos++];
            const c4 = bytes[pos++];
            const u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -
                0x10000;
            out[c++] = String.fromCharCode((u >> 10) + 0xd800);
            out[c++] = String.fromCharCode((u & 1023) + 0xdc00);
        }
        else {
            const c2 = bytes[pos++];
            const c3 = bytes[pos++];
            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
        }
    }
    return out.join('');
};
//# sourceMappingURL=utf8.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export HdKeyDecodingError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export HdKeyVersion [provided] [no usage info] [missing usage info prevents renaming] */
/*! export HdNodeCrackingError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export HdNodeDerivationError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeHdKey [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeHdPrivateKey [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeHdPublicKey [provided] [no usage info] [missing usage info prevents renaming] */
/*! export deriveHdPath [provided] [no usage info] [missing usage info prevents renaming] */
/*! export deriveHdPrivateNodeChild [provided] [no usage info] [missing usage info prevents renaming] */
/*! export deriveHdPrivateNodeFromSeed [provided] [no usage info] [missing usage info prevents renaming] */
/*! export deriveHdPrivateNodeIdentifier [provided] [no usage info] [missing usage info prevents renaming] */
/*! export deriveHdPublicNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export deriveHdPublicNodeChild [provided] [no usage info] [missing usage info prevents renaming] */
/*! export deriveHdPublicNodeIdentifier [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeHdPrivateKey [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeHdPublicKey [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateBIP32Crypto [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "instantiateBIP32Crypto": () => /* binding */ instantiateBIP32Crypto,
/* harmony export */   "deriveHdPrivateNodeFromSeed": () => /* binding */ deriveHdPrivateNodeFromSeed,
/* harmony export */   "deriveHdPrivateNodeIdentifier": () => /* binding */ deriveHdPrivateNodeIdentifier,
/* harmony export */   "deriveHdPublicNodeIdentifier": () => /* binding */ deriveHdPublicNodeIdentifier,
/* harmony export */   "HdKeyVersion": () => /* binding */ HdKeyVersion,
/* harmony export */   "HdKeyDecodingError": () => /* binding */ HdKeyDecodingError,
/* harmony export */   "decodeHdKey": () => /* binding */ decodeHdKey,
/* harmony export */   "decodeHdPrivateKey": () => /* binding */ decodeHdPrivateKey,
/* harmony export */   "decodeHdPublicKey": () => /* binding */ decodeHdPublicKey,
/* harmony export */   "encodeHdPrivateKey": () => /* binding */ encodeHdPrivateKey,
/* harmony export */   "encodeHdPublicKey": () => /* binding */ encodeHdPublicKey,
/* harmony export */   "deriveHdPublicNode": () => /* binding */ deriveHdPublicNode,
/* harmony export */   "HdNodeDerivationError": () => /* binding */ HdNodeDerivationError,
/* harmony export */   "deriveHdPrivateNodeChild": () => /* binding */ deriveHdPrivateNodeChild,
/* harmony export */   "deriveHdPublicNodeChild": () => /* binding */ deriveHdPublicNodeChild,
/* harmony export */   "deriveHdPath": () => /* binding */ deriveHdPath,
/* harmony export */   "HdNodeCrackingError": () => /* binding */ HdNodeCrackingError,
/* harmony export */   "crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode": () => /* binding */ crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode
/* harmony export */ });
/* harmony import */ var _crypto_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../crypto/crypto */ "./node_modules/@bitauth/libauth/build/module/lib/crypto/crypto.js");
/* harmony import */ var _crypto_hmac__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../crypto/hmac */ "./node_modules/@bitauth/libauth/build/module/lib/crypto/hmac.js");
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");
/* harmony import */ var _format_utf8__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../format/utf8 */ "./node_modules/@bitauth/libauth/build/module/lib/format/utf8.js");
/* harmony import */ var _key_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./key-utils */ "./node_modules/@bitauth/libauth/build/module/lib/key/key-utils.js");





/**
 * Instantiate an object containing WASM implementations of each cryptographic
 * algorithm required by BIP32 utilities in this library.
 *
 * These WASM implementations provide optimal performance across every
 * JavaScript runtime, but depending on your application, you may prefer to
 * instantiate native implementations such as those provided by Node.js or the
 * `crypto.subtle` API (to reduce bundle size) or an external module (for
 * synchronous instantiation).
 */
const instantiateBIP32Crypto = async () => {
    const [ripemd160, secp256k1, sha256, sha512] = await Promise.all([
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateRipemd160)(),
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateSecp256k1)(),
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateSha256)(),
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateSha512)(),
    ]);
    return { ripemd160, secp256k1, sha256, sha512 };
};
const bip32HmacSha512Key = (0,_format_utf8__WEBPACK_IMPORTED_MODULE_3__.utf8ToBin)('Bitcoin seed');
const halfHmacSha512Length = 32;
/**
 * Derive an `HdPrivateNode` from the provided seed following the BIP32
 * specification. A seed should include between 16 bytes and 64 bytes of
 * entropy (recommended: 32 bytes).
 *
 * @param crypto - an implementation of sha512
 * @param seed - the entropy from which to derive the `HdPrivateNode`
 * @param assumeValidity - if set, the derived private key will not be checked
 * for validity, and will be assumed valid if `true` or invalid if `false` (this
 * is useful for testing)
 */
const deriveHdPrivateNodeFromSeed = (crypto, seed, assumeValidity) => {
    const mac = (0,_crypto_hmac__WEBPACK_IMPORTED_MODULE_1__.hmacSha512)(crypto.sha512, bip32HmacSha512Key, seed);
    const privateKey = mac.slice(0, halfHmacSha512Length);
    const chainCode = mac.slice(halfHmacSha512Length);
    const depth = 0;
    const childIndex = 0;
    const parentFingerprint = Uint8Array.from([0, 0, 0, 0]);
    const valid = assumeValidity ?? (0,_key_utils__WEBPACK_IMPORTED_MODULE_4__.validateSecp256k1PrivateKey)(privateKey);
    return (valid
        ? { chainCode, childIndex, depth, parentFingerprint, privateKey, valid }
        : {
            chainCode,
            childIndex,
            depth,
            invalidPrivateKey: privateKey,
            parentFingerprint,
            valid,
        });
};
/**
 * Derive the public identifier for a given HD private node. This is used to
 * uniquely identify HD nodes in software. The first 4 bytes of this identifier
 * are considered its "fingerprint".
 *
 * @param crypto - implementations of sha256, ripemd160, and secp256k1
 * compressed public key derivation
 * @param hdPrivateNode - the HD private node from which to derive the public
 * identifier (not require to be valid)
 */
const deriveHdPrivateNodeIdentifier = (crypto, hdPrivateNode) => crypto.ripemd160.hash(crypto.sha256.hash(crypto.secp256k1.derivePublicKeyCompressed(hdPrivateNode.privateKey)));
/**
 * Derive the public identifier for a given `HdPublicNode`. This is used to
 * uniquely identify HD nodes in software. The first 4 bytes of this identifier
 * are considered its fingerprint.
 *
 * @param crypto - implementations of sha256 and ripemd160
 */
const deriveHdPublicNodeIdentifier = (crypto, node) => crypto.ripemd160.hash(crypto.sha256.hash(node.publicKey));
/**
 * The 4-byte version indicating the network and type of an `HdPrivateKey` or
 * `HdPublicKey`.
 */
var HdKeyVersion;
(function (HdKeyVersion) {
    /**
     * Version indicating the HD key is an `HdPrivateKey` intended for use on the
     * main network. Base58 encoding at the expected length of an HD key results
     * in a prefix of `xprv`.
     *
     * Hex: `0x0488ade4`
     */
    HdKeyVersion[HdKeyVersion["mainnetPrivateKey"] = 76066276] = "mainnetPrivateKey";
    /**
     * Version indicating the HD key is an `HdPublicKey` intended for use on the
     * main network. Base58 encoding at the expected length of an HD key results
     * in a prefix of `xpub`.
     *
     * Hex: `0x0488b21e`
     */
    HdKeyVersion[HdKeyVersion["mainnetPublicKey"] = 76067358] = "mainnetPublicKey";
    /**
     * Version indicating the HD key is an `HdPrivateKey` intended for use on the
     * test network. Base58 encoding at the expected length of an HD key results
     * in a prefix of `tprv`.
     *
     * Hex: `0x04358394`
     */
    HdKeyVersion[HdKeyVersion["testnetPrivateKey"] = 70615956] = "testnetPrivateKey";
    /**
     * Version indicating the HD key is an `HdPublicKey` intended for use on the
     * test network. Base58 encoding at the expected length of an HD key results
     * in a prefix of `tpub`.
     *
     * Hex: `0x043587cf`
     */
    HdKeyVersion[HdKeyVersion["testnetPublicKey"] = 70617039] = "testnetPublicKey";
})(HdKeyVersion || (HdKeyVersion = {}));
/**
 * An error in the decoding of an HD public or private key.
 */
var HdKeyDecodingError;
(function (HdKeyDecodingError) {
    HdKeyDecodingError["incorrectLength"] = "HD key decoding error: length is incorrect (must encode 82 bytes).";
    HdKeyDecodingError["invalidChecksum"] = "HD key decoding error: checksum is invalid.";
    HdKeyDecodingError["invalidPrivateNode"] = "HD key decoding error: the key for this HD private node is not a valid Secp256k1 private key.";
    HdKeyDecodingError["missingPrivateKeyPaddingByte"] = "HD key decoding error: version indicates a private key, but the key data is missing a padding byte.";
    HdKeyDecodingError["privateKeyExpected"] = "HD key decoding error: expected an HD private key, but encountered an HD public key.";
    HdKeyDecodingError["publicKeyExpected"] = "HD key decoding error: expected an HD public key, but encountered an HD private key.";
    HdKeyDecodingError["unknownCharacter"] = "HD key decoding error: key includes a non-base58 character.";
    HdKeyDecodingError["unknownVersion"] = "HD key decoding error: key uses an unknown version.";
})(HdKeyDecodingError || (HdKeyDecodingError = {}));
/**
 * Decode an HD private key as defined by BIP32, returning a `node` and a
 * `network`. Decoding errors are returned as strings.
 *
 * If the type of the key is known, use `decodeHdPrivateKey` or
 * `decodeHdPublicKey`.
 *
 * @param crypto - an implementation of sha256
 * @param hdKey - a BIP32 HD private key or HD public key
 */
// eslint-disable-next-line complexity
const decodeHdKey = (crypto, hdKey) => {
    const decoded = (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.base58ToBin)(hdKey);
    if (decoded === _format_format__WEBPACK_IMPORTED_MODULE_2__.BaseConversionError.unknownCharacter)
        return HdKeyDecodingError.unknownCharacter;
    const expectedLength = 82;
    if (decoded.length !== expectedLength)
        return HdKeyDecodingError.incorrectLength;
    const checksumIndex = 78;
    const payload = decoded.slice(0, checksumIndex);
    const checksumBits = decoded.slice(checksumIndex);
    const checksum = crypto.sha256.hash(crypto.sha256.hash(payload));
    if (!checksumBits.every((value, i) => value === checksum[i])) {
        return HdKeyDecodingError.invalidChecksum;
    }
    const depthIndex = 4;
    const fingerprintIndex = 5;
    const childIndexIndex = 9;
    const chainCodeIndex = 13;
    const keyDataIndex = 45;
    const version = new DataView(decoded.buffer, decoded.byteOffset, depthIndex).getUint32(0);
    const depth = decoded[depthIndex];
    const parentFingerprint = decoded.slice(fingerprintIndex, childIndexIndex);
    const childIndex = new DataView(decoded.buffer, decoded.byteOffset + childIndexIndex, decoded.byteOffset + chainCodeIndex).getUint32(0);
    const chainCode = decoded.slice(chainCodeIndex, keyDataIndex);
    const keyData = decoded.slice(keyDataIndex, checksumIndex);
    const isPrivateKey = version === HdKeyVersion.mainnetPrivateKey ||
        version === HdKeyVersion.testnetPrivateKey;
    if (isPrivateKey && keyData[0] !== 0x00) {
        return HdKeyDecodingError.missingPrivateKeyPaddingByte;
    }
    if (isPrivateKey) {
        const privateKey = keyData.slice(1);
        const valid = (0,_key_utils__WEBPACK_IMPORTED_MODULE_4__.validateSecp256k1PrivateKey)(privateKey);
        return {
            node: valid
                ? {
                    chainCode,
                    childIndex,
                    depth,
                    parentFingerprint,
                    privateKey,
                    valid: true,
                }
                : {
                    chainCode,
                    childIndex,
                    depth,
                    invalidPrivateKey: privateKey,
                    parentFingerprint,
                    valid: false,
                },
            version: version,
        };
    }
    const isPublicKey = version === HdKeyVersion.mainnetPublicKey ||
        version === HdKeyVersion.testnetPublicKey;
    if (!isPublicKey) {
        return HdKeyDecodingError.unknownVersion;
    }
    return {
        node: {
            chainCode,
            childIndex,
            depth,
            parentFingerprint,
            publicKey: keyData,
        },
        version: version,
    };
};
/**
 * Decode an HD private key as defined by BIP32.
 *
 * This method is similar to `decodeHdKey` but ensures that the result is a
 * valid HD private node. Decoding error messages are returned as strings.
 *
 * @param crypto - an implementation of sha256
 * @param hdPrivateKey - a BIP32 HD private key
 */
const decodeHdPrivateKey = (crypto, hdPrivateKey) => {
    const decoded = decodeHdKey(crypto, hdPrivateKey);
    if (typeof decoded === 'string')
        return decoded;
    if ('publicKey' in decoded.node) {
        return HdKeyDecodingError.privateKeyExpected;
    }
    if (!decoded.node.valid) {
        return HdKeyDecodingError.invalidPrivateNode;
    }
    if (decoded.version === HdKeyVersion.mainnetPrivateKey) {
        return {
            network: 'mainnet',
            node: decoded.node,
        };
    }
    return {
        network: 'testnet',
        node: decoded.node,
    };
};
/**
 * Decode an HD public key as defined by BIP32.
 *
 * This method is similar to `decodeHdKey` but ensures that the result is an
 * HD public node. Decoding error messages are returned as strings.
 *
 * @param crypto - an implementation of sha256
 * @param hdPublicKey - a BIP32 HD public key
 */
const decodeHdPublicKey = (crypto, hdPublicKey) => {
    const decoded = decodeHdKey(crypto, hdPublicKey);
    if (typeof decoded === 'string')
        return decoded;
    if (decoded.version === HdKeyVersion.mainnetPublicKey) {
        return {
            network: 'mainnet',
            node: decoded.node,
        };
    }
    if (decoded.version === HdKeyVersion.testnetPublicKey) {
        return {
            network: 'testnet',
            node: decoded.node,
        };
    }
    return HdKeyDecodingError.publicKeyExpected;
};
/**
 * Encode an HD private key (as defined by BIP32) given an HD private node.
 *
 * @param crypto - an implementation of sha256
 * @param keyParameters - a valid HD private node and the network for which to
 * encode the key
 */
const encodeHdPrivateKey = (crypto, keyParameters) => {
    const version = (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.numberToBinUint32BE)(keyParameters.network === 'mainnet'
        ? HdKeyVersion.mainnetPrivateKey
        : HdKeyVersion.testnetPrivateKey);
    const depth = Uint8Array.of(keyParameters.node.depth);
    const childIndex = (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.numberToBinUint32BE)(keyParameters.node.childIndex);
    const isPrivateKey = Uint8Array.of(0x00);
    const payload = (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.flattenBinArray)([
        version,
        depth,
        keyParameters.node.parentFingerprint,
        childIndex,
        keyParameters.node.chainCode,
        isPrivateKey,
        keyParameters.node.privateKey,
    ]);
    const checksumLength = 4;
    const checksum = crypto.sha256
        .hash(crypto.sha256.hash(payload))
        .slice(0, checksumLength);
    return (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.binToBase58)((0,_format_format__WEBPACK_IMPORTED_MODULE_2__.flattenBinArray)([payload, checksum]));
};
/**
 * Encode an HD public key (as defined by BIP32) given an HD public node.
 *
 * @param crypto - an implementation of sha256
 * @param keyParameters - an HD public node and the network for which to encode
 * the key
 */
const encodeHdPublicKey = (crypto, keyParameters) => {
    const version = (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.numberToBinUint32BE)(keyParameters.network === 'mainnet'
        ? HdKeyVersion.mainnetPublicKey
        : HdKeyVersion.testnetPublicKey);
    const depth = Uint8Array.of(keyParameters.node.depth);
    const childIndex = (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.numberToBinUint32BE)(keyParameters.node.childIndex);
    const payload = (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.flattenBinArray)([
        version,
        depth,
        keyParameters.node.parentFingerprint,
        childIndex,
        keyParameters.node.chainCode,
        keyParameters.node.publicKey,
    ]);
    const checksumLength = 4;
    const checksum = crypto.sha256
        .hash(crypto.sha256.hash(payload))
        .slice(0, checksumLength);
    return (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.binToBase58)((0,_format_format__WEBPACK_IMPORTED_MODULE_2__.flattenBinArray)([payload, checksum]));
};
/**
 * Derive the HD public node of an HD private node.
 *
 * Though private keys cannot be derived from HD public keys, sharing HD public
 * keys still carries risk. Along with allowing an attacker to associate wallet
 * addresses together (breaking privacy), should an attacker gain knowledge of a
 * single child private key, **it's possible to derive all parent HD private
 * keys**. See `crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode` for
 * details.
 *
 * @param crypto - an implementation of secp256k1 compressed public key
 * derivation (e.g. `instantiateSecp256k1`)
 * @param node - a valid HD private node
 */
const deriveHdPublicNode = (crypto, node) => {
    return {
        chainCode: node.chainCode,
        childIndex: node.childIndex,
        depth: node.depth,
        parentFingerprint: node.parentFingerprint,
        ...(node.parentIdentifier === undefined
            ? {}
            : { parentIdentifier: node.parentIdentifier }),
        publicKey: crypto.secp256k1.derivePublicKeyCompressed(node.privateKey),
    };
};
/**
 * An error in the derivation of child HD public or private nodes.
 */
var HdNodeDerivationError;
(function (HdNodeDerivationError) {
    HdNodeDerivationError["childIndexExceedsMaximum"] = "HD key derivation error: child index exceeds maximum (4294967295).";
    HdNodeDerivationError["nextChildIndexRequiresHardenedAlgorithm"] = "HD key derivation error: an incredibly rare HMAC-SHA512 result occurred, and incrementing the child index would require switching to the hardened algorithm.";
    HdNodeDerivationError["hardenedDerivationRequiresPrivateNode"] = "HD key derivation error: derivation for hardened child indexes (indexes greater than or equal to 2147483648) requires an HD private node.";
    HdNodeDerivationError["invalidDerivationPath"] = "HD key derivation error: invalid derivation path \u2013 paths must begin with \"m\" or \"M\" and contain only forward slashes (\"/\"), apostrophes (\"'\"), or positive child index numbers.";
    HdNodeDerivationError["invalidPrivateDerivationPrefix"] = "HD key derivation error: private derivation paths must begin with \"m\".";
    HdNodeDerivationError["invalidPublicDerivationPrefix"] = "HD key derivation error: public derivation paths must begin with \"M\".";
})(HdNodeDerivationError || (HdNodeDerivationError = {}));
/**
 * Derive a child HD private node from an HD private node.
 *
 * To derive a child HD public node, use `deriveHdPublicNode` on the result of
 * this method. If the child uses a non-hardened index, it's also possible to
 * use `deriveHdPublicNodeChild`.
 *
 * @privateRemarks
 * The `Secp256k1.addTweakPrivateKey` method throws if the tweak is out of range
 * or if the resulting private key would be invalid. The procedure to handle
 * this error is standardized by BIP32: return the HD node at the next child
 * index. (Regardless, this scenario is incredibly unlikely without a weakness
 * in HMAC-SHA512.)
 *
 * @param crypto - implementations of sha256, ripemd160, secp256k1 compressed
 * public key derivation, and secp256k1 private key "tweak addition"
 * (application of the EC group operation) – these are available via
 * `instantiateBIP32Crypto`
 * @param node - the valid HD private node from which to derive the child node
 * @param index - the index at which to derive the child node - indexes greater
 * than or equal to the hardened index offset (`0x80000000`/`2147483648`) are
 * derived using the "hardened" derivation algorithm
 */
// eslint-disable-next-line complexity
const deriveHdPrivateNodeChild = (crypto, node, index) => {
    const maximumIndex = 0xffffffff;
    if (index > maximumIndex) {
        return HdNodeDerivationError.childIndexExceedsMaximum;
    }
    const hardenedIndexOffset = 0x80000000;
    const useHardenedAlgorithm = index >= hardenedIndexOffset;
    const keyMaterial = useHardenedAlgorithm
        ? node.privateKey
        : crypto.secp256k1.derivePublicKeyCompressed(node.privateKey);
    const serialization = Uint8Array.from([
        ...(useHardenedAlgorithm ? [0x00] : []),
        ...keyMaterial,
        ...(0,_format_format__WEBPACK_IMPORTED_MODULE_2__.numberToBinUint32BE)(index),
    ]);
    const derivation = (0,_crypto_hmac__WEBPACK_IMPORTED_MODULE_1__.hmacSha512)(crypto.sha512, node.chainCode, serialization);
    const tweakValueLength = 32;
    const tweakValue = derivation.slice(0, tweakValueLength);
    const nextChainCode = derivation.slice(tweakValueLength);
    // eslint-disable-next-line functional/no-try-statement
    try {
        const nextPrivateKey = crypto.secp256k1.addTweakPrivateKey(node.privateKey, tweakValue);
        const parentIdentifier = deriveHdPrivateNodeIdentifier(crypto, node);
        const parentFingerprintLength = 4;
        return {
            chainCode: nextChainCode,
            childIndex: index,
            depth: node.depth + 1,
            parentFingerprint: parentIdentifier.slice(0, parentFingerprintLength),
            parentIdentifier,
            privateKey: nextPrivateKey,
            valid: true,
        };
    }
    catch (error) /* istanbul ignore next - testing requires >2^127 brute force */ {
        if (index === hardenedIndexOffset - 1) {
            return HdNodeDerivationError.nextChildIndexRequiresHardenedAlgorithm;
        }
        return deriveHdPrivateNodeChild(crypto, node, index + 1);
    }
};
/**
 * Derive a non-hardened child HD public node from an HD public node.
 *
 * Because hardened derivation also requires knowledge of the parent private
 * node, it's not possible to use an HD public node to derive a hardened child
 * HD public node.
 *
 * Though private keys cannot be derived from HD public keys, sharing HD public
 * keys still carries risk. Along with allowing an attacker to associate wallet
 * addresses together (breaking privacy), should an attacker gain knowledge of a
 * single child private key, **it's possible to derive all parent HD private
 * keys**. See `crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode` for
 * details.
 *
 * @privateRemarks
 * The `Secp256k1.addTweakPublicKeyCompressed` method throws if the tweak is out
 * of range or if the resulting public key would be invalid. The procedure to
 * handle this error is standardized by BIP32: return the HD node at the next
 * child index. (Regardless, this scenario is incredibly unlikely without a
 * weakness in HMAC-SHA512.)
 *
 * @param crypto - implementations of sha256, sha512, ripemd160, and secp256k1
 * compressed public key "tweak addition" (application of the EC group
 * operation) – these are available via `instantiateBIP32Crypto`
 * @param node - the HD public node from which to derive the child public node
 * @param index - the index at which to derive the child node
 */
const deriveHdPublicNodeChild = (crypto, node, index) => {
    const hardenedIndexOffset = 0x80000000;
    if (index >= hardenedIndexOffset) {
        return HdNodeDerivationError.hardenedDerivationRequiresPrivateNode;
    }
    const serialization = Uint8Array.from([
        ...node.publicKey,
        ...(0,_format_format__WEBPACK_IMPORTED_MODULE_2__.numberToBinUint32BE)(index),
    ]);
    const derivation = (0,_crypto_hmac__WEBPACK_IMPORTED_MODULE_1__.hmacSha512)(crypto.sha512, node.chainCode, serialization);
    const tweakValueLength = 32;
    const tweakValue = derivation.slice(0, tweakValueLength);
    const nextChainCode = derivation.slice(tweakValueLength);
    // eslint-disable-next-line functional/no-try-statement
    try {
        const nextPublicKey = crypto.secp256k1.addTweakPublicKeyCompressed(node.publicKey, tweakValue);
        const parentIdentifier = deriveHdPublicNodeIdentifier(crypto, node);
        const parentFingerprintLength = 4;
        return {
            chainCode: nextChainCode,
            childIndex: index,
            depth: node.depth + 1,
            parentFingerprint: parentIdentifier.slice(0, parentFingerprintLength),
            parentIdentifier,
            publicKey: nextPublicKey,
        };
    }
    catch (error) /* istanbul ignore next - testing requires >2^127 brute force */ {
        if (index === hardenedIndexOffset - 1) {
            return HdNodeDerivationError.nextChildIndexRequiresHardenedAlgorithm;
        }
        return deriveHdPublicNodeChild(crypto, node, index + 1);
    }
};
/**
 * Derive a child HD node from a parent node given a derivation path. The
 * resulting node is the same type as the parent node (private nodes return
 * private nodes, public nodes return public nodes).
 *
 * @remarks
 * The derivation path uses the notation specified in BIP32:
 *
 * The first character must be either `m` for private derivation or `M` for
 * public derivation, followed by sets of `/` and a number representing the
 * child index used in the derivation at that depth. Hardened derivation is
 * represented by a trailing `'`, and may only appear in private derivation
 * paths (hardened derivation requires knowledge of the private key). Hardened
 * child indexes are represented with the hardened index offset (`2147483648`)
 * subtracted.
 *
 * For example, `m/0/1'/2` uses private derivation (`m`), with child indexes in
 * the following order:
 *
 * `derivePrivate(derivePrivate(derivePrivate(node, 0), 2147483648 + 1), 2)`
 *
 * Likewise, `M/3/4/5` uses public derivation (`M`), with child indexes in the
 * following order:
 *
 * `derivePublic(derivePublic(derivePublic(node, 3), 4), 5)`
 *
 * Because hardened derivation requires a private node, paths which specify
 * public derivation (`M`) using hardened derivation (`'`) will return an error.
 * To derive the public node associated with a child private node which requires
 * hardened derivation, begin with private derivation, then provide the result
 * to `deriveHdPublicNode`.
 *
 * @param crypto - implementations of sha256, sha512, ripemd160, and secp256k1
 * derivation functions – these are available via `instantiateBIP32Crypto`
 * @param node - the HD node from which to begin the derivation (for paths
 * beginning with `m`, an `HdPrivateNodeValid`; for paths beginning with `M`, an
 * `HdPublicNode`)
 * @param path - the BIP32 derivation path, e.g. `m/0/1'/2` or `M/3/4/5`
 */
// eslint-disable-next-line complexity
const deriveHdPath = (crypto, node, path) => {
    const validDerivationPath = /^[mM](?:\/[0-9]+'?)*$/u;
    if (!validDerivationPath.test(path)) {
        return HdNodeDerivationError.invalidDerivationPath;
    }
    const parsed = path.split('/');
    const isPrivateDerivation = 'privateKey' in node;
    if (isPrivateDerivation && parsed[0] !== 'm') {
        return HdNodeDerivationError.invalidPrivateDerivationPrefix;
    }
    if (!isPrivateDerivation && parsed[0] !== 'M') {
        return HdNodeDerivationError.invalidPublicDerivationPrefix;
    }
    const base = 10;
    const hardenedIndexOffset = 0x80000000;
    const indexes = parsed
        .slice(1)
        .map((index) => index.endsWith("'")
        ? parseInt(index.slice(0, -1), base) + hardenedIndexOffset
        : parseInt(index, base));
    return (isPrivateDerivation
        ? indexes.reduce((result, nextIndex) => typeof result === 'string'
            ? result
            : deriveHdPrivateNodeChild(crypto, result, nextIndex), node // eslint-disable-line @typescript-eslint/prefer-reduce-type-parameter
        )
        : indexes.reduce((result, nextIndex) => typeof result === 'string'
            ? result
            : deriveHdPublicNodeChild(crypto, result, nextIndex), node // eslint-disable-line @typescript-eslint/prefer-reduce-type-parameter
        ));
};
var HdNodeCrackingError;
(function (HdNodeCrackingError) {
    HdNodeCrackingError["cannotCrackHardenedDerivation"] = "HD node cracking error: cannot crack an HD parent node using hardened child node.";
})(HdNodeCrackingError || (HdNodeCrackingError = {}));
/**
 * Derive the HD private node from a HD public node, given any non-hardened
 * child private node.
 *
 * @remarks
 * This exploits the "non-hardened" BIP32 derivation algorithm. Because
 * non-hardened derivation only requires knowledge of the "chain code" (rather
 * than requiring knowledge of the parent private key) it's possible to
 * calculate the value by which the parent private key is "tweaked" to arrive at
 * the child private key. Since we have the child private key, we simply
 * subtract this "tweaked" amount to get back to the parent private key.
 *
 * The BIP32 "hardened" derivation algorithm is designed to address this
 * weakness. Using hardened derivation, child private nodes can be shared
 * without risk of leaking the parent private node, but this comes at the cost
 * of public node derivation. Given only a parent public node, it is not
 * possible to derive hardened child public keys, so applications must choose
 * between support for HD public node derivation or support for sharing child
 * private nodes.
 *
 * @param crypto - an implementation of sha512
 * @param parentPublicNode - the parent HD public node for which to derive a
 * private node
 * @param childPrivateNode - any non-hardened child private node of the parent
 * node (only the `privateKey` and the `childIndex` are required)
 */
const crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode = (crypto, parentPublicNode, childPrivateNode) => {
    const hardenedIndexOffset = 0x80000000;
    if (childPrivateNode.childIndex >= hardenedIndexOffset) {
        return HdNodeCrackingError.cannotCrackHardenedDerivation;
    }
    const serialization = Uint8Array.from([
        ...parentPublicNode.publicKey,
        ...(0,_format_format__WEBPACK_IMPORTED_MODULE_2__.numberToBinUint32BE)(childPrivateNode.childIndex),
    ]);
    const derivation = (0,_crypto_hmac__WEBPACK_IMPORTED_MODULE_1__.hmacSha512)(crypto.sha512, parentPublicNode.chainCode, serialization);
    const tweakValueLength = 32;
    const tweakValue = (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.binToBigIntUint256BE)(derivation.slice(0, tweakValueLength));
    const childPrivateValue = (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.binToBigIntUint256BE)(childPrivateNode.privateKey);
    const secp256k1OrderN = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');
    const trueMod = (n, m) => ((n % m) + m) % m;
    const parentPrivateValue = trueMod(childPrivateValue - tweakValue, secp256k1OrderN);
    const privateKey = (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.bigIntToBinUint256BEClamped)(parentPrivateValue);
    return {
        chainCode: parentPublicNode.chainCode,
        childIndex: parentPublicNode.childIndex,
        depth: parentPublicNode.depth,
        parentFingerprint: parentPublicNode.parentFingerprint,
        ...(parentPublicNode.parentIdentifier === undefined
            ? {}
            : { parentIdentifier: parentPublicNode.parentIdentifier }),
        privateKey,
        valid: true,
    };
};
//# sourceMappingURL=hd-key.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/key/key-utils.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/key/key-utils.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export generatePrivateKey [provided] [no usage info] [missing usage info prevents renaming] */
/*! export validateSecp256k1PrivateKey [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "validateSecp256k1PrivateKey": () => /* binding */ validateSecp256k1PrivateKey,
/* harmony export */   "generatePrivateKey": () => /* binding */ generatePrivateKey
/* harmony export */ });
/**
 * Verify that a private key is valid for the Secp256k1 curve. Returns `true`
 * for success, or `false` on failure.
 *
 * Private keys are 256-bit numbers encoded as a 32-byte, big-endian Uint8Array.
 * Nearly every 256-bit number is a valid secp256k1 private key. Specifically,
 * any 256-bit number greater than `0x01` and less than
 * `0xFFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFE BAAE DCE6 AF48 A03B BFD2 5E8C D036 4140`
 * is a valid private key. This range is part of the definition of the
 * secp256k1 elliptic curve parameters.
 *
 * This method does not require the `Secp256k1` WASM implementation (available
 * via `instantiateSecp256k1`).
 */
const validateSecp256k1PrivateKey = (privateKey) => {
    const privateKeyLength = 32;
    if (privateKey.length !== privateKeyLength ||
        privateKey.every((value) => value === 0)) {
        return false;
    }
    /**
     * The largest possible Secp256k1 private key – equal to the order of the
     * Secp256k1 curve minus one.
     */
    // prettier-ignore
    const maximumSecp256k1PrivateKey = [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 186, 174, 220, 230, 175, 72, 160, 59, 191, 210, 94, 140, 208, 54, 65, 63]; // eslint-disable-line @typescript-eslint/no-magic-numbers
    const firstDifference = privateKey.findIndex((value, i) => value !== maximumSecp256k1PrivateKey[i]);
    if (firstDifference === -1 ||
        privateKey[firstDifference] < maximumSecp256k1PrivateKey[firstDifference]) {
        return true;
    }
    return false;
};
/**
 * Securely generate a valid Secp256k1 private key given a secure source of
 * randomness.
 *
 * **Node.js Usage**
 * ```ts
 * import { randomBytes } from 'crypto';
 * import { generatePrivateKey } from '@bitauth/libauth';
 *
 * const key = generatePrivateKey(secp256k1, () => randomBytes(32));
 * ```
 *
 * **Browser Usage**
 * ```ts
 * import { generatePrivateKey } from '@bitauth/libauth';
 *
 * const key = generatePrivateKey(secp256k1, () =>
 *   window.crypto.getRandomValues(new Uint8Array(32))
 * );
 * ```
 *
 * @param secp256k1 - an implementation of Secp256k1
 * @param secureRandom - a method which returns a securely-random 32-byte
 * Uint8Array
 */
const generatePrivateKey = (secureRandom) => {
    // eslint-disable-next-line functional/no-let, @typescript-eslint/init-declarations
    let maybeKey;
    // eslint-disable-next-line functional/no-loop-statement
    do {
        // eslint-disable-next-line functional/no-expression-statement
        maybeKey = secureRandom();
    } while (!validateSecp256k1PrivateKey(maybeKey));
    return maybeKey;
};
//# sourceMappingURL=key-utils.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/key/key.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/key/key.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export HdKeyDecodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .HdKeyDecodingError */
/*! export HdKeyVersion [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .HdKeyVersion */
/*! export HdNodeCrackingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .HdNodeCrackingError */
/*! export HdNodeDerivationError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .HdNodeDerivationError */
/*! export WalletImportFormatError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/wallet-import-format.js .WalletImportFormatError */
/*! export crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode */
/*! export decodeHdKey [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .decodeHdKey */
/*! export decodeHdPrivateKey [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .decodeHdPrivateKey */
/*! export decodeHdPublicKey [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .decodeHdPublicKey */
/*! export decodePrivateKeyWif [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/wallet-import-format.js .decodePrivateKeyWif */
/*! export deriveHdPath [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .deriveHdPath */
/*! export deriveHdPrivateNodeChild [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .deriveHdPrivateNodeChild */
/*! export deriveHdPrivateNodeFromSeed [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .deriveHdPrivateNodeFromSeed */
/*! export deriveHdPrivateNodeIdentifier [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .deriveHdPrivateNodeIdentifier */
/*! export deriveHdPublicNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .deriveHdPublicNode */
/*! export deriveHdPublicNodeChild [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .deriveHdPublicNodeChild */
/*! export deriveHdPublicNodeIdentifier [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .deriveHdPublicNodeIdentifier */
/*! export encodeHdPrivateKey [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .encodeHdPrivateKey */
/*! export encodeHdPublicKey [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .encodeHdPublicKey */
/*! export encodePrivateKeyWif [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/wallet-import-format.js .encodePrivateKeyWif */
/*! export generatePrivateKey [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/key-utils.js .generatePrivateKey */
/*! export instantiateBIP32Crypto [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .instantiateBIP32Crypto */
/*! export validateSecp256k1PrivateKey [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/key-utils.js .validateSecp256k1PrivateKey */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HdKeyDecodingError": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.HdKeyDecodingError,
/* harmony export */   "HdKeyVersion": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.HdKeyVersion,
/* harmony export */   "HdNodeCrackingError": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.HdNodeCrackingError,
/* harmony export */   "HdNodeDerivationError": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.HdNodeDerivationError,
/* harmony export */   "crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode,
/* harmony export */   "decodeHdKey": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.decodeHdKey,
/* harmony export */   "decodeHdPrivateKey": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.decodeHdPrivateKey,
/* harmony export */   "decodeHdPublicKey": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.decodeHdPublicKey,
/* harmony export */   "deriveHdPath": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.deriveHdPath,
/* harmony export */   "deriveHdPrivateNodeChild": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.deriveHdPrivateNodeChild,
/* harmony export */   "deriveHdPrivateNodeFromSeed": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.deriveHdPrivateNodeFromSeed,
/* harmony export */   "deriveHdPrivateNodeIdentifier": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.deriveHdPrivateNodeIdentifier,
/* harmony export */   "deriveHdPublicNode": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.deriveHdPublicNode,
/* harmony export */   "deriveHdPublicNodeChild": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.deriveHdPublicNodeChild,
/* harmony export */   "deriveHdPublicNodeIdentifier": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.deriveHdPublicNodeIdentifier,
/* harmony export */   "encodeHdPrivateKey": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.encodeHdPrivateKey,
/* harmony export */   "encodeHdPublicKey": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.encodeHdPublicKey,
/* harmony export */   "instantiateBIP32Crypto": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.instantiateBIP32Crypto,
/* harmony export */   "generatePrivateKey": () => /* reexport safe */ _key_utils__WEBPACK_IMPORTED_MODULE_1__.generatePrivateKey,
/* harmony export */   "validateSecp256k1PrivateKey": () => /* reexport safe */ _key_utils__WEBPACK_IMPORTED_MODULE_1__.validateSecp256k1PrivateKey,
/* harmony export */   "WalletImportFormatError": () => /* reexport safe */ _wallet_import_format__WEBPACK_IMPORTED_MODULE_2__.WalletImportFormatError,
/* harmony export */   "decodePrivateKeyWif": () => /* reexport safe */ _wallet_import_format__WEBPACK_IMPORTED_MODULE_2__.decodePrivateKeyWif,
/* harmony export */   "encodePrivateKeyWif": () => /* reexport safe */ _wallet_import_format__WEBPACK_IMPORTED_MODULE_2__.encodePrivateKeyWif
/* harmony export */ });
/* harmony import */ var _hd_key__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hd-key */ "./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js");
/* harmony import */ var _key_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./key-utils */ "./node_modules/@bitauth/libauth/build/module/lib/key/key-utils.js");
/* harmony import */ var _wallet_import_format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./wallet-import-format */ "./node_modules/@bitauth/libauth/build/module/lib/key/wallet-import-format.js");



//# sourceMappingURL=key.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/key/wallet-import-format.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/key/wallet-import-format.js ***!
  \************************************************************************************/
/*! namespace exports */
/*! export WalletImportFormatError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodePrivateKeyWif [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodePrivateKeyWif [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WalletImportFormatError": () => /* binding */ WalletImportFormatError,
/* harmony export */   "encodePrivateKeyWif": () => /* binding */ encodePrivateKeyWif,
/* harmony export */   "decodePrivateKeyWif": () => /* binding */ decodePrivateKeyWif
/* harmony export */ });
/* harmony import */ var _address_address__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../address/address */ "./node_modules/@bitauth/libauth/build/module/lib/address/address.js");

var WalletImportFormatError;
(function (WalletImportFormatError) {
    WalletImportFormatError["incorrectLength"] = "The WIF private key payload is not the correct length.";
})(WalletImportFormatError || (WalletImportFormatError = {}));
/**
 * Encode a private key using Wallet Import Format (WIF).
 *
 * WIF encodes the 32-byte private key, a 4-byte checksum, and a `type`
 * indicating the intended usage for the private key. See
 * `WalletImportFormatType` for details.
 *
 * @remarks
 * WIF-encoding uses the Base58Address format with version
 * `Base58AddressFormatVersion.wif` (`128`/`0x80`) or
 * `Base58AddressFormatVersion.wifTestnet` (`239`/`0xef`), respectively.
 *
 * To indicate that the private key is intended for use in a P2PKH address using
 * the compressed form of its derived public key, a `0x01` is appended to the
 * payload prior to encoding. For the uncompressed construction, the extra byte
 * is omitted.
 *
 * @param sha256 - an implementation of sha256 (a universal implementation is
 * available via `instantiateSha256`)
 * @param privateKey - a 32-byte Secp256k1 ECDSA private key
 * @param type - the intended usage of the private key (e.g. `mainnet` or
 * `testnet`)
 */
const encodePrivateKeyWif = (sha256, privateKey, type) => {
    const compressedByte = 0x01;
    const mainnet = type === 'mainnet' || type === 'mainnet-uncompressed';
    const compressed = type === 'mainnet' || type === 'testnet';
    const payload = compressed
        ? Uint8Array.from([...privateKey, compressedByte])
        : privateKey;
    return (0,_address_address__WEBPACK_IMPORTED_MODULE_0__.encodeBase58AddressFormat)(sha256, mainnet
        ? _address_address__WEBPACK_IMPORTED_MODULE_0__.Base58AddressFormatVersion.wif
        : _address_address__WEBPACK_IMPORTED_MODULE_0__.Base58AddressFormatVersion.wifTestnet, payload);
};
/**
 * Decode a private key using Wallet Import Format (WIF). See
 * `encodePrivateKeyWif` for details.
 *
 * @param sha256 - an implementation of sha256 (a universal implementation is
 * available via `instantiateSha256`)
 * @param wifKey - the private key to decode (in Wallet Import Format)
 */
// eslint-disable-next-line complexity
const decodePrivateKeyWif = (sha256, wifKey) => {
    const compressedPayloadLength = 33;
    const decoded = (0,_address_address__WEBPACK_IMPORTED_MODULE_0__.decodeBase58AddressFormat)(sha256, wifKey);
    if (typeof decoded === 'string')
        return decoded;
    const mainnet = decoded.version === _address_address__WEBPACK_IMPORTED_MODULE_0__.Base58AddressFormatVersion.wif;
    const compressed = decoded.payload.length === compressedPayloadLength;
    const privateKey = compressed
        ? decoded.payload.slice(0, -1)
        : decoded.payload;
    const type = mainnet
        ? compressed
            ? 'mainnet'
            : 'mainnet-uncompressed'
        : compressed
            ? 'testnet'
            : 'testnet-uncompressed';
    return { privateKey, type };
};
//# sourceMappingURL=wallet-import-format.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/lib.js":
/*!***************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/lib.js ***!
  \***************************************************************/
/*! namespace exports */
/*! export AddressType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .AddressType */
/*! export Base58AddressError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .Base58AddressError */
/*! export Base58AddressFormatVersion [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .Base58AddressFormatVersion */
/*! export Bech32DecodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .Bech32DecodingError */
/*! export BitRegroupingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .BitRegroupingError */
/*! export CashAddressCorrectionError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressCorrectionError */
/*! export CashAddressDecodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressDecodingError */
/*! export CashAddressEncodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressEncodingError */
/*! export CashAddressNetworkPrefix [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressNetworkPrefix */
/*! export CashAddressType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressType */
/*! export CashAddressVersionByte [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressVersionByte */
/*! export CashAddressVersionByteDecodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressVersionByteDecodingError */
/*! export CompilerDefaults [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export CompressionFlag [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export ContextFlag [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export HdKeyDecodingError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export HdKeyVersion [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export HdNodeCrackingError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export HdNodeDerivationError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export LockingBytecodeEncodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .LockingBytecodeEncodingError */
/*! export SigningSerializationAlgorithmIdentifier [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export TransactionDecodingError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export WalletImportFormatError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export addressContentsToLockingBytecode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .addressContentsToLockingBytecode */
/*! export attemptCashAddressFormatErrorCorrection [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .attemptCashAddressFormatErrorCorrection */
/*! export attemptCompilerOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export authenticationTemplateToCompilerBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export base58AddressToLockingBytecode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .base58AddressToLockingBytecode */
/*! export bech32CharacterSet [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .bech32CharacterSet */
/*! export bech32CharacterSetIndex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .bech32CharacterSetIndex */
/*! export bech32PaddedToBin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .bech32PaddedToBin */
/*! export binToBech32Padded [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .binToBech32Padded */
/*! export cashAddressBitToSize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .cashAddressBitToSize */
/*! export cashAddressChecksumToUint5Array [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .cashAddressChecksumToUint5Array */
/*! export cashAddressPolynomialModulo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .cashAddressPolynomialModulo */
/*! export cashAddressPolynomialToCashAddress [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .cashAddressPolynomialToCashAddress */
/*! export cashAddressSizeToBit [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .cashAddressSizeToBit */
/*! export cashAddressToLockingBytecode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .cashAddressToLockingBytecode */
/*! export compileInputTemplate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compileOutputTemplate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationAddressData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationAttemptBytecodeResolution [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationCurrentBlockHeight [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationCurrentBlockTime [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHdKeyEcdsaDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHdKeyEcdsaSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHdKeyPublicKeyCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHdKeySchnorrDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHdKeySchnorrSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperAddressIndex [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperCompileScript [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperComputeDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperComputeSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperDeriveHdKeyPrivate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperDeriveHdPrivateNode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperGenerateCoveredBytecode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperHdKeyDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperHdKeySignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperKeyDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperKeySignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperUnknownEntity [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationKeyEcdsaDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationKeyEcdsaSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationKeyPublicKeyCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationKeySchnorrDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationKeySchnorrSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationRequires [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationCorrespondingOutput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationCorrespondingOutputHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationCoveredBytecode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationCoveredBytecodeLength [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationFullBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationLocktime [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationOutpointIndex [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationOutpointTransactionHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationOutputValue [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationSequenceNumber [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionOutpoints [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionOutpointsHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionOutputs [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionOutputsHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionSequenceNumbers [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionSequenceNumbersHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationVersion [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationWalletData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationsBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationsCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createCompilerBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeBase58Address [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .decodeBase58Address */
/*! export decodeBase58AddressFormat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .decodeBase58AddressFormat */
/*! export decodeBech32 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .decodeBech32 */
/*! export decodeCashAddress [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .decodeCashAddress */
/*! export decodeCashAddressFormat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .decodeCashAddressFormat */
/*! export decodeCashAddressFormatWithoutPrefix [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .decodeCashAddressFormatWithoutPrefix */
/*! export decodeCashAddressVersionByte [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .decodeCashAddressVersionByte */
/*! export decodeHdKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeHdPrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeHdPublicKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodePrivateKeyWif [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeTransactionUnsafe [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export default [not provided] [no usage info] [missing usage info prevents renaming] */
/*! export deriveHdPath [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPrivateNodeChild [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPrivateNodeFromSeed [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPrivateNodeIdentifier [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPublicNode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPublicNodeChild [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPublicNodeIdentifier [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeBase58Address [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .encodeBase58Address */
/*! export encodeBase58AddressFormat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .encodeBase58AddressFormat */
/*! export encodeBech32 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .encodeBech32 */
/*! export encodeCashAddress [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .encodeCashAddress */
/*! export encodeCashAddressFormat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .encodeCashAddressFormat */
/*! export encodeCashAddressVersionByte [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .encodeCashAddressVersionByte */
/*! export encodeHdPrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeHdPublicKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeInput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeInputs [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutpoints [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutputsForSigning [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutputsForTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodePrivateKeyWif [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeSequenceNumbersForSigning [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extractMissingVariables [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extractResolvedVariables [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export generatePrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export generateTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getEmbeddedRipemd160Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getEmbeddedSecp256k1Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getEmbeddedSha1Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getEmbeddedSha256Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getEmbeddedSha512Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getTransactionHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getTransactionHashBE [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getTransactionHashLE [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export hmacSha256 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export hmacSha512 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateBIP32Crypto [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateHmacFunction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateRipemd160 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateRipemd160Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateRustWasm [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSecp256k1 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSecp256k1Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSecp256k1Wasm [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSecp256k1WasmBytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha1 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha1Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha256 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha256Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha512 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha512Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export invalidSatoshis [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isBech32CharacterSet [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .isBech32CharacterSet */
/*! export lockingBytecodeToAddressContents [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .lockingBytecodeToAddressContents */
/*! export lockingBytecodeToBase58Address [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .lockingBytecodeToBase58Address */
/*! export lockingBytecodeToCashAddress [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .lockingBytecodeToCashAddress */
/*! export maskCashAddressPrefix [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .maskCashAddressPrefix */
/*! export readTransactionInput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export readTransactionOutput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export regroupBits [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .regroupBits */
/*! export ripemd160Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export safelyExtendCompilationData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export sha1Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export sha256Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export sha512Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export validateSecp256k1PrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export verifyTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! other exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AddressType": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.AddressType,
/* harmony export */   "Base58AddressError": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.Base58AddressError,
/* harmony export */   "Base58AddressFormatVersion": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.Base58AddressFormatVersion,
/* harmony export */   "Bech32DecodingError": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.Bech32DecodingError,
/* harmony export */   "BitRegroupingError": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.BitRegroupingError,
/* harmony export */   "CashAddressCorrectionError": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.CashAddressCorrectionError,
/* harmony export */   "CashAddressDecodingError": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.CashAddressDecodingError,
/* harmony export */   "CashAddressEncodingError": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.CashAddressEncodingError,
/* harmony export */   "CashAddressNetworkPrefix": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.CashAddressNetworkPrefix,
/* harmony export */   "CashAddressType": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.CashAddressType,
/* harmony export */   "CashAddressVersionByte": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.CashAddressVersionByte,
/* harmony export */   "CashAddressVersionByteDecodingError": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.CashAddressVersionByteDecodingError,
/* harmony export */   "LockingBytecodeEncodingError": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.LockingBytecodeEncodingError,
/* harmony export */   "addressContentsToLockingBytecode": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.addressContentsToLockingBytecode,
/* harmony export */   "attemptCashAddressFormatErrorCorrection": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.attemptCashAddressFormatErrorCorrection,
/* harmony export */   "base58AddressToLockingBytecode": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.base58AddressToLockingBytecode,
/* harmony export */   "bech32CharacterSet": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.bech32CharacterSet,
/* harmony export */   "bech32CharacterSetIndex": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.bech32CharacterSetIndex,
/* harmony export */   "bech32PaddedToBin": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.bech32PaddedToBin,
/* harmony export */   "binToBech32Padded": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.binToBech32Padded,
/* harmony export */   "cashAddressBitToSize": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.cashAddressBitToSize,
/* harmony export */   "cashAddressChecksumToUint5Array": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.cashAddressChecksumToUint5Array,
/* harmony export */   "cashAddressPolynomialModulo": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.cashAddressPolynomialModulo,
/* harmony export */   "cashAddressPolynomialToCashAddress": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.cashAddressPolynomialToCashAddress,
/* harmony export */   "cashAddressSizeToBit": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.cashAddressSizeToBit,
/* harmony export */   "cashAddressToLockingBytecode": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.cashAddressToLockingBytecode,
/* harmony export */   "decodeBase58Address": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.decodeBase58Address,
/* harmony export */   "decodeBase58AddressFormat": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.decodeBase58AddressFormat,
/* harmony export */   "decodeBech32": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.decodeBech32,
/* harmony export */   "decodeCashAddress": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.decodeCashAddress,
/* harmony export */   "decodeCashAddressFormat": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.decodeCashAddressFormat,
/* harmony export */   "decodeCashAddressFormatWithoutPrefix": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.decodeCashAddressFormatWithoutPrefix,
/* harmony export */   "decodeCashAddressVersionByte": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.decodeCashAddressVersionByte,
/* harmony export */   "encodeBase58Address": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.encodeBase58Address,
/* harmony export */   "encodeBase58AddressFormat": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.encodeBase58AddressFormat,
/* harmony export */   "encodeBech32": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.encodeBech32,
/* harmony export */   "encodeCashAddress": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.encodeCashAddress,
/* harmony export */   "encodeCashAddressFormat": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.encodeCashAddressFormat,
/* harmony export */   "encodeCashAddressVersionByte": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.encodeCashAddressVersionByte,
/* harmony export */   "isBech32CharacterSet": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.isBech32CharacterSet,
/* harmony export */   "lockingBytecodeToAddressContents": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.lockingBytecodeToAddressContents,
/* harmony export */   "lockingBytecodeToBase58Address": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.lockingBytecodeToBase58Address,
/* harmony export */   "lockingBytecodeToCashAddress": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.lockingBytecodeToCashAddress,
/* harmony export */   "maskCashAddressPrefix": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.maskCashAddressPrefix,
/* harmony export */   "regroupBits": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.regroupBits,
/* harmony export */   "CompressionFlag": () => /* reexport safe */ _bin_bin__WEBPACK_IMPORTED_MODULE_2__.CompressionFlag,
/* harmony export */   "ContextFlag": () => /* reexport safe */ _bin_bin__WEBPACK_IMPORTED_MODULE_2__.ContextFlag,
/* harmony export */   "getEmbeddedSecp256k1Binary": () => /* reexport safe */ _bin_bin__WEBPACK_IMPORTED_MODULE_2__.getEmbeddedSecp256k1Binary,
/* harmony export */   "instantiateRustWasm": () => /* reexport safe */ _bin_bin__WEBPACK_IMPORTED_MODULE_2__.instantiateRustWasm,
/* harmony export */   "instantiateSecp256k1Wasm": () => /* reexport safe */ _bin_bin__WEBPACK_IMPORTED_MODULE_2__.instantiateSecp256k1Wasm,
/* harmony export */   "instantiateSecp256k1WasmBytes": () => /* reexport safe */ _bin_bin__WEBPACK_IMPORTED_MODULE_2__.instantiateSecp256k1WasmBytes,
/* harmony export */   "ripemd160Base64Bytes": () => /* reexport safe */ _bin_bin__WEBPACK_IMPORTED_MODULE_2__.ripemd160Base64Bytes,
/* harmony export */   "sha1Base64Bytes": () => /* reexport safe */ _bin_bin__WEBPACK_IMPORTED_MODULE_2__.sha1Base64Bytes,
/* harmony export */   "sha256Base64Bytes": () => /* reexport safe */ _bin_bin__WEBPACK_IMPORTED_MODULE_2__.sha256Base64Bytes,
/* harmony export */   "sha512Base64Bytes": () => /* reexport safe */ _bin_bin__WEBPACK_IMPORTED_MODULE_2__.sha512Base64Bytes,
/* harmony export */   "getEmbeddedRipemd160Binary": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.getEmbeddedRipemd160Binary,
/* harmony export */   "getEmbeddedSha1Binary": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.getEmbeddedSha1Binary,
/* harmony export */   "getEmbeddedSha256Binary": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.getEmbeddedSha256Binary,
/* harmony export */   "getEmbeddedSha512Binary": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.getEmbeddedSha512Binary,
/* harmony export */   "hmacSha256": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.hmacSha256,
/* harmony export */   "hmacSha512": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.hmacSha512,
/* harmony export */   "instantiateHmacFunction": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.instantiateHmacFunction,
/* harmony export */   "instantiateRipemd160": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.instantiateRipemd160,
/* harmony export */   "instantiateRipemd160Bytes": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.instantiateRipemd160Bytes,
/* harmony export */   "instantiateSecp256k1": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.instantiateSecp256k1,
/* harmony export */   "instantiateSecp256k1Bytes": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.instantiateSecp256k1Bytes,
/* harmony export */   "instantiateSha1": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.instantiateSha1,
/* harmony export */   "instantiateSha1Bytes": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.instantiateSha1Bytes,
/* harmony export */   "instantiateSha256": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.instantiateSha256,
/* harmony export */   "instantiateSha256Bytes": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.instantiateSha256Bytes,
/* harmony export */   "instantiateSha512": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.instantiateSha512,
/* harmony export */   "instantiateSha512Bytes": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.instantiateSha512Bytes,
/* harmony export */   "HdKeyDecodingError": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.HdKeyDecodingError,
/* harmony export */   "HdKeyVersion": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.HdKeyVersion,
/* harmony export */   "HdNodeCrackingError": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.HdNodeCrackingError,
/* harmony export */   "HdNodeDerivationError": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.HdNodeDerivationError,
/* harmony export */   "WalletImportFormatError": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.WalletImportFormatError,
/* harmony export */   "crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode,
/* harmony export */   "decodeHdKey": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.decodeHdKey,
/* harmony export */   "decodeHdPrivateKey": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.decodeHdPrivateKey,
/* harmony export */   "decodeHdPublicKey": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.decodeHdPublicKey,
/* harmony export */   "decodePrivateKeyWif": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.decodePrivateKeyWif,
/* harmony export */   "deriveHdPath": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.deriveHdPath,
/* harmony export */   "deriveHdPrivateNodeChild": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.deriveHdPrivateNodeChild,
/* harmony export */   "deriveHdPrivateNodeFromSeed": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.deriveHdPrivateNodeFromSeed,
/* harmony export */   "deriveHdPrivateNodeIdentifier": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.deriveHdPrivateNodeIdentifier,
/* harmony export */   "deriveHdPublicNode": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.deriveHdPublicNode,
/* harmony export */   "deriveHdPublicNodeChild": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.deriveHdPublicNodeChild,
/* harmony export */   "deriveHdPublicNodeIdentifier": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.deriveHdPublicNodeIdentifier,
/* harmony export */   "encodeHdPrivateKey": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.encodeHdPrivateKey,
/* harmony export */   "encodeHdPublicKey": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.encodeHdPublicKey,
/* harmony export */   "encodePrivateKeyWif": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.encodePrivateKeyWif,
/* harmony export */   "generatePrivateKey": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.generatePrivateKey,
/* harmony export */   "instantiateBIP32Crypto": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.instantiateBIP32Crypto,
/* harmony export */   "validateSecp256k1PrivateKey": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.validateSecp256k1PrivateKey,
/* harmony export */   "TransactionDecodingError": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.TransactionDecodingError,
/* harmony export */   "compileInputTemplate": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.compileInputTemplate,
/* harmony export */   "compileOutputTemplate": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.compileOutputTemplate,
/* harmony export */   "decodeTransaction": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.decodeTransaction,
/* harmony export */   "decodeTransactionUnsafe": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.decodeTransactionUnsafe,
/* harmony export */   "encodeInput": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.encodeInput,
/* harmony export */   "encodeInputs": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.encodeInputs,
/* harmony export */   "encodeOutpoints": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.encodeOutpoints,
/* harmony export */   "encodeOutput": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.encodeOutput,
/* harmony export */   "encodeOutputsForSigning": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.encodeOutputsForSigning,
/* harmony export */   "encodeOutputsForTransaction": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.encodeOutputsForTransaction,
/* harmony export */   "encodeSequenceNumbersForSigning": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.encodeSequenceNumbersForSigning,
/* harmony export */   "encodeTransaction": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.encodeTransaction,
/* harmony export */   "extractMissingVariables": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.extractMissingVariables,
/* harmony export */   "extractResolvedVariables": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.extractResolvedVariables,
/* harmony export */   "generateTransaction": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.generateTransaction,
/* harmony export */   "getTransactionHash": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.getTransactionHash,
/* harmony export */   "getTransactionHashBE": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.getTransactionHashBE,
/* harmony export */   "getTransactionHashLE": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.getTransactionHashLE,
/* harmony export */   "invalidSatoshis": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.invalidSatoshis,
/* harmony export */   "readTransactionInput": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.readTransactionInput,
/* harmony export */   "readTransactionOutput": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.readTransactionOutput,
/* harmony export */   "safelyExtendCompilationData": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.safelyExtendCompilationData,
/* harmony export */   "verifyTransaction": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.verifyTransaction
/* harmony export */ });
/* harmony import */ var _address_address__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./address/address */ "./node_modules/@bitauth/libauth/build/module/lib/address/address.js");
/* harmony import */ var _vm_vm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vm/vm */ "./node_modules/@bitauth/libauth/build/module/lib/vm/vm.js");
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _vm_vm__WEBPACK_IMPORTED_MODULE_1__) if(["default","AddressType","Base58AddressError","Base58AddressFormatVersion","Bech32DecodingError","BitRegroupingError","CashAddressCorrectionError","CashAddressDecodingError","CashAddressEncodingError","CashAddressNetworkPrefix","CashAddressType","CashAddressVersionByte","CashAddressVersionByteDecodingError","LockingBytecodeEncodingError","addressContentsToLockingBytecode","attemptCashAddressFormatErrorCorrection","base58AddressToLockingBytecode","bech32CharacterSet","bech32CharacterSetIndex","bech32PaddedToBin","binToBech32Padded","cashAddressBitToSize","cashAddressChecksumToUint5Array","cashAddressPolynomialModulo","cashAddressPolynomialToCashAddress","cashAddressSizeToBit","cashAddressToLockingBytecode","decodeBase58Address","decodeBase58AddressFormat","decodeBech32","decodeCashAddress","decodeCashAddressFormat","decodeCashAddressFormatWithoutPrefix","decodeCashAddressVersionByte","encodeBase58Address","encodeBase58AddressFormat","encodeBech32","encodeCashAddress","encodeCashAddressFormat","encodeCashAddressVersionByte","isBech32CharacterSet","lockingBytecodeToAddressContents","lockingBytecodeToBase58Address","lockingBytecodeToCashAddress","maskCashAddressPrefix","regroupBits"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _vm_vm__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _bin_bin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bin/bin */ "./node_modules/@bitauth/libauth/build/module/lib/bin/bin.js");
/* harmony import */ var _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./crypto/crypto */ "./node_modules/@bitauth/libauth/build/module/lib/crypto/crypto.js");
/* harmony import */ var _key_key__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./key/key */ "./node_modules/@bitauth/libauth/build/module/lib/key/key.js");
/* harmony import */ var _template_template__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./template/template */ "./node_modules/@bitauth/libauth/build/module/lib/template/template.js");
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _template_template__WEBPACK_IMPORTED_MODULE_5__) if(["default","AddressType","Base58AddressError","Base58AddressFormatVersion","Bech32DecodingError","BitRegroupingError","CashAddressCorrectionError","CashAddressDecodingError","CashAddressEncodingError","CashAddressNetworkPrefix","CashAddressType","CashAddressVersionByte","CashAddressVersionByteDecodingError","LockingBytecodeEncodingError","addressContentsToLockingBytecode","attemptCashAddressFormatErrorCorrection","base58AddressToLockingBytecode","bech32CharacterSet","bech32CharacterSetIndex","bech32PaddedToBin","binToBech32Padded","cashAddressBitToSize","cashAddressChecksumToUint5Array","cashAddressPolynomialModulo","cashAddressPolynomialToCashAddress","cashAddressSizeToBit","cashAddressToLockingBytecode","decodeBase58Address","decodeBase58AddressFormat","decodeBech32","decodeCashAddress","decodeCashAddressFormat","decodeCashAddressFormatWithoutPrefix","decodeCashAddressVersionByte","encodeBase58Address","encodeBase58AddressFormat","encodeBech32","encodeCashAddress","encodeCashAddressFormat","encodeCashAddressVersionByte","isBech32CharacterSet","lockingBytecodeToAddressContents","lockingBytecodeToBase58Address","lockingBytecodeToCashAddress","maskCashAddressPrefix","regroupBits","CompressionFlag","ContextFlag","getEmbeddedSecp256k1Binary","instantiateRustWasm","instantiateSecp256k1Wasm","instantiateSecp256k1WasmBytes","ripemd160Base64Bytes","sha1Base64Bytes","sha256Base64Bytes","sha512Base64Bytes","getEmbeddedRipemd160Binary","getEmbeddedSha1Binary","getEmbeddedSha256Binary","getEmbeddedSha512Binary","hmacSha256","hmacSha512","instantiateHmacFunction","instantiateRipemd160","instantiateRipemd160Bytes","instantiateSecp256k1","instantiateSecp256k1Bytes","instantiateSha1","instantiateSha1Bytes","instantiateSha256","instantiateSha256Bytes","instantiateSha512","instantiateSha512Bytes","HdKeyDecodingError","HdKeyVersion","HdNodeCrackingError","HdNodeDerivationError","WalletImportFormatError","crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode","decodeHdKey","decodeHdPrivateKey","decodeHdPublicKey","decodePrivateKeyWif","deriveHdPath","deriveHdPrivateNodeChild","deriveHdPrivateNodeFromSeed","deriveHdPrivateNodeIdentifier","deriveHdPublicNode","deriveHdPublicNodeChild","deriveHdPublicNodeIdentifier","encodeHdPrivateKey","encodeHdPublicKey","encodePrivateKeyWif","generatePrivateKey","instantiateBIP32Crypto","validateSecp256k1PrivateKey"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _template_template__WEBPACK_IMPORTED_MODULE_5__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./transaction/transaction */ "./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction.js");
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _format_format__WEBPACK_IMPORTED_MODULE_7__) if(["default","AddressType","Base58AddressError","Base58AddressFormatVersion","Bech32DecodingError","BitRegroupingError","CashAddressCorrectionError","CashAddressDecodingError","CashAddressEncodingError","CashAddressNetworkPrefix","CashAddressType","CashAddressVersionByte","CashAddressVersionByteDecodingError","LockingBytecodeEncodingError","addressContentsToLockingBytecode","attemptCashAddressFormatErrorCorrection","base58AddressToLockingBytecode","bech32CharacterSet","bech32CharacterSetIndex","bech32PaddedToBin","binToBech32Padded","cashAddressBitToSize","cashAddressChecksumToUint5Array","cashAddressPolynomialModulo","cashAddressPolynomialToCashAddress","cashAddressSizeToBit","cashAddressToLockingBytecode","decodeBase58Address","decodeBase58AddressFormat","decodeBech32","decodeCashAddress","decodeCashAddressFormat","decodeCashAddressFormatWithoutPrefix","decodeCashAddressVersionByte","encodeBase58Address","encodeBase58AddressFormat","encodeBech32","encodeCashAddress","encodeCashAddressFormat","encodeCashAddressVersionByte","isBech32CharacterSet","lockingBytecodeToAddressContents","lockingBytecodeToBase58Address","lockingBytecodeToCashAddress","maskCashAddressPrefix","regroupBits","CompressionFlag","ContextFlag","getEmbeddedSecp256k1Binary","instantiateRustWasm","instantiateSecp256k1Wasm","instantiateSecp256k1WasmBytes","ripemd160Base64Bytes","sha1Base64Bytes","sha256Base64Bytes","sha512Base64Bytes","getEmbeddedRipemd160Binary","getEmbeddedSha1Binary","getEmbeddedSha256Binary","getEmbeddedSha512Binary","hmacSha256","hmacSha512","instantiateHmacFunction","instantiateRipemd160","instantiateRipemd160Bytes","instantiateSecp256k1","instantiateSecp256k1Bytes","instantiateSha1","instantiateSha1Bytes","instantiateSha256","instantiateSha256Bytes","instantiateSha512","instantiateSha512Bytes","HdKeyDecodingError","HdKeyVersion","HdNodeCrackingError","HdNodeDerivationError","WalletImportFormatError","crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode","decodeHdKey","decodeHdPrivateKey","decodeHdPublicKey","decodePrivateKeyWif","deriveHdPath","deriveHdPrivateNodeChild","deriveHdPrivateNodeFromSeed","deriveHdPrivateNodeIdentifier","deriveHdPublicNode","deriveHdPublicNodeChild","deriveHdPublicNodeIdentifier","encodeHdPrivateKey","encodeHdPublicKey","encodePrivateKeyWif","generatePrivateKey","instantiateBIP32Crypto","validateSecp256k1PrivateKey","CompilerDefaults","SigningSerializationAlgorithmIdentifier","attemptCompilerOperations","authenticationTemplateToCompilerBCH","compilerOperationAddressData","compilerOperationAttemptBytecodeResolution","compilerOperationCurrentBlockHeight","compilerOperationCurrentBlockTime","compilerOperationHdKeyEcdsaDataSignatureBCH","compilerOperationHdKeyEcdsaSignatureBCH","compilerOperationHdKeyPublicKeyCommon","compilerOperationHdKeySchnorrDataSignatureBCH","compilerOperationHdKeySchnorrSignatureBCH","compilerOperationHelperAddressIndex","compilerOperationHelperCompileScript","compilerOperationHelperComputeDataSignatureBCH","compilerOperationHelperComputeSignatureBCH","compilerOperationHelperDeriveHdKeyPrivate","compilerOperationHelperDeriveHdPrivateNode","compilerOperationHelperGenerateCoveredBytecode","compilerOperationHelperHdKeyDataSignatureBCH","compilerOperationHelperHdKeySignatureBCH","compilerOperationHelperKeyDataSignatureBCH","compilerOperationHelperKeySignatureBCH","compilerOperationHelperUnknownEntity","compilerOperationKeyEcdsaDataSignatureBCH","compilerOperationKeyEcdsaSignatureBCH","compilerOperationKeyPublicKeyCommon","compilerOperationKeySchnorrDataSignatureBCH","compilerOperationKeySchnorrSignatureBCH","compilerOperationRequires","compilerOperationSigningSerializationCorrespondingOutput","compilerOperationSigningSerializationCorrespondingOutputHash","compilerOperationSigningSerializationCoveredBytecode","compilerOperationSigningSerializationCoveredBytecodeLength","compilerOperationSigningSerializationFullBCH","compilerOperationSigningSerializationLocktime","compilerOperationSigningSerializationOutpointIndex","compilerOperationSigningSerializationOutpointTransactionHash","compilerOperationSigningSerializationOutputValue","compilerOperationSigningSerializationSequenceNumber","compilerOperationSigningSerializationTransactionOutpoints","compilerOperationSigningSerializationTransactionOutpointsHash","compilerOperationSigningSerializationTransactionOutputs","compilerOperationSigningSerializationTransactionOutputsHash","compilerOperationSigningSerializationTransactionSequenceNumbers","compilerOperationSigningSerializationTransactionSequenceNumbersHash","compilerOperationSigningSerializationVersion","compilerOperationWalletData","compilerOperationsBCH","compilerOperationsCommon","createCompilerBCH","TransactionDecodingError","compileInputTemplate","compileOutputTemplate","decodeTransaction","decodeTransactionUnsafe","encodeInput","encodeInputs","encodeOutpoints","encodeOutput","encodeOutputsForSigning","encodeOutputsForTransaction","encodeSequenceNumbersForSigning","encodeTransaction","extractMissingVariables","extractResolvedVariables","generateTransaction","getTransactionHash","getTransactionHashBE","getTransactionHashLE","invalidSatoshis","readTransactionInput","readTransactionOutput","safelyExtendCompilationData","verifyTransaction"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _format_format__WEBPACK_IMPORTED_MODULE_7__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);








//# sourceMappingURL=lib.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! export SigningSerializationAlgorithmIdentifier [provided] [no usage info] [missing usage info prevents renaming] */
/*! export authenticationTemplateToCompilerBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHdKeyEcdsaDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHdKeyEcdsaSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHdKeySchnorrDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHdKeySchnorrSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperComputeDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperComputeSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperHdKeyDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperHdKeySignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperKeyDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperKeySignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationKeyEcdsaDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationKeyEcdsaSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationKeySchnorrDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationKeySchnorrSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationFullBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationsBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createCompilerBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SigningSerializationAlgorithmIdentifier": () => /* binding */ SigningSerializationAlgorithmIdentifier,
/* harmony export */   "compilerOperationHelperComputeSignatureBCH": () => /* binding */ compilerOperationHelperComputeSignatureBCH,
/* harmony export */   "compilerOperationHelperHdKeySignatureBCH": () => /* binding */ compilerOperationHelperHdKeySignatureBCH,
/* harmony export */   "compilerOperationHdKeyEcdsaSignatureBCH": () => /* binding */ compilerOperationHdKeyEcdsaSignatureBCH,
/* harmony export */   "compilerOperationHdKeySchnorrSignatureBCH": () => /* binding */ compilerOperationHdKeySchnorrSignatureBCH,
/* harmony export */   "compilerOperationHelperKeySignatureBCH": () => /* binding */ compilerOperationHelperKeySignatureBCH,
/* harmony export */   "compilerOperationKeyEcdsaSignatureBCH": () => /* binding */ compilerOperationKeyEcdsaSignatureBCH,
/* harmony export */   "compilerOperationKeySchnorrSignatureBCH": () => /* binding */ compilerOperationKeySchnorrSignatureBCH,
/* harmony export */   "compilerOperationHelperComputeDataSignatureBCH": () => /* binding */ compilerOperationHelperComputeDataSignatureBCH,
/* harmony export */   "compilerOperationHelperKeyDataSignatureBCH": () => /* binding */ compilerOperationHelperKeyDataSignatureBCH,
/* harmony export */   "compilerOperationKeyEcdsaDataSignatureBCH": () => /* binding */ compilerOperationKeyEcdsaDataSignatureBCH,
/* harmony export */   "compilerOperationKeySchnorrDataSignatureBCH": () => /* binding */ compilerOperationKeySchnorrDataSignatureBCH,
/* harmony export */   "compilerOperationHelperHdKeyDataSignatureBCH": () => /* binding */ compilerOperationHelperHdKeyDataSignatureBCH,
/* harmony export */   "compilerOperationHdKeyEcdsaDataSignatureBCH": () => /* binding */ compilerOperationHdKeyEcdsaDataSignatureBCH,
/* harmony export */   "compilerOperationHdKeySchnorrDataSignatureBCH": () => /* binding */ compilerOperationHdKeySchnorrDataSignatureBCH,
/* harmony export */   "compilerOperationSigningSerializationFullBCH": () => /* binding */ compilerOperationSigningSerializationFullBCH,
/* harmony export */   "compilerOperationsBCH": () => /* binding */ compilerOperationsBCH,
/* harmony export */   "createCompilerBCH": () => /* binding */ createCompilerBCH,
/* harmony export */   "authenticationTemplateToCompilerBCH": () => /* binding */ authenticationTemplateToCompilerBCH
/* harmony export */ });
/* harmony import */ var _crypto_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../crypto/crypto */ "./node_modules/@bitauth/libauth/build/module/lib/crypto/crypto.js");
/* harmony import */ var _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vm/instruction-sets/common/signing-serialization */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js");
/* harmony import */ var _vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../vm/instruction-sets/instruction-sets */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets.js");
/* harmony import */ var _vm_virtual_machine__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../vm/virtual-machine */ "./node_modules/@bitauth/libauth/build/module/lib/vm/virtual-machine.js");
/* harmony import */ var _compiler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../compiler */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler.js");
/* harmony import */ var _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../compiler-operation-helpers */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js");
/* harmony import */ var _compiler_operations__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../compiler-operations */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js");







var SigningSerializationAlgorithmIdentifier;
(function (SigningSerializationAlgorithmIdentifier) {
    /**
     * A.K.A. `SIGHASH_ALL`
     */
    SigningSerializationAlgorithmIdentifier["allOutputs"] = "all_outputs";
    /**
     * A.K.A. `SIGHASH_ALL|ANYONE_CAN_PAY`
     */
    SigningSerializationAlgorithmIdentifier["allOutputsSingleInput"] = "all_outputs_single_input";
    /**
     * A.K.A. `SIGHASH_SINGLE`
     */
    SigningSerializationAlgorithmIdentifier["correspondingOutput"] = "corresponding_output";
    /**
     * A.K.A. `SIGHASH_SINGLE|ANYONE_CAN_PAY`
     */
    SigningSerializationAlgorithmIdentifier["correspondingOutputSingleInput"] = "corresponding_output_single_input";
    /**
     * A.K.A `SIGHASH_NONE`
     */
    SigningSerializationAlgorithmIdentifier["noOutputs"] = "no_outputs";
    /**
     * A.K.A `SIGHASH_NONE|ANYONE_CAN_PAY`
     */
    SigningSerializationAlgorithmIdentifier["noOutputsSingleInput"] = "no_outputs_single_input";
})(SigningSerializationAlgorithmIdentifier || (SigningSerializationAlgorithmIdentifier = {}));
// eslint-disable-next-line complexity
const getSigningSerializationType = (algorithmIdentifier, prefix = '') => {
    switch (algorithmIdentifier) {
        case `${prefix}${SigningSerializationAlgorithmIdentifier.allOutputs}`:
            return Uint8Array.of(
            // eslint-disable-next-line no-bitwise
            _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.allOutputs | _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.forkId);
        case `${prefix}${SigningSerializationAlgorithmIdentifier.allOutputsSingleInput}`:
            return Uint8Array.of(
            // eslint-disable-next-line no-bitwise
            _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.allOutputs |
                _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.singleInput |
                _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.forkId);
        case `${prefix}${SigningSerializationAlgorithmIdentifier.correspondingOutput}`:
            return Uint8Array.of(
            // eslint-disable-next-line no-bitwise
            _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.correspondingOutput |
                _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.forkId);
        case `${prefix}${SigningSerializationAlgorithmIdentifier.correspondingOutputSingleInput}`:
            return Uint8Array.of(
            // eslint-disable-next-line no-bitwise
            _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.correspondingOutput |
                _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.singleInput |
                _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.forkId);
        case `${prefix}${SigningSerializationAlgorithmIdentifier.noOutputs}`:
            return Uint8Array.of(
            // eslint-disable-next-line no-bitwise
            _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.noOutputs | _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.forkId);
        case `${prefix}${SigningSerializationAlgorithmIdentifier.noOutputsSingleInput}`:
            return Uint8Array.of(
            // eslint-disable-next-line no-bitwise
            _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.noOutputs |
                _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.singleInput |
                _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.forkId);
        default:
            return undefined;
    }
};
const compilerOperationHelperComputeSignatureBCH = ({ coveredBytecode, identifier, transactionContext, operationName, privateKey, sha256, sign, }) => {
    const [, , algorithm, unknown] = identifier.split('.');
    if (unknown !== undefined) {
        return {
            error: `Unknown component in "${identifier}" – the fragment "${unknown}" is not recognized.`,
            status: 'error',
        };
    }
    if (algorithm === undefined) {
        return {
            error: `Invalid signature identifier. Signatures must be of the form: "[variable_id].${operationName}.[signing_serialization_type]".`,
            status: 'error',
        };
    }
    const signingSerializationType = getSigningSerializationType(algorithm);
    if (signingSerializationType === undefined) {
        return {
            error: `Unknown signing serialization algorithm, "${algorithm}".`,
            status: 'error',
        };
    }
    const serialization = (0,_vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.generateSigningSerializationBCH)({
        correspondingOutput: transactionContext.correspondingOutput,
        coveredBytecode,
        locktime: transactionContext.locktime,
        outpointIndex: transactionContext.outpointIndex,
        outpointTransactionHash: transactionContext.outpointTransactionHash,
        outputValue: transactionContext.outputValue,
        sequenceNumber: transactionContext.sequenceNumber,
        sha256,
        signingSerializationType,
        transactionOutpoints: transactionContext.transactionOutpoints,
        transactionOutputs: transactionContext.transactionOutputs,
        transactionSequenceNumbers: transactionContext.transactionSequenceNumbers,
        version: transactionContext.version,
    });
    const digest = sha256.hash(sha256.hash(serialization));
    const bitcoinEncodedSignature = Uint8Array.from([
        ...sign(privateKey, digest),
        ...signingSerializationType,
    ]);
    return {
        bytecode: bitcoinEncodedSignature,
        signature: { serialization },
        status: 'success',
    };
};
const compilerOperationHelperHdKeySignatureBCH = ({ operationName, secp256k1Method, }) => (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.attemptCompilerOperations)([_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationAttemptBytecodeResolution], (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['hdKeys', 'transactionContext'],
    environmentProperties: [
        'entityOwnership',
        'ripemd160',
        'secp256k1',
        'sha256',
        'sha512',
        'variables',
        'sourceScriptIds',
        'unlockingScripts',
    ],
    operation: (identifier, data, environment) => {
        const { hdKeys, transactionContext } = data;
        const { secp256k1, sha256, sourceScriptIds, unlockingScripts, } = environment;
        const derivationResult = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationHelperDeriveHdKeyPrivate)({
            environment,
            hdKeys,
            identifier,
        });
        if (derivationResult.status === 'error')
            return derivationResult;
        const result = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationHelperGenerateCoveredBytecode)({
            data,
            environment,
            identifier,
            sourceScriptIds,
            unlockingScripts,
        });
        if ('error' in result) {
            return result;
        }
        return compilerOperationHelperComputeSignatureBCH({
            coveredBytecode: result,
            identifier,
            operationName,
            privateKey: derivationResult.bytecode,
            sha256,
            sign: secp256k1[secp256k1Method],
            transactionContext,
        });
    },
}));
const compilerOperationHdKeyEcdsaSignatureBCH = compilerOperationHelperHdKeySignatureBCH({
    operationName: 'signature',
    secp256k1Method: 'signMessageHashDER',
});
const compilerOperationHdKeySchnorrSignatureBCH = compilerOperationHelperHdKeySignatureBCH({
    operationName: 'schnorr_signature',
    secp256k1Method: 'signMessageHashSchnorr',
});
const compilerOperationHelperKeySignatureBCH = ({ operationName, secp256k1Method, }) => (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.attemptCompilerOperations)([_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationAttemptBytecodeResolution], (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['keys', 'transactionContext'],
    environmentProperties: [
        'sha256',
        'secp256k1',
        'unlockingScripts',
        'sourceScriptIds',
    ],
    operation: (identifier, data, environment) => {
        const { keys, transactionContext } = data;
        const { secp256k1, sha256, unlockingScripts, sourceScriptIds, } = environment;
        const { privateKeys } = keys;
        const [variableId] = identifier.split('.');
        const privateKey = privateKeys === undefined ? undefined : privateKeys[variableId];
        if (privateKey === undefined) {
            return {
                error: `Identifier "${identifier}" refers to a Key, but a private key for "${variableId}" (or an existing signature) was not provided in the compilation data.`,
                recoverable: true,
                status: 'error',
            };
        }
        const result = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationHelperGenerateCoveredBytecode)({
            data,
            environment,
            identifier,
            sourceScriptIds,
            unlockingScripts,
        });
        if ('error' in result) {
            return result;
        }
        return compilerOperationHelperComputeSignatureBCH({
            coveredBytecode: result,
            identifier,
            operationName,
            privateKey,
            sha256,
            sign: secp256k1[secp256k1Method],
            transactionContext,
        });
    },
}));
const compilerOperationKeyEcdsaSignatureBCH = compilerOperationHelperKeySignatureBCH({
    operationName: 'signature',
    secp256k1Method: 'signMessageHashDER',
});
const compilerOperationKeySchnorrSignatureBCH = compilerOperationHelperKeySignatureBCH({
    operationName: 'schnorr_signature',
    secp256k1Method: 'signMessageHashSchnorr',
});
const compilerOperationHelperComputeDataSignatureBCH = ({ data, environment, identifier, operationName, privateKey, sha256, sign, }) => {
    const [, , scriptId, unknown] = identifier.split('.');
    if (unknown !== undefined) {
        return {
            error: `Unknown component in "${identifier}" – the fragment "${unknown}" is not recognized.`,
            status: 'error',
        };
    }
    if (scriptId === undefined) {
        return {
            error: `Invalid data signature identifier. Data signatures must be of the form: "[variable_id].${operationName}.[target_script_id]".`,
            status: 'error',
        };
    }
    const result = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationHelperCompileScript)({
        data,
        environment,
        targetScriptId: scriptId,
    });
    if (result === false) {
        return {
            error: `Data signature tried to sign an unknown target script, "${scriptId}".`,
            status: 'error',
        };
    }
    if ('error' in result) {
        return result;
    }
    const digest = sha256.hash(result);
    return {
        bytecode: sign(privateKey, digest),
        signature: { message: result },
        status: 'success',
    };
};
const compilerOperationHelperKeyDataSignatureBCH = ({ operationName, secp256k1Method, }) => (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.attemptCompilerOperations)([_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationAttemptBytecodeResolution], (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['keys'],
    environmentProperties: ['sha256', 'secp256k1'],
    operation: (identifier, data, environment) => {
        const { keys } = data;
        const { secp256k1, sha256 } = environment;
        const { privateKeys } = keys;
        const [variableId] = identifier.split('.');
        const privateKey = privateKeys === undefined ? undefined : privateKeys[variableId];
        if (privateKey === undefined) {
            return {
                error: `Identifier "${identifier}" refers to a Key, but a private key for "${variableId}" (or an existing signature) was not provided in the compilation data.`,
                recoverable: true,
                status: 'error',
            };
        }
        return compilerOperationHelperComputeDataSignatureBCH({
            data,
            environment,
            identifier,
            operationName,
            privateKey,
            sha256,
            sign: secp256k1[secp256k1Method],
        });
    },
}));
const compilerOperationKeyEcdsaDataSignatureBCH = compilerOperationHelperKeyDataSignatureBCH({
    operationName: 'data_signature',
    secp256k1Method: 'signMessageHashDER',
});
const compilerOperationKeySchnorrDataSignatureBCH = compilerOperationHelperKeyDataSignatureBCH({
    operationName: 'schnorr_data_signature',
    secp256k1Method: 'signMessageHashSchnorr',
});
const compilerOperationHelperHdKeyDataSignatureBCH = ({ operationName, secp256k1Method, }) => (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.attemptCompilerOperations)([_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationAttemptBytecodeResolution], (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['hdKeys'],
    environmentProperties: [
        'entityOwnership',
        'ripemd160',
        'secp256k1',
        'sha256',
        'sha512',
        'variables',
    ],
    operation: (identifier, data, environment) => {
        const { hdKeys } = data;
        const { secp256k1, sha256 } = environment;
        const derivationResult = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationHelperDeriveHdKeyPrivate)({
            environment,
            hdKeys,
            identifier,
        });
        if (derivationResult.status === 'error')
            return derivationResult;
        return compilerOperationHelperComputeDataSignatureBCH({
            data,
            environment,
            identifier,
            operationName,
            privateKey: derivationResult.bytecode,
            sha256,
            sign: secp256k1[secp256k1Method],
        });
    },
}));
const compilerOperationHdKeyEcdsaDataSignatureBCH = compilerOperationHelperHdKeyDataSignatureBCH({
    operationName: 'data_signature',
    secp256k1Method: 'signMessageHashDER',
});
const compilerOperationHdKeySchnorrDataSignatureBCH = compilerOperationHelperHdKeyDataSignatureBCH({
    operationName: 'schnorr_data_signature',
    secp256k1Method: 'signMessageHashSchnorr',
});
const compilerOperationSigningSerializationFullBCH = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: ['sha256', 'sourceScriptIds', 'unlockingScripts'],
    operation: (identifier, data, environment) => {
        const [, algorithmOrComponent, unknownPart] = identifier.split('.');
        if (algorithmOrComponent === undefined) {
            return {
                error: `Invalid signing serialization operation. Include the desired component or algorithm, e.g. "signing_serialization.version".`,
                status: 'error',
            };
        }
        if (unknownPart !== undefined) {
            return {
                error: `Unknown component in "${identifier}" – the fragment "${unknownPart}" is not recognized.`,
                status: 'error',
            };
        }
        const signingSerializationType = getSigningSerializationType(algorithmOrComponent, 'full_');
        if (signingSerializationType === undefined) {
            return {
                error: `Unknown signing serialization algorithm, "${algorithmOrComponent}".`,
                status: 'error',
            };
        }
        const { sha256, sourceScriptIds, unlockingScripts } = environment;
        const result = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationHelperGenerateCoveredBytecode)({
            data,
            environment,
            identifier,
            sourceScriptIds,
            unlockingScripts,
        });
        if ('error' in result) {
            return result;
        }
        const { transactionContext } = data;
        return {
            bytecode: (0,_vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.generateSigningSerializationBCH)({
                correspondingOutput: transactionContext.correspondingOutput,
                coveredBytecode: result,
                locktime: transactionContext.locktime,
                outpointIndex: transactionContext.outpointIndex,
                outpointTransactionHash: transactionContext.outpointTransactionHash,
                outputValue: transactionContext.outputValue,
                sequenceNumber: transactionContext.sequenceNumber,
                sha256,
                signingSerializationType,
                transactionOutpoints: transactionContext.transactionOutpoints,
                transactionOutputs: transactionContext.transactionOutputs,
                transactionSequenceNumbers: transactionContext.transactionSequenceNumbers,
                version: transactionContext.version,
            }),
            status: 'success',
        };
    },
});
/* eslint-disable camelcase, @typescript-eslint/naming-convention */
const compilerOperationsBCH = {
    ..._compiler_operations__WEBPACK_IMPORTED_MODULE_6__.compilerOperationsCommon,
    hdKey: {
        data_signature: compilerOperationHdKeyEcdsaDataSignatureBCH,
        public_key: _compiler_operations__WEBPACK_IMPORTED_MODULE_6__.compilerOperationsCommon.hdKey.public_key,
        schnorr_data_signature: compilerOperationHdKeySchnorrDataSignatureBCH,
        schnorr_signature: compilerOperationHdKeySchnorrSignatureBCH,
        signature: compilerOperationHdKeyEcdsaSignatureBCH,
    },
    key: {
        data_signature: compilerOperationKeyEcdsaDataSignatureBCH,
        public_key: _compiler_operations__WEBPACK_IMPORTED_MODULE_6__.compilerOperationsCommon.key.public_key,
        schnorr_data_signature: compilerOperationKeySchnorrDataSignatureBCH,
        schnorr_signature: compilerOperationKeySchnorrSignatureBCH,
        signature: compilerOperationKeyEcdsaSignatureBCH,
    },
    signingSerialization: {
        ..._compiler_operations__WEBPACK_IMPORTED_MODULE_6__.compilerOperationsCommon.signingSerialization,
        full_all_outputs: compilerOperationSigningSerializationFullBCH,
        full_all_outputs_single_input: compilerOperationSigningSerializationFullBCH,
        full_corresponding_output: compilerOperationSigningSerializationFullBCH,
        full_corresponding_output_single_input: compilerOperationSigningSerializationFullBCH,
        full_no_outputs: compilerOperationSigningSerializationFullBCH,
        full_no_outputs_single_input: compilerOperationSigningSerializationFullBCH,
    },
};
/**
 * Create a compiler using the default BCH environment.
 *
 * Internally instantiates the necessary crypto and VM implementations – use
 * `createCompiler` for more control.
 *
 * @param scriptsAndOverrides - a compilation environment from which properties
 * will be used to override properties of the default BCH environment – must
 * include the `scripts` property
 */
const createCompilerBCH = async (scriptsAndOverrides) => {
    const [sha1, sha256, sha512, ripemd160, secp256k1] = await Promise.all([
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateSha1)(),
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateSha256)(),
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateSha512)(),
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateRipemd160)(),
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateSecp256k1)(),
    ]);
    const vm = (0,_vm_virtual_machine__WEBPACK_IMPORTED_MODULE_3__.createAuthenticationVirtualMachine)((0,_vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.createInstructionSetBCH)({
        flags: (0,_vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.getFlagsForInstructionSetBCH)(_vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.instructionSetBCHCurrentStrict),
        ripemd160,
        secp256k1,
        sha1,
        sha256,
    }));
    return (0,_compiler__WEBPACK_IMPORTED_MODULE_4__.createCompiler)({
        ...{
            createAuthenticationProgram: _compiler__WEBPACK_IMPORTED_MODULE_4__.createAuthenticationProgramEvaluationCommon,
            opcodes: (0,_vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.generateBytecodeMap)(_vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.OpcodesBCH),
            operations: compilerOperationsBCH,
            ripemd160,
            secp256k1,
            sha256,
            sha512,
            vm,
        },
        ...scriptsAndOverrides,
    });
};
/**
 * Create a BCH `Compiler` from an `AuthenticationTemplate` and an optional set
 * of overrides.
 * @param template - the `AuthenticationTemplate` from which to create the BCH
 * compiler
 * @param overrides - a compilation environment from which properties will be
 * used to override properties of the default BCH environment
 */
const authenticationTemplateToCompilerBCH = async (template, overrides) => createCompilerBCH({
    ...overrides,
    ...(0,_compiler__WEBPACK_IMPORTED_MODULE_4__.authenticationTemplateToCompilationEnvironment)(template),
});
//# sourceMappingURL=compiler-bch.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-defaults.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-defaults.js ***!
  \**************************************************************************************/
/*! namespace exports */
/*! export CompilerDefaults [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CompilerDefaults": () => /* binding */ CompilerDefaults
/* harmony export */ });
var CompilerDefaults;
(function (CompilerDefaults) {
    /**
     * The `addressIndex` used by default scenarios.
     */
    CompilerDefaults[CompilerDefaults["defaultScenarioAddressIndex"] = 0] = "defaultScenarioAddressIndex";
    /**
     *
     * The value of `currentBlockHeight` in the default authentication template
     * scenario. This is the height of the second mined block after the genesis
     * block: `000000006a625f06636b8bb6ac7b960a8d03705d1ace08b1a19da3fdcc99ddbd`.
     *
     * This default value was chosen to be low enough to simplify the debugging of
     * block height offsets while remaining differentiated from `0` and `1` which
     * are used both as boolean return values and for control flow.
     */
    CompilerDefaults[CompilerDefaults["defaultScenarioCurrentBlockHeight"] = 2] = "defaultScenarioCurrentBlockHeight";
    /**
     * The value of `currentBlockTime` in the default authentication template
     * scenario. This is the Median Time-Past block time (BIP113) of block `2`
     * (the block used in `defaultScenarioCurrentBlockHeight`).
     */
    CompilerDefaults[CompilerDefaults["defaultScenarioCurrentBlockTime"] = 1231469665] = "defaultScenarioCurrentBlockTime";
    /**
     * The default `outpointIndex` of inputs in scenarios.
     */
    CompilerDefaults[CompilerDefaults["defaultScenarioInputOutpointIndex"] = 0] = "defaultScenarioInputOutpointIndex";
    /**
     * The default `outpointTransactionHash` of inputs in scenarios.
     */
    CompilerDefaults["defaultScenarioInputOutpointTransactionHash"] = "0000000000000000000000000000000000000000000000000000000000000000";
    /**
     * The default `sequenceNumber` of inputs in scenarios.
     */
    CompilerDefaults[CompilerDefaults["defaultScenarioInputSequenceNumber"] = 0] = "defaultScenarioInputSequenceNumber";
    /**
     * The default `unlockingBytecode` of untested inputs in scenarios.
     */
    CompilerDefaults["defaultScenarioInputUnlockingBytecodeHex"] = "";
    /**
     * The default `satoshis` of outputs in scenarios.
     */
    CompilerDefaults[CompilerDefaults["defaultScenarioOutputSatoshis"] = 0] = "defaultScenarioOutputSatoshis";
    /**
     * The hexadecimal-encoded value of the `lockingBytecode` in the single
     * default output (`transaction.outputs`) of the default authentication
     * template scenario.
     */
    CompilerDefaults["defaultScenarioTransactionOutputsLockingBytecodeHex"] = "";
    /**
     * The value of `transaction.locktime` in the default authentication template
     * scenario.
     */
    CompilerDefaults[CompilerDefaults["defaultScenarioTransactionLocktime"] = 0] = "defaultScenarioTransactionLocktime";
    /**
     * The value of `transaction.version` in the default authentication template
     * scenario. Transaction version `2` enables `OP_CHECKSEQUENCEVERIFY` as
     * described in BIP68, BIP112, and BIP113.
     */
    CompilerDefaults[CompilerDefaults["defaultScenarioTransactionVersion"] = 2] = "defaultScenarioTransactionVersion";
    /**
     * The default value of the hypothetical UTXO being spent by the input under
     * test in a scenario.
     */
    CompilerDefaults[CompilerDefaults["defaultScenarioValue"] = 0] = "defaultScenarioValue";
    /**
     * If unset, each `HdKey` uses this `addressOffset`.
     */
    CompilerDefaults[CompilerDefaults["hdKeyAddressOffset"] = 0] = "hdKeyAddressOffset";
    /**
     * If unset, each `HdKey` uses this `hdPublicKeyDerivationPath`.
     */
    CompilerDefaults["hdKeyHdPublicKeyDerivationPath"] = "m";
    /**
     * If unset, each `HdKey` uses this `privateDerivationPath`.
     */
    CompilerDefaults["hdKeyPrivateDerivationPath"] = "m/i";
    /**
     * The prefix used to refer to other scenario bytecode scripts from within a
     * bytecode script. See `AuthenticationTemplateScenarioData.bytecode` for
     * details.
     */
    CompilerDefaults["scenarioBytecodeScriptPrefix"] = "_scenario_";
    /**
     * The prefix used to identify the `check` script from a virtualized
     * `AuthenticationTemplateScriptTest`. For details, see
     * `authenticationTemplateToCompilationEnvironmentVirtualizedTests`.
     */
    CompilerDefaults["virtualizedTestCheckScriptPrefix"] = "__virtualized_test_check_";
    /**
     * The prefix used to identify the concatenated tested and `check` script from
     * a virtualized `AuthenticationTemplateScriptTest`. For details, see
     * `authenticationTemplateToCompilationEnvironmentVirtualizedTests`.
     */
    CompilerDefaults["virtualizedTestLockingScriptPrefix"] = "__virtualized_test_lock_";
    /**
     * The prefix used to identify the `setup` script from a virtualized
     * `AuthenticationTemplateScriptTest`. For details, see
     * `authenticationTemplateToCompilationEnvironmentVirtualizedTests`.
     */
    CompilerDefaults["virtualizedTestUnlockingScriptPrefix"] = "__virtualized_test_unlock_";
})(CompilerDefaults || (CompilerDefaults = {}));
//# sourceMappingURL=compiler-defaults.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export attemptCompilerOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationAttemptBytecodeResolution [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperAddressIndex [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperCompileScript [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperDeriveHdKeyPrivate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperDeriveHdPrivateNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperGenerateCoveredBytecode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperUnknownEntity [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationRequires [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "attemptCompilerOperations": () => /* binding */ attemptCompilerOperations,
/* harmony export */   "compilerOperationRequires": () => /* binding */ compilerOperationRequires,
/* harmony export */   "compilerOperationAttemptBytecodeResolution": () => /* binding */ compilerOperationAttemptBytecodeResolution,
/* harmony export */   "compilerOperationHelperDeriveHdPrivateNode": () => /* binding */ compilerOperationHelperDeriveHdPrivateNode,
/* harmony export */   "compilerOperationHelperUnknownEntity": () => /* binding */ compilerOperationHelperUnknownEntity,
/* harmony export */   "compilerOperationHelperAddressIndex": () => /* binding */ compilerOperationHelperAddressIndex,
/* harmony export */   "compilerOperationHelperDeriveHdKeyPrivate": () => /* binding */ compilerOperationHelperDeriveHdKeyPrivate,
/* harmony export */   "compilerOperationHelperCompileScript": () => /* binding */ compilerOperationHelperCompileScript,
/* harmony export */   "compilerOperationHelperGenerateCoveredBytecode": () => /* binding */ compilerOperationHelperGenerateCoveredBytecode
/* harmony export */ });
/* harmony import */ var _key_hd_key__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../key/hd-key */ "./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js");
/* harmony import */ var _compiler_defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./compiler-defaults */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-defaults.js");
/* harmony import */ var _language_resolve__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./language/resolve */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/resolve.js");



/**
 * Attempt a series of compiler operations, skipping to the next operation if
 * the current operation returns a `CompilerOperationSkip` (indicating it failed
 * and can be skipped). The `finalOperation` may not be skipped, and must either
 * return `CompilerOperationSuccess` or `CompilerOperationError`.
 *
 * @param operations - an array of skippable operations to try
 * @param finalOperation - a final, un-skippable operation
 */
const attemptCompilerOperations = (operations, finalOperation) => (identifier, data, environment) => {
    // eslint-disable-next-line functional/no-loop-statement
    for (const operation of operations) {
        const result = operation(identifier, data, environment);
        if (result.status !== 'skip')
            return result;
    }
    return finalOperation(identifier, data, environment);
};
/**
 * Modify a compiler operation to verify that certain properties exist in the
 * `CompilationData` and `CompilationEnvironment` before executing the provided
 * operation. If the properties don't exist, an error message is returned.
 *
 * This is useful for eliminating repetitive existence checks.
 *
 * @param canBeSkipped - if `true`, the accepted operation may return `false`,
 * and any missing properties will cause the returned operation to return
 * `false` (meaning the operation should be skipped)
 * @param dataProperties - an array of the top-level properties required in the
 * `CompilationData`
 * @param environmentProperties - an array of the top-level properties required
 * in the `CompilationEnvironment`
 * @param operation - the operation to run if all required properties exist
 */
const compilerOperationRequires = ({ canBeSkipped, dataProperties, environmentProperties, operation, }) => (identifier, data, environment) => {
    // eslint-disable-next-line functional/no-loop-statement
    for (const property of environmentProperties) {
        if (environment[property] === undefined)
            return (canBeSkipped
                ? { status: 'skip' }
                : {
                    error: `Cannot resolve "${identifier}" – the "${property}" property was not provided in the compilation environment.`,
                    status: 'error',
                });
    }
    // eslint-disable-next-line functional/no-loop-statement
    for (const property of dataProperties) {
        if (data[property] === undefined)
            return (canBeSkipped
                ? { status: 'skip' }
                : {
                    error: `Cannot resolve "${identifier}" – the "${property}" property was not provided in the compilation data.`,
                    status: 'error',
                });
    }
    return operation(identifier, data, environment);
};
const compilerOperationAttemptBytecodeResolution = compilerOperationRequires({
    canBeSkipped: true,
    dataProperties: ['bytecode'],
    environmentProperties: [],
    operation: (identifier, data) => {
        const { bytecode } = data;
        if (bytecode[identifier] !== undefined) {
            return { bytecode: bytecode[identifier], status: 'success' };
        }
        return { status: 'skip' };
    },
});
// eslint-disable-next-line complexity
const compilerOperationHelperDeriveHdPrivateNode = ({ addressIndex, entityId, entityHdPrivateKey, environment, hdKey, identifier, }) => {
    const addressOffset = hdKey.addressOffset ?? _compiler_defaults__WEBPACK_IMPORTED_MODULE_1__.CompilerDefaults.hdKeyAddressOffset;
    const privateDerivationPath = hdKey.privateDerivationPath ?? _compiler_defaults__WEBPACK_IMPORTED_MODULE_1__.CompilerDefaults.hdKeyPrivateDerivationPath;
    const i = addressIndex + addressOffset;
    const validPrivatePathWithIndex = /^m(?:\/(?:[0-9]+|i)'?)*$/u;
    if (!validPrivatePathWithIndex.test(privateDerivationPath)) {
        return {
            error: `Could not generate ${identifier} – the path "${privateDerivationPath}" is not a valid "privateDerivationPath".`,
            status: 'error',
        };
    }
    const instancePath = privateDerivationPath.replace('i', i.toString());
    const masterContents = (0,_key_hd_key__WEBPACK_IMPORTED_MODULE_0__.decodeHdPrivateKey)(environment, entityHdPrivateKey);
    if (typeof masterContents === 'string') {
        return {
            error: `Could not generate ${identifier} – the HD private key provided for ${entityId} could not be decoded: ${masterContents}`,
            status: 'error',
        };
    }
    const instanceNode = (0,_key_hd_key__WEBPACK_IMPORTED_MODULE_0__.deriveHdPath)(environment, masterContents.node, instancePath);
    if (typeof instanceNode === 'string') {
        return {
            error: `Could not generate ${identifier} – the path "${instancePath}" could not be derived for entity "${entityId}": ${instanceNode}`,
            status: 'error',
        };
    }
    return {
        bytecode: instanceNode.privateKey,
        status: 'success',
    };
};
const compilerOperationHelperUnknownEntity = (identifier, variableId) => ({
    error: `Identifier "${identifier}" refers to an HdKey, but the "entityOwnership" for "${variableId}" is not available in this compilation environment.`,
    status: 'error',
});
const compilerOperationHelperAddressIndex = (identifier) => ({
    error: `Identifier "${identifier}" refers to an HdKey, but "hdKeys.addressIndex" was not provided in the compilation data.`,
    status: 'error',
});
const compilerOperationHelperDeriveHdKeyPrivate = ({ environment, hdKeys, identifier, }) => {
    const { addressIndex, hdPrivateKeys } = hdKeys;
    const [variableId] = identifier.split('.');
    const entityId = environment.entityOwnership[variableId];
    if (entityId === undefined) {
        return compilerOperationHelperUnknownEntity(identifier, variableId);
    }
    if (addressIndex === undefined) {
        return compilerOperationHelperAddressIndex(identifier);
    }
    const entityHdPrivateKey = hdPrivateKeys === undefined ? undefined : hdPrivateKeys[entityId];
    if (entityHdPrivateKey === undefined) {
        return {
            error: `Identifier "${identifier}" refers to an HdKey owned by "${entityId}", but an HD private key for this entity (or an existing signature) was not provided in the compilation data.`,
            recoverable: true,
            status: 'error',
        };
    }
    /**
     * Guaranteed to be an `HdKey` if this method is reached in the compiler.
     */
    const hdKey = environment.variables[variableId];
    return compilerOperationHelperDeriveHdPrivateNode({
        addressIndex,
        entityHdPrivateKey,
        entityId,
        environment,
        hdKey,
        identifier,
    });
};
/**
 * Returns `false` if the target script ID doesn't exist in the compilation
 * environment (allows for the caller to generate the error message).
 *
 * If the compilation produced errors, returns a `CompilerOperationErrorFatal`.
 *
 * If the compilation was successful, returns the compiled bytecode as a
 * `Uint8Array`.
 */
const compilerOperationHelperCompileScript = ({ targetScriptId, data, environment, }) => {
    const signingTarget = environment.scripts[targetScriptId];
    const compiledTarget = (0,_language_resolve__WEBPACK_IMPORTED_MODULE_2__.resolveScriptIdentifier)({
        data,
        environment,
        identifier: targetScriptId,
    });
    if (signingTarget === undefined || compiledTarget === false) {
        return false;
    }
    if (typeof compiledTarget === 'string') {
        return {
            error: compiledTarget,
            status: 'error',
        };
    }
    return compiledTarget.bytecode;
};
/**
 * Returns either the properly generated `coveredBytecode` or a
 * `CompilerOperationErrorFatal`.
 */
const compilerOperationHelperGenerateCoveredBytecode = ({ data, environment, identifier, sourceScriptIds, unlockingScripts, }) => {
    const currentScriptId = sourceScriptIds[sourceScriptIds.length - 1];
    if (currentScriptId === undefined) {
        return {
            error: `Identifier "${identifier}" requires a signing serialization, but "coveredBytecode" cannot be determined because the compilation environment's "sourceScriptIds" is empty.`,
            status: 'error',
        };
    }
    const targetLockingScriptId = unlockingScripts[currentScriptId];
    if (targetLockingScriptId === undefined) {
        return {
            error: `Identifier "${identifier}" requires a signing serialization, but "coveredBytecode" cannot be determined because "${currentScriptId}" is not present in the compilation environment "unlockingScripts".`,
            status: 'error',
        };
    }
    const result = compilerOperationHelperCompileScript({
        data,
        environment,
        targetScriptId: targetLockingScriptId,
    });
    if (result === false) {
        return {
            error: `Identifier "${identifier}" requires a signing serialization which covers an unknown locking script, "${targetLockingScriptId}".`,
            status: 'error',
        };
    }
    return result;
};
//# sourceMappingURL=compiler-operation-helpers.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js ***!
  \****************************************************************************************/
/*! namespace exports */
/*! export compilerOperationAddressData [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationCurrentBlockHeight [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationCurrentBlockTime [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHdKeyPublicKeyCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationKeyPublicKeyCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationCorrespondingOutput [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationCorrespondingOutputHash [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationCoveredBytecode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationCoveredBytecodeLength [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationLocktime [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationOutpointIndex [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationOutpointTransactionHash [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationOutputValue [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationSequenceNumber [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationTransactionOutpoints [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationTransactionOutpointsHash [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationTransactionOutputs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationTransactionOutputsHash [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationTransactionSequenceNumbers [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationTransactionSequenceNumbersHash [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationVersion [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationWalletData [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationsCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "compilerOperationAddressData": () => /* binding */ compilerOperationAddressData,
/* harmony export */   "compilerOperationWalletData": () => /* binding */ compilerOperationWalletData,
/* harmony export */   "compilerOperationCurrentBlockTime": () => /* binding */ compilerOperationCurrentBlockTime,
/* harmony export */   "compilerOperationCurrentBlockHeight": () => /* binding */ compilerOperationCurrentBlockHeight,
/* harmony export */   "compilerOperationSigningSerializationCorrespondingOutput": () => /* binding */ compilerOperationSigningSerializationCorrespondingOutput,
/* harmony export */   "compilerOperationSigningSerializationCorrespondingOutputHash": () => /* binding */ compilerOperationSigningSerializationCorrespondingOutputHash,
/* harmony export */   "compilerOperationSigningSerializationCoveredBytecode": () => /* binding */ compilerOperationSigningSerializationCoveredBytecode,
/* harmony export */   "compilerOperationSigningSerializationCoveredBytecodeLength": () => /* binding */ compilerOperationSigningSerializationCoveredBytecodeLength,
/* harmony export */   "compilerOperationSigningSerializationLocktime": () => /* binding */ compilerOperationSigningSerializationLocktime,
/* harmony export */   "compilerOperationSigningSerializationOutpointIndex": () => /* binding */ compilerOperationSigningSerializationOutpointIndex,
/* harmony export */   "compilerOperationSigningSerializationOutpointTransactionHash": () => /* binding */ compilerOperationSigningSerializationOutpointTransactionHash,
/* harmony export */   "compilerOperationSigningSerializationOutputValue": () => /* binding */ compilerOperationSigningSerializationOutputValue,
/* harmony export */   "compilerOperationSigningSerializationSequenceNumber": () => /* binding */ compilerOperationSigningSerializationSequenceNumber,
/* harmony export */   "compilerOperationSigningSerializationTransactionOutpoints": () => /* binding */ compilerOperationSigningSerializationTransactionOutpoints,
/* harmony export */   "compilerOperationSigningSerializationTransactionOutpointsHash": () => /* binding */ compilerOperationSigningSerializationTransactionOutpointsHash,
/* harmony export */   "compilerOperationSigningSerializationTransactionOutputs": () => /* binding */ compilerOperationSigningSerializationTransactionOutputs,
/* harmony export */   "compilerOperationSigningSerializationTransactionOutputsHash": () => /* binding */ compilerOperationSigningSerializationTransactionOutputsHash,
/* harmony export */   "compilerOperationSigningSerializationTransactionSequenceNumbers": () => /* binding */ compilerOperationSigningSerializationTransactionSequenceNumbers,
/* harmony export */   "compilerOperationSigningSerializationTransactionSequenceNumbersHash": () => /* binding */ compilerOperationSigningSerializationTransactionSequenceNumbersHash,
/* harmony export */   "compilerOperationSigningSerializationVersion": () => /* binding */ compilerOperationSigningSerializationVersion,
/* harmony export */   "compilerOperationKeyPublicKeyCommon": () => /* binding */ compilerOperationKeyPublicKeyCommon,
/* harmony export */   "compilerOperationHdKeyPublicKeyCommon": () => /* binding */ compilerOperationHdKeyPublicKeyCommon,
/* harmony export */   "compilerOperationsCommon": () => /* binding */ compilerOperationsCommon
/* harmony export */ });
/* harmony import */ var _format_numbers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../format/numbers */ "./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js");
/* harmony import */ var _key_hd_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../key/hd-key */ "./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js");
/* harmony import */ var _vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vm/instruction-sets/instruction-sets */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets.js");
/* harmony import */ var _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./compiler-defaults */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-defaults.js");
/* harmony import */ var _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./compiler-operation-helpers */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js");





const compilerOperationAddressData = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['bytecode'],
    environmentProperties: [],
    operation: (identifier, data) => {
        const { bytecode } = data;
        if (identifier in bytecode) {
            return { bytecode: bytecode[identifier], status: 'success' };
        }
        return {
            error: `Identifier "${identifier}" refers to an AddressData, but "${identifier}" was not provided in the CompilationData "bytecode".`,
            recoverable: true,
            status: 'error',
        };
    },
});
const compilerOperationWalletData = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['bytecode'],
    environmentProperties: [],
    operation: (identifier, data) => {
        const { bytecode } = data;
        if (identifier in bytecode) {
            return { bytecode: bytecode[identifier], status: 'success' };
        }
        return {
            error: `Identifier "${identifier}" refers to a WalletData, but "${identifier}" was not provided in the CompilationData "bytecode".`,
            recoverable: true,
            status: 'error',
        };
    },
});
const compilerOperationCurrentBlockTime = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['currentBlockTime'],
    environmentProperties: [],
    operation: (_, data) => {
        return {
            bytecode: (0,_format_numbers__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(data.currentBlockTime),
            status: 'success',
        };
    },
});
const compilerOperationCurrentBlockHeight = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['currentBlockHeight'],
    environmentProperties: [],
    operation: (_, data) => ({
        bytecode: (0,_vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.bigIntToScriptNumber)(BigInt(data.currentBlockHeight)),
        status: 'success',
    }),
});
const compilerOperationSigningSerializationCorrespondingOutput = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: [],
    operation: (_, data) => data.transactionContext.correspondingOutput === undefined
        ? { bytecode: Uint8Array.of(), status: 'success' }
        : {
            bytecode: data.transactionContext.correspondingOutput,
            status: 'success',
        },
});
const compilerOperationSigningSerializationCorrespondingOutputHash = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: ['sha256'],
    operation: (_, data, environment) => data.transactionContext.correspondingOutput === undefined
        ? { bytecode: Uint8Array.of(), status: 'success' }
        : {
            bytecode: environment.sha256.hash(environment.sha256.hash(data.transactionContext.correspondingOutput)),
            status: 'success',
        },
});
const compilerOperationHelperSigningSerializationCoveredBytecode = (returnLength) => (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: ['sourceScriptIds', 'unlockingScripts'],
    operation: (identifier, data, environment) => {
        const { unlockingScripts, sourceScriptIds } = environment;
        const result = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationHelperGenerateCoveredBytecode)({
            data,
            environment,
            identifier,
            sourceScriptIds,
            unlockingScripts,
        });
        if ('error' in result) {
            return result;
        }
        return {
            bytecode: returnLength
                ? (0,_format_numbers__WEBPACK_IMPORTED_MODULE_0__.bigIntToBitcoinVarInt)(BigInt(result.length))
                : result,
            status: 'success',
        };
    },
});
const compilerOperationSigningSerializationCoveredBytecode = compilerOperationHelperSigningSerializationCoveredBytecode(false);
const compilerOperationSigningSerializationCoveredBytecodeLength = compilerOperationHelperSigningSerializationCoveredBytecode(true);
const compilerOperationSigningSerializationLocktime = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: [],
    operation: (_, data) => ({
        bytecode: (0,_format_numbers__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(data.transactionContext.locktime),
        status: 'success',
    }),
});
const compilerOperationSigningSerializationOutpointIndex = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: [],
    operation: (_, data) => ({
        bytecode: (0,_format_numbers__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(data.transactionContext.outpointIndex),
        status: 'success',
    }),
});
const compilerOperationSigningSerializationOutpointTransactionHash = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: [],
    operation: (_, data) => ({
        bytecode: data.transactionContext.outpointTransactionHash,
        status: 'success',
    }),
});
const compilerOperationSigningSerializationOutputValue = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: [],
    operation: (_, data) => ({
        bytecode: data.transactionContext.outputValue,
        status: 'success',
    }),
});
const compilerOperationSigningSerializationSequenceNumber = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: [],
    operation: (_, data) => ({
        bytecode: (0,_format_numbers__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(data.transactionContext.sequenceNumber),
        status: 'success',
    }),
});
const compilerOperationSigningSerializationTransactionOutpoints = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: [],
    operation: (_, data) => ({
        bytecode: data.transactionContext.transactionOutpoints,
        status: 'success',
    }),
});
const compilerOperationSigningSerializationTransactionOutpointsHash = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: ['sha256'],
    operation: (_, data, environment) => ({
        bytecode: environment.sha256.hash(environment.sha256.hash(data.transactionContext.transactionOutpoints)),
        status: 'success',
    }),
});
const compilerOperationSigningSerializationTransactionOutputs = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: [],
    operation: (_, data) => ({
        bytecode: data.transactionContext.transactionOutputs,
        status: 'success',
    }),
});
const compilerOperationSigningSerializationTransactionOutputsHash = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: ['sha256'],
    operation: (_, data, environment) => ({
        bytecode: environment.sha256.hash(environment.sha256.hash(data.transactionContext.transactionOutputs)),
        status: 'success',
    }),
});
const compilerOperationSigningSerializationTransactionSequenceNumbers = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: [],
    operation: (_, data) => ({
        bytecode: data.transactionContext.transactionSequenceNumbers,
        status: 'success',
    }),
});
const compilerOperationSigningSerializationTransactionSequenceNumbersHash = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: ['sha256'],
    operation: (_, data, environment) => ({
        bytecode: environment.sha256.hash(environment.sha256.hash(data.transactionContext.transactionSequenceNumbers)),
        status: 'success',
    }),
});
const compilerOperationSigningSerializationVersion = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: [],
    operation: (_, data) => ({
        bytecode: (0,_format_numbers__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(data.transactionContext.version),
        status: 'success',
    }),
});
const compilerOperationKeyPublicKeyCommon = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.attemptCompilerOperations)([_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationAttemptBytecodeResolution], (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['keys'],
    environmentProperties: ['secp256k1'],
    operation: (identifier, data, environment) => {
        const { keys } = data;
        const { secp256k1 } = environment;
        const { privateKeys } = keys;
        const [variableId] = identifier.split('.');
        if (privateKeys !== undefined &&
            privateKeys[variableId] !== undefined) {
            return {
                bytecode: secp256k1.derivePublicKeyCompressed(privateKeys[variableId]),
                status: 'success',
            };
        }
        return {
            error: `Identifier "${identifier}" refers to a public key, but no public or private keys for "${variableId}" were provided in the compilation data.`,
            recoverable: true,
            status: 'error',
        };
    },
}));
const compilerOperationHdKeyPublicKeyCommon = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.attemptCompilerOperations)([_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationAttemptBytecodeResolution], (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['hdKeys'],
    environmentProperties: [
        'entityOwnership',
        'ripemd160',
        'secp256k1',
        'sha256',
        'sha512',
        'variables',
    ],
    operation: 
    // eslint-disable-next-line complexity
    (identifier, data, environment) => {
        const { hdKeys } = data;
        const { hdPrivateKeys, addressIndex, hdPublicKeys } = hdKeys;
        const [variableId] = identifier.split('.');
        const entityId = environment.entityOwnership[variableId];
        if (entityId === undefined) {
            return (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationHelperUnknownEntity)(identifier, variableId);
        }
        if (addressIndex === undefined) {
            return (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationHelperAddressIndex)(identifier);
        }
        const entityHdPrivateKey = hdPrivateKeys === undefined ? undefined : hdPrivateKeys[entityId];
        /**
         * Guaranteed to be an `HdKey` if this method is reached in the compiler.
         */
        const hdKey = environment.variables[variableId];
        if (entityHdPrivateKey !== undefined) {
            const privateResult = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationHelperDeriveHdPrivateNode)({
                addressIndex,
                entityHdPrivateKey,
                entityId,
                environment,
                hdKey,
                identifier,
            });
            if (privateResult.status === 'error')
                return privateResult;
            return {
                bytecode: environment.secp256k1.derivePublicKeyCompressed(privateResult.bytecode),
                status: 'success',
            };
        }
        const entityHdPublicKey = hdPublicKeys === undefined ? undefined : hdPublicKeys[entityId];
        if (entityHdPublicKey === undefined) {
            return {
                error: `Identifier "${identifier}" refers to an HdKey owned by "${entityId}", but an HD private key or HD public key for this entity was not provided in the compilation data.`,
                recoverable: true,
                status: 'error',
            };
        }
        const addressOffset = hdKey.addressOffset ?? _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.hdKeyAddressOffset;
        const privateDerivationPath = hdKey.privateDerivationPath ??
            _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.hdKeyPrivateDerivationPath;
        const publicDerivationPath = hdKey.publicDerivationPath ?? privateDerivationPath.replace('m', 'M');
        const validPublicPathWithIndex = /^M(?:\/(?:[0-9]+|i))*$/u;
        if (!validPublicPathWithIndex.test(publicDerivationPath)) {
            return {
                error: `Could not generate ${identifier} – the path "${publicDerivationPath}" is not a valid "publicDerivationPath".`,
                status: 'error',
            };
        }
        const i = addressIndex + addressOffset;
        const instancePath = publicDerivationPath.replace('i', i.toString());
        const masterContents = (0,_key_hd_key__WEBPACK_IMPORTED_MODULE_1__.decodeHdPublicKey)(environment, entityHdPublicKey);
        if (typeof masterContents === 'string') {
            return {
                error: `Could not generate "${identifier}" – the HD public key provided for "${entityId}" could not be decoded: ${masterContents}`,
                status: 'error',
            };
        }
        const instanceNode = (0,_key_hd_key__WEBPACK_IMPORTED_MODULE_1__.deriveHdPath)(environment, masterContents.node, instancePath);
        if (typeof instanceNode === 'string') {
            return {
                error: `Could not generate "${identifier}" – the path "${instancePath}" could not be derived for entity "${entityId}": ${instanceNode}`,
                status: 'error',
            };
        }
        return { bytecode: instanceNode.publicKey, status: 'success' };
    },
}));
/* eslint-disable camelcase, @typescript-eslint/naming-convention */
const compilerOperationsCommon = {
    addressData: compilerOperationAddressData,
    currentBlockHeight: compilerOperationCurrentBlockHeight,
    currentBlockTime: compilerOperationCurrentBlockTime,
    hdKey: {
        public_key: compilerOperationHdKeyPublicKeyCommon,
    },
    key: {
        public_key: compilerOperationKeyPublicKeyCommon,
    },
    signingSerialization: {
        corresponding_output: compilerOperationSigningSerializationCorrespondingOutput,
        corresponding_output_hash: compilerOperationSigningSerializationCorrespondingOutputHash,
        covered_bytecode: compilerOperationSigningSerializationCoveredBytecode,
        covered_bytecode_length: compilerOperationSigningSerializationCoveredBytecodeLength,
        locktime: compilerOperationSigningSerializationLocktime,
        outpoint_index: compilerOperationSigningSerializationOutpointIndex,
        outpoint_transaction_hash: compilerOperationSigningSerializationOutpointTransactionHash,
        output_value: compilerOperationSigningSerializationOutputValue,
        sequence_number: compilerOperationSigningSerializationSequenceNumber,
        transaction_outpoints: compilerOperationSigningSerializationTransactionOutpoints,
        transaction_outpoints_hash: compilerOperationSigningSerializationTransactionOutpointsHash,
        transaction_outputs: compilerOperationSigningSerializationTransactionOutputs,
        transaction_outputs_hash: compilerOperationSigningSerializationTransactionOutputsHash,
        transaction_sequence_numbers: compilerOperationSigningSerializationTransactionSequenceNumbers,
        transaction_sequence_numbers_hash: compilerOperationSigningSerializationTransactionSequenceNumbersHash,
        version: compilerOperationSigningSerializationVersion,
    },
    walletData: compilerOperationWalletData,
};
/* eslint-enable camelcase, @typescript-eslint/naming-convention */
//# sourceMappingURL=compiler-operations.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-types.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-types.js ***!
  \***********************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
/***/ (() => {

//# sourceMappingURL=compiler-types.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/compiler.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export authenticationTemplateToCompilationEnvironment [provided] [no usage info] [missing usage info prevents renaming] */
/*! export authenticationTemplateToCompilationEnvironmentVirtualizedTests [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createAuthenticationProgramEvaluationCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createCompiler [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createCompilerCommonSynchronous [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createCompiler": () => /* binding */ createCompiler,
/* harmony export */   "createAuthenticationProgramEvaluationCommon": () => /* binding */ createAuthenticationProgramEvaluationCommon,
/* harmony export */   "createCompilerCommonSynchronous": () => /* binding */ createCompilerCommonSynchronous,
/* harmony export */   "authenticationTemplateToCompilationEnvironment": () => /* binding */ authenticationTemplateToCompilationEnvironment,
/* harmony export */   "authenticationTemplateToCompilationEnvironmentVirtualizedTests": () => /* binding */ authenticationTemplateToCompilationEnvironmentVirtualizedTests
/* harmony export */ });
/* harmony import */ var _vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vm/instruction-sets/instruction-sets */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets.js");
/* harmony import */ var _compiler_defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./compiler-defaults */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-defaults.js");
/* harmony import */ var _compiler_operations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./compiler-operations */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js");
/* harmony import */ var _language_compile__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./language/compile */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js");
/* harmony import */ var _scenarios__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scenarios */ "./node_modules/@bitauth/libauth/build/module/lib/template/scenarios.js");





/**
 * Create a `Compiler` from the provided compilation environment. This method
 * requires a full `CompilationEnvironment` and does not instantiate any new
 * crypto or VM implementations.
 *
 * @param compilationEnvironment - the environment from which to create the
 * compiler
 */
const createCompiler = (compilationEnvironment) => ({
    environment: compilationEnvironment,
    generateBytecode: (scriptId, data, debug = false) => {
        const result = (0,_language_compile__WEBPACK_IMPORTED_MODULE_3__.compileScript)(scriptId, data, compilationEnvironment);
        return (debug
            ? result
            : result.success
                ? { bytecode: result.bytecode, success: true }
                : {
                    errorType: result.errorType,
                    errors: result.errors,
                    success: false,
                });
    },
    generateScenario: ({ unlockingScriptId, scenarioId }) => (0,_scenarios__WEBPACK_IMPORTED_MODULE_4__.generateScenarioCommon)({
        environment: compilationEnvironment,
        scenarioId,
        unlockingScriptId,
    }),
});
const nullHashLength = 32;
/**
 * A common `createAuthenticationProgram` implementation for most compilers.
 *
 * Accepts the compiled contents of an evaluation and produces a
 * `AuthenticationProgramCommon` which can be evaluated to produce the resulting
 * program state.
 *
 * The precise shape of the authentication program produced by this method is
 * critical to the determinism of BTL evaluations for the compiler in which it
 * is used, it therefore must be standardized between compiler implementations.
 *
 * @param evaluationBytecode - the compiled bytecode to incorporate in the
 * created authentication program
 */
const createAuthenticationProgramEvaluationCommon = (evaluationBytecode) => ({
    inputIndex: 0,
    sourceOutput: {
        lockingBytecode: evaluationBytecode,
        satoshis: Uint8Array.from([0, 0, 0, 0, 0, 0, 0, 0]),
    },
    spendingTransaction: {
        inputs: [
            {
                outpointIndex: 0,
                outpointTransactionHash: new Uint8Array(nullHashLength),
                sequenceNumber: 0,
                unlockingBytecode: Uint8Array.of(),
            },
        ],
        locktime: 0,
        outputs: [
            {
                lockingBytecode: Uint8Array.of(),
                satoshis: Uint8Array.from([0, 0, 0, 0, 0, 0, 0, 0]),
            },
        ],
        version: 0,
    },
});
/**
 * Synchronously create a compiler using the default common environment. Because
 * this compiler has no access to Secp256k1, Sha256, or a VM, it cannot compile
 * evaluations or operations which require key derivation or hashing.
 *
 * @param scriptsAndOverrides - a compilation environment from which properties
 * will be used to override properties of the default common compilation
 * environment – must include the `scripts` property
 */
const createCompilerCommonSynchronous = (scriptsAndOverrides) => {
    return createCompiler({
        ...{
            createAuthenticationProgram: createAuthenticationProgramEvaluationCommon,
            opcodes: (0,_vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_0__.generateBytecodeMap)(_vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon),
            operations: _compiler_operations__WEBPACK_IMPORTED_MODULE_2__.compilerOperationsCommon,
        },
        ...scriptsAndOverrides,
    });
};
/**
 * Create a partial `CompilationEnvironment` from an `AuthenticationTemplate` by
 * extracting and formatting the `scripts` and `variables` properties.
 *
 * Note, if this `AuthenticationTemplate` might be malformed, first validate it
 * with `validateAuthenticationTemplate`.
 *
 * @param template - the `AuthenticationTemplate` from which to extract the
 * compilation environment
 */
const authenticationTemplateToCompilationEnvironment = (template) => {
    const scripts = Object.entries(template.scripts).reduce((all, [id, def]) => ({ ...all, [id]: def.script }), {});
    const variables = Object.values(template.entities).reduce((all, entity) => ({ ...all, ...entity.variables }), {});
    const entityOwnership = Object.entries(template.entities).reduce((all, [entityId, entity]) => ({
        ...all,
        ...Object.keys(entity.variables ?? {}).reduce((entityVariables, variableId) => ({
            ...entityVariables,
            [variableId]: entityId,
        }), {}),
    }), {});
    const unlockingScripts = Object.entries(template.scripts).reduce((all, [id, def]) => 'unlocks' in def && def.unlocks !== undefined
        ? { ...all, [id]: def.unlocks }
        : all, {});
    const unlockingScriptTimeLockTypes = Object.entries(template.scripts).reduce((all, [id, def]) => 'timeLockType' in def && def.timeLockType !== undefined
        ? { ...all, [id]: def.timeLockType }
        : all, {});
    const lockingScriptTypes = Object.entries(template.scripts).reduce((all, [id, def]) => 'lockingType' in def &&
        def.lockingType !== undefined
        ? { ...all, [id]: def.lockingType }
        : all, {});
    const scenarios = template.scenarios === undefined
        ? undefined
        : Object.entries(template.scenarios).reduce((all, [id, def]) => ({ ...all, [id]: def }), {});
    return {
        entityOwnership,
        lockingScriptTypes,
        ...(scenarios === undefined ? {} : { scenarios }),
        scripts,
        unlockingScriptTimeLockTypes,
        unlockingScripts,
        variables,
    };
};
/**
 * Create a partial `CompilationEnvironment` from an `AuthenticationTemplate`,
 * virtualizing all script tests as unlocking and locking script pairs.
 *
 * @param template - the authentication template from which to extract the
 * compilation environment
 */
const authenticationTemplateToCompilationEnvironmentVirtualizedTests = (template) => {
    const virtualizedScripts = Object.entries(template.scripts).reduce((all, [scriptId, script]) => {
        if ('tests' in script) {
            return {
                ...all,
                ...script.tests.reduce((tests, test, index) => {
                    const pushTestedScript = script.pushed === true;
                    const checkScriptId = `${_compiler_defaults__WEBPACK_IMPORTED_MODULE_1__.CompilerDefaults.virtualizedTestCheckScriptPrefix}${scriptId}_${index}`;
                    const virtualizedLockingScriptId = `${_compiler_defaults__WEBPACK_IMPORTED_MODULE_1__.CompilerDefaults.virtualizedTestLockingScriptPrefix}${scriptId}_${index}`;
                    const virtualizedUnlockingScriptId = `${_compiler_defaults__WEBPACK_IMPORTED_MODULE_1__.CompilerDefaults.virtualizedTestUnlockingScriptPrefix}${scriptId}_${index}`;
                    return {
                        ...tests,
                        [checkScriptId]: { script: test.check },
                        [virtualizedLockingScriptId]: {
                            script: pushTestedScript
                                ? `<${scriptId}> ${checkScriptId}`
                                : `${scriptId} ${checkScriptId}`,
                        },
                        [virtualizedUnlockingScriptId]: {
                            script: test.setup ?? '',
                            unlocks: virtualizedLockingScriptId,
                        },
                    };
                }, {}),
            };
        }
        return all;
    }, {});
    const templateWithVirtualizedTests = {
        ...template,
        scripts: {
            ...template.scripts,
            ...virtualizedScripts,
        },
    };
    return authenticationTemplateToCompilationEnvironment(templateWithVirtualizedTests);
};
//# sourceMappingURL=compiler.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js ***!
  \*************************************************************************************/
/*! namespace exports */
/*! export compileScript [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compileScriptContents [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compileScriptP2shLocking [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compileScriptP2shUnlocking [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compileScriptRaw [provided] [no usage info] [missing usage info prevents renaming] */
/*! export describeExpectedInput [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "describeExpectedInput": () => /* binding */ describeExpectedInput,
/* harmony export */   "compileScriptContents": () => /* binding */ compileScriptContents,
/* harmony export */   "compileScriptRaw": () => /* binding */ compileScriptRaw,
/* harmony export */   "compileScriptP2shLocking": () => /* binding */ compileScriptP2shLocking,
/* harmony export */   "compileScriptP2shUnlocking": () => /* binding */ compileScriptP2shUnlocking,
/* harmony export */   "compileScript": () => /* binding */ compileScript
/* harmony export */ });
/* harmony import */ var _compiler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../compiler */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler.js");
/* harmony import */ var _language_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./language-utils */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js");
/* harmony import */ var _parse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parse */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/parse.js");
/* harmony import */ var _reduce__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reduce */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/reduce.js");
/* harmony import */ var _resolve__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./resolve */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/resolve.js");





/**
 * A text-formatting method to pretty-print the list of expected inputs
 * (`Encountered unexpected input while parsing script. Expected ...`). If
 * present, the `EOF` expectation is always moved to the end of the list.
 * @param expectedArray - the alphabetized list of expected inputs produced by
 * `parseScript`
 */
const describeExpectedInput = (expectedArray) => {
    /**
     * The constant used by the parser to denote the end of the input
     */
    const EOF = 'EOF';
    const newArray = expectedArray.filter((value) => value !== EOF);
    // eslint-disable-next-line functional/no-conditional-statement
    if (newArray.length !== expectedArray.length) {
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        newArray.push('the end of the script');
    }
    const withoutLastElement = newArray.slice(0, newArray.length - 1);
    const lastElement = newArray[newArray.length - 1];
    const arrayRequiresCommas = 3;
    const arrayRequiresOr = 2;
    return `Encountered unexpected input while parsing script. Expected ${newArray.length >= arrayRequiresCommas
        ? withoutLastElement.join(', ').concat(`, or ${lastElement}`)
        : newArray.length === arrayRequiresOr
            ? newArray.join(' or ')
            : lastElement}.`;
};
/**
 * This method is generally for internal use. The `compileScript` method is the
 * recommended API for direct compilation.
 */
const compileScriptContents = ({ data, environment, script, }) => {
    const parseResult = (0,_parse__WEBPACK_IMPORTED_MODULE_2__.parseScript)(script);
    if (!parseResult.status) {
        return {
            errorType: 'parse',
            errors: [
                {
                    error: describeExpectedInput(parseResult.expected),
                    range: {
                        endColumn: parseResult.index.column,
                        endLineNumber: parseResult.index.line,
                        startColumn: parseResult.index.column,
                        startLineNumber: parseResult.index.line,
                    },
                },
            ],
            success: false,
        };
    }
    const resolver = (0,_resolve__WEBPACK_IMPORTED_MODULE_4__.createIdentifierResolver)({ data, environment });
    const resolvedScript = (0,_resolve__WEBPACK_IMPORTED_MODULE_4__.resolveScriptSegment)(parseResult.value, resolver);
    const resolutionErrors = (0,_language_utils__WEBPACK_IMPORTED_MODULE_1__.getResolutionErrors)(resolvedScript);
    if (resolutionErrors.length !== 0) {
        return {
            errorType: 'resolve',
            errors: resolutionErrors,
            parse: parseResult.value,
            resolve: resolvedScript,
            success: false,
        };
    }
    const reduction = (0,_reduce__WEBPACK_IMPORTED_MODULE_3__.reduceScript)(resolvedScript, environment.vm, environment.createAuthenticationProgram);
    return {
        ...(reduction.errors === undefined
            ? { bytecode: reduction.bytecode, success: true }
            : { errorType: 'reduce', errors: reduction.errors, success: false }),
        parse: parseResult.value,
        reduce: reduction,
        resolve: resolvedScript,
    };
};
const emptyRange = () => ({
    endColumn: 0,
    endLineNumber: 0,
    startColumn: 0,
    startLineNumber: 0,
});
/**
 * This method is generally for internal use. The `compileScript` method is the
 * recommended API for direct compilation.
 */
const compileScriptRaw = ({ data, environment, scriptId, }) => {
    const script = environment.scripts[scriptId];
    if (script === undefined) {
        return {
            errorType: 'parse',
            errors: [
                {
                    error: `No script with an ID of "${scriptId}" was provided in the compilation environment.`,
                    range: emptyRange(),
                },
            ],
            success: false,
        };
    }
    if (environment.sourceScriptIds?.includes(scriptId) === true) {
        return {
            errorType: 'parse',
            errors: [
                {
                    error: `A circular dependency was encountered: script "${scriptId}" relies on itself to be generated. (Source scripts: ${environment.sourceScriptIds.join(' → ')})`,
                    range: emptyRange(),
                },
            ],
            success: false,
        };
    }
    const sourceScriptIds = environment.sourceScriptIds === undefined
        ? [scriptId]
        : [...environment.sourceScriptIds, scriptId];
    return compileScriptContents({
        data,
        environment: { ...environment, sourceScriptIds },
        script,
    });
};
const compileScriptP2shLocking = ({ lockingBytecode, vm, }) => {
    const compiler = (0,_compiler__WEBPACK_IMPORTED_MODULE_0__.createCompilerCommonSynchronous)({
        scripts: {
            p2shLocking: 'OP_HASH160 <$(<lockingBytecode> OP_HASH160)> OP_EQUAL',
        },
        variables: { lockingBytecode: { type: 'AddressData' } },
        vm,
    });
    return compiler.generateBytecode('p2shLocking', {
        bytecode: { lockingBytecode },
    });
};
const compileScriptP2shUnlocking = ({ lockingBytecode, unlockingBytecode, }) => {
    const compiler = (0,_compiler__WEBPACK_IMPORTED_MODULE_0__.createCompilerCommonSynchronous)({
        scripts: {
            p2shUnlocking: 'unlockingBytecode <lockingBytecode>',
        },
        variables: {
            lockingBytecode: { type: 'AddressData' },
            unlockingBytecode: { type: 'AddressData' },
        },
    });
    return compiler.generateBytecode('p2shUnlocking', {
        bytecode: { lockingBytecode, unlockingBytecode },
    });
};
/**
 * Parse, resolve, and reduce the selected script using the provided `data` and
 * `environment`.
 *
 * Note, locktime validation only occurs if `transactionContext` is provided in
 * the environment.
 */
// eslint-disable-next-line complexity
const compileScript = (scriptId, data, environment) => {
    const locktimeDisablingSequenceNumber = 0xffffffff;
    const lockTimeTypeBecomesTimestamp = 500000000;
    if (data.transactionContext?.locktime !== undefined) {
        if (environment.unlockingScriptTimeLockTypes?.[scriptId] === 'height' &&
            data.transactionContext.locktime >= lockTimeTypeBecomesTimestamp) {
            return {
                errorType: 'parse',
                errors: [
                    {
                        error: `The script "${scriptId}" requires a height-based locktime (less than 500,000,000), but this transaction uses a timestamp-based locktime ("${data.transactionContext.locktime}").`,
                        range: emptyRange(),
                    },
                ],
                success: false,
            };
        }
        if (environment.unlockingScriptTimeLockTypes?.[scriptId] === 'timestamp' &&
            data.transactionContext.locktime < lockTimeTypeBecomesTimestamp) {
            return {
                errorType: 'parse',
                errors: [
                    {
                        error: `The script "${scriptId}" requires a timestamp-based locktime (greater than or equal to 500,000,000), but this transaction uses a height-based locktime ("${data.transactionContext.locktime}").`,
                        range: emptyRange(),
                    },
                ],
                success: false,
            };
        }
    }
    if (data.transactionContext?.sequenceNumber !== undefined &&
        environment.unlockingScriptTimeLockTypes?.[scriptId] !== undefined &&
        data.transactionContext.sequenceNumber === locktimeDisablingSequenceNumber) {
        return {
            errorType: 'parse',
            errors: [
                {
                    error: `The script "${scriptId}" requires a locktime, but this input's sequence number is set to disable transaction locktime (0xffffffff). This will cause the OP_CHECKLOCKTIMEVERIFY operation to error when the transaction is verified. To be valid, this input must use a sequence number which does not disable locktime.`,
                    range: emptyRange(),
                },
            ],
            success: false,
        };
    }
    const rawResult = compileScriptRaw({
        data,
        environment,
        scriptId,
    });
    if (!rawResult.success) {
        return rawResult;
    }
    const unlocks = environment.unlockingScripts?.[scriptId];
    const unlockingScriptType = unlocks === undefined
        ? undefined
        : environment.lockingScriptTypes?.[unlocks];
    const isP2shUnlockingScript = unlockingScriptType === 'p2sh';
    const lockingScriptType = environment.lockingScriptTypes?.[scriptId];
    const isP2shLockingScript = lockingScriptType === 'p2sh';
    if (isP2shLockingScript) {
        const transformedResult = compileScriptP2shLocking({
            lockingBytecode: rawResult.bytecode,
            vm: environment.vm,
        });
        if (!transformedResult.success) {
            return transformedResult;
        }
        return {
            ...rawResult,
            bytecode: transformedResult.bytecode,
            transformed: 'p2sh-locking',
        };
    }
    if (isP2shUnlockingScript) {
        const lockingBytecodeResult = compileScriptRaw({
            data,
            environment,
            scriptId: unlocks,
        });
        if (!lockingBytecodeResult.success) {
            return lockingBytecodeResult;
        }
        const transformedResult = compileScriptP2shUnlocking({
            lockingBytecode: lockingBytecodeResult.bytecode,
            unlockingBytecode: rawResult.bytecode,
        });
        return {
            ...rawResult,
            bytecode: transformedResult.bytecode,
            transformed: 'p2sh-unlocking',
        };
    }
    return rawResult;
};
//# sourceMappingURL=compile.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language-types.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-types.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! export IdentifierResolutionErrorType [provided] [no usage info] [missing usage info prevents renaming] */
/*! export IdentifierResolutionType [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IdentifierResolutionType": () => /* binding */ IdentifierResolutionType,
/* harmony export */   "IdentifierResolutionErrorType": () => /* binding */ IdentifierResolutionErrorType
/* harmony export */ });
var IdentifierResolutionType;
(function (IdentifierResolutionType) {
    IdentifierResolutionType["opcode"] = "opcode";
    IdentifierResolutionType["variable"] = "variable";
    IdentifierResolutionType["script"] = "script";
})(IdentifierResolutionType || (IdentifierResolutionType = {}));
var IdentifierResolutionErrorType;
(function (IdentifierResolutionErrorType) {
    IdentifierResolutionErrorType["unknown"] = "unknown";
    IdentifierResolutionErrorType["variable"] = "variable";
    IdentifierResolutionErrorType["script"] = "script";
})(IdentifierResolutionErrorType || (IdentifierResolutionErrorType = {}));
//# sourceMappingURL=language-types.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! export allErrorsAreRecoverable [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compileBtl [provided] [no usage info] [missing usage info prevents renaming] */
/*! export containsRange [provided] [no usage info] [missing usage info prevents renaming] */
/*! export extractBytecodeResolutions [provided] [no usage info] [missing usage info prevents renaming] */
/*! export extractEvaluationSamples [provided] [no usage info] [missing usage info prevents renaming] */
/*! export extractEvaluationSamplesRecursive [provided] [no usage info] [missing usage info prevents renaming] */
/*! export extractResolvedVariableBytecodeMap [provided] [no usage info] [missing usage info prevents renaming] */
/*! export extractUnexecutedRanges [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getResolutionErrors [provided] [no usage info] [missing usage info prevents renaming] */
/*! export mergeRanges [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stringifyErrors [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mergeRanges": () => /* binding */ mergeRanges,
/* harmony export */   "containsRange": () => /* binding */ containsRange,
/* harmony export */   "compileBtl": () => /* binding */ compileBtl,
/* harmony export */   "getResolutionErrors": () => /* binding */ getResolutionErrors,
/* harmony export */   "allErrorsAreRecoverable": () => /* binding */ allErrorsAreRecoverable,
/* harmony export */   "extractBytecodeResolutions": () => /* binding */ extractBytecodeResolutions,
/* harmony export */   "extractResolvedVariableBytecodeMap": () => /* binding */ extractResolvedVariableBytecodeMap,
/* harmony export */   "stringifyErrors": () => /* binding */ stringifyErrors,
/* harmony export */   "extractEvaluationSamples": () => /* binding */ extractEvaluationSamples,
/* harmony export */   "extractEvaluationSamplesRecursive": () => /* binding */ extractEvaluationSamplesRecursive,
/* harmony export */   "extractUnexecutedRanges": () => /* binding */ extractUnexecutedRanges
/* harmony export */ });
/* harmony import */ var _format_hex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../format/hex */ "./node_modules/@bitauth/libauth/build/module/lib/format/hex.js");
/* harmony import */ var _vm_instruction_sets_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vm/instruction-sets/instruction-sets-utils */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js");
/* harmony import */ var _compiler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../compiler */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler.js");



const pluckStartPosition = (range) => ({
    startColumn: range.startColumn,
    startLineNumber: range.startLineNumber,
});
const pluckEndPosition = (range) => ({
    endColumn: range.endColumn,
    endLineNumber: range.endLineNumber,
});
/**
 * Combine an array of `Range`s into a single larger `Range`.
 *
 * @param ranges - an array of `Range`s
 * @param parentRange - the range to assume if `ranges` is an empty array
 */
const mergeRanges = (ranges, parentRange = {
    endColumn: 0,
    endLineNumber: 0,
    startColumn: 0,
    startLineNumber: 0,
}) => {
    const minimumRangesToMerge = 2;
    const unsortedMerged = ranges.length < minimumRangesToMerge
        ? ranges.length === 1
            ? ranges[0]
            : parentRange
        : ranges.reduce(
        // eslint-disable-next-line complexity
        (merged, range) => ({
            ...(range.endLineNumber > merged.endLineNumber
                ? pluckEndPosition(range)
                : range.endLineNumber === merged.endLineNumber &&
                    range.endColumn > merged.endColumn
                    ? pluckEndPosition(range)
                    : pluckEndPosition(merged)),
            ...(range.startLineNumber < merged.startLineNumber
                ? pluckStartPosition(range)
                : range.startLineNumber === merged.startLineNumber &&
                    range.startColumn < merged.startColumn
                    ? pluckStartPosition(range)
                    : pluckStartPosition(merged)),
        }), ranges[0]);
    return {
        ...pluckEndPosition(unsortedMerged),
        ...pluckStartPosition(unsortedMerged),
    };
};
/**
 * Returns true if the `outerRange` fully contains the `innerRange`, otherwise,
 * `false`.
 *
 * @param outerRange - the bounds of the outer range
 * @param innerRange - the inner range to test
 * @param exclusive - disallow the `innerRange` from overlapping the
 * `outerRange` (such that the outer start and end columns may not be equal) –
 * defaults to `true`
 */
// eslint-disable-next-line complexity
const containsRange = (outerRange, innerRange, exclusive = true) => {
    const startsAfter = outerRange.startLineNumber < innerRange.startLineNumber
        ? true
        : outerRange.startLineNumber === innerRange.startLineNumber
            ? exclusive
                ? outerRange.startColumn < innerRange.startColumn
                : outerRange.startColumn <= innerRange.startColumn
            : false;
    const endsBefore = outerRange.endLineNumber > innerRange.endLineNumber
        ? true
        : outerRange.endLineNumber === innerRange.endLineNumber
            ? exclusive
                ? outerRange.endColumn > innerRange.endColumn
                : outerRange.endColumn >= innerRange.endColumn
            : false;
    return startsAfter && endsBefore;
};
/**
 * Perform a simplified compilation on a Bitauth Templating Language (BTL)
 * script containing only hex literals, bigint literals, UTF8 literals, and push
 * statements. Scripts may not contain variables/operations, evaluations, or
 * opcode identifiers (use hex literals instead).
 *
 * This is useful for accepting complex user input in advanced interfaces,
 * especially for `AddressData` and `WalletData`.
 *
 * Returns the compiled bytecode as a `Uint8Array`, or throws an error message.
 *
 * @param script - a simple BTL script containing no variables or evaluations
 */
const compileBtl = (script) => {
    const result = (0,_compiler__WEBPACK_IMPORTED_MODULE_2__.createCompilerCommonSynchronous)({
        scripts: { script },
    }).generateBytecode('script', {});
    if (result.success) {
        return result.bytecode;
    }
    return `BTL compilation error:${result.errors.reduce((all, { error, range }) => `${all} [${range.startLineNumber}, ${range.startColumn}]: ${error}`, '')}`;
};
/**
 * Extract a list of the errors which occurred while resolving a script.
 *
 * @param resolvedScript - the result of `resolveScript` from which to extract
 * errors
 */
const getResolutionErrors = (resolvedScript) => resolvedScript.reduce((errors, segment) => {
    switch (segment.type) {
        case 'error':
            return [
                ...errors,
                {
                    error: segment.value,
                    ...(segment.missingIdentifier === undefined
                        ? {}
                        : {
                            missingIdentifier: segment.missingIdentifier,
                            owningEntity: segment.owningEntity,
                        }),
                    range: segment.range,
                },
            ];
        case 'push':
        case 'evaluation':
            return [...errors, ...getResolutionErrors(segment.value)];
        default:
            return errors;
    }
}, []);
/**
 * Verify that every error in the provided array can be resolved by providing
 * additional variables in the compilation data (rather than deeper issues, like
 * problems with the authentication template or wallet implementation).
 *
 * Note, errors are only recoverable if the "entity ownership" of each missing
 * identifier is known (specified in `CompilationData`'s `entityOwnership`).
 *
 * @param errors - an array of compilation errors
 */
const allErrorsAreRecoverable = (errors) => errors.every((error) => 'missingIdentifier' in error && 'owningEntity' in error);
/**
 * Get an array of all resolutions used in a `ResolvedScript`.
 * @param resolvedScript - the resolved script to search
 */
const extractBytecodeResolutions = (resolvedScript) => 
// eslint-disable-next-line complexity
resolvedScript.reduce((all, segment) => {
    switch (segment.type) {
        case 'push':
        case 'evaluation':
            return [...all, ...extractBytecodeResolutions(segment.value)];
        case 'bytecode':
            if ('variable' in segment) {
                return [
                    ...all,
                    {
                        bytecode: segment.value,
                        text: segment.variable,
                        type: 'variable',
                    },
                ];
            }
            if ('script' in segment) {
                return [
                    ...all,
                    ...extractBytecodeResolutions(segment.source),
                    {
                        bytecode: segment.value,
                        text: segment.script,
                        type: 'script',
                    },
                ];
            }
            if ('opcode' in segment) {
                return [
                    ...all,
                    {
                        bytecode: segment.value,
                        text: segment.opcode,
                        type: 'opcode',
                    },
                ];
            }
            return [
                ...all,
                {
                    bytecode: segment.value,
                    text: segment.literal,
                    type: segment.literalType,
                },
            ];
        default:
            return all;
    }
}, []);
/**
 * Extract an object mapping the variable identifiers used in a `ResolvedScript`
 * to their resolved bytecode.
 *
 * @param resolvedScript - the resolved script to search
 */
const extractResolvedVariableBytecodeMap = (resolvedScript) => extractBytecodeResolutions(resolvedScript).reduce((all, resolution) => resolution.type === 'variable'
    ? { ...all, [resolution.text]: resolution.bytecode }
    : all, {});
/**
 * Format a list of `CompilationError`s into a single string, with an error
 * start position following each error. E.g. for line 1, column 2:
 * `The error message. [1, 2]`
 *
 * Errors are separated with the `separator`, which defaults to `; `, e.g.:
 * `The first error message. [1, 2]; The second error message. [3, 4]`
 *
 * @param errors - an array of compilation errors
 * @param separator - the characters with which to join the formatted errors.
 */
const stringifyErrors = (errors, separator = '; ') => {
    return `${errors
        .map((error) => `[${error.range.startLineNumber}, ${error.range.startColumn}] ${error.error}`)
        .join(separator)}`;
};
/**
 * Extract a set of "evaluation samples" from the result of a BTL compilation
 * and a matching debug trace (from `vm.debug`), pairing program states with the
 * source ranges which produced them – like a "source map" for complete
 * evaluations. This is useful for omniscient debuggers like Bitauth IDE.
 *
 * Returns an array of samples and an array of unmatched program states
 * remaining if `nodes` doesn't contain enough instructions to consume all
 * program states provided in `trace`. Returned samples are ordered by the
 * ending position (line and column) of their range.
 *
 * If all program states are consumed before the available nodes are exhausted,
 * the remaining nodes are ignored (the produced samples end at the last
 * instruction for which a program state exists). This usually occurs when an
 * error halts evaluation before the end of the script. (Note: if this occurs,
 * the final trace state will not be used, as it is expected to be the
 * duplicated final result produced by `vm.debug`, and should not be matched
 * with the next instruction. The returned `unmatchedStates` will have a length
 * of `0`.)
 *
 * This method allows for samples to be extracted from a single evaluation;
 * most applications should use `extractEvaluationSamplesRecursive` instead.
 *
 * @remarks
 * This method incrementally concatenates the reduced bytecode from each node,
 * parsing the result into evaluation samples.
 *
 * Each node can contain only a portion of an instruction (like a long push
 * operation), or it can contain multiple instructions (like a long hex literal
 * representing a string of bytecode or an evaluation which is not wrapped by a
 * push).
 *
 * If a node contains only a portion of an instruction, the bytecode from
 * additional nodes are concatenated (and ranges merged) until an instruction
 * can be created. If any bytecode remains after a sample has been created, the
 * next sample begins in the same range. (For this reason, it's possible that
 * samples overlap.)
 *
 * If a node contains more than one instruction, the intermediate states
 * produced before the final state for that sample are saved to the sample's
 * `intermediateStates` array.
 *
 * If the program states in `trace` are exhausted before the final instruction
 * in a sample (usually caused by an evaluation error), the last instruction
 * with a matching program state is used for the sample (with its program
 * state), and the unmatched instructions are ignored. (This allows the "last
 * known state" to be displayed for the sample which caused evaluation to halt.)
 *
 * ---
 *
 * For example, the following script demonstrates many of these cases:
 *
 * `0x00 0x01 0xab01 0xcd9300 $(OP_3 <0x00> OP_SWAP OP_CAT) 0x010203`
 *
 * Which compiles to `0x0001ab01cd93000003010203`, disassembled:
 *
 * `OP_0 OP_PUSHBYTES_1 0xab OP_PUSHBYTES_1 0xcd OP_ADD OP_0 OP_0 OP_PUSHBYTES_3 0x010203`
 *
 * In the script, there are 6 top-level nodes (identified below within `[]`):
 *
 * `[0x00] [0x01] [0xab01] [0xcd9300] [$(OP_3 <0x00> OP_SWAP OP_CAT)] [0x010203]`
 *
 * These nodes together encode 7 instructions, some within a single node, and
 * some split between several nodes. Below we substitute the evaluation for its
 * result `0x0003` to group instructions by `[]`:
 *
 * `[0x00] [0x01 0xab][01 0xcd][93][00] [0x00][03 0x010203]`
 *
 * The "resolution" of samples is limited to the range of single nodes: nodes
 * cannot always be introspected to determine where contained instructions begin
 * and end. For example, it is ambiguous which portions of the evaluation are
 * responsible for the initial `0x00` and which are responsible for the `0x03`.
 *
 * For this reason, the range of each sample is limited to the range(s) of one
 * or more adjacent nodes. Samples may overlap in the range of a node which is
 * responsible for both ending a previous sample and beginning a new sample.
 * (Though, only 2 samples can overlap. If a node is responsible for more than 2
 * instructions, the second sample includes `internalStates` for instructions
 * which occur before the end of the second sample.)
 *
 * In this case, there are 6 samples identified below within `[]`, where each
 * `[` is closed by the closest following `]` (no nesting):
 *
 * `[0x00] [0x01 [0xab01] [0xcd9300]] [[$(OP_3 <0x00> OP_SWAP OP_CAT)] 0x010203]`
 *
 * The ranges for each sample (in terms of nodes) are as follows:
 * - Sample 1: node 1
 * - Sample 2: node 2 + node 3
 * - Sample 3: node 3 + node 4
 * - Sample 4: node 4
 * - Sample 5: node 5
 * - Sample 6: node 5 + node 6
 *
 * Note that the following samples overlap:
 * - Sample 2 and Sample 3
 * - Sample 3 and Sample 4
 * - Sample 5 and Sample 6
 *
 * Finally, note that Sample 4 will have one internal state produced by the
 * `OP_ADD` instruction. Sample 4 then ends with the `OP_0` (`0x00`) instruction
 * at the end of the `0xcd9300` node.
 *
 * ---
 *
 * Note, this implementation relies on the expectation that `trace` begins with
 * the initial program state, contains a single program state per instruction,
 * and ends with the final program state (as produced by `vm.debug`). It also
 * expects the `bytecode` provided by nodes to be parsable by `parseBytecode`.
 *
 * @param evaluationRange - the range of the script node which was evaluated to
 * produce the `trace`
 * @param nodes - an array of reduced nodes to parse
 * @param trace - the `vm.debug` result to map to these nodes
 */
// eslint-disable-next-line complexity
const extractEvaluationSamples = ({ evaluationRange, nodes, trace, }) => {
    const traceWithoutFinalState = trace.length > 1 ? trace.slice(0, -1) : trace.slice();
    if (traceWithoutFinalState.length === 0) {
        return {
            samples: [],
            unmatchedStates: [],
        };
    }
    const samples = [
        {
            evaluationRange,
            internalStates: [],
            range: {
                endColumn: evaluationRange.startColumn,
                endLineNumber: evaluationRange.startLineNumber,
                startColumn: evaluationRange.startColumn,
                startLineNumber: evaluationRange.startLineNumber,
            },
            state: traceWithoutFinalState[0],
        },
    ];
    // eslint-disable-next-line functional/no-let
    let nextState = 1;
    // eslint-disable-next-line functional/no-let
    let nextNode = 0;
    // eslint-disable-next-line functional/no-let, @typescript-eslint/init-declarations
    let incomplete;
    // eslint-disable-next-line functional/no-loop-statement
    while (nextState < traceWithoutFinalState.length && nextNode < nodes.length) {
        const currentNode = nodes[nextNode];
        const { mergedBytecode, mergedRange } = incomplete === undefined
            ? {
                mergedBytecode: currentNode.bytecode,
                mergedRange: currentNode.range,
            }
            : {
                mergedBytecode: (0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([
                    incomplete.bytecode,
                    currentNode.bytecode,
                ]),
                mergedRange: mergeRanges([incomplete.range, currentNode.range]),
            };
        const parsed = (0,_vm_instruction_sets_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_1__.parseBytecode)(mergedBytecode);
        const hasNonMalformedInstructions = parsed.length !== 0 && !('malformed' in parsed[0]);
        if (hasNonMalformedInstructions) {
            const lastInstruction = parsed[parsed.length - 1];
            const validInstructions = ((0,_vm_instruction_sets_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_1__.authenticationInstructionIsMalformed)(lastInstruction)
                ? parsed.slice(0, parsed.length - 1)
                : parsed);
            const firstUnmatchedStateIndex = nextState + validInstructions.length;
            const matchingStates = traceWithoutFinalState.slice(nextState, firstUnmatchedStateIndex);
            const pairedStates = validInstructions.map((instruction, index) => ({
                instruction,
                state: matchingStates[index],
            }));
            /**
             * Guaranteed to have a defined `state` (or the loop would have exited).
             */
            const firstPairedState = pairedStates[0];
            const closesCurrentlyOpenSample = incomplete !== undefined;
            // eslint-disable-next-line functional/no-conditional-statement
            if (closesCurrentlyOpenSample) {
                // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
                samples.push({
                    evaluationRange,
                    instruction: firstPairedState.instruction,
                    internalStates: [],
                    range: mergedRange,
                    state: firstPairedState.state,
                });
            }
            const firstUndefinedStateIndex = pairedStates.findIndex(({ state }) => state === undefined);
            const sampleHasError = firstUndefinedStateIndex !== -1;
            const sampleClosingIndex = sampleHasError
                ? firstUndefinedStateIndex - 1
                : pairedStates.length - 1;
            const closesASecondSample = !closesCurrentlyOpenSample || sampleClosingIndex > 0;
            // eslint-disable-next-line functional/no-conditional-statement
            if (closesASecondSample) {
                const finalState = pairedStates[sampleClosingIndex];
                const secondSamplePairsBegin = closesCurrentlyOpenSample ? 1 : 0;
                const internalStates = pairedStates.slice(secondSamplePairsBegin, sampleClosingIndex);
                // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
                samples.push({
                    evaluationRange,
                    instruction: finalState.instruction,
                    internalStates,
                    range: currentNode.range,
                    state: finalState.state,
                });
            }
            // eslint-disable-next-line functional/no-expression-statement
            nextState = firstUnmatchedStateIndex;
            // eslint-disable-next-line functional/no-conditional-statement
            if ((0,_vm_instruction_sets_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_1__.authenticationInstructionIsMalformed)(lastInstruction)) {
                // eslint-disable-next-line functional/no-expression-statement
                incomplete = {
                    bytecode: (0,_vm_instruction_sets_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_1__.serializeParsedAuthenticationInstructionMalformed)(lastInstruction),
                    range: currentNode.range,
                };
                // eslint-disable-next-line functional/no-conditional-statement
            }
            else {
                // eslint-disable-next-line functional/no-expression-statement
                incomplete = undefined;
            }
            // eslint-disable-next-line functional/no-conditional-statement
        }
        else {
            const lastInstruction = parsed[parsed.length - 1];
            // eslint-disable-next-line functional/no-expression-statement
            incomplete =
                lastInstruction === undefined
                    ? undefined
                    : {
                        bytecode: (0,_vm_instruction_sets_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_1__.serializeParsedAuthenticationInstructionMalformed)(lastInstruction),
                        range: mergedRange,
                    };
        }
        // eslint-disable-next-line functional/no-expression-statement
        nextNode += 1;
    }
    /**
     * Because we ran out of `trace` states before all `nodes` were matched, we
     * know an error occurred which halted evaluation. This error is indicated in
     * the result by returning an empty array of `unmatchedStates`. Successful
     * evaluations will always return at least one unmatched state: the final
     * "evaluation result" state produced by `vm.debug`.
     */
    const errorOccurred = nextNode < nodes.length;
    const unmatchedStates = errorOccurred
        ? []
        : trace.slice(nextState);
    return {
        samples,
        unmatchedStates,
    };
};
/**
 * Similar to `extractEvaluationSamples`, but recursively extracts samples from
 * evaluations within the provided array of nodes.
 *
 * Because BTL evaluations are fully self-contained, there should never be
 * unmatched states from evaluations within a script reduction trace tree. (For
 * this reason, this method does not return the `unmatchedStates` from nested
 * evaluations.)
 *
 * Returned samples are ordered by the ending position (line and column) of
 * their range. Samples from BTL evaluations which occur within an outer
 * evaluation appear before their parent sample (which uses their result).
 *
 * @param evaluationRange - the range of the script node which was evaluated to
 * produce the `trace`
 * @param nodes - an array of reduced nodes to parse
 * @param trace - the `vm.debug` result to map to these nodes
 */
const extractEvaluationSamplesRecursive = ({ evaluationRange, nodes, trace, }) => {
    const extractEvaluations = (node, depth = 1) => {
        if ('push' in node) {
            return node.push.script.reduce((all, childNode) => [...all, ...extractEvaluations(childNode, depth)], []);
        }
        if ('source' in node) {
            const childSamples = node.source.script.reduce((all, childNode) => [
                ...all,
                ...extractEvaluations(childNode, depth + 1),
            ], []);
            const traceWithoutUnlockingPhase = node.trace.slice(1);
            const evaluationBeginToken = '$(';
            const evaluationEndToken = ')';
            const extracted = extractEvaluationSamples({
                evaluationRange: {
                    endColumn: node.range.endColumn - evaluationEndToken.length,
                    endLineNumber: node.range.endLineNumber,
                    startColumn: node.range.startColumn + evaluationBeginToken.length,
                    startLineNumber: node.range.startLineNumber,
                },
                nodes: node.source.script,
                trace: traceWithoutUnlockingPhase,
            });
            return [...extracted.samples, ...childSamples];
        }
        return [];
    };
    const { samples, unmatchedStates } = extractEvaluationSamples({
        evaluationRange,
        nodes,
        trace,
    });
    const childSamples = nodes.reduce((all, node) => [...all, ...extractEvaluations(node)], []);
    const endingOrderedSamples = [...samples, ...childSamples].sort((a, b) => {
        const linesOrdered = a.range.endLineNumber - b.range.endLineNumber;
        return linesOrdered === 0
            ? a.range.endColumn - b.range.endColumn
            : linesOrdered;
    });
    return {
        samples: endingOrderedSamples,
        unmatchedStates,
    };
};
const stateIsExecuting = (state) => state.executionStack.every((item) => item);
/**
 * Extract an array of ranges which were unused by an evaluation. This is useful
 * in development tooling for fading out or hiding code which is unimportant to
 * the current evaluation being tested.
 *
 * @remarks
 * Only ranges which are guaranteed to be unimportant to an evaluation are
 * returned by this method. These ranges are extracted from samples which:
 * - are preceded by a sample which ends with execution disabled (e.g. an
 * unsuccessful `OP_IF`)
 * - end with execution disabled, and
 * - contain no `internalStates` which enable execution.
 *
 * Note, internal states which temporarily re-enable and then disable execution
 * again can still have an effect on the parent evaluation, so this method
 * conservatively excludes such samples. For example, the hex literal
 * `0x675167`, which encodes `OP_ELSE OP_1 OP_ELSE`, could begin and end with
 * states in which execution is disabled, yet a `1` is pushed to the stack
 * during the sample's evaluation. (Samples like this are unusual, and can
 * almost always be reformatted to clearly separate the executed and unexecuted
 * instructions.)
 *
 * @param samples - an array of samples ordered by the ending position (line and
 * column) of their range.
 * @param evaluationBegins - the line and column at which the initial sample's
 * evaluation range begins (where the preceding state is assumed to be
 * executing), defaults to `1,1`
 */
const extractUnexecutedRanges = (samples, evaluationBegins = '1,1') => {
    const reduced = samples.reduce((all, sample) => {
        const { precedingStateSkipsByEvaluation, unexecutedRanges } = all;
        const currentEvaluationStartLineAndColumn = `${sample.evaluationRange.startLineNumber},${sample.evaluationRange.startColumn}`;
        const precedingStateSkips = precedingStateSkipsByEvaluation[currentEvaluationStartLineAndColumn];
        const endsWithSkip = !stateIsExecuting(sample.state);
        const sampleHasNoExecutedInstructions = endsWithSkip &&
            sample.internalStates.every((group) => !stateIsExecuting(group.state));
        if (precedingStateSkips && sampleHasNoExecutedInstructions) {
            return {
                precedingStateSkipsByEvaluation: {
                    ...precedingStateSkipsByEvaluation,
                    [currentEvaluationStartLineAndColumn]: true,
                },
                unexecutedRanges: [...unexecutedRanges, sample.range],
            };
        }
        return {
            precedingStateSkipsByEvaluation: {
                ...precedingStateSkipsByEvaluation,
                [currentEvaluationStartLineAndColumn]: endsWithSkip,
            },
            unexecutedRanges,
        };
    }, {
        precedingStateSkipsByEvaluation: {
            [evaluationBegins]: false,
        },
        unexecutedRanges: [],
    });
    const canHaveContainedRanges = 2;
    const containedRangesExcluded = reduced.unexecutedRanges.length < canHaveContainedRanges
        ? reduced.unexecutedRanges
        : reduced.unexecutedRanges.slice(0, -1).reduceRight((all, range) => {
            if (containsRange(all[0], range)) {
                return all;
            }
            return [range, ...all];
        }, [reduced.unexecutedRanges[reduced.unexecutedRanges.length - 1]]);
    return containedRangesExcluded;
};
//# sourceMappingURL=language-utils.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/language/language.js ***!
  \**************************************************************************************/
/*! namespace exports */
/*! export BuiltInVariables [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/resolve.js .BuiltInVariables */
/*! export IdentifierResolutionErrorType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-types.js .IdentifierResolutionErrorType */
/*! export IdentifierResolutionType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-types.js .IdentifierResolutionType */
/*! export allErrorsAreRecoverable [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js .allErrorsAreRecoverable */
/*! export compileBtl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js .compileBtl */
/*! export compileScript [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js .compileScript */
/*! export compileScriptContents [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js .compileScriptContents */
/*! export compileScriptP2shLocking [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js .compileScriptP2shLocking */
/*! export compileScriptP2shUnlocking [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js .compileScriptP2shUnlocking */
/*! export compileScriptRaw [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js .compileScriptRaw */
/*! export containsRange [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js .containsRange */
/*! export createIdentifierResolver [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/resolve.js .createIdentifierResolver */
/*! export describeExpectedInput [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js .describeExpectedInput */
/*! export extractBytecodeResolutions [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js .extractBytecodeResolutions */
/*! export extractEvaluationSamples [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js .extractEvaluationSamples */
/*! export extractEvaluationSamplesRecursive [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js .extractEvaluationSamplesRecursive */
/*! export extractResolvedVariableBytecodeMap [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js .extractResolvedVariableBytecodeMap */
/*! export extractUnexecutedRanges [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js .extractUnexecutedRanges */
/*! export getResolutionErrors [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js .getResolutionErrors */
/*! export mergeRanges [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js .mergeRanges */
/*! export parseScript [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/parse.js .parseScript */
/*! export reduceScript [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/reduce.js .reduceScript */
/*! export resolveScriptIdentifier [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/resolve.js .resolveScriptIdentifier */
/*! export resolveScriptSegment [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/resolve.js .resolveScriptSegment */
/*! export resolveVariableIdentifier [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/resolve.js .resolveVariableIdentifier */
/*! export stringifyErrors [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js .stringifyErrors */
/*! export verifyBtlEvaluationState [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/reduce.js .verifyBtlEvaluationState */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "compileScript": () => /* reexport safe */ _compile__WEBPACK_IMPORTED_MODULE_0__.compileScript,
/* harmony export */   "compileScriptContents": () => /* reexport safe */ _compile__WEBPACK_IMPORTED_MODULE_0__.compileScriptContents,
/* harmony export */   "compileScriptP2shLocking": () => /* reexport safe */ _compile__WEBPACK_IMPORTED_MODULE_0__.compileScriptP2shLocking,
/* harmony export */   "compileScriptP2shUnlocking": () => /* reexport safe */ _compile__WEBPACK_IMPORTED_MODULE_0__.compileScriptP2shUnlocking,
/* harmony export */   "compileScriptRaw": () => /* reexport safe */ _compile__WEBPACK_IMPORTED_MODULE_0__.compileScriptRaw,
/* harmony export */   "describeExpectedInput": () => /* reexport safe */ _compile__WEBPACK_IMPORTED_MODULE_0__.describeExpectedInput,
/* harmony export */   "allErrorsAreRecoverable": () => /* reexport safe */ _language_utils__WEBPACK_IMPORTED_MODULE_1__.allErrorsAreRecoverable,
/* harmony export */   "compileBtl": () => /* reexport safe */ _language_utils__WEBPACK_IMPORTED_MODULE_1__.compileBtl,
/* harmony export */   "containsRange": () => /* reexport safe */ _language_utils__WEBPACK_IMPORTED_MODULE_1__.containsRange,
/* harmony export */   "extractBytecodeResolutions": () => /* reexport safe */ _language_utils__WEBPACK_IMPORTED_MODULE_1__.extractBytecodeResolutions,
/* harmony export */   "extractEvaluationSamples": () => /* reexport safe */ _language_utils__WEBPACK_IMPORTED_MODULE_1__.extractEvaluationSamples,
/* harmony export */   "extractEvaluationSamplesRecursive": () => /* reexport safe */ _language_utils__WEBPACK_IMPORTED_MODULE_1__.extractEvaluationSamplesRecursive,
/* harmony export */   "extractResolvedVariableBytecodeMap": () => /* reexport safe */ _language_utils__WEBPACK_IMPORTED_MODULE_1__.extractResolvedVariableBytecodeMap,
/* harmony export */   "extractUnexecutedRanges": () => /* reexport safe */ _language_utils__WEBPACK_IMPORTED_MODULE_1__.extractUnexecutedRanges,
/* harmony export */   "getResolutionErrors": () => /* reexport safe */ _language_utils__WEBPACK_IMPORTED_MODULE_1__.getResolutionErrors,
/* harmony export */   "mergeRanges": () => /* reexport safe */ _language_utils__WEBPACK_IMPORTED_MODULE_1__.mergeRanges,
/* harmony export */   "stringifyErrors": () => /* reexport safe */ _language_utils__WEBPACK_IMPORTED_MODULE_1__.stringifyErrors,
/* harmony export */   "IdentifierResolutionErrorType": () => /* reexport safe */ _language_types__WEBPACK_IMPORTED_MODULE_2__.IdentifierResolutionErrorType,
/* harmony export */   "IdentifierResolutionType": () => /* reexport safe */ _language_types__WEBPACK_IMPORTED_MODULE_2__.IdentifierResolutionType,
/* harmony export */   "parseScript": () => /* reexport safe */ _parse__WEBPACK_IMPORTED_MODULE_3__.parseScript,
/* harmony export */   "reduceScript": () => /* reexport safe */ _reduce__WEBPACK_IMPORTED_MODULE_4__.reduceScript,
/* harmony export */   "verifyBtlEvaluationState": () => /* reexport safe */ _reduce__WEBPACK_IMPORTED_MODULE_4__.verifyBtlEvaluationState,
/* harmony export */   "BuiltInVariables": () => /* reexport safe */ _resolve__WEBPACK_IMPORTED_MODULE_5__.BuiltInVariables,
/* harmony export */   "createIdentifierResolver": () => /* reexport safe */ _resolve__WEBPACK_IMPORTED_MODULE_5__.createIdentifierResolver,
/* harmony export */   "resolveScriptIdentifier": () => /* reexport safe */ _resolve__WEBPACK_IMPORTED_MODULE_5__.resolveScriptIdentifier,
/* harmony export */   "resolveScriptSegment": () => /* reexport safe */ _resolve__WEBPACK_IMPORTED_MODULE_5__.resolveScriptSegment,
/* harmony export */   "resolveVariableIdentifier": () => /* reexport safe */ _resolve__WEBPACK_IMPORTED_MODULE_5__.resolveVariableIdentifier
/* harmony export */ });
/* harmony import */ var _compile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compile */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js");
/* harmony import */ var _language_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./language-utils */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js");
/* harmony import */ var _language_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./language-types */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language-types.js");
/* harmony import */ var _parse__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./parse */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/parse.js");
/* harmony import */ var _reduce__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./reduce */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/reduce.js");
/* harmony import */ var _resolve__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./resolve */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/resolve.js");






//# sourceMappingURL=language.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/language/parse.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/language/parse.js ***!
  \***********************************************************************************/
/*! namespace exports */
/*! export parseScript [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "parseScript": () => /* binding */ parseScript
/* harmony export */ });
/* harmony import */ var _parsimmon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parsimmon */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/parsimmon.js");

/* eslint-disable sort-keys, @typescript-eslint/naming-convention, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */
const authenticationScriptParser = _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.createLanguage({
    script: (r) => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.optWhitespace, r.expression.sepBy(_parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.optWhitespace), _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.optWhitespace, (_, expressions) => expressions).node('Script'),
    expression: (r) => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.alt(r.comment, r.push, r.evaluation, r.utf8, r.binary, r.hex, r.bigint, r.identifier),
    comment: (r) => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.alt(r.singleLineComment, r.multiLineComment).node('Comment'),
    singleLineComment: () => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string('//').desc("the start of a single-line comment ('//')"), _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/[^\n]*/u), (__, comment) => comment.trim()),
    multiLineComment: () => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string('/*').desc("the start of a multi-line comment ('/*')"), _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/[\s\S]*?\*\//u).desc("the end of this multi-line comment ('*/')"), (__, comment) => comment.slice(0, -'*/'.length).trim()),
    push: (r) => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string('<').desc("the start of a push statement ('<')"), r.script, _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string('>').desc("the end of this push statement ('>')"), (_, push) => push).node('Push'),
    evaluation: (r) => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string('$').desc("the start of an evaluation ('$')"), _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string('(').desc("the opening parenthesis of this evaluation ('(')"), r.script, _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string(')').desc("the closing parenthesis of this evaluation (')')"), (_, __, evaluation) => evaluation).node('Evaluation'),
    identifier: () => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/[a-zA-Z_][.a-zA-Z0-9_-]*/u)
        .desc('a valid identifier')
        .node('Identifier'),
    utf8: () => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.alt(_parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string('"').desc('a double quote (")'), _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/[^"]*/u), _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string('"').desc('a closing double quote (")'), (__, literal) => literal), _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string("'").desc("a single quote (')"), _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/[^']*/u), _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string("'").desc("a closing single quote (')"), (__, literal) => literal)).node('UTF8Literal'),
    hex: () => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string('0x').desc("a hex literal ('0x...')"), _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/[0-9a-f]_*(?:_*[0-9a-f]_*[0-9a-f]_*)*[0-9a-f]/iu).desc('a valid hexadecimal string'), (__, literal) => literal).node('HexLiteral'),
    binary: () => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string('0b').desc("a binary literal ('0b...')"), _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/[01]+(?:[01_]*[01]+)*/iu).desc('a string of binary digits'), (__, literal) => literal).node('BinaryLiteral'),
    bigint: () => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/-?[0-9]+(?:[0-9_]*[0-9]+)*/u)
        .desc('an integer literal')
        .node('BigIntLiteral'),
});
/* eslint-enable sort-keys, @typescript-eslint/naming-convention, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */
const parseScript = (script) => authenticationScriptParser.script.parse(script);
//# sourceMappingURL=parse.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/language/parsimmon.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/language/parsimmon.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! export P [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "P": () => /* binding */ P
/* harmony export */ });
/**
 * This file is derived from https://github.com/jneen/parsimmon and
 * https://github.com/DefinitelyTyped/DefinitelyTyped.
 */
/* eslint-disable prefer-destructuring, @typescript-eslint/unified-signatures, functional/no-method-signature, functional/no-throw-statement, functional/no-conditional-statement, @typescript-eslint/no-this-alias, consistent-this, @typescript-eslint/ban-ts-comment, prefer-spread, @typescript-eslint/restrict-template-expressions, func-names, @typescript-eslint/init-declarations, new-cap, @typescript-eslint/require-array-sort-compare, guard-for-in, no-plusplus, functional/no-let, functional/no-loop-statement, @typescript-eslint/prefer-for-of, @typescript-eslint/restrict-plus-operands, functional/immutable-data, @typescript-eslint/no-use-before-define, @typescript-eslint/strict-boolean-expressions, no-param-reassign, functional/no-expression-statement, functional/no-this-expression, @typescript-eslint/no-explicit-any, func-style, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-return, @typescript-eslint/naming-convention, @typescript-eslint/method-signature-style */
// cspell: ignore accum
function Parsimmon(action) {
    // @ts-expect-error
    if (!(this instanceof Parsimmon)) {
        // @ts-expect-error
        return new Parsimmon(action);
    }
    // @ts-expect-error
    this._ = action;
}
const _ = Parsimmon.prototype;
// -*- Helpers -*-
function makeSuccess(index, value) {
    return {
        expected: [],
        furthest: -1,
        index,
        status: true,
        value,
    };
}
function makeFailure(index, expected) {
    expected = [expected];
    return {
        expected,
        furthest: index,
        index: -1,
        status: false,
        value: null,
    };
}
function mergeReplies(result, last) {
    if (!last) {
        return result;
    }
    if (result.furthest > last.furthest) {
        return result;
    }
    const expected = result.furthest === last.furthest
        ? union(result.expected, last.expected)
        : last.expected;
    return {
        expected,
        furthest: last.furthest,
        index: result.index,
        status: result.status,
        value: result.value,
    };
}
function makeLineColumnIndex(input, i) {
    const lines = input.slice(0, i).split('\n');
    /*
     * Note that unlike the character offset, the line and column offsets are
     * 1-based.
     */
    const lineWeAreUpTo = lines.length;
    const columnWeAreUpTo = lines[lines.length - 1].length + 1;
    return {
        column: columnWeAreUpTo,
        line: lineWeAreUpTo,
        offset: i,
    };
}
// Returns the sorted set union of two arrays of strings
function union(xs, ys) {
    const obj = {};
    for (let i = 0; i < xs.length; i++) {
        // @ts-expect-error
        obj[xs[i]] = true;
    }
    for (let j = 0; j < ys.length; j++) {
        // @ts-expect-error
        obj[ys[j]] = true;
    }
    const keys = [];
    for (const k in obj) {
        keys.push(k);
    }
    keys.sort();
    return keys;
}
// -*- Error Formatting -*-
function flags(re) {
    const s = String(re);
    return s.slice(s.lastIndexOf('/') + 1);
}
function anchoredRegexp(re) {
    return RegExp(`^(?:${re.source})`, flags(re));
}
// -*- Combinators -*-
function seq(...params) {
    const parsers = [].slice.call(params);
    const numParsers = parsers.length;
    return Parsimmon(function (input, i) {
        let result;
        const accum = new Array(numParsers);
        for (let j = 0; j < numParsers; j += 1) {
            result = mergeReplies(parsers[j]._(input, i), result);
            if (!result.status) {
                return result;
            }
            accum[j] = result.value;
            i = result.index;
        }
        return mergeReplies(makeSuccess(i, accum), result);
    });
}
function seqMap(...params) {
    const args = [].slice.call(params);
    const mapper = args.pop();
    return seq.apply(null, args).map(function (results) {
        // @ts-expect-error
        return mapper.apply(null, results);
    });
}
function createLanguage(parsers) {
    const language = {};
    for (const key in parsers) {
        (function (rule) {
            const func = function () {
                // @ts-expect-error
                return parsers[rule](language);
            };
            // @ts-expect-error
            language[rule] = lazy(func);
        })(key);
    }
    return language;
}
function alt(...params) {
    const parsers = [].slice.call(params);
    return Parsimmon(function (input, i) {
        let result;
        for (let j = 0; j < parsers.length; j += 1) {
            result = mergeReplies(parsers[j]._(input, i), result);
            if (result.status) {
                return result;
            }
        }
        return result;
    });
}
function sepBy(parser, separator) {
    return sepBy1(parser, separator).or(succeed([]));
}
function sepBy1(parser, separator) {
    const pairs = separator.then(parser).many();
    return seqMap(parser, pairs, function (r, rs) {
        return [r].concat(rs);
    });
}
// -*- Core Parsing Methods -*-
_.parse = function (input) {
    const result = this.skip(eof)._(input, 0);
    if (result.status) {
        return {
            status: true,
            value: result.value,
        };
    }
    return {
        expected: result.expected,
        index: makeLineColumnIndex(input, result.furthest),
        status: false,
    };
};
// -*- Other Methods -*-
_.or = function (alternative) {
    return alt(this, alternative);
};
_.then = function (next) {
    return seq(this, next).map(function (results) {
        return results[1];
    });
};
_.many = function () {
    const self = this;
    return Parsimmon(function (input, i) {
        const accum = [];
        let result;
        for (;;) {
            result = mergeReplies(self._(input, i), result);
            if (result.status) {
                /* istanbul ignore if */ if (i === result.index) {
                    throw new Error('infinite loop detected in .many() parser --- calling .many() on ' +
                        'a parser which can accept zero characters is usually the cause');
                }
                i = result.index;
                accum.push(result.value);
            }
            else {
                return mergeReplies(makeSuccess(i, accum), result);
            }
        }
    });
};
_.map = function (fn) {
    const self = this;
    return Parsimmon(function (input, i) {
        const result = self._(input, i);
        if (!result.status) {
            return result;
        }
        return mergeReplies(makeSuccess(result.index, fn(result.value)), result);
    });
};
_.skip = function (next) {
    return seq(this, next).map(function (results) {
        return results[0];
    });
};
_.node = function (name) {
    return seqMap(index, this, index, function (start, value, end) {
        return {
            end,
            name,
            start,
            value,
        };
    });
};
_.sepBy = function (separator) {
    return sepBy(this, separator);
};
_.desc = function (expected) {
    expected = [expected];
    const self = this;
    return Parsimmon(function (input, i) {
        const reply = self._(input, i);
        if (!reply.status) {
            reply.expected = expected;
        }
        return reply;
    });
};
// -*- Constructors -*-
function string(str) {
    const expected = `'${str}'`;
    return Parsimmon(function (input, i) {
        const j = i + str.length;
        const head = input.slice(i, j);
        if (head === str) {
            return makeSuccess(j, head);
        }
        return makeFailure(i, expected);
    });
}
function regexp(re, group = 0) {
    const anchored = anchoredRegexp(re);
    const expected = String(re);
    return Parsimmon(function (input, i) {
        const match = anchored.exec(input.slice(i));
        if (match) {
            const fullMatch = match[0];
            const groupMatch = match[group];
            return makeSuccess(i + fullMatch.length, groupMatch);
        }
        return makeFailure(i, expected);
    });
}
function succeed(value) {
    return Parsimmon(function (__, i) {
        return makeSuccess(i, value);
    });
}
function lazy(f) {
    const parser = Parsimmon(function (input, i) {
        parser._ = f()._;
        return parser._(input, i);
    });
    return parser;
}
// -*- Base Parsers -*-
const index = Parsimmon(function (input, i) {
    return makeSuccess(i, makeLineColumnIndex(input, i));
});
const eof = Parsimmon(function (input, i) {
    if (i < input.length) {
        return makeFailure(i, 'EOF');
    }
    return makeSuccess(i, null);
});
const optWhitespace = regexp(/\s*/u).desc('optional whitespace');
const whitespace = regexp(/\s+/u).desc('whitespace');
const P = {
    alt,
    createLanguage,
    index,
    lazy,
    makeFailure,
    makeSuccess,
    of: succeed,
    optWhitespace,
    regexp,
    sepBy,
    sepBy1,
    seq,
    seqMap,
    string,
    succeed,
    whitespace,
};
//# sourceMappingURL=parsimmon.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/language/reduce.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/language/reduce.js ***!
  \************************************************************************************/
/*! namespace exports */
/*! export reduceScript [provided] [no usage info] [missing usage info prevents renaming] */
/*! export verifyBtlEvaluationState [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "verifyBtlEvaluationState": () => /* binding */ verifyBtlEvaluationState,
/* harmony export */   "reduceScript": () => /* binding */ reduceScript
/* harmony export */ });
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");
/* harmony import */ var _vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vm/instruction-sets/instruction-sets */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets.js");
/* harmony import */ var _language_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./language-utils */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js");



const emptyReductionTraceNode = (range) => ({
    bytecode: Uint8Array.of(),
    range,
});
/**
 * Perform the standard verification of BTL evaluation results. This ensures
 * that evaluations complete as expected: if an error occurs while computing an
 * evaluation, script compilation should fail.
 *
 * Three requirements are enforced:
 * - the evaluation may not produce an `error`
 * - the resulting stack must contain exactly 1 item
 * - the resulting execution stack must be empty (no missing `OP_ENDIF`s)
 *
 * This differs from the virtual machine's built-in `vm.verify` in that it is
 * often more lenient, for example, evaluations can succeed with an non-truthy
 * value on top of the stack.
 *
 * @param state - the final program state to verify
 */
const verifyBtlEvaluationState = (state) => {
    if (state.error !== undefined) {
        return state.error;
    }
    if (state.executionStack.length !== 0) {
        return _vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.nonEmptyExecutionStack;
    }
    if (state.stack.length !== 1) {
        return _vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.requiresCleanStack;
    }
    return true;
};
/**
 * Reduce a resolved script, returning the resulting bytecode and a trace of the
 * reduction process.
 *
 * This method will return an error if provided a `resolvedScript` with
 * resolution errors. To check for resolution errors, use `getResolutionErrors`.
 *
 * @param resolvedScript - the `CompiledScript` to reduce
 * @param vm - the `AuthenticationVirtualMachine` to use for evaluations
 * @param createEvaluationProgram - a method which accepts the compiled bytecode
 * of an evaluation and returns the authentication program used to evaluate it
 */
const reduceScript = (resolvedScript, vm, createEvaluationProgram) => {
    const script = resolvedScript.map((segment) => {
        switch (segment.type) {
            case 'bytecode':
                return { bytecode: segment.value, range: segment.range };
            case 'push': {
                const push = reduceScript(segment.value, vm, createEvaluationProgram);
                const bytecode = (0,_vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_1__.encodeDataPush)(push.bytecode);
                return {
                    bytecode,
                    ...(push.errors === undefined ? undefined : { errors: push.errors }),
                    push,
                    range: segment.range,
                };
            }
            case 'evaluation': {
                if (typeof vm === 'undefined' ||
                    typeof createEvaluationProgram === 'undefined') {
                    return {
                        errors: [
                            {
                                error: 'Both a VM and a createState method are required to reduce evaluations.',
                                range: segment.range,
                            },
                        ],
                        ...emptyReductionTraceNode(segment.range),
                    };
                }
                const reductionTrace = reduceScript(segment.value, vm, createEvaluationProgram);
                if (reductionTrace.errors !== undefined) {
                    return {
                        ...emptyReductionTraceNode(segment.range),
                        errors: reductionTrace.errors,
                        source: reductionTrace,
                        trace: [],
                    };
                }
                const trace = vm.debug(createEvaluationProgram(reductionTrace.bytecode));
                /**
                 * `vm.debug` should always return at least one state.
                 */
                const lastState = trace[trace.length - 1];
                const result = verifyBtlEvaluationState(lastState);
                const bytecode = lastState.stack[lastState.stack.length - 1];
                return {
                    ...(typeof result === 'string'
                        ? {
                            bytecode: Uint8Array.of(),
                            errors: [
                                {
                                    error: `Failed to reduce evaluation: ${result}`,
                                    range: segment.range,
                                },
                            ],
                        }
                        : {
                            bytecode,
                        }),
                    range: segment.range,
                    source: reductionTrace,
                    trace,
                };
            }
            case 'comment':
                return emptyReductionTraceNode(segment.range);
            case 'error':
                return {
                    errors: [
                        {
                            error: `Tried to reduce a BTL script with resolution errors: ${segment.value}`,
                            range: segment.range,
                        },
                    ],
                    ...emptyReductionTraceNode(segment.range),
                };
            // eslint-disable-next-line functional/no-conditional-statement
            default:
                // eslint-disable-next-line functional/no-throw-statement, @typescript-eslint/no-throw-literal, no-throw-literal
                throw new Error(`"${segment.type}" is not a known segment type.`);
        }
    });
    const reduction = script.reduce((all, segment) => ({
        bytecode: [...all.bytecode, segment.bytecode],
        ranges: [...all.ranges, segment.range],
        ...(all.errors !== undefined || segment.errors !== undefined
            ? {
                errors: [
                    ...(all.errors === undefined ? [] : all.errors),
                    ...(segment.errors === undefined ? [] : segment.errors),
                ],
            }
            : undefined),
    }), { bytecode: [], ranges: [] });
    return {
        ...(reduction.errors === undefined
            ? undefined
            : { errors: reduction.errors }),
        bytecode: (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)(reduction.bytecode),
        range: (0,_language_utils__WEBPACK_IMPORTED_MODULE_2__.mergeRanges)(reduction.ranges, resolvedScript.length === 0 ? undefined : resolvedScript[0].range),
        script,
    };
};
//# sourceMappingURL=reduce.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/language/resolve.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/language/resolve.js ***!
  \*************************************************************************************/
/*! namespace exports */
/*! export BuiltInVariables [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createIdentifierResolver [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resolveScriptIdentifier [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resolveScriptSegment [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resolveVariableIdentifier [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "resolveScriptSegment": () => /* binding */ resolveScriptSegment,
/* harmony export */   "BuiltInVariables": () => /* binding */ BuiltInVariables,
/* harmony export */   "resolveVariableIdentifier": () => /* binding */ resolveVariableIdentifier,
/* harmony export */   "resolveScriptIdentifier": () => /* binding */ resolveScriptIdentifier,
/* harmony export */   "createIdentifierResolver": () => /* binding */ createIdentifierResolver
/* harmony export */ });
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");
/* harmony import */ var _vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vm/instruction-sets/instruction-sets */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets.js");
/* harmony import */ var _compile__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./compile */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js");
/* harmony import */ var _language_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./language-types */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language-types.js");
/* harmony import */ var _language_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./language-utils */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js");





const pluckRange = (node) => ({
    endColumn: node.end.column,
    endLineNumber: node.end.line,
    startColumn: node.start.column,
    startLineNumber: node.start.line,
});
const removeNumericSeparators = (numericLiteral) => numericLiteral.replace(/_/gu, '');
const resolveScriptSegment = (segment, resolveIdentifiers) => {
    // eslint-disable-next-line complexity
    const resolved = segment.value.map((child) => {
        const range = pluckRange(child);
        switch (child.name) {
            case 'Identifier': {
                const identifier = child.value;
                const result = resolveIdentifiers(identifier);
                const ret = result.status
                    ? {
                        range,
                        type: 'bytecode',
                        value: result.bytecode,
                        ...(result.type === _language_types__WEBPACK_IMPORTED_MODULE_3__.IdentifierResolutionType.opcode
                            ? {
                                opcode: identifier,
                            }
                            : result.type === _language_types__WEBPACK_IMPORTED_MODULE_3__.IdentifierResolutionType.variable
                                ? {
                                    ...('debug' in result ? { debug: result.debug } : {}),
                                    ...('signature' in result
                                        ? { signature: result.signature }
                                        : {}),
                                    variable: identifier,
                                }
                                : // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
                                    result.type === _language_types__WEBPACK_IMPORTED_MODULE_3__.IdentifierResolutionType.script
                                        ? { script: identifier, source: result.source }
                                        : { unknown: identifier }),
                    }
                    : {
                        ...('debug' in result ? { debug: result.debug } : {}),
                        ...('recoverable' in result && result.recoverable
                            ? {
                                missingIdentifier: identifier,
                                owningEntity: result.entityOwnership,
                            }
                            : {}),
                        range,
                        type: 'error',
                        value: result.error,
                    };
                return ret;
            }
            case 'Push':
                return {
                    range,
                    type: 'push',
                    value: resolveScriptSegment(child.value, resolveIdentifiers),
                };
            case 'Evaluation':
                return {
                    range,
                    type: 'evaluation',
                    value: resolveScriptSegment(child.value, resolveIdentifiers),
                };
            case 'BigIntLiteral':
                return {
                    literal: child.value,
                    literalType: 'BigIntLiteral',
                    range,
                    type: 'bytecode',
                    value: (0,_vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_1__.bigIntToScriptNumber)(BigInt(removeNumericSeparators(child.value))),
                };
            case 'BinaryLiteral':
                return {
                    literal: child.value,
                    literalType: 'BinaryLiteral',
                    range,
                    type: 'bytecode',
                    value: (0,_vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_1__.bigIntToScriptNumber)(BigInt(`0b${removeNumericSeparators(child.value)}`)),
                };
            case 'HexLiteral':
                return {
                    literal: child.value,
                    literalType: 'HexLiteral',
                    range,
                    type: 'bytecode',
                    value: (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.hexToBin)(removeNumericSeparators(child.value)),
                };
            case 'UTF8Literal':
                return {
                    literal: child.value,
                    literalType: 'UTF8Literal',
                    range,
                    type: 'bytecode',
                    value: (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.utf8ToBin)(child.value),
                };
            case 'Comment':
                return {
                    range,
                    type: 'comment',
                    value: child.value,
                };
            default:
                return {
                    range,
                    type: 'error',
                    value: `Unrecognized segment: ${child.name}`,
                };
        }
    });
    return resolved.length === 0
        ? [{ range: pluckRange(segment), type: 'comment', value: '' }]
        : resolved;
};
var BuiltInVariables;
(function (BuiltInVariables) {
    BuiltInVariables["currentBlockTime"] = "current_block_time";
    BuiltInVariables["currentBlockHeight"] = "current_block_height";
    BuiltInVariables["signingSerialization"] = "signing_serialization";
})(BuiltInVariables || (BuiltInVariables = {}));
const attemptCompilerOperation = ({ data, environment, identifier, matchingOperations, operationExample = 'operation_identifier', operationId, variableId, variableType, }) => {
    if (matchingOperations === undefined) {
        return {
            error: `The "${variableId}" variable type can not be resolved because the "${variableType}" operation has not been included in this compiler's CompilationEnvironment.`,
            status: 'error',
        };
    }
    if (typeof matchingOperations === 'function') {
        const operation = matchingOperations;
        return operation(identifier, data, environment);
    }
    if (operationId === undefined) {
        return {
            error: `This "${variableId}" variable could not be resolved because this compiler's "${variableType}" operations require an operation identifier, e.g. '${variableId}.${operationExample}'.`,
            status: 'error',
        };
    }
    const operation = matchingOperations[operationId];
    if (operation === undefined) {
        return {
            error: `The identifier "${identifier}" could not be resolved because the "${variableId}.${operationId}" operation is not available to this compiler.`,
            status: 'error',
        };
    }
    return operation(identifier, data, environment);
};
/**
 * If the identifer can be successfully resolved as a variable, the result is
 * returned as a Uint8Array. If the identifier references a known variable, but
 * an error occurs in resolving it, the error is returned as a string.
 * Otherwise, the identifier is not recognized as a variable, and this method
 * simply returns `false`.
 *
 * @param identifier - The full identifier used to describe this operation, e.g.
 * `owner.signature.all_outputs`.
 * @param data - The `CompilationData` provided to the compiler
 * @param environment - The `CompilationEnvironment` provided to the compiler
 */
const resolveVariableIdentifier = ({ data, environment, identifier, }) => {
    const [variableId, operationId] = identifier.split('.');
    switch (variableId) {
        case BuiltInVariables.currentBlockHeight:
            return attemptCompilerOperation({
                data,
                environment,
                identifier,
                matchingOperations: environment.operations?.currentBlockHeight,
                operationId,
                variableId,
                variableType: 'currentBlockHeight',
            });
        case BuiltInVariables.currentBlockTime:
            return attemptCompilerOperation({
                data,
                environment,
                identifier,
                matchingOperations: environment.operations?.currentBlockTime,
                operationId,
                variableId,
                variableType: 'currentBlockTime',
            });
        case BuiltInVariables.signingSerialization:
            return attemptCompilerOperation({
                data,
                environment,
                identifier,
                matchingOperations: environment.operations?.signingSerialization,
                operationExample: 'version',
                operationId,
                variableId,
                variableType: 'signingSerialization',
            });
        default: {
            const expectedVariable = environment.variables?.[variableId];
            if (expectedVariable === undefined) {
                return { status: 'skip' };
            }
            return attemptCompilerOperation({
                data,
                environment,
                identifier,
                operationId,
                variableId,
                ...{
                    // eslint-disable-next-line @typescript-eslint/naming-convention
                    AddressData: {
                        matchingOperations: environment.operations?.addressData,
                        variableType: 'addressData',
                    },
                    // eslint-disable-next-line @typescript-eslint/naming-convention
                    HdKey: {
                        matchingOperations: environment.operations?.hdKey,
                        operationExample: 'public_key',
                        variableType: 'hdKey',
                    },
                    // eslint-disable-next-line @typescript-eslint/naming-convention
                    Key: {
                        matchingOperations: environment.operations?.key,
                        operationExample: 'public_key',
                        variableType: 'key',
                    },
                    // eslint-disable-next-line @typescript-eslint/naming-convention
                    WalletData: {
                        matchingOperations: environment.operations?.walletData,
                        variableType: 'walletData',
                    },
                }[expectedVariable.type],
            });
        }
    }
};
/**
 * Compile an internal script identifier.
 *
 * @remarks
 * If the identifer can be successfully resolved as a script, the script is
 * compiled and returned as a CompilationResultSuccess. If an error occurs in
 * compiling it, the error is returned as a string.
 *
 * Otherwise, the identifier is not recognized as a script, and this method
 * simply returns `false`.
 *
 * @param identifier - the identifier of the script to be resolved
 * @param data - the provided CompilationData
 * @param environment - the provided CompilationEnvironment
 * @param parentIdentifier - the identifier of the script which references the
 * script being resolved (for detecting circular dependencies)
 */
const resolveScriptIdentifier = ({ data, environment, identifier, }) => {
    if (environment.scripts[identifier] === undefined) {
        return false;
    }
    const result = (0,_compile__WEBPACK_IMPORTED_MODULE_2__.compileScriptRaw)({ data, environment, scriptId: identifier });
    if (result.success) {
        return result;
    }
    return `Compilation error in resolved script "${identifier}": ${(0,_language_utils__WEBPACK_IMPORTED_MODULE_4__.stringifyErrors)(result.errors)}`;
    /*
     * result.errors.reduce(
     *   (all, { error, range }) =>
     *     `${
     *       all === '' ? '' : `${all}; `
     *     } [${
     *       range.startLineNumber
     *     }, ${range.startColumn}]: ${error}`,
     *   ''
     * );
     */
};
/**
 * Return an `IdentifierResolutionFunction` for use in `resolveScriptSegment`.
 *
 * @param scriptId - the `id` of the script for which the resulting
 * `IdentifierResolutionFunction` will be used.
 * @param environment - a snapshot of the context around `scriptId`. See
 * `CompilationEnvironment` for details.
 * @param data - the actual variable values (private keys, shared wallet data,
 * shared address data, etc.) to use in resolving variables.
 */
const createIdentifierResolver = ({ data, environment, }) => 
// eslint-disable-next-line complexity
(identifier) => {
    const opcodeResult = environment.opcodes?.[identifier];
    if (opcodeResult !== undefined) {
        return {
            bytecode: opcodeResult,
            status: true,
            type: _language_types__WEBPACK_IMPORTED_MODULE_3__.IdentifierResolutionType.opcode,
        };
    }
    const variableResult = resolveVariableIdentifier({
        data,
        environment,
        identifier,
    });
    if (variableResult.status !== 'skip') {
        return variableResult.status === 'error'
            ? {
                ...('debug' in variableResult
                    ? { debug: variableResult.debug }
                    : {}),
                error: variableResult.error,
                ...(environment.entityOwnership === undefined
                    ? {}
                    : {
                        entityOwnership: environment.entityOwnership[identifier.split('.')[0]],
                    }),
                recoverable: 'recoverable' in variableResult,
                status: false,
                type: _language_types__WEBPACK_IMPORTED_MODULE_3__.IdentifierResolutionErrorType.variable,
            }
            : {
                ...('debug' in variableResult
                    ? { debug: variableResult.debug }
                    : {}),
                bytecode: variableResult.bytecode,
                ...('signature' in variableResult
                    ? {
                        signature: variableResult.signature,
                    }
                    : {}),
                status: true,
                type: _language_types__WEBPACK_IMPORTED_MODULE_3__.IdentifierResolutionType.variable,
            };
    }
    const scriptResult = resolveScriptIdentifier({
        data,
        environment,
        identifier,
    });
    if (scriptResult !== false) {
        return typeof scriptResult === 'string'
            ? {
                error: scriptResult,
                scriptId: identifier,
                status: false,
                type: _language_types__WEBPACK_IMPORTED_MODULE_3__.IdentifierResolutionErrorType.script,
            }
            : {
                bytecode: scriptResult.bytecode,
                source: scriptResult.resolve,
                status: true,
                type: _language_types__WEBPACK_IMPORTED_MODULE_3__.IdentifierResolutionType.script,
            };
    }
    return {
        error: `Unknown identifier "${identifier}".`,
        status: false,
        type: _language_types__WEBPACK_IMPORTED_MODULE_3__.IdentifierResolutionErrorType.unknown,
    };
};
//# sourceMappingURL=resolve.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/scenarios.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/scenarios.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export extendCompilationDataWithScenarioBytecode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export extendScenarioDefinition [provided] [no usage info] [missing usage info prevents renaming] */
/*! export extendScenarioDefinitionData [provided] [no usage info] [missing usage info prevents renaming] */
/*! export extendedScenarioDefinitionToCompilationData [provided] [no usage info] [missing usage info prevents renaming] */
/*! export generateDefaultScenarioDefinition [provided] [no usage info] [missing usage info prevents renaming] */
/*! export generateExtendedScenario [provided] [no usage info] [missing usage info prevents renaming] */
/*! export generateScenarioCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "generateDefaultScenarioDefinition": () => /* binding */ generateDefaultScenarioDefinition,
/* harmony export */   "extendScenarioDefinitionData": () => /* binding */ extendScenarioDefinitionData,
/* harmony export */   "extendScenarioDefinition": () => /* binding */ extendScenarioDefinition,
/* harmony export */   "generateExtendedScenario": () => /* binding */ generateExtendedScenario,
/* harmony export */   "extendedScenarioDefinitionToCompilationData": () => /* binding */ extendedScenarioDefinitionToCompilationData,
/* harmony export */   "extendCompilationDataWithScenarioBytecode": () => /* binding */ extendCompilationDataWithScenarioBytecode,
/* harmony export */   "generateScenarioCommon": () => /* binding */ generateScenarioCommon
/* harmony export */ });
/* harmony import */ var _format_hex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../format/hex */ "./node_modules/@bitauth/libauth/build/module/lib/format/hex.js");
/* harmony import */ var _format_numbers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../format/numbers */ "./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js");
/* harmony import */ var _key_hd_key__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../key/hd-key */ "./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js");
/* harmony import */ var _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./compiler-defaults */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-defaults.js");
/* harmony import */ var _language_compile__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./language/compile */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js");
/* harmony import */ var _language_language_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./language/language-utils */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js");






/*
 * & {
 *   value: Uint8Array;
 * };
 */
/**
 * Given a compilation environment, generate the default scenario which is
 * extended by all the environments scenarios.
 *
 * For details on default scenario generation, see
 * `AuthenticationTemplateScenario.extends`.
 *
 * @param environment - the compilation environment from which to generate the
 * default scenario
 */
// eslint-disable-next-line complexity
const generateDefaultScenarioDefinition = (environment) => {
    const { variables, entityOwnership } = environment;
    const keyVariableIds = variables === undefined
        ? []
        : Object.entries(variables)
            .filter((entry) => entry[1].type === 'Key')
            .map(([id]) => id);
    const entityIds = entityOwnership === undefined
        ? []
        : Object.keys(Object.values(entityOwnership).reduce((all, entityId) => ({ ...all, [entityId]: true }), {}));
    const valueMap = [...keyVariableIds, ...entityIds]
        .sort(([idA], [idB]) => idA.localeCompare(idB))
        .reduce((all, id, index) => ({
        ...all,
        [id]: (0,_format_numbers__WEBPACK_IMPORTED_MODULE_1__.bigIntToBinUint256BEClamped)(BigInt(index + 1)),
    }), {});
    const privateKeys = variables === undefined
        ? undefined
        : Object.entries(variables).reduce((all, [variableId, variable]) => variable.type === 'Key'
            ? {
                ...all,
                [variableId]: (0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.binToHex)(valueMap[variableId]),
            }
            : all, {});
    const defaultScenario = {
        data: {
            currentBlockHeight: _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioCurrentBlockHeight,
            currentBlockTime: _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioCurrentBlockTime,
            ...(privateKeys === undefined || Object.keys(privateKeys).length === 0
                ? {}
                : { keys: { privateKeys } }),
        },
        transaction: {
            inputs: [{ unlockingBytecode: null }],
            locktime: _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioTransactionLocktime,
            outputs: [
                {
                    lockingBytecode: _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioTransactionOutputsLockingBytecodeHex,
                },
            ],
            version: _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioTransactionVersion,
        },
        value: _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioValue,
    };
    const hasHdKeys = variables === undefined
        ? false
        : Object.values(variables).findIndex((variable) => variable.type === 'HdKey') !== -1;
    if (!hasHdKeys) {
        return defaultScenario;
    }
    const { sha256, sha512 } = environment;
    if (sha256 === undefined) {
        return 'An implementations of "sha256" is required to generate defaults for HD keys, but the "sha256" property is not included in this compilation environment.';
    }
    if (sha512 === undefined) {
        return 'An implementations of "sha512" is required to generate defaults for HD keys, but the "sha512" property is not included in this compilation environment.';
    }
    const crypto = { sha256, sha512 };
    const hdPrivateKeys = entityIds.reduce((all, entityId) => {
        /**
         * The first 5,000,000,000 seeds have been tested, scenarios are
         * unlikely to exceed this number of entities.
         */
        const assumeValid = true;
        const masterNode = (0,_key_hd_key__WEBPACK_IMPORTED_MODULE_2__.deriveHdPrivateNodeFromSeed)(crypto, valueMap[entityId], assumeValid);
        const hdPrivateKey = (0,_key_hd_key__WEBPACK_IMPORTED_MODULE_2__.encodeHdPrivateKey)(crypto, {
            network: 'mainnet',
            node: masterNode,
        });
        return { ...all, [entityId]: hdPrivateKey };
    }, {});
    return {
        ...defaultScenario,
        data: {
            ...defaultScenario.data,
            hdKeys: {
                addressIndex: _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioAddressIndex,
                hdPrivateKeys,
            },
        },
    };
};
/**
 * Extend the `data` property of a scenario definition with values from a parent
 * scenario definition. Returns the extended value for `data`.
 *
 * @param parentData - the scenario `data` which is extended by the child
 * scenario
 * @param childData - the scenario `data` which may override values from the
 * parent scenario
 */
// eslint-disable-next-line complexity
const extendScenarioDefinitionData = (parentData, childData) => {
    return {
        ...parentData,
        ...childData,
        ...(parentData.bytecode === undefined && childData.bytecode === undefined
            ? {}
            : {
                bytecode: {
                    ...parentData.bytecode,
                    ...childData.bytecode,
                },
            }),
        ...(parentData.hdKeys === undefined && childData.hdKeys === undefined
            ? {}
            : {
                hdKeys: {
                    ...parentData.hdKeys,
                    ...childData.hdKeys,
                    ...(parentData.hdKeys?.hdPrivateKeys === undefined &&
                        childData.hdKeys?.hdPrivateKeys === undefined
                        ? {}
                        : {
                            hdPrivateKeys: {
                                ...parentData.hdKeys?.hdPrivateKeys,
                                ...childData.hdKeys?.hdPrivateKeys,
                            },
                        }),
                    ...(parentData.hdKeys?.hdPublicKeys === undefined &&
                        childData.hdKeys?.hdPublicKeys === undefined
                        ? {}
                        : {
                            hdPublicKeys: {
                                ...parentData.hdKeys?.hdPublicKeys,
                                ...childData.hdKeys?.hdPublicKeys,
                            },
                        }),
                },
            }),
        ...(parentData.keys === undefined && childData.keys === undefined
            ? {}
            : {
                keys: {
                    privateKeys: {
                        ...parentData.keys?.privateKeys,
                        ...childData.keys?.privateKeys,
                    },
                },
            }),
    };
};
/**
 * Extend a child scenario definition with values from a parent scenario
 * definition. Returns the extended values for `data`, `transaction`, and
 * `value`.
 *
 * @param parentScenario - the scenario which is extended by the child scenario
 * @param childScenario - the scenario which may override values from the parent
 * scenario
 */
// eslint-disable-next-line complexity
const extendScenarioDefinition = (parentScenario, childScenario) => {
    return {
        ...(parentScenario.data === undefined && childScenario.data === undefined
            ? {}
            : {
                data: extendScenarioDefinitionData(parentScenario.data ?? {}, childScenario.data ?? {}),
            }),
        ...(parentScenario.transaction === undefined &&
            childScenario.transaction === undefined
            ? {}
            : {
                transaction: {
                    ...parentScenario.transaction,
                    ...childScenario.transaction,
                },
            }),
        ...(parentScenario.value === undefined && childScenario.value === undefined
            ? {}
            : { value: childScenario.value ?? parentScenario.value }),
    };
};
/**
 * Generate the full scenario which is extended by the provided scenario
 * identifier. Scenarios for which `extends` is `undefined` extend the default
 * scenario for the provided compilation environment.
 *
 * @param scenarioId - the identifier of the scenario for from which to select
 * the extended scenario
 * @param environment - the compilation environment from which to generate the
 * extended scenario
 * @param sourceScenarioIds - an array of scenario identifiers indicating the
 * path taken to arrive at the current scenario - used to detect and prevent
 * cycles in extending scenarios (defaults to `[]`)
 */
// eslint-disable-next-line complexity
const generateExtendedScenario = ({ environment, scenarioId, sourceScenarioIds = [], }) => {
    if (scenarioId === undefined) {
        return generateDefaultScenarioDefinition(environment);
    }
    if (sourceScenarioIds.includes(scenarioId)) {
        return `Cannot extend scenario "${scenarioId}": scenario "${scenarioId}" extends itself. Scenario inheritance path: ${sourceScenarioIds.join(' → ')}`;
    }
    const scenario = environment.scenarios?.[scenarioId];
    if (scenario === undefined) {
        return `Cannot extend scenario "${scenarioId}": a scenario with the identifier ${scenarioId} is not included in this compilation environment.`;
    }
    const parentScenario = scenario.extends === undefined
        ? generateDefaultScenarioDefinition(environment)
        : generateExtendedScenario({
            environment,
            scenarioId: scenario.extends,
            sourceScenarioIds: [...sourceScenarioIds, scenarioId],
        });
    if (typeof parentScenario === 'string') {
        return parentScenario;
    }
    return extendScenarioDefinition(parentScenario, scenario);
};
/**
 * Derive standard `CompilationData` properties from an extended scenario
 * definition.
 * @param definition - a scenario definition which has been extended by the
 * default scenario definition
 */
// eslint-disable-next-line complexity
const extendedScenarioDefinitionToCompilationData = (definition) => ({
    ...(definition.data.currentBlockHeight === undefined
        ? {}
        : {
            currentBlockHeight: definition.data.currentBlockHeight,
        }),
    ...(definition.data.currentBlockTime === undefined
        ? {}
        : {
            currentBlockTime: definition.data.currentBlockTime,
        }),
    ...(definition.data.hdKeys === undefined
        ? {}
        : {
            hdKeys: {
                ...(definition.data.hdKeys.addressIndex === undefined
                    ? {}
                    : {
                        addressIndex: definition.data.hdKeys.addressIndex,
                    }),
                ...(definition.data.hdKeys.hdPrivateKeys !== undefined &&
                    Object.keys(definition.data.hdKeys.hdPrivateKeys).length > 0
                    ? {
                        hdPrivateKeys: definition.data.hdKeys.hdPrivateKeys,
                    }
                    : {}),
                ...(definition.data.hdKeys.hdPublicKeys === undefined
                    ? {}
                    : {
                        hdPublicKeys: definition.data.hdKeys.hdPublicKeys,
                    }),
            },
        }),
    ...(definition.data.keys?.privateKeys !== undefined &&
        Object.keys(definition.data.keys.privateKeys).length > 0
        ? {
            keys: {
                privateKeys: Object.entries(definition.data.keys.privateKeys).reduce((all, [id, hex]) => ({ ...all, [id]: (0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.hexToBin)(hex) }), {}),
            },
        }
        : {}),
});
/**
 * Extend a `CompilationData` object with the compiled result of the bytecode
 * scripts provided by a `AuthenticationTemplateScenarioData`.
 *
 * @param compilationData - the compilation data to extend
 * @param environment - the compilation environment in which to compile the
 * scripts
 * @param scenarioDataBytecodeScripts - the `data.bytecode` property of an
 * `AuthenticationTemplateScenarioData`
 */
const extendCompilationDataWithScenarioBytecode = ({ compilationData, environment, scenarioDataBytecodeScripts, }) => {
    const prefixBytecodeScriptId = (id) => `${_compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.scenarioBytecodeScriptPrefix}${id}`;
    const bytecodeScripts = Object.entries(scenarioDataBytecodeScripts).reduce((all, [id, script]) => {
        return {
            ...all,
            [prefixBytecodeScriptId(id)]: script,
        };
    }, {});
    const bytecodeScriptExtendedEnvironment = {
        ...environment,
        scripts: {
            ...environment.scripts,
            ...bytecodeScripts,
        },
    };
    const bytecodeCompilations = Object.keys(scenarioDataBytecodeScripts).map((id) => {
        const result = (0,_language_compile__WEBPACK_IMPORTED_MODULE_4__.compileScriptRaw)({
            data: compilationData,
            environment: bytecodeScriptExtendedEnvironment,
            scriptId: prefixBytecodeScriptId(id),
        });
        if (result.success) {
            return {
                bytecode: result.bytecode,
                id,
            };
        }
        return {
            errors: result.errors,
            id,
        };
    });
    const failedResults = bytecodeCompilations.filter((result) => 'errors' in result);
    if (failedResults.length > 0) {
        return `${failedResults
            .map((result) => `Compilation error while generating bytecode for "${result.id}": ${(0,_language_language_utils__WEBPACK_IMPORTED_MODULE_5__.stringifyErrors)(result.errors)}`)
            .join('; ')}`;
    }
    const compiledBytecode = bytecodeCompilations.reduce((all, result) => ({ ...all, [result.id]: result.bytecode }), {});
    return {
        ...(Object.keys(compiledBytecode).length > 0
            ? { bytecode: compiledBytecode }
            : {}),
        ...compilationData,
    };
};
/**
 * The default `lockingBytecode` value for scenario outputs is a new empty
 * object (`{}`).
 */
const getScenarioOutputDefaultLockingBytecode = () => ({});
/**
 * Generate a scenario given a compilation environment. If neither `scenarioId`
 * or `unlockingScriptId` are provided, the default scenario for the compilation
 * environment will be generated.
 *
 * Returns either the full `CompilationData` for the selected scenario or an
 * error message (as a `string`).
 *
 * @param scenarioId - the ID of the scenario to generate – if `undefined`, the
 * default scenario
 * @param unlockingScriptId - the ID of the unlocking script under test by this
 * scenario – if `undefined` but required by the scenario, an error will be
 * produced
 * @param environment - the compilation environment from which to generate the
 * scenario
 */
// eslint-disable-next-line complexity
const generateScenarioCommon = ({ environment, scenarioId, unlockingScriptId, }) => {
    const { scenario, scenarioName } = scenarioId === undefined
        ? { scenario: {}, scenarioName: `the default scenario` }
        : {
            scenario: environment.scenarios?.[scenarioId],
            scenarioName: `scenario "${scenarioId}"`,
        };
    if (scenario === undefined) {
        return `Cannot generate ${scenarioName}: a scenario with the identifier ${scenarioId} is not included in this compilation environment.`;
    }
    const parentScenario = generateExtendedScenario({ environment, scenarioId });
    if (typeof parentScenario === 'string') {
        return `Cannot generate ${scenarioName}: ${parentScenario}`;
    }
    const extendedScenario = extendScenarioDefinition(parentScenario, scenario);
    const partialCompilationData = extendedScenarioDefinitionToCompilationData(extendedScenario);
    const fullCompilationData = extendCompilationDataWithScenarioBytecode({
        compilationData: partialCompilationData,
        environment,
        scenarioDataBytecodeScripts: extendedScenario.data.bytecode ?? {},
    });
    if (typeof fullCompilationData === 'string') {
        return `Cannot generate ${scenarioName}: ${fullCompilationData}`;
    }
    const testedInputs = extendedScenario.transaction.inputs.filter((input) => input.unlockingBytecode === null);
    if (testedInputs.length !== 1) {
        return `Cannot generate ${scenarioName}: the specific input under test in this scenario is ambiguous – "transaction.inputs" must include exactly one input which has "unlockingBytecode" set to "null".`;
    }
    const testedInputIndex = extendedScenario.transaction.inputs.findIndex((input) => input.unlockingBytecode === null);
    const outputs = extendedScenario.transaction.outputs.map((output) => ({
        lockingBytecode: output.lockingBytecode ?? getScenarioOutputDefaultLockingBytecode(),
        satoshis: output.satoshis ?? _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioOutputSatoshis,
    }));
    const compiledOutputResults = outputs.map(
    // eslint-disable-next-line complexity
    (output, index) => {
        const satoshis = typeof output.satoshis === 'string'
            ? (0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.hexToBin)(output.satoshis)
            : (0,_format_numbers__WEBPACK_IMPORTED_MODULE_1__.bigIntToBinUint64LE)(BigInt(output.satoshis));
        if (typeof output.lockingBytecode === 'string') {
            return {
                lockingBytecode: (0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.hexToBin)(output.lockingBytecode),
                satoshis,
            };
        }
        const specifiedLockingScriptId = output.lockingBytecode.script;
        const impliedLockingScriptId = unlockingScriptId === undefined
            ? undefined
            : environment.unlockingScripts?.[unlockingScriptId];
        const scriptId = typeof specifiedLockingScriptId === 'string'
            ? specifiedLockingScriptId
            : impliedLockingScriptId;
        if (scriptId === undefined) {
            if (unlockingScriptId === undefined) {
                return `Cannot generate locking bytecode for output ${index}: this output is set to use the script unlocked by the unlocking script under test, but an unlocking script ID was not provided for scenario generation.`;
            }
            return `Cannot generate locking bytecode for output ${index}: the locking script unlocked by "${unlockingScriptId}" is not provided in this compilation environment.`;
        }
        const overriddenDataDefinition = output.lockingBytecode.overrides === undefined
            ? undefined
            : extendScenarioDefinitionData(extendedScenario.data, output.lockingBytecode.overrides);
        const overriddenCompilationData = overriddenDataDefinition === undefined
            ? undefined
            : extendCompilationDataWithScenarioBytecode({
                compilationData: extendedScenarioDefinitionToCompilationData({
                    data: overriddenDataDefinition,
                }),
                environment,
                scenarioDataBytecodeScripts: overriddenDataDefinition.bytecode ?? {},
            });
        if (typeof overriddenCompilationData === 'string') {
            return `Cannot generate locking bytecode for output ${index}: ${overriddenCompilationData}`;
        }
        const data = overriddenCompilationData === undefined
            ? fullCompilationData
            : overriddenCompilationData;
        const result = (0,_language_compile__WEBPACK_IMPORTED_MODULE_4__.compileScript)(scriptId, data, environment);
        if (!result.success) {
            return `Cannot generate locking bytecode for output ${index}: ${(0,_language_language_utils__WEBPACK_IMPORTED_MODULE_5__.stringifyErrors)(result.errors)}`;
        }
        return { lockingBytecode: result.bytecode, satoshis };
    });
    const outputCompilationErrors = compiledOutputResults.filter((result) => typeof result === 'string');
    if (outputCompilationErrors.length > 0) {
        return `Cannot generate ${scenarioName}: ${outputCompilationErrors.join('; ')}`;
    }
    const compiledOutputs = compiledOutputResults;
    const sourceSatoshis = typeof extendedScenario.value === 'number'
        ? (0,_format_numbers__WEBPACK_IMPORTED_MODULE_1__.bigIntToBinUint64LE)(BigInt(extendedScenario.value))
        : (0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.hexToBin)(extendedScenario.value);
    const unlockingBytecodeUnderTest = undefined;
    return {
        data: fullCompilationData,
        program: {
            inputIndex: testedInputIndex,
            sourceOutput: { satoshis: sourceSatoshis },
            spendingTransaction: {
                // eslint-disable-next-line complexity
                inputs: extendedScenario.transaction.inputs.map((input) => ({
                    outpointIndex: input.outpointIndex ??
                        _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioInputOutpointIndex,
                    outpointTransactionHash: (0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.hexToBin)(input.outpointTransactionHash ??
                        _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioInputOutpointTransactionHash),
                    sequenceNumber: input.sequenceNumber ??
                        _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioInputSequenceNumber,
                    unlockingBytecode: input.unlockingBytecode === null
                        ? unlockingBytecodeUnderTest
                        : (0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.hexToBin)(typeof input.unlockingBytecode === 'string'
                            ? input.unlockingBytecode
                            : _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioInputUnlockingBytecodeHex),
                })),
                locktime: extendedScenario.transaction.locktime,
                outputs: compiledOutputs,
                version: extendedScenario.transaction.version,
            },
        },
    };
};
//# sourceMappingURL=scenarios.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/standard/p2pkh.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/standard/p2pkh.js ***!
  \***********************************************************************************/
/*! namespace exports */
/*! export authenticationTemplateP2pkh [provided] [no usage info] [missing usage info prevents renaming] */
/*! export authenticationTemplateP2pkhNonHd [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "authenticationTemplateP2pkhNonHd": () => /* binding */ authenticationTemplateP2pkhNonHd,
/* harmony export */   "authenticationTemplateP2pkh": () => /* binding */ authenticationTemplateP2pkh
/* harmony export */ });
/**
 * A standard single-factor authentication template which uses
 * Pay-to-Public-Key-Hash (P2PKH), the most common authentication scheme in use
 * on the network.
 *
 * This P2PKH template uses BCH Schnorr signatures, reducing the size of
 * transactions.
 *
 * Note, this authentication template uses only a single `Key`. For HD key
 * support, see `authenticationTemplateP2pkhHd`.
 */
const authenticationTemplateP2pkhNonHd = {
    $schema: 'https://bitauth.com/schemas/authentication-template-v0.schema.json',
    description: 'A standard single-factor authentication template which uses Pay-to-Public-Key-Hash (P2PKH), the most common authentication scheme in use on the network.\n\nThis P2PKH template uses BCH Schnorr signatures, reducing the size of transactions.',
    entities: {
        owner: {
            description: 'The individual who can spend from this wallet.',
            name: 'Owner',
            scripts: ['lock', 'unlock'],
            variables: {
                key: {
                    description: 'The private key which controls this wallet.',
                    name: 'Key',
                    type: 'Key',
                },
            },
        },
    },
    name: 'Single Signature (P2PKH)',
    scripts: {
        lock: {
            lockingType: 'standard',
            name: 'P2PKH Lock',
            script: 'OP_DUP\nOP_HASH160 <$(<key.public_key> OP_HASH160\n)> OP_EQUALVERIFY\nOP_CHECKSIG',
        },
        unlock: {
            name: 'Unlock',
            script: '<key.schnorr_signature.all_outputs>\n<key.public_key>',
            unlocks: 'lock',
        },
    },
    supported: ['BCH_2019_05', 'BCH_2019_11', 'BCH_2020_05'],
    version: 0,
};
/**
 * A standard single-factor authentication template which uses
 * Pay-to-Public-Key-Hash (P2PKH), the most common authentication scheme in use
 * on the network.
 *
 * This P2PKH template uses BCH Schnorr signatures, reducing the size of
 * transactions.
 *
 * Because the template uses a Hierarchical Deterministic (HD) key, it also
 * supports an "Observer (Watch-Only)" entity.
 */
const authenticationTemplateP2pkh = {
    $schema: 'https://bitauth.com/schemas/authentication-template-v0.schema.json',
    description: 'A standard single-factor authentication template which uses Pay-to-Public-Key-Hash (P2PKH), the most common authentication scheme in use on the network.\n\nThis P2PKH template uses BCH Schnorr signatures, reducing the size of transactions. Because the template uses a Hierarchical Deterministic (HD) key, it also supports an "Observer (Watch-Only)" entity.',
    entities: {
        observer: {
            description: 'An entity which can generate addresses but cannot spend funds from this wallet.',
            name: 'Observer (Watch-Only)',
            scripts: ['lock'],
        },
        owner: {
            description: 'The individual who can spend from this wallet.',
            name: 'Owner',
            scripts: ['lock', 'unlock'],
            variables: {
                key: {
                    description: 'The private key which controls this wallet.',
                    name: 'Key',
                    type: 'HdKey',
                },
            },
        },
    },
    name: 'Single Signature (P2PKH)',
    scripts: {
        lock: {
            lockingType: 'standard',
            name: 'P2PKH Lock',
            script: 'OP_DUP\nOP_HASH160 <$(<key.public_key> OP_HASH160\n)> OP_EQUALVERIFY\nOP_CHECKSIG',
        },
        unlock: {
            name: 'Unlock',
            script: '<key.schnorr_signature.all_outputs>\n<key.public_key>',
            unlocks: 'lock',
        },
    },
    supported: ['BCH_2019_05', 'BCH_2019_11', 'BCH_2020_05'],
    version: 0,
};
//# sourceMappingURL=p2pkh.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/standard/standard.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/standard/standard.js ***!
  \**************************************************************************************/
/*! namespace exports */
/*! export authenticationTemplateP2pkh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/standard/p2pkh.js .authenticationTemplateP2pkh */
/*! export authenticationTemplateP2pkhNonHd [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/standard/p2pkh.js .authenticationTemplateP2pkhNonHd */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "authenticationTemplateP2pkh": () => /* reexport safe */ _p2pkh__WEBPACK_IMPORTED_MODULE_0__.authenticationTemplateP2pkh,
/* harmony export */   "authenticationTemplateP2pkhNonHd": () => /* reexport safe */ _p2pkh__WEBPACK_IMPORTED_MODULE_0__.authenticationTemplateP2pkhNonHd
/* harmony export */ });
/* harmony import */ var _p2pkh__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./p2pkh */ "./node_modules/@bitauth/libauth/build/module/lib/template/standard/p2pkh.js");

//# sourceMappingURL=standard.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/template-types.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/template-types.js ***!
  \***********************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
/***/ (() => {

/* eslint-disable max-lines */
/**
 * Because this file is consumed by the `doc:generate-json-schema` package
 * script to produce a JSON schema, large sections of the below documentation
 * are copied from this libraries `Transaction` and `CompilationData` types.
 *
 * This is preferable to importing those types, as most documentation needs to
 * be slightly modified for this context, and avoiding imports in this file
 * makes it easier to provide a stable API.
 */
//# sourceMappingURL=template-types.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/template-validation.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/template-validation.js ***!
  \****************************************************************************************/
/*! namespace exports */
/*! export parseAuthenticationTemplateEntities [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseAuthenticationTemplateScenarioData [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseAuthenticationTemplateScenarioDataHdKeys [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseAuthenticationTemplateScenarioDataKeys [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseAuthenticationTemplateScenarioTransaction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseAuthenticationTemplateScenarioTransactionInputs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseAuthenticationTemplateScenarioTransactionOutputLockingBytecode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseAuthenticationTemplateScenarioTransactionOutputs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseAuthenticationTemplateScenarios [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseAuthenticationTemplateScripts [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseAuthenticationTemplateVariable [provided] [no usage info] [missing usage info prevents renaming] */
/*! export validateAuthenticationTemplate [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "parseAuthenticationTemplateScripts": () => /* binding */ parseAuthenticationTemplateScripts,
/* harmony export */   "parseAuthenticationTemplateVariable": () => /* binding */ parseAuthenticationTemplateVariable,
/* harmony export */   "parseAuthenticationTemplateEntities": () => /* binding */ parseAuthenticationTemplateEntities,
/* harmony export */   "parseAuthenticationTemplateScenarioDataHdKeys": () => /* binding */ parseAuthenticationTemplateScenarioDataHdKeys,
/* harmony export */   "parseAuthenticationTemplateScenarioDataKeys": () => /* binding */ parseAuthenticationTemplateScenarioDataKeys,
/* harmony export */   "parseAuthenticationTemplateScenarioData": () => /* binding */ parseAuthenticationTemplateScenarioData,
/* harmony export */   "parseAuthenticationTemplateScenarioTransactionInputs": () => /* binding */ parseAuthenticationTemplateScenarioTransactionInputs,
/* harmony export */   "parseAuthenticationTemplateScenarioTransactionOutputLockingBytecode": () => /* binding */ parseAuthenticationTemplateScenarioTransactionOutputLockingBytecode,
/* harmony export */   "parseAuthenticationTemplateScenarioTransactionOutputs": () => /* binding */ parseAuthenticationTemplateScenarioTransactionOutputs,
/* harmony export */   "parseAuthenticationTemplateScenarioTransaction": () => /* binding */ parseAuthenticationTemplateScenarioTransaction,
/* harmony export */   "parseAuthenticationTemplateScenarios": () => /* binding */ parseAuthenticationTemplateScenarios,
/* harmony export */   "validateAuthenticationTemplate": () => /* binding */ validateAuthenticationTemplate
/* harmony export */ });
/* harmony import */ var _format_hex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../format/hex */ "./node_modules/@bitauth/libauth/build/module/lib/format/hex.js");
/* harmony import */ var _key_key_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../key/key-utils */ "./node_modules/@bitauth/libauth/build/module/lib/key/key-utils.js");
/* harmony import */ var _compiler_defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./compiler-defaults */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-defaults.js");
/* harmony import */ var _language_resolve__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./language/resolve */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/resolve.js");
/* eslint-disable max-lines, @typescript-eslint/ban-types */




const listIds = (ids) => ids
    .map((id) => `"${id}"`)
    .sort((a, b) => a.localeCompare(b))
    .join(', ');
/**
 * Verify that the provided value is an array which is not sparse.
 */
const isDenseArray = (maybeArray) => Array.isArray(maybeArray) && !maybeArray.includes(undefined);
/**
 * Check that a value is an array which contains only strings and has no empty
 * items (is not a sparse array, e.g. `[1, , 3]`).
 */
const isStringArray = (maybeArray) => isDenseArray(maybeArray) &&
    !maybeArray.some((item) => typeof item !== 'string');
const isObject = (maybeObject) => typeof maybeObject === 'object' && maybeObject !== null;
const isStringObject = (maybeStringObject) => !Object.values(maybeStringObject).some((value) => typeof value !== 'string');
const hasNonHexCharacter = /[^a-fA-F0-9]/u;
const isHexString = (maybeHexString) => typeof maybeHexString === 'string' &&
    !hasNonHexCharacter.test(maybeHexString);
const characterLength32BytePrivateKey = 64;
const isObjectOfValidPrivateKeys = (maybePrivateKeysObject) => !Object.values(maybePrivateKeysObject).some((value) => !isHexString(value) ||
    value.length !== characterLength32BytePrivateKey ||
    !(0,_key_key_utils__WEBPACK_IMPORTED_MODULE_1__.validateSecp256k1PrivateKey)((0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.hexToBin)(value)));
const isInteger = (value) => typeof value === 'number' && Number.isInteger(value);
const isPositiveInteger = (value) => isInteger(value) && value >= 0;
const isRangedInteger = (value, minimum, maximum) => isInteger(value) && value >= minimum && value <= maximum;
/**
 * Verify that a value is a valid `satoshi` value: either a number between `0`
 * and `Number.MAX_SAFE_INTEGER` or a 16-character, hexadecimal-encoded string.
 *
 * @param maybeSatoshis - the value to verify
 */
const isValidSatoshisValue = (maybeSatoshis) => {
    const uint64HexLength = 16;
    if (maybeSatoshis === undefined ||
        isRangedInteger(maybeSatoshis, 0, Number.MAX_SAFE_INTEGER) ||
        (isHexString(maybeSatoshis) && maybeSatoshis.length === uint64HexLength)) {
        return true;
    }
    return false;
};
/**
 * Parse an authentication template `scripts` object into its component scripts,
 * validating the shape of each script object. Returns either an error message
 * as a string or an object of cloned and sorted scripts.
 *
 * @param scripts - the `scripts` property of an `AuthenticationTemplate`
 */
// eslint-disable-next-line complexity
const parseAuthenticationTemplateScripts = (scripts) => {
    const unknownScripts = Object.entries(scripts).map(([id, script]) => ({ id, script }));
    const nonObjectScripts = unknownScripts
        .filter(({ script }) => typeof script !== 'object' || script === null)
        .map(({ id }) => id);
    if (nonObjectScripts.length > 0) {
        return `All authentication template scripts must be objects, but the following scripts are not objects: ${listIds(nonObjectScripts)}.`;
    }
    const allScripts = unknownScripts;
    const unlockingResults = allScripts
        .filter(({ script }) => 'unlocks' in script)
        // eslint-disable-next-line complexity
        .map(({ id, script }) => {
        const { ageLock, estimate, fails, invalid, name, passes, script: scriptContents, timeLockType, unlocks, } = script;
        if (typeof unlocks !== 'string') {
            return `The "unlocks" property of unlocking script "${id}" must be a string.`;
        }
        if (typeof scriptContents !== 'string') {
            return `The "script" property of unlocking script "${id}" must be a string.`;
        }
        if (ageLock !== undefined && typeof ageLock !== 'string') {
            return `If defined, the "ageLock" property of unlocking script "${id}" must be a string.`;
        }
        if (estimate !== undefined && typeof estimate !== 'string') {
            return `If defined, the "estimate" property of unlocking script "${id}" must be a string.`;
        }
        if (name !== undefined && typeof name !== 'string') {
            return `If defined, the "name" property of unlocking script "${id}" must be a string.`;
        }
        if (fails !== undefined && !isStringArray(fails)) {
            return `If defined, the "fails" property of unlocking script "${id}" must be an array containing only scenario identifiers (strings).`;
        }
        if (invalid !== undefined && !isStringArray(invalid)) {
            return `If defined, the "invalid" property of unlocking script "${id}" must be an array containing only scenario identifiers (strings).`;
        }
        if (passes !== undefined && !isStringArray(passes)) {
            return `If defined, the "passes" property of unlocking script "${id}" must be an array containing only scenario identifiers (strings).`;
        }
        if (timeLockType !== undefined &&
            timeLockType !== 'timestamp' &&
            timeLockType !== 'height') {
            return `If defined, the "timeLockType" property of unlocking script "${id}" must be either "timestamp" or "height".`;
        }
        return {
            id,
            script: {
                ...(ageLock === undefined ? {} : { ageLock }),
                ...(estimate === undefined ? {} : { estimate }),
                ...(fails === undefined ? {} : { fails }),
                ...(invalid === undefined ? {} : { invalid }),
                ...(passes === undefined ? {} : { passes }),
                ...(name === undefined ? {} : { name }),
                script: scriptContents,
                ...(timeLockType === undefined ? {} : { timeLockType }),
                unlocks,
            },
        };
    });
    const invalidUnlockingResults = unlockingResults.filter((result) => typeof result === 'string');
    if (invalidUnlockingResults.length > 0) {
        return invalidUnlockingResults.join(' ');
    }
    const validUnlockingResults = unlockingResults;
    const unlocking = validUnlockingResults.reduce((all, result) => ({ ...all, [result.id]: result.script }), {});
    const unlockingIds = validUnlockingResults.map(({ id }) => id);
    const impliedLockingIds = validUnlockingResults.map(({ script }) => script.unlocks);
    const lockingResults = allScripts
        .filter(({ id, script }) => 'lockingType' in script || impliedLockingIds.includes(id))
        // eslint-disable-next-line complexity
        .map(({ id, script }) => {
        const { lockingType, script: scriptContents, name } = script;
        if (lockingType !== 'standard' && lockingType !== 'p2sh') {
            return `The "lockingType" property of locking script "${id}" must be either "standard" or "p2sh".`;
        }
        if (typeof scriptContents !== 'string') {
            return `The "script" property of locking script "${id}" must be a string.`;
        }
        if (name !== undefined && typeof name !== 'string') {
            return `If defined, the "name" property of locking script "${id}" must be a string.`;
        }
        return {
            id,
            script: {
                lockingType,
                ...(name === undefined ? {} : { name }),
                script: scriptContents,
            },
        };
    });
    const invalidLockingResults = lockingResults.filter((result) => typeof result === 'string');
    if (invalidLockingResults.length > 0) {
        return invalidLockingResults.join(' ');
    }
    const validLockingResults = lockingResults;
    const locking = validLockingResults.reduce((all, result) => ({ ...all, [result.id]: result.script }), {});
    const lockingIds = validLockingResults.map(({ id }) => id);
    const unknownLockingIds = Object.values(unlocking)
        .map((script) => script.unlocks)
        .filter((unlocks) => !lockingIds.includes(unlocks));
    if (unknownLockingIds.length > 0) {
        return `The following locking scripts (referenced in "unlocks" properties) were not provided: ${listIds(unknownLockingIds)}.`;
    }
    const testedResults = allScripts
        .filter(({ script }) => 'tests' in script)
        // eslint-disable-next-line complexity
        .map(({ id, script }) => {
        const { tests, script: scriptContents, name, pushed } = script;
        if (typeof scriptContents !== 'string') {
            return `The "script" property of tested script "${id}" must be a string.`;
        }
        if (name !== undefined && typeof name !== 'string') {
            return `If defined, the "name" property of tested script "${id}" must be a string.`;
        }
        if (pushed !== undefined && pushed !== true && pushed !== false) {
            return `If defined, the "pushed" property of tested script "${id}" must be a boolean value.`;
        }
        if (!Array.isArray(tests)) {
            return `If defined, the "tests" property of tested script "${id}" must be an array.`;
        }
        const extractedTests = 
        // eslint-disable-next-line complexity
        tests.map((test) => {
            const { check, fails, invalid, name: testName, passes, setup, } = test;
            if (typeof check !== 'string') {
                return `The "check" properties of all tests in tested script "${id}" must be a strings.`;
            }
            if (testName !== undefined && typeof testName !== 'string') {
                return `If defined, the "name" properties of all tests in tested script "${id}" must be strings.`;
            }
            if (setup !== undefined && typeof setup !== 'string') {
                return `If defined, the "setup" properties of all tests in tested script "${id}" must be strings.`;
            }
            if (fails !== undefined && !isStringArray(fails)) {
                return `If defined, the "fails" property of each test in tested script "${id}" must be an array containing only scenario identifiers (strings).`;
            }
            if (invalid !== undefined && !isStringArray(invalid)) {
                return `If defined, the "invalid" property of each test in tested script "${id}" must be an array containing only scenario identifiers (strings).`;
            }
            if (passes !== undefined && !isStringArray(passes)) {
                return `If defined, the "passes" property of each test in tested script "${id}" must be an array containing only scenario identifiers (strings).`;
            }
            return {
                check,
                ...(fails === undefined ? {} : { fails }),
                ...(invalid === undefined ? {} : { invalid }),
                ...(passes === undefined ? {} : { passes }),
                ...(testName === undefined ? {} : { name: testName }),
                ...(setup === undefined ? {} : { setup }),
            };
        });
        const invalidTests = extractedTests.filter((result) => typeof result === 'string');
        if (invalidTests.length > 0) {
            return invalidTests.join(' ');
        }
        const validTests = extractedTests;
        return {
            id,
            script: {
                ...(name === undefined ? {} : { name }),
                ...(pushed === undefined ? {} : { pushed }),
                script: scriptContents,
                tests: validTests,
            },
        };
    });
    const invalidTestedResults = testedResults.filter((result) => typeof result === 'string');
    if (invalidTestedResults.length > 0) {
        return invalidTestedResults.join(' ');
    }
    const validTestedResults = testedResults;
    const tested = validTestedResults.reduce((all, result) => ({ ...all, [result.id]: result.script }), {});
    const testedIds = validTestedResults.map(({ id }) => id);
    const lockingAndUnlockingIds = [...lockingIds, ...unlockingIds];
    const lockingAndUnlockingIdsWithTests = lockingAndUnlockingIds.filter((id) => testedIds.includes(id));
    if (lockingAndUnlockingIdsWithTests.length > 0) {
        return `Locking and unlocking scripts may not have tests, but the following scripts include a "tests" property: ${listIds(lockingAndUnlockingIdsWithTests)}`;
    }
    const alreadySortedIds = [...lockingAndUnlockingIds, testedIds];
    const otherResults = allScripts
        .filter(({ id }) => !alreadySortedIds.includes(id))
        .map(({ id, script }) => {
        const { script: scriptContents, name } = script;
        if (typeof scriptContents !== 'string') {
            return `The "script" property of script "${id}" must be a string.`;
        }
        if (name !== undefined && typeof name !== 'string') {
            return `If defined, the "name" property of script "${id}" must be a string.`;
        }
        return {
            id,
            script: {
                ...(name === undefined ? {} : { name }),
                script: scriptContents,
            },
        };
    });
    const invalidOtherResults = otherResults.filter((result) => typeof result === 'string');
    if (invalidOtherResults.length > 0) {
        return invalidOtherResults.join(' ');
    }
    const validOtherResults = otherResults;
    const other = validOtherResults.reduce((all, result) => ({ ...all, [result.id]: result.script }), {});
    return {
        locking,
        other,
        tested,
        unlocking,
    };
};
const authenticationTemplateVariableTypes = [
    'AddressData',
    'HdKey',
    'Key',
    'WalletData',
];
const isAuthenticationTemplateVariableType = (type) => authenticationTemplateVariableTypes.includes(type);
/**
 * Parse an authentication template entity `variables` object into its component
 * variables, validating the shape of each variable object. Returns either an
 * error message as a string or the cloned variables object.
 *
 * @param scripts - the `scripts` property of an `AuthenticationTemplate`
 */
const parseAuthenticationTemplateVariable = (variables, entityId) => {
    const unknownVariables = Object.entries(variables).map(([id, variable]) => ({ id, variable }));
    const nonObjectVariables = unknownVariables
        .filter(({ variable }) => typeof variable !== 'object' || variable === null)
        .map(({ id }) => id);
    if (nonObjectVariables.length > 0) {
        return `All authentication template variables must be objects, but the following variables owned by entity "${entityId}" are not objects: ${listIds(nonObjectVariables)}.`;
    }
    const allEntities = unknownVariables;
    const variableResults = allEntities
        // eslint-disable-next-line complexity
        .map(({ id, variable }) => {
        const { description, name, type } = variable;
        if (!isAuthenticationTemplateVariableType(type)) {
            return `The "type" property of variable "${id}" must be a valid authentication template variable type. Available types are: ${listIds(authenticationTemplateVariableTypes)}.`;
        }
        if (description !== undefined && typeof description !== 'string') {
            return `If defined, the "description" property of variable "${id}" must be a string.`;
        }
        if (name !== undefined && typeof name !== 'string') {
            return `If defined, the "name" property of variable "${id}" must be a string.`;
        }
        if (type === 'HdKey') {
            const { addressOffset, hdPublicKeyDerivationPath, privateDerivationPath, publicDerivationPath, } = variable;
            if (addressOffset !== undefined && typeof addressOffset !== 'number') {
                return `If defined, the "addressOffset" property of HdKey "${id}" must be a number.`;
            }
            if (hdPublicKeyDerivationPath !== undefined &&
                typeof hdPublicKeyDerivationPath !== 'string') {
                return `If defined, the "hdPublicKeyDerivationPath" property of HdKey "${id}" must be a string.`;
            }
            if (privateDerivationPath !== undefined &&
                typeof privateDerivationPath !== 'string') {
                return `If defined, the "privateDerivationPath" property of HdKey "${id}" must be a string.`;
            }
            if (publicDerivationPath !== undefined &&
                typeof publicDerivationPath !== 'string') {
                return `If defined, the "publicDerivationPath" property of HdKey "${id}" must be a string.`;
            }
            const hdPublicKeyPath = hdPublicKeyDerivationPath ??
                _compiler_defaults__WEBPACK_IMPORTED_MODULE_2__.CompilerDefaults.hdKeyHdPublicKeyDerivationPath;
            const privatePath = privateDerivationPath ?? _compiler_defaults__WEBPACK_IMPORTED_MODULE_2__.CompilerDefaults.hdKeyPrivateDerivationPath;
            const publicPath = publicDerivationPath ?? privatePath.replace('m', 'M');
            const validPrivatePathWithIndex = /^m(?:\/(?:[0-9]+|i)'?)*$/u;
            const validPrivatePath = /^m(?:\/[0-9]+'?)*$/u;
            const replacedPrivatePath = privatePath.replace('i', '0');
            if (!validPrivatePathWithIndex.test(privatePath) &&
                !validPrivatePath.test(replacedPrivatePath)) {
                return `If defined, the "privateDerivationPath" property of HdKey "${id}" must be a valid private derivation path, but the provided value is "${hdPublicKeyPath}". A valid path must begin with "m" and include only "/", "'", a single "i" address index character, and numbers.`;
            }
            if (!validPrivatePath.test(hdPublicKeyPath)) {
                return `If defined, the "hdPublicKeyDerivationPath" property of an HdKey must be a valid private derivation path for the HdKey's HD public node, but the provided value for HdKey "${id}" is "${hdPublicKeyPath}". A valid path must begin with "m" and include only "/", "'", and numbers (the "i" character cannot be used in "hdPublicKeyDerivationPath").`;
            }
            const validPublicPathWithIndex = /^M(?:\/(?:[0-9]+|i))*$/u;
            const validPublicPath = /^M(?:\/[0-9]+)*$/u;
            const replacedPublicPath = publicPath.replace('i', '0');
            if (!validPublicPathWithIndex.test(publicPath) &&
                !validPublicPath.test(replacedPublicPath)) {
                return `The "publicDerivationPath" property of HdKey "${id}" must be a valid public derivation path, but the current value is "${publicPath}". Public derivation paths must begin with "M" and include only "/", a single "i" address index character, and numbers. If the "privateDerivationPath" uses hardened derivation, the "publicDerivationPath" should be set to enable public derivation from the "hdPublicKeyDerivationPath".`;
            }
            const publicPathSuffix = publicPath.replace('M/', '');
            const impliedPrivatePath = `${hdPublicKeyPath}/${publicPathSuffix}`;
            if (impliedPrivatePath !== privatePath) {
                return `The "privateDerivationPath" property of HdKey "${id}" is "${privatePath}", but the implied private derivation path of "hdPublicKeyDerivationPath" and "publicDerivationPath" is "${impliedPrivatePath}". The "publicDerivationPath" property must be set to allow for public derivation of the same HD node derived by "privateDerivationPath" beginning from the HD public key derived at "hdPublicKeyDerivationPath".`;
            }
            return {
                id,
                variable: {
                    ...(addressOffset === undefined ? {} : { addressOffset }),
                    ...(description === undefined ? {} : { description }),
                    ...(hdPublicKeyDerivationPath === undefined
                        ? {}
                        : { hdPublicKeyDerivationPath }),
                    ...(name === undefined ? {} : { name }),
                    ...(privateDerivationPath === undefined
                        ? {}
                        : { privateDerivationPath }),
                    ...(publicDerivationPath === undefined
                        ? {}
                        : { publicDerivationPath }),
                    type,
                },
            };
        }
        return {
            id,
            variable: {
                ...(description === undefined ? {} : { description }),
                ...(name === undefined ? {} : { name }),
                type,
            },
        };
    });
    const invalidVariableResults = variableResults.filter((result) => typeof result === 'string');
    if (invalidVariableResults.length > 0) {
        return invalidVariableResults.join(' ');
    }
    const validVariableResults = variableResults;
    const clonedVariables = validVariableResults.reduce((all, result) => ({ ...all, [result.id]: result.variable }), {});
    return clonedVariables;
};
/**
 * Parse an authentication template `entities` object into its component
 * entities, validating the shape of each entity object. Returns either an error
 * message as a string or the cloned entities object.
 *
 * @param scripts - the `scripts` property of an `AuthenticationTemplate`
 */
const parseAuthenticationTemplateEntities = (entities) => {
    const unknownEntities = Object.entries(entities).map(([id, entity]) => ({ entity, id }));
    const nonObjectEntities = unknownEntities
        .filter(({ entity }) => typeof entity !== 'object' || entity === null)
        .map(({ id }) => id);
    if (nonObjectEntities.length > 0) {
        return `All authentication template entities must be objects, but the following entities are not objects: ${listIds(nonObjectEntities)}.`;
    }
    const allEntities = unknownEntities;
    const entityResults = allEntities
        // eslint-disable-next-line complexity
        .map(({ id, entity }) => {
        const { description, name, scripts, variables } = entity;
        if (description !== undefined && typeof description !== 'string') {
            return `If defined, the "description" property of entity "${id}" must be a string.`;
        }
        if (name !== undefined && typeof name !== 'string') {
            return `If defined, the "name" property of entity "${id}" must be a string.`;
        }
        if (scripts !== undefined && !isStringArray(scripts)) {
            return `If defined, the "scripts" property of entity "${id}" must be an array containing only script identifiers (strings).`;
        }
        if (variables !== undefined && !isObject(variables)) {
            return `If defined, the "variables" property of entity "${id}" must be an object.`;
        }
        const variableResult = variables === undefined
            ? undefined
            : parseAuthenticationTemplateVariable(variables, id);
        if (typeof variableResult === 'string') {
            return variableResult;
        }
        return {
            entity: {
                ...(description === undefined ? {} : { description }),
                ...(name === undefined ? {} : { name }),
                ...(scripts === undefined ? {} : { scripts }),
                ...(variableResult === undefined
                    ? {}
                    : { variables: variableResult }),
            },
            id,
        };
    });
    const invalidEntityResults = entityResults.filter((result) => typeof result === 'string');
    if (invalidEntityResults.length > 0) {
        return invalidEntityResults.join(' ');
    }
    const validEntityResults = entityResults;
    const clonedEntities = validEntityResults.reduce((all, result) => ({ ...all, [result.id]: result.entity }), {});
    return clonedEntities;
};
/**
 * Validate and clone an Authentication Template Scenario `data.hdKeys` object.
 *
 * @param hdKeys - the `data.hdKeys` object to validate and clone
 * @param location - the location of the error to specify in error messages,
 * e.g. `scenario "test"` or
 * `'lockingBytecode.override' in output 2 of scenario "test"`
 */
// eslint-disable-next-line complexity
const parseAuthenticationTemplateScenarioDataHdKeys = (hdKeys, location) => {
    const { addressIndex, hdPublicKeys, hdPrivateKeys } = hdKeys;
    const maximumAddressIndex = 2147483648;
    if (addressIndex !== undefined &&
        !isRangedInteger(addressIndex, 0, maximumAddressIndex)) {
        return `If defined, the "data.hdKeys.addressIndex" property of ${location} must be a positive integer between 0 and 2,147,483,648 (inclusive).`;
    }
    if (hdPublicKeys !== undefined &&
        !(isObject(hdPublicKeys) && isStringObject(hdPublicKeys))) {
        return `If defined, the "data.hdKeys.hdPublicKeys" property of ${location} must be an object, and each value must be a string.`;
    }
    if (hdPrivateKeys !== undefined &&
        !(isObject(hdPrivateKeys) && isStringObject(hdPrivateKeys))) {
        return `If defined, the "data.hdKeys.hdPrivateKeys" property of ${location} must be an object, and each value must be a string.`;
    }
    return {
        ...(addressIndex === undefined ? {} : { addressIndex }),
        ...(hdPublicKeys === undefined
            ? {}
            : { hdPublicKeys: { ...hdPublicKeys } }),
        ...(hdPrivateKeys === undefined
            ? {}
            : { hdPrivateKeys: { ...hdPrivateKeys } }),
    };
};
/**
 * Validate and clone an Authentication Template Scenario `data.keys` object.
 *
 * @param keys - the `data.keys` object to validate and clone
 * @param location - the location of the error to specify in error messages,
 * e.g. `scenario "test"` or
 * `'lockingBytecode.override' in output 2 of scenario "test"`
 */
const parseAuthenticationTemplateScenarioDataKeys = (keys, location) => {
    const { privateKeys } = keys;
    if (privateKeys !== undefined &&
        !(isObject(privateKeys) && isObjectOfValidPrivateKeys(privateKeys))) {
        return `If defined, the "data.keys.privateKeys" property of ${location} must be an object, and each value must be a 32-byte, hexadecimal-encoded private key.`;
    }
    return { ...(privateKeys === undefined ? {} : { privateKeys }) };
};
/**
 * Validate and clone an Authentication Template Scenario `data` object.
 *
 * @param data - the `data` object to validate and clone
 * @param location - the location of the error to specify in error messages,
 * e.g. `scenario "test"` or
 * `'lockingBytecode.override' in output 2 of scenario "test"`
 */
// eslint-disable-next-line complexity
const parseAuthenticationTemplateScenarioData = (data, location) => {
    const { bytecode, currentBlockHeight, currentBlockTime, hdKeys, keys, } = data;
    if (bytecode !== undefined &&
        (!isObject(bytecode) || !isStringObject(bytecode))) {
        return `If defined, the "data.bytecode" property of ${location} must be an object, and each value must be a string.`;
    }
    const minimumBlockTime = 500000000;
    const maximumBlockTime = 4294967295;
    if (currentBlockHeight !== undefined &&
        !isRangedInteger(currentBlockHeight, 0, minimumBlockTime - 1)) {
        return `If defined, the "currentBlockHeight" property of ${location} must be a positive integer from 0 to 499,999,999 (inclusive).`;
    }
    if (currentBlockTime !== undefined &&
        !isRangedInteger(currentBlockTime, minimumBlockTime, maximumBlockTime)) {
        return `If defined, the "currentBlockTime" property of ${location} must be a positive integer from 500,000,000 to 4,294,967,295 (inclusive).`;
    }
    const hdKeysResult = hdKeys === undefined
        ? undefined
        : isObject(hdKeys)
            ? parseAuthenticationTemplateScenarioDataHdKeys(hdKeys, location)
            : `If defined, the "data.hdKeys" property of ${location} must be an object.`;
    if (typeof hdKeysResult === 'string') {
        return hdKeysResult;
    }
    const keysResult = keys === undefined
        ? undefined
        : isObject(keys)
            ? parseAuthenticationTemplateScenarioDataKeys(keys, location)
            : `If defined, the "data.keys" property of ${location} must be an object.`;
    if (typeof keysResult === 'string') {
        return keysResult;
    }
    return {
        ...(bytecode === undefined ? {} : { bytecode: { ...bytecode } }),
        ...(currentBlockHeight === undefined ? {} : { currentBlockHeight }),
        ...(currentBlockTime === undefined ? {} : { currentBlockTime }),
        ...(hdKeysResult === undefined ? {} : { hdKeys: hdKeysResult }),
        ...(keysResult === undefined ? {} : { keys: keysResult }),
    };
};
/**
 * Validate and clone an Authentication Template Scenario `transaction.inputs`
 * array.
 *
 * @param inputs - the `transaction.inputs` array to validate and clone
 * @param location - the location of the error to specify in error messages,
 * e.g. `scenario "test"`
 */
const parseAuthenticationTemplateScenarioTransactionInputs = (inputs, location) => {
    if (inputs === undefined) {
        return undefined;
    }
    if (!isDenseArray(inputs)) {
        return `If defined, the "transaction.inputs" property of ${location} must be an array of scenario input objects.`;
    }
    const inputResults = inputs
        // eslint-disable-next-line complexity
        .map((maybeInput, inputIndex) => {
        const { outpointIndex, outpointTransactionHash, sequenceNumber, unlockingBytecode, } = maybeInput;
        const newLocation = `input ${inputIndex} in ${location}`;
        if (outpointIndex !== undefined && !isPositiveInteger(outpointIndex)) {
            return `If defined, the "outpointIndex" property of ${newLocation} must be a positive integer.`;
        }
        const characterLength32ByteHash = 64;
        if (outpointTransactionHash !== undefined &&
            !(isHexString(outpointTransactionHash) &&
                outpointTransactionHash.length === characterLength32ByteHash)) {
            return `If defined, the "outpointTransactionHash" property of ${newLocation} must be a 32-byte, hexadecimal-encoded hash (string).`;
        }
        const maxSequenceNumber = 0xffffffff;
        if (sequenceNumber !== undefined &&
            !isRangedInteger(sequenceNumber, 0, maxSequenceNumber)) {
            return `If defined, the "sequenceNumber" property of ${newLocation} must be a number between 0 and 4294967295 (inclusive).`;
        }
        if (unlockingBytecode !== undefined &&
            unlockingBytecode !== null &&
            !isHexString(unlockingBytecode)) {
            return `If defined, the "unlockingBytecode" property of ${newLocation} must be either a null value or a hexadecimal-encoded string.`;
        }
        return {
            ...(outpointIndex === undefined ? {} : { outpointIndex }),
            ...(outpointTransactionHash === undefined
                ? {}
                : { outpointTransactionHash }),
            ...(sequenceNumber === undefined ? {} : { sequenceNumber }),
            ...(unlockingBytecode === undefined ? {} : { unlockingBytecode }),
        };
    });
    const invalidInputResults = inputResults.filter((result) => typeof result === 'string');
    if (invalidInputResults.length > 0) {
        return invalidInputResults.join(' ');
    }
    const clonedInputs = inputResults;
    return clonedInputs;
};
/**
 * Validate and clone an Authentication Template Scenario transaction output
 * `lockingBytecode` object.
 *
 * @param outputs - the `transaction.outputs[outputIndex].lockingBytecode`
 * object to validate and clone
 * @param location - the location of the error to specify in error messages,
 * e.g. `output 2 in scenario "test"`
 */
// eslint-disable-next-line complexity
const parseAuthenticationTemplateScenarioTransactionOutputLockingBytecode = (lockingBytecode, location) => {
    const { overrides, script } = lockingBytecode;
    if (script !== undefined && script !== null && !isHexString(script)) {
        return `If defined, the "script" property of ${location} must be a hexadecimal-encoded string or "null".`;
    }
    const clonedOverrides = overrides === undefined
        ? undefined
        : isObject(overrides)
            ? parseAuthenticationTemplateScenarioData(overrides, `'lockingBytecode.override' in ${location}`)
            : `If defined, the "overrides" property of ${location} must be an object.`;
    if (typeof clonedOverrides === 'string') {
        return clonedOverrides;
    }
    return {
        ...(script === undefined ? {} : { script }),
        ...(clonedOverrides === undefined ? {} : { overrides: clonedOverrides }),
    };
};
/**
 * Validate and clone an Authentication Template Scenario `transaction.outputs`
 * array.
 *
 * @param outputs - the `transaction.outputs` array to validate and clone
 * @param location - the location of the error to specify in error messages,
 * e.g. `of output 2 in scenario "test"`
 */
const parseAuthenticationTemplateScenarioTransactionOutputs = (outputs, location) => {
    if (outputs === undefined) {
        return undefined;
    }
    if (!isDenseArray(outputs)) {
        return `If defined, the "transaction.outputs" property of ${location} must be an array of scenario output objects.`;
    }
    const outputResults = outputs
        // eslint-disable-next-line complexity
        .map((maybeOutput, outputIndex) => {
        const { lockingBytecode, satoshis } = maybeOutput;
        const newLocation = `output ${outputIndex} in ${location}`;
        if (lockingBytecode !== undefined &&
            typeof lockingBytecode !== 'string' &&
            !isObject(lockingBytecode)) {
            return `If defined, the "lockingBytecode" property of ${newLocation} must be a string or an object.`;
        }
        if (typeof lockingBytecode === 'string' &&
            !isHexString(lockingBytecode)) {
            return `If the "lockingBytecode" property of ${newLocation} is a string, it must be a valid, hexadecimal-encoded locking bytecode.`;
        }
        const clonedLockingBytecode = lockingBytecode === undefined || typeof lockingBytecode === 'string'
            ? undefined
            : parseAuthenticationTemplateScenarioTransactionOutputLockingBytecode(lockingBytecode, newLocation);
        if (typeof clonedLockingBytecode === 'string') {
            return clonedLockingBytecode;
        }
        if (!isValidSatoshisValue(satoshis)) {
            return `If defined, the "satoshis" property of ${newLocation} must be either a number or a little-endian, unsigned 64-bit integer as a hexadecimal-encoded string (16 characters).`;
        }
        return {
            ...(lockingBytecode === undefined
                ? {}
                : typeof lockingBytecode === 'string'
                    ? { lockingBytecode }
                    : { lockingBytecode: clonedLockingBytecode }),
            ...(satoshis === undefined ? {} : { satoshis }),
        };
    });
    const invalidOutputResults = outputResults.filter((result) => typeof result === 'string');
    if (invalidOutputResults.length > 0) {
        return invalidOutputResults.join(' ');
    }
    const clonedOutputs = outputResults;
    if (clonedOutputs.length === 0) {
        return `If defined, the "transaction.outputs" property of ${location} must be have at least one output.`;
    }
    return clonedOutputs;
};
/**
 * Validate and clone an Authentication Template Scenario `transaction` object.
 *
 * @param transaction - the `transaction` object to validate and clone
 * @param location - the location of the error to specify in error messages,
 * e.g. `of output 2 in scenario "test"`
 */
// eslint-disable-next-line complexity
const parseAuthenticationTemplateScenarioTransaction = (transaction, location) => {
    const { inputs, locktime, outputs, version } = transaction;
    const maximumLocktime = 4294967295;
    if (locktime !== undefined &&
        !isRangedInteger(locktime, 0, maximumLocktime)) {
        return `If defined, the "locktime" property of ${location} must be an integer between 0 and 4,294,967,295 (inclusive).`;
    }
    const maximumVersion = 4294967295;
    if (version !== undefined && !isRangedInteger(version, 0, maximumVersion)) {
        return `If defined, the "version" property of ${location} must be an integer between 0 and 4,294,967,295 (inclusive).`;
    }
    const clonedInputs = parseAuthenticationTemplateScenarioTransactionInputs(inputs, location);
    if (typeof clonedInputs === 'string') {
        return clonedInputs;
    }
    const clonedOutputs = parseAuthenticationTemplateScenarioTransactionOutputs(outputs, location);
    if (typeof clonedOutputs === 'string') {
        return clonedOutputs;
    }
    return {
        ...(locktime === undefined ? {} : { locktime }),
        ...(clonedInputs === undefined ? {} : { inputs: clonedInputs }),
        ...(clonedOutputs === undefined ? {} : { outputs: clonedOutputs }),
        ...(version === undefined ? {} : { version }),
    };
};
/**
 * Validate and clone an object of Authentication Template scenarios.
 *
 * @param scenarios - the scenarios object to validate and clone
 */
const parseAuthenticationTemplateScenarios = (scenarios) => {
    const unknownScenarios = Object.entries(scenarios).map(([id, scenario]) => ({ id, scenario }));
    const nonObjectScenarios = unknownScenarios
        .filter(({ scenario }) => typeof scenario !== 'object' || scenario === null)
        .map(({ id }) => id);
    if (nonObjectScenarios.length > 0) {
        return `All authentication template scenarios must be objects, but the following scenarios are not objects: ${listIds(nonObjectScenarios)}.`;
    }
    const allScenarios = unknownScenarios;
    const scenarioResults = allScenarios
        // eslint-disable-next-line complexity
        .map(({ id, scenario }) => {
        const { data, description, extends: extendsProp, name, transaction, value, } = scenario;
        const location = `scenario "${id}"`;
        if (description !== undefined && typeof description !== 'string') {
            return `If defined, the "description" property of ${location} must be a string.`;
        }
        if (name !== undefined && typeof name !== 'string') {
            return `If defined, the "name" property of ${location} must be a string.`;
        }
        if (extendsProp !== undefined && typeof extendsProp !== 'string') {
            return `If defined, the "extends" property of ${location} must be a string.`;
        }
        if (!isValidSatoshisValue(value)) {
            return `If defined, the "value" property of ${location} must be either a number or a little-endian, unsigned 64-bit integer as a hexadecimal-encoded string (16 characters).`;
        }
        if (data !== undefined && !isObject(data)) {
            return `If defined, the "data" property of ${location} must be an object.`;
        }
        if (transaction !== undefined && !isObject(transaction)) {
            return `If defined, the "transaction" property of ${location} must be an object.`;
        }
        const dataResult = data === undefined
            ? undefined
            : parseAuthenticationTemplateScenarioData(data, location);
        if (typeof dataResult === 'string') {
            return dataResult;
        }
        const transactionResult = transaction === undefined
            ? undefined
            : parseAuthenticationTemplateScenarioTransaction(transaction, location);
        if (typeof transactionResult === 'string') {
            return transactionResult;
        }
        const inputsUnderTest = transactionResult?.inputs?.filter((input) => input.unlockingBytecode === undefined ||
            input.unlockingBytecode === null);
        if (inputsUnderTest !== undefined && inputsUnderTest.length !== 1) {
            return `If defined, the "transaction.inputs" array of ${location} must have exactly one input under test (an "unlockingBytecode" set to "null").`;
        }
        return {
            id,
            scenario: {
                ...(dataResult === undefined ? {} : { data: dataResult }),
                ...(description === undefined ? {} : { description }),
                ...(extendsProp === undefined ? {} : { extends: extendsProp }),
                ...(name === undefined ? {} : { name }),
                ...(transactionResult === undefined
                    ? {}
                    : { transaction: transactionResult }),
                ...(value === undefined ? {} : { value }),
            },
        };
    });
    const invalidScenarioResults = scenarioResults.filter((result) => typeof result === 'string');
    if (invalidScenarioResults.length > 0) {
        return invalidScenarioResults.join(' ');
    }
    const validScenarioResults = scenarioResults;
    const clonedScenarios = validScenarioResults.reduce((all, result) => ({ ...all, [result.id]: result.scenario }), {});
    const unknownExtends = Object.values(clonedScenarios).reduce((all, scenario) => scenario.extends !== undefined &&
        clonedScenarios[scenario.extends] === undefined
        ? [...all, scenario.extends]
        : all, []);
    if (unknownExtends.length > 0) {
        return `If defined, each scenario ID referenced by another scenario's "extends" property must exist. Unknown scenario IDs: ${listIds(unknownExtends)}.`;
    }
    return clonedScenarios;
};
const isVersion0 = (maybeTemplate) => maybeTemplate.version === 0;
const schemaIsOptionalString = (maybeTemplate) => {
    const property = maybeTemplate.$schema;
    return property === undefined || typeof property === 'string';
};
const nameIsOptionalString = (maybeTemplate) => {
    const property = maybeTemplate.name;
    return property === undefined || typeof property === 'string';
};
const descriptionIsOptionalString = (maybeTemplate) => {
    const property = maybeTemplate.description;
    return property === undefined || typeof property === 'string';
};
const supportsOnlyValidVmIdentifiers = (maybeTemplate, availableIdentifiers) => {
    const { supported } = maybeTemplate;
    return (Array.isArray(supported) &&
        supported.every((value) => availableIdentifiers.includes(value)));
};
/**
 * Parse and validate an authentication template, returning either an error
 * message as a string or a valid, safely-cloned `AuthenticationTemplate`.
 *
 * This method validates both the structure and the contents of a template:
 * - All properties and sub-properties are verified to be of the expected type.
 * - The ID of each entity, script, and scenario is confirmed to be unique.
 * - Script IDs referenced by entities and other scripts (via `unlocks`) are
 * confirmed to exist.
 * - The derivation paths of each HdKey are validated against each other.
 *
 * This method does not validate the BTL contents of scripts (by attempting
 * compilation, evaluate `AuthenticationTemplateScriptTest`s, or test scenario
 * generation. Unknown properties are ignored and excluded from the final
 * result.
 *
 * @param maybeTemplate - object to validate as an authentication template
 */
// eslint-disable-next-line complexity
const validateAuthenticationTemplate = (maybeTemplate) => {
    if (typeof maybeTemplate !== 'object' || maybeTemplate === null) {
        return 'A valid authentication template must be an object.';
    }
    if (!isVersion0(maybeTemplate)) {
        return 'Only version 0 authentication templates are currently supported.';
    }
    const vmIdentifiers = [
        'BCH_2022_11_SPEC',
        'BCH_2022_11',
        'BCH_2022_05_SPEC',
        'BCH_2022_05',
        'BCH_2021_11_SPEC',
        'BCH_2021_11',
        'BCH_2021_05_SPEC',
        'BCH_2021_05',
        'BCH_2020_11_SPEC',
        'BCH_2020_11',
        'BCH_2020_05',
        'BCH_2019_11',
        'BCH_2019_05',
        'BSV_2018_11',
        'BTC_2017_08',
    ];
    if (!supportsOnlyValidVmIdentifiers(maybeTemplate, vmIdentifiers) ||
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        maybeTemplate.supported.includes(undefined)) {
        return `Version 0 authentication templates must include a "supported" list of authentication virtual machine versions. Available identifiers are: ${vmIdentifiers.join(', ')}.`;
    }
    if (!schemaIsOptionalString(maybeTemplate)) {
        return 'The "$schema" property of an authentication template must be a string.';
    }
    if (!nameIsOptionalString(maybeTemplate)) {
        return 'The "name" property of an authentication template must be a string.';
    }
    if (!descriptionIsOptionalString(maybeTemplate)) {
        return 'The "description" property of an authentication template must be a string.';
    }
    const { entities, scenarios, scripts } = maybeTemplate;
    if (typeof entities !== 'object' || entities === null) {
        return `The "entities" property of an authentication template must be an object.`;
    }
    if (typeof scripts !== 'object' || scripts === null) {
        return `The "scripts" property of an authentication template must be an object.`;
    }
    if (scenarios !== undefined &&
        (typeof scenarios !== 'object' || scenarios === null)) {
        return `If defined, the "scenarios" property of an authentication template must be an object.`;
    }
    const parsedScripts = parseAuthenticationTemplateScripts(scripts);
    if (typeof parsedScripts === 'string') {
        return parsedScripts;
    }
    const clonedScripts = [
        ...Object.entries(parsedScripts.locking),
        ...Object.entries(parsedScripts.other),
        ...Object.entries(parsedScripts.tested),
        ...Object.entries(parsedScripts.unlocking),
    ].reduce((all, [id, script]) => ({ ...all, [id]: script }), {});
    const clonedEntities = parseAuthenticationTemplateEntities(entities);
    if (typeof clonedEntities === 'string') {
        return clonedEntities;
    }
    const clonedScenarios = scenarios === undefined
        ? undefined
        : parseAuthenticationTemplateScenarios(scenarios);
    if (typeof clonedScenarios === 'string') {
        return clonedScenarios;
    }
    const variableIds = Object.values(clonedEntities).reduce((all, entity) => entity.variables === undefined
        ? all
        : [...all, ...Object.keys(entity.variables)], []);
    const entityIds = Object.keys(clonedEntities);
    const scriptIds = Object.keys(clonedScripts);
    const scenarioIds = clonedScenarios === undefined ? [] : Object.keys(clonedScenarios);
    const usedIds = [...variableIds, ...entityIds, ...scriptIds, ...scenarioIds];
    const builtInIds = [
        _language_resolve__WEBPACK_IMPORTED_MODULE_3__.BuiltInVariables.currentBlockHeight,
        _language_resolve__WEBPACK_IMPORTED_MODULE_3__.BuiltInVariables.currentBlockTime,
        _language_resolve__WEBPACK_IMPORTED_MODULE_3__.BuiltInVariables.signingSerialization,
    ];
    const usedBuiltInIds = builtInIds.filter((builtInIdentifier) => usedIds.includes(builtInIdentifier));
    if (usedBuiltInIds.length > 0) {
        return `Built-in identifiers may not be re-used by any entity, variable, script, or scenario. The following built-in identifiers are re-used: ${listIds(usedBuiltInIds)}.`;
    }
    const idUsageCount = usedIds.reduce((count, id) => ({
        ...count,
        [id]: (count[id] ?? 0) + 1,
    }), {});
    const duplicateIds = Object.entries(idUsageCount)
        .filter(([, count]) => count > 1)
        .map(([id]) => id);
    if (duplicateIds.length > 0) {
        return `The ID of each entity, variable, script, and scenario in an authentication template must be unique. The following IDs are re-used: ${listIds(duplicateIds)}.`;
    }
    const unknownScriptIds = Object.values(clonedEntities)
        .reduce((all, entity) => entity.scripts === undefined ? all : [...all, ...entity.scripts], [])
        .reduce((unique, id) => scriptIds.includes(id) || unique.includes(id)
        ? unique
        : [...unique, id], []);
    if (unknownScriptIds.length > 0) {
        return `Only known scripts may be assigned to entities. The following script IDs are not provided in this template: ${listIds(unknownScriptIds)}.`;
    }
    const unknownScenarioIds = [
        ...Object.values(parsedScripts.unlocking).reduce((all, script) => [
            ...all,
            ...(script.estimate === undefined ? [] : [script.estimate]),
            ...(script.fails === undefined ? [] : script.fails),
            ...(script.invalid === undefined ? [] : script.invalid),
            ...(script.passes === undefined ? [] : script.passes),
        ], []),
        ...Object.values(parsedScripts.tested).reduce((all, script) => [
            ...all,
            ...script.tests.reduce((fromScript, test) => [
                ...fromScript,
                ...(test.fails === undefined ? [] : test.fails),
                ...(test.invalid === undefined ? [] : test.invalid),
                ...(test.passes === undefined ? [] : test.passes),
            ], []),
        ], []),
    ].reduce((unique, id) => scenarioIds.includes(id) || unique.includes(id)
        ? unique
        : [...unique, id], []);
    if (unknownScenarioIds.length > 0) {
        return `Only known scenarios may be referenced by scripts. The following scenario IDs are not provided in this template: ${listIds(unknownScenarioIds)}.`;
    }
    const entityIdsReferencedByScenarioData = (data) => {
        const hdPublicKeyEntityIds = data?.hdKeys?.hdPublicKeys === undefined
            ? []
            : Object.keys(data.hdKeys.hdPublicKeys);
        const hdPrivateKeyEntityIds = data?.hdKeys?.hdPrivateKeys === undefined
            ? []
            : Object.keys(data.hdKeys.hdPrivateKeys);
        return [...hdPublicKeyEntityIds, ...hdPrivateKeyEntityIds];
    };
    const unknownEntityIds = clonedScenarios === undefined
        ? []
        : Object.values(clonedScenarios)
            .reduce((all, scenario) => [
            ...all,
            ...entityIdsReferencedByScenarioData(scenario.data),
            ...(scenario.transaction?.outputs ?? []).reduce((fromOverrides, output) => isObject(output.lockingBytecode)
                ? [
                    ...fromOverrides,
                    ...entityIdsReferencedByScenarioData(output.lockingBytecode.overrides),
                ]
                : fromOverrides, []),
        ], [])
            .reduce((unique, id) => entityIds.includes(id) || unique.includes(id)
            ? unique
            : [...unique, id], []);
    if (unknownEntityIds.length > 0) {
        return `Only known entities may be referenced by hdKeys properties within scenarios. The following entity IDs are not provided in this template: ${listIds(unknownEntityIds)}.`;
    }
    return {
        ...(maybeTemplate.$schema === undefined
            ? {}
            : { $schema: maybeTemplate.$schema }),
        ...(maybeTemplate.description === undefined
            ? {}
            : { description: maybeTemplate.description }),
        entities: clonedEntities,
        ...(maybeTemplate.name === undefined ? {} : { name: maybeTemplate.name }),
        scenarios: clonedScenarios,
        scripts: clonedScripts,
        supported: maybeTemplate.supported,
        version: maybeTemplate.version,
    };
};
//# sourceMappingURL=template-validation.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/template.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/template.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export BuiltInVariables [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export CompilerDefaults [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-defaults.js .CompilerDefaults */
/*! export IdentifierResolutionErrorType [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export IdentifierResolutionType [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export SigningSerializationAlgorithmIdentifier [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .SigningSerializationAlgorithmIdentifier */
/*! export TransactionDecodingError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export allErrorsAreRecoverable [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export attemptCompilerOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js .attemptCompilerOperations */
/*! export authenticationTemplateP2pkh [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export authenticationTemplateP2pkhNonHd [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export authenticationTemplateToCompilationEnvironment [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export authenticationTemplateToCompilationEnvironmentVirtualizedTests [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export authenticationTemplateToCompilerBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .authenticationTemplateToCompilerBCH */
/*! export compileBtl [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compileInputTemplate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compileOutputTemplate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compileScript [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compileScriptContents [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compileScriptP2shLocking [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compileScriptP2shUnlocking [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compileScriptRaw [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationAddressData [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationAddressData */
/*! export compilerOperationAttemptBytecodeResolution [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js .compilerOperationAttemptBytecodeResolution */
/*! export compilerOperationCurrentBlockHeight [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationCurrentBlockHeight */
/*! export compilerOperationCurrentBlockTime [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationCurrentBlockTime */
/*! export compilerOperationHdKeyEcdsaDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationHdKeyEcdsaDataSignatureBCH */
/*! export compilerOperationHdKeyEcdsaSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationHdKeyEcdsaSignatureBCH */
/*! export compilerOperationHdKeyPublicKeyCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationHdKeyPublicKeyCommon */
/*! export compilerOperationHdKeySchnorrDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationHdKeySchnorrDataSignatureBCH */
/*! export compilerOperationHdKeySchnorrSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationHdKeySchnorrSignatureBCH */
/*! export compilerOperationHelperAddressIndex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js .compilerOperationHelperAddressIndex */
/*! export compilerOperationHelperCompileScript [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js .compilerOperationHelperCompileScript */
/*! export compilerOperationHelperComputeDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationHelperComputeDataSignatureBCH */
/*! export compilerOperationHelperComputeSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationHelperComputeSignatureBCH */
/*! export compilerOperationHelperDeriveHdKeyPrivate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js .compilerOperationHelperDeriveHdKeyPrivate */
/*! export compilerOperationHelperDeriveHdPrivateNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js .compilerOperationHelperDeriveHdPrivateNode */
/*! export compilerOperationHelperGenerateCoveredBytecode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js .compilerOperationHelperGenerateCoveredBytecode */
/*! export compilerOperationHelperHdKeyDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationHelperHdKeyDataSignatureBCH */
/*! export compilerOperationHelperHdKeySignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationHelperHdKeySignatureBCH */
/*! export compilerOperationHelperKeyDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationHelperKeyDataSignatureBCH */
/*! export compilerOperationHelperKeySignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationHelperKeySignatureBCH */
/*! export compilerOperationHelperUnknownEntity [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js .compilerOperationHelperUnknownEntity */
/*! export compilerOperationKeyEcdsaDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationKeyEcdsaDataSignatureBCH */
/*! export compilerOperationKeyEcdsaSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationKeyEcdsaSignatureBCH */
/*! export compilerOperationKeyPublicKeyCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationKeyPublicKeyCommon */
/*! export compilerOperationKeySchnorrDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationKeySchnorrDataSignatureBCH */
/*! export compilerOperationKeySchnorrSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationKeySchnorrSignatureBCH */
/*! export compilerOperationRequires [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js .compilerOperationRequires */
/*! export compilerOperationSigningSerializationCorrespondingOutput [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationCorrespondingOutput */
/*! export compilerOperationSigningSerializationCorrespondingOutputHash [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationCorrespondingOutputHash */
/*! export compilerOperationSigningSerializationCoveredBytecode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationCoveredBytecode */
/*! export compilerOperationSigningSerializationCoveredBytecodeLength [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationCoveredBytecodeLength */
/*! export compilerOperationSigningSerializationFullBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationSigningSerializationFullBCH */
/*! export compilerOperationSigningSerializationLocktime [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationLocktime */
/*! export compilerOperationSigningSerializationOutpointIndex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationOutpointIndex */
/*! export compilerOperationSigningSerializationOutpointTransactionHash [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationOutpointTransactionHash */
/*! export compilerOperationSigningSerializationOutputValue [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationOutputValue */
/*! export compilerOperationSigningSerializationSequenceNumber [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationSequenceNumber */
/*! export compilerOperationSigningSerializationTransactionOutpoints [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationTransactionOutpoints */
/*! export compilerOperationSigningSerializationTransactionOutpointsHash [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationTransactionOutpointsHash */
/*! export compilerOperationSigningSerializationTransactionOutputs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationTransactionOutputs */
/*! export compilerOperationSigningSerializationTransactionOutputsHash [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationTransactionOutputsHash */
/*! export compilerOperationSigningSerializationTransactionSequenceNumbers [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationTransactionSequenceNumbers */
/*! export compilerOperationSigningSerializationTransactionSequenceNumbersHash [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationTransactionSequenceNumbersHash */
/*! export compilerOperationSigningSerializationVersion [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationVersion */
/*! export compilerOperationWalletData [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationWalletData */
/*! export compilerOperationsBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationsBCH */
/*! export compilerOperationsCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationsCommon */
/*! export containsRange [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createAuthenticationProgramEvaluationCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createCompiler [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createCompilerBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .createCompilerBCH */
/*! export createCompilerCommonSynchronous [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createIdentifierResolver [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeTransactionUnsafe [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export default [not provided] [no usage info] [missing usage info prevents renaming] */
/*! export describeExpectedInput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeInput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeInputs [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutpoints [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutputsForSigning [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutputsForTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeSequenceNumbersForSigning [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extendCompilationDataWithScenarioBytecode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extendScenarioDefinition [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extendScenarioDefinitionData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extendedScenarioDefinitionToCompilationData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extractBytecodeResolutions [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extractEvaluationSamples [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extractEvaluationSamplesRecursive [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extractMissingVariables [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extractResolvedVariableBytecodeMap [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extractResolvedVariables [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extractUnexecutedRanges [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export generateDefaultScenarioDefinition [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export generateExtendedScenario [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export generateScenarioCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export generateTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getResolutionErrors [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getTransactionHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getTransactionHashBE [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getTransactionHashLE [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export invalidSatoshis [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export mergeRanges [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseAuthenticationTemplateEntities [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseAuthenticationTemplateScenarioData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseAuthenticationTemplateScenarioDataHdKeys [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseAuthenticationTemplateScenarioDataKeys [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseAuthenticationTemplateScenarioTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseAuthenticationTemplateScenarioTransactionInputs [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseAuthenticationTemplateScenarioTransactionOutputLockingBytecode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseAuthenticationTemplateScenarioTransactionOutputs [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseAuthenticationTemplateScenarios [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseAuthenticationTemplateScripts [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseAuthenticationTemplateVariable [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseScript [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export readTransactionInput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export readTransactionOutput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export reduceScript [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export resolveScriptIdentifier [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export resolveScriptSegment [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export resolveVariableIdentifier [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export safelyExtendCompilationData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export stringifyErrors [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export validateAuthenticationTemplate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export verifyBtlEvaluationState [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export verifyTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! other exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.n, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SigningSerializationAlgorithmIdentifier": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationAlgorithmIdentifier,
/* harmony export */   "authenticationTemplateToCompilerBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.authenticationTemplateToCompilerBCH,
/* harmony export */   "compilerOperationHdKeyEcdsaDataSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHdKeyEcdsaDataSignatureBCH,
/* harmony export */   "compilerOperationHdKeyEcdsaSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHdKeyEcdsaSignatureBCH,
/* harmony export */   "compilerOperationHdKeySchnorrDataSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHdKeySchnorrDataSignatureBCH,
/* harmony export */   "compilerOperationHdKeySchnorrSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHdKeySchnorrSignatureBCH,
/* harmony export */   "compilerOperationHelperComputeDataSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHelperComputeDataSignatureBCH,
/* harmony export */   "compilerOperationHelperComputeSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHelperComputeSignatureBCH,
/* harmony export */   "compilerOperationHelperHdKeyDataSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHelperHdKeyDataSignatureBCH,
/* harmony export */   "compilerOperationHelperHdKeySignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHelperHdKeySignatureBCH,
/* harmony export */   "compilerOperationHelperKeyDataSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHelperKeyDataSignatureBCH,
/* harmony export */   "compilerOperationHelperKeySignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHelperKeySignatureBCH,
/* harmony export */   "compilerOperationKeyEcdsaDataSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationKeyEcdsaDataSignatureBCH,
/* harmony export */   "compilerOperationKeyEcdsaSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationKeyEcdsaSignatureBCH,
/* harmony export */   "compilerOperationKeySchnorrDataSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationKeySchnorrDataSignatureBCH,
/* harmony export */   "compilerOperationKeySchnorrSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationKeySchnorrSignatureBCH,
/* harmony export */   "compilerOperationSigningSerializationFullBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationSigningSerializationFullBCH,
/* harmony export */   "compilerOperationsBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationsBCH,
/* harmony export */   "createCompilerBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.createCompilerBCH,
/* harmony export */   "BuiltInVariables": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.BuiltInVariables,
/* harmony export */   "IdentifierResolutionErrorType": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.IdentifierResolutionErrorType,
/* harmony export */   "IdentifierResolutionType": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.IdentifierResolutionType,
/* harmony export */   "allErrorsAreRecoverable": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.allErrorsAreRecoverable,
/* harmony export */   "compileBtl": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.compileBtl,
/* harmony export */   "compileScript": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.compileScript,
/* harmony export */   "compileScriptContents": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.compileScriptContents,
/* harmony export */   "compileScriptP2shLocking": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.compileScriptP2shLocking,
/* harmony export */   "compileScriptP2shUnlocking": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.compileScriptP2shUnlocking,
/* harmony export */   "compileScriptRaw": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.compileScriptRaw,
/* harmony export */   "containsRange": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.containsRange,
/* harmony export */   "createIdentifierResolver": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.createIdentifierResolver,
/* harmony export */   "describeExpectedInput": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.describeExpectedInput,
/* harmony export */   "extractBytecodeResolutions": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.extractBytecodeResolutions,
/* harmony export */   "extractEvaluationSamples": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.extractEvaluationSamples,
/* harmony export */   "extractEvaluationSamplesRecursive": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.extractEvaluationSamplesRecursive,
/* harmony export */   "extractResolvedVariableBytecodeMap": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.extractResolvedVariableBytecodeMap,
/* harmony export */   "extractUnexecutedRanges": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.extractUnexecutedRanges,
/* harmony export */   "getResolutionErrors": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.getResolutionErrors,
/* harmony export */   "mergeRanges": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.mergeRanges,
/* harmony export */   "parseScript": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.parseScript,
/* harmony export */   "reduceScript": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.reduceScript,
/* harmony export */   "resolveScriptIdentifier": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.resolveScriptIdentifier,
/* harmony export */   "resolveScriptSegment": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.resolveScriptSegment,
/* harmony export */   "resolveVariableIdentifier": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.resolveVariableIdentifier,
/* harmony export */   "stringifyErrors": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.stringifyErrors,
/* harmony export */   "verifyBtlEvaluationState": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.verifyBtlEvaluationState,
/* harmony export */   "CompilerDefaults": () => /* reexport safe */ _compiler_defaults__WEBPACK_IMPORTED_MODULE_2__.CompilerDefaults,
/* harmony export */   "attemptCompilerOperations": () => /* reexport safe */ _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_3__.attemptCompilerOperations,
/* harmony export */   "compilerOperationAttemptBytecodeResolution": () => /* reexport safe */ _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_3__.compilerOperationAttemptBytecodeResolution,
/* harmony export */   "compilerOperationHelperAddressIndex": () => /* reexport safe */ _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_3__.compilerOperationHelperAddressIndex,
/* harmony export */   "compilerOperationHelperCompileScript": () => /* reexport safe */ _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_3__.compilerOperationHelperCompileScript,
/* harmony export */   "compilerOperationHelperDeriveHdKeyPrivate": () => /* reexport safe */ _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_3__.compilerOperationHelperDeriveHdKeyPrivate,
/* harmony export */   "compilerOperationHelperDeriveHdPrivateNode": () => /* reexport safe */ _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_3__.compilerOperationHelperDeriveHdPrivateNode,
/* harmony export */   "compilerOperationHelperGenerateCoveredBytecode": () => /* reexport safe */ _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_3__.compilerOperationHelperGenerateCoveredBytecode,
/* harmony export */   "compilerOperationHelperUnknownEntity": () => /* reexport safe */ _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_3__.compilerOperationHelperUnknownEntity,
/* harmony export */   "compilerOperationRequires": () => /* reexport safe */ _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_3__.compilerOperationRequires,
/* harmony export */   "compilerOperationAddressData": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationAddressData,
/* harmony export */   "compilerOperationCurrentBlockHeight": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationCurrentBlockHeight,
/* harmony export */   "compilerOperationCurrentBlockTime": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationCurrentBlockTime,
/* harmony export */   "compilerOperationHdKeyPublicKeyCommon": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationHdKeyPublicKeyCommon,
/* harmony export */   "compilerOperationKeyPublicKeyCommon": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationKeyPublicKeyCommon,
/* harmony export */   "compilerOperationSigningSerializationCorrespondingOutput": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationCorrespondingOutput,
/* harmony export */   "compilerOperationSigningSerializationCorrespondingOutputHash": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationCorrespondingOutputHash,
/* harmony export */   "compilerOperationSigningSerializationCoveredBytecode": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationCoveredBytecode,
/* harmony export */   "compilerOperationSigningSerializationCoveredBytecodeLength": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationCoveredBytecodeLength,
/* harmony export */   "compilerOperationSigningSerializationLocktime": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationLocktime,
/* harmony export */   "compilerOperationSigningSerializationOutpointIndex": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationOutpointIndex,
/* harmony export */   "compilerOperationSigningSerializationOutpointTransactionHash": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationOutpointTransactionHash,
/* harmony export */   "compilerOperationSigningSerializationOutputValue": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationOutputValue,
/* harmony export */   "compilerOperationSigningSerializationSequenceNumber": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationSequenceNumber,
/* harmony export */   "compilerOperationSigningSerializationTransactionOutpoints": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationTransactionOutpoints,
/* harmony export */   "compilerOperationSigningSerializationTransactionOutpointsHash": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationTransactionOutpointsHash,
/* harmony export */   "compilerOperationSigningSerializationTransactionOutputs": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationTransactionOutputs,
/* harmony export */   "compilerOperationSigningSerializationTransactionOutputsHash": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationTransactionOutputsHash,
/* harmony export */   "compilerOperationSigningSerializationTransactionSequenceNumbers": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationTransactionSequenceNumbers,
/* harmony export */   "compilerOperationSigningSerializationTransactionSequenceNumbersHash": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationTransactionSequenceNumbersHash,
/* harmony export */   "compilerOperationSigningSerializationVersion": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationVersion,
/* harmony export */   "compilerOperationWalletData": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationWalletData,
/* harmony export */   "compilerOperationsCommon": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationsCommon,
/* harmony export */   "authenticationTemplateToCompilationEnvironment": () => /* reexport safe */ _compiler__WEBPACK_IMPORTED_MODULE_6__.authenticationTemplateToCompilationEnvironment,
/* harmony export */   "authenticationTemplateToCompilationEnvironmentVirtualizedTests": () => /* reexport safe */ _compiler__WEBPACK_IMPORTED_MODULE_6__.authenticationTemplateToCompilationEnvironmentVirtualizedTests,
/* harmony export */   "createAuthenticationProgramEvaluationCommon": () => /* reexport safe */ _compiler__WEBPACK_IMPORTED_MODULE_6__.createAuthenticationProgramEvaluationCommon,
/* harmony export */   "createCompiler": () => /* reexport safe */ _compiler__WEBPACK_IMPORTED_MODULE_6__.createCompiler,
/* harmony export */   "createCompilerCommonSynchronous": () => /* reexport safe */ _compiler__WEBPACK_IMPORTED_MODULE_6__.createCompilerCommonSynchronous,
/* harmony export */   "extendCompilationDataWithScenarioBytecode": () => /* reexport safe */ _scenarios__WEBPACK_IMPORTED_MODULE_7__.extendCompilationDataWithScenarioBytecode,
/* harmony export */   "extendScenarioDefinition": () => /* reexport safe */ _scenarios__WEBPACK_IMPORTED_MODULE_7__.extendScenarioDefinition,
/* harmony export */   "extendScenarioDefinitionData": () => /* reexport safe */ _scenarios__WEBPACK_IMPORTED_MODULE_7__.extendScenarioDefinitionData,
/* harmony export */   "extendedScenarioDefinitionToCompilationData": () => /* reexport safe */ _scenarios__WEBPACK_IMPORTED_MODULE_7__.extendedScenarioDefinitionToCompilationData,
/* harmony export */   "generateDefaultScenarioDefinition": () => /* reexport safe */ _scenarios__WEBPACK_IMPORTED_MODULE_7__.generateDefaultScenarioDefinition,
/* harmony export */   "generateExtendedScenario": () => /* reexport safe */ _scenarios__WEBPACK_IMPORTED_MODULE_7__.generateExtendedScenario,
/* harmony export */   "generateScenarioCommon": () => /* reexport safe */ _scenarios__WEBPACK_IMPORTED_MODULE_7__.generateScenarioCommon,
/* harmony export */   "authenticationTemplateP2pkh": () => /* reexport safe */ _standard_standard__WEBPACK_IMPORTED_MODULE_8__.authenticationTemplateP2pkh,
/* harmony export */   "authenticationTemplateP2pkhNonHd": () => /* reexport safe */ _standard_standard__WEBPACK_IMPORTED_MODULE_8__.authenticationTemplateP2pkhNonHd,
/* harmony export */   "parseAuthenticationTemplateEntities": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticationTemplateEntities,
/* harmony export */   "parseAuthenticationTemplateScenarioData": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticationTemplateScenarioData,
/* harmony export */   "parseAuthenticationTemplateScenarioDataHdKeys": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticationTemplateScenarioDataHdKeys,
/* harmony export */   "parseAuthenticationTemplateScenarioDataKeys": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticationTemplateScenarioDataKeys,
/* harmony export */   "parseAuthenticationTemplateScenarioTransaction": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticationTemplateScenarioTransaction,
/* harmony export */   "parseAuthenticationTemplateScenarioTransactionInputs": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticationTemplateScenarioTransactionInputs,
/* harmony export */   "parseAuthenticationTemplateScenarioTransactionOutputLockingBytecode": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticationTemplateScenarioTransactionOutputLockingBytecode,
/* harmony export */   "parseAuthenticationTemplateScenarioTransactionOutputs": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticationTemplateScenarioTransactionOutputs,
/* harmony export */   "parseAuthenticationTemplateScenarios": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticationTemplateScenarios,
/* harmony export */   "parseAuthenticationTemplateScripts": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticationTemplateScripts,
/* harmony export */   "parseAuthenticationTemplateVariable": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticationTemplateVariable,
/* harmony export */   "validateAuthenticationTemplate": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.validateAuthenticationTemplate
/* harmony export */ });
/* harmony import */ var _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compiler-bch/compiler-bch */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js");
/* harmony import */ var _language_language__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./language/language */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language.js");
/* harmony import */ var _compiler_defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./compiler-defaults */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-defaults.js");
/* harmony import */ var _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./compiler-operation-helpers */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js");
/* harmony import */ var _compiler_operations__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./compiler-operations */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js");
/* harmony import */ var _compiler_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./compiler-types */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-types.js");
/* harmony import */ var _compiler_types__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_compiler_types__WEBPACK_IMPORTED_MODULE_5__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _compiler_types__WEBPACK_IMPORTED_MODULE_5__) if(["default","SigningSerializationAlgorithmIdentifier","authenticationTemplateToCompilerBCH","compilerOperationHdKeyEcdsaDataSignatureBCH","compilerOperationHdKeyEcdsaSignatureBCH","compilerOperationHdKeySchnorrDataSignatureBCH","compilerOperationHdKeySchnorrSignatureBCH","compilerOperationHelperComputeDataSignatureBCH","compilerOperationHelperComputeSignatureBCH","compilerOperationHelperHdKeyDataSignatureBCH","compilerOperationHelperHdKeySignatureBCH","compilerOperationHelperKeyDataSignatureBCH","compilerOperationHelperKeySignatureBCH","compilerOperationKeyEcdsaDataSignatureBCH","compilerOperationKeyEcdsaSignatureBCH","compilerOperationKeySchnorrDataSignatureBCH","compilerOperationKeySchnorrSignatureBCH","compilerOperationSigningSerializationFullBCH","compilerOperationsBCH","createCompilerBCH","BuiltInVariables","IdentifierResolutionErrorType","IdentifierResolutionType","allErrorsAreRecoverable","compileBtl","compileScript","compileScriptContents","compileScriptP2shLocking","compileScriptP2shUnlocking","compileScriptRaw","containsRange","createIdentifierResolver","describeExpectedInput","extractBytecodeResolutions","extractEvaluationSamples","extractEvaluationSamplesRecursive","extractResolvedVariableBytecodeMap","extractUnexecutedRanges","getResolutionErrors","mergeRanges","parseScript","reduceScript","resolveScriptIdentifier","resolveScriptSegment","resolveVariableIdentifier","stringifyErrors","verifyBtlEvaluationState","CompilerDefaults","attemptCompilerOperations","compilerOperationAttemptBytecodeResolution","compilerOperationHelperAddressIndex","compilerOperationHelperCompileScript","compilerOperationHelperDeriveHdKeyPrivate","compilerOperationHelperDeriveHdPrivateNode","compilerOperationHelperGenerateCoveredBytecode","compilerOperationHelperUnknownEntity","compilerOperationRequires","compilerOperationAddressData","compilerOperationCurrentBlockHeight","compilerOperationCurrentBlockTime","compilerOperationHdKeyPublicKeyCommon","compilerOperationKeyPublicKeyCommon","compilerOperationSigningSerializationCorrespondingOutput","compilerOperationSigningSerializationCorrespondingOutputHash","compilerOperationSigningSerializationCoveredBytecode","compilerOperationSigningSerializationCoveredBytecodeLength","compilerOperationSigningSerializationLocktime","compilerOperationSigningSerializationOutpointIndex","compilerOperationSigningSerializationOutpointTransactionHash","compilerOperationSigningSerializationOutputValue","compilerOperationSigningSerializationSequenceNumber","compilerOperationSigningSerializationTransactionOutpoints","compilerOperationSigningSerializationTransactionOutpointsHash","compilerOperationSigningSerializationTransactionOutputs","compilerOperationSigningSerializationTransactionOutputsHash","compilerOperationSigningSerializationTransactionSequenceNumbers","compilerOperationSigningSerializationTransactionSequenceNumbersHash","compilerOperationSigningSerializationVersion","compilerOperationWalletData","compilerOperationsCommon"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _compiler_types__WEBPACK_IMPORTED_MODULE_5__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _compiler__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./compiler */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler.js");
/* harmony import */ var _scenarios__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./scenarios */ "./node_modules/@bitauth/libauth/build/module/lib/template/scenarios.js");
/* harmony import */ var _standard_standard__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./standard/standard */ "./node_modules/@bitauth/libauth/build/module/lib/template/standard/standard.js");
/* harmony import */ var _template_types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./template-types */ "./node_modules/@bitauth/libauth/build/module/lib/template/template-types.js");
/* harmony import */ var _template_types__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_template_types__WEBPACK_IMPORTED_MODULE_9__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _template_types__WEBPACK_IMPORTED_MODULE_9__) if(["default","SigningSerializationAlgorithmIdentifier","authenticationTemplateToCompilerBCH","compilerOperationHdKeyEcdsaDataSignatureBCH","compilerOperationHdKeyEcdsaSignatureBCH","compilerOperationHdKeySchnorrDataSignatureBCH","compilerOperationHdKeySchnorrSignatureBCH","compilerOperationHelperComputeDataSignatureBCH","compilerOperationHelperComputeSignatureBCH","compilerOperationHelperHdKeyDataSignatureBCH","compilerOperationHelperHdKeySignatureBCH","compilerOperationHelperKeyDataSignatureBCH","compilerOperationHelperKeySignatureBCH","compilerOperationKeyEcdsaDataSignatureBCH","compilerOperationKeyEcdsaSignatureBCH","compilerOperationKeySchnorrDataSignatureBCH","compilerOperationKeySchnorrSignatureBCH","compilerOperationSigningSerializationFullBCH","compilerOperationsBCH","createCompilerBCH","BuiltInVariables","IdentifierResolutionErrorType","IdentifierResolutionType","allErrorsAreRecoverable","compileBtl","compileScript","compileScriptContents","compileScriptP2shLocking","compileScriptP2shUnlocking","compileScriptRaw","containsRange","createIdentifierResolver","describeExpectedInput","extractBytecodeResolutions","extractEvaluationSamples","extractEvaluationSamplesRecursive","extractResolvedVariableBytecodeMap","extractUnexecutedRanges","getResolutionErrors","mergeRanges","parseScript","reduceScript","resolveScriptIdentifier","resolveScriptSegment","resolveVariableIdentifier","stringifyErrors","verifyBtlEvaluationState","CompilerDefaults","attemptCompilerOperations","compilerOperationAttemptBytecodeResolution","compilerOperationHelperAddressIndex","compilerOperationHelperCompileScript","compilerOperationHelperDeriveHdKeyPrivate","compilerOperationHelperDeriveHdPrivateNode","compilerOperationHelperGenerateCoveredBytecode","compilerOperationHelperUnknownEntity","compilerOperationRequires","compilerOperationAddressData","compilerOperationCurrentBlockHeight","compilerOperationCurrentBlockTime","compilerOperationHdKeyPublicKeyCommon","compilerOperationKeyPublicKeyCommon","compilerOperationSigningSerializationCorrespondingOutput","compilerOperationSigningSerializationCorrespondingOutputHash","compilerOperationSigningSerializationCoveredBytecode","compilerOperationSigningSerializationCoveredBytecodeLength","compilerOperationSigningSerializationLocktime","compilerOperationSigningSerializationOutpointIndex","compilerOperationSigningSerializationOutpointTransactionHash","compilerOperationSigningSerializationOutputValue","compilerOperationSigningSerializationSequenceNumber","compilerOperationSigningSerializationTransactionOutpoints","compilerOperationSigningSerializationTransactionOutpointsHash","compilerOperationSigningSerializationTransactionOutputs","compilerOperationSigningSerializationTransactionOutputsHash","compilerOperationSigningSerializationTransactionSequenceNumbers","compilerOperationSigningSerializationTransactionSequenceNumbersHash","compilerOperationSigningSerializationVersion","compilerOperationWalletData","compilerOperationsCommon","authenticationTemplateToCompilationEnvironment","authenticationTemplateToCompilationEnvironmentVirtualizedTests","createAuthenticationProgramEvaluationCommon","createCompiler","createCompilerCommonSynchronous","extendCompilationDataWithScenarioBytecode","extendScenarioDefinition","extendScenarioDefinitionData","extendedScenarioDefinitionToCompilationData","generateDefaultScenarioDefinition","generateExtendedScenario","generateScenarioCommon","authenticationTemplateP2pkh","authenticationTemplateP2pkhNonHd"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _template_types__WEBPACK_IMPORTED_MODULE_9__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _template_validation__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./template-validation */ "./node_modules/@bitauth/libauth/build/module/lib/template/template-validation.js");











//# sourceMappingURL=template.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/transaction/generate-transaction.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/transaction/generate-transaction.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! export compileInputTemplate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compileOutputTemplate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export extractMissingVariables [provided] [no usage info] [missing usage info prevents renaming] */
/*! export extractResolvedVariables [provided] [no usage info] [missing usage info prevents renaming] */
/*! export generateTransaction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export safelyExtendCompilationData [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "compileOutputTemplate": () => /* binding */ compileOutputTemplate,
/* harmony export */   "compileInputTemplate": () => /* binding */ compileInputTemplate,
/* harmony export */   "generateTransaction": () => /* binding */ generateTransaction,
/* harmony export */   "extractResolvedVariables": () => /* binding */ extractResolvedVariables,
/* harmony export */   "extractMissingVariables": () => /* binding */ extractMissingVariables,
/* harmony export */   "safelyExtendCompilationData": () => /* binding */ safelyExtendCompilationData
/* harmony export */ });
/* harmony import */ var _template_language_language_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../template/language/language-utils */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js");
/* harmony import */ var _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transaction-serialization */ "./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js");


const returnFailedCompilationDirective = ({ index, result, type, }) => {
    return {
        errors: result.errors.map((error) => ({
            ...error,
            error: `Failed compilation of ${type} directive at index "${index}": ${error.error}`,
        })),
        index,
        ...(result.errorType === 'parse' ? {} : { resolved: result.resolve }),
        type,
    };
};
const compileOutputTemplate = ({ outputTemplate, index, }) => {
    if ('script' in outputTemplate.lockingBytecode) {
        const directive = outputTemplate.lockingBytecode;
        const data = directive.data === undefined ? {} : directive.data;
        const result = directive.compiler.generateBytecode(directive.script, data, true);
        return result.success
            ? {
                lockingBytecode: result.bytecode,
                satoshis: outputTemplate.satoshis,
            }
            : returnFailedCompilationDirective({ index, result, type: 'locking' });
    }
    return {
        lockingBytecode: outputTemplate.lockingBytecode.slice(),
        satoshis: outputTemplate.satoshis,
    };
};
const compileInputTemplate = ({ inputTemplate, index, outputs, template, transactionOutpoints, transactionSequenceNumbers, }) => {
    if ('script' in inputTemplate.unlockingBytecode) {
        const directive = inputTemplate.unlockingBytecode;
        const correspondingOutput = outputs[index];
        const result = directive.compiler.generateBytecode(directive.script, {
            ...directive.data,
            transactionContext: {
                correspondingOutput: correspondingOutput === undefined
                    ? undefined
                    : (0,_transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeOutput)(correspondingOutput),
                locktime: template.locktime,
                outpointIndex: inputTemplate.outpointIndex,
                outpointTransactionHash: inputTemplate.outpointTransactionHash.slice(),
                outputValue: directive.satoshis,
                sequenceNumber: inputTemplate.sequenceNumber,
                transactionOutpoints: transactionOutpoints.slice(),
                transactionOutputs: (0,_transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeOutputsForSigning)(outputs),
                transactionSequenceNumbers: transactionSequenceNumbers.slice(),
                version: template.version,
            },
        }, true);
        return result.success
            ? {
                outpointIndex: inputTemplate.outpointIndex,
                outpointTransactionHash: inputTemplate.outpointTransactionHash.slice(),
                sequenceNumber: inputTemplate.sequenceNumber,
                unlockingBytecode: result.bytecode,
            }
            : returnFailedCompilationDirective({ index, result, type: 'unlocking' });
    }
    return {
        outpointIndex: inputTemplate.outpointIndex,
        outpointTransactionHash: inputTemplate.outpointTransactionHash.slice(),
        sequenceNumber: inputTemplate.sequenceNumber,
        unlockingBytecode: inputTemplate.unlockingBytecode.slice(),
    };
};
/**
 * Generate a `Transaction` given a `TransactionTemplate` and any applicable
 * compilers and compilation data.
 *
 * Returns either a `Transaction` or an array of compilation errors.
 *
 * For each `CompilationDirective`, the `transactionContext` property will be
 * automatically provided to the compiler. All other necessary `CompilationData`
 * properties must be specified in the `TransactionTemplate`.
 *
 * @param template - the `TransactionTemplate` from which to create the
 * `Transaction`
 */
const generateTransaction = (template) => {
    const outputResults = template.outputs.map((outputTemplate, index) => compileOutputTemplate({
        index,
        outputTemplate,
    }));
    const outputCompilationErrors = outputResults.filter((result) => 'errors' in result);
    if (outputCompilationErrors.length > 0) {
        const outputCompletions = outputResults
            .map((result, index) => 'lockingBytecode' in result
            ? { index, output: result, type: 'output' }
            : result)
            .filter((result) => 'output' in result);
        return {
            completions: outputCompletions,
            errors: outputCompilationErrors,
            stage: 'outputs',
            success: false,
        };
    }
    const outputs = outputResults;
    const inputSerializationElements = template.inputs.map((inputTemplate) => ({
        outpointIndex: inputTemplate.outpointIndex,
        outpointTransactionHash: inputTemplate.outpointTransactionHash.slice(),
        sequenceNumber: inputTemplate.sequenceNumber,
    }));
    const transactionOutpoints = (0,_transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeOutpoints)(inputSerializationElements);
    const transactionSequenceNumbers = (0,_transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeSequenceNumbersForSigning)(inputSerializationElements);
    const inputResults = template.inputs.map((inputTemplate, index) => compileInputTemplate({
        index,
        inputTemplate,
        outputs,
        template,
        transactionOutpoints,
        transactionSequenceNumbers,
    }));
    const inputCompilationErrors = inputResults.filter((result) => 'errors' in result);
    if (inputCompilationErrors.length > 0) {
        const inputCompletions = inputResults
            .map((result, index) => 'unlockingBytecode' in result
            ? { index, input: result, type: 'input' }
            : result)
            .filter((result) => 'input' in result);
        return {
            completions: inputCompletions,
            errors: inputCompilationErrors,
            stage: 'inputs',
            success: false,
        };
    }
    const inputs = inputResults;
    return {
        success: true,
        transaction: {
            inputs,
            locktime: template.locktime,
            outputs,
            version: template.version,
        },
    };
};
/**
 * TODO: fundamentally unsound, migrate to PST format
 *
 * Extract a map of successfully resolved variables to their resolved bytecode.
 *
 * @param transactionGenerationError - a transaction generation attempt where
 * `success` is `false`
 */
const extractResolvedVariables = (transactionGenerationError) => transactionGenerationError.errors.reduce((all, error) => error.resolved === undefined
    ? all
    : { ...all, ...(0,_template_language_language_utils__WEBPACK_IMPORTED_MODULE_0__.extractResolvedVariableBytecodeMap)(error.resolved) }, {});
/**
 * TODO: fundamentally unsound, migrate to PST format
 *
 * Given an unsuccessful transaction generation result, extract a map of the
 * identifiers missing from the compilation mapped to the entity which owns each
 * variable.
 *
 * Returns `false` if any errors are fatal (the error either cannot be resolved
 * by providing a variable, or the entity ownership of the required variable was
 * not provided in the compilation data).
 *
 * @param transactionGenerationError - a transaction generation result where
 * `success` is `false`
 */
const extractMissingVariables = (transactionGenerationError) => {
    const allErrors = transactionGenerationError.errors.reduce((all, error) => [...all, ...error.errors], []);
    if (!(0,_template_language_language_utils__WEBPACK_IMPORTED_MODULE_0__.allErrorsAreRecoverable)(allErrors)) {
        return false;
    }
    return allErrors.reduce((all, error) => ({
        ...all,
        [error.missingIdentifier]: error.owningEntity,
    }), {});
};
/**
 * TODO: fundamentally unsound, migrate to PST format
 *
 * Safely extend a compilation data with resolutions provided by other entities
 * (via `extractResolvedVariables`).
 *
 * It is security-critical that compilation data only be extended with expected
 * identifiers from the proper owning entity of each variable. See
 * `CompilationData.bytecode` for details.
 *
 * Returns `false` if any errors are fatal (the error either cannot be resolved
 * by providing a variable, or the entity ownership of the required variable was
 * not provided in the compilation data).
 *
 * @remarks
 * To determine which identifiers are required by a given compilation, the
 * compilation is first attempted with only trusted variables: variables owned
 * or previously verified (like `WalletData`) by the compiling entity. If this
 * compilation produces a `TransactionGenerationError`, the error can be
 * provided to `safelyExtendCompilationData`, along with the trusted compilation
 * data and a mapping of untrusted resolutions (where the result of
 * `extractResolvedVariables` is assigned to the entity ID of the entity from
 * which they were received).
 *
 * The first compilation must use only trusted compilation data
 */
const safelyExtendCompilationData = (transactionGenerationError, trustedCompilationData, untrustedResolutions) => {
    const missing = extractMissingVariables(transactionGenerationError);
    if (missing === false)
        return false;
    const selectedResolutions = Object.entries(missing).reduce((all, [identifier, entityId]) => {
        const entityResolution = untrustedResolutions[entityId];
        if (entityResolution === undefined) {
            return all;
        }
        const resolution = entityResolution[identifier];
        if (resolution === undefined) {
            return all;
        }
        return { ...all, [identifier]: resolution };
    }, {});
    return {
        ...trustedCompilationData,
        bytecode: {
            ...selectedResolutions,
            ...trustedCompilationData.bytecode,
        },
    };
};
//# sourceMappingURL=generate-transaction.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! export TransactionDecodingError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeTransaction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeTransactionUnsafe [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeInput [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeInputs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeOutpoints [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeOutput [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeOutputsForSigning [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeOutputsForTransaction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeSequenceNumbersForSigning [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeTransaction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getTransactionHash [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getTransactionHashBE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getTransactionHashLE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export readTransactionInput [provided] [no usage info] [missing usage info prevents renaming] */
/*! export readTransactionOutput [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "readTransactionInput": () => /* binding */ readTransactionInput,
/* harmony export */   "encodeInput": () => /* binding */ encodeInput,
/* harmony export */   "encodeInputs": () => /* binding */ encodeInputs,
/* harmony export */   "readTransactionOutput": () => /* binding */ readTransactionOutput,
/* harmony export */   "encodeOutput": () => /* binding */ encodeOutput,
/* harmony export */   "encodeOutputsForTransaction": () => /* binding */ encodeOutputsForTransaction,
/* harmony export */   "decodeTransactionUnsafe": () => /* binding */ decodeTransactionUnsafe,
/* harmony export */   "TransactionDecodingError": () => /* binding */ TransactionDecodingError,
/* harmony export */   "decodeTransaction": () => /* binding */ decodeTransaction,
/* harmony export */   "encodeTransaction": () => /* binding */ encodeTransaction,
/* harmony export */   "getTransactionHashBE": () => /* binding */ getTransactionHashBE,
/* harmony export */   "getTransactionHashLE": () => /* binding */ getTransactionHashLE,
/* harmony export */   "getTransactionHash": () => /* binding */ getTransactionHash,
/* harmony export */   "encodeOutpoints": () => /* binding */ encodeOutpoints,
/* harmony export */   "encodeOutputsForSigning": () => /* binding */ encodeOutputsForSigning,
/* harmony export */   "encodeSequenceNumbersForSigning": () => /* binding */ encodeSequenceNumbersForSigning
/* harmony export */ });
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");

/**
 * @param bin - the raw transaction from which to read the input
 * @param offset - the offset at which the input begins
 */
const readTransactionInput = (bin, offset) => {
    const sha256HashBytes = 32;
    const uint32Bytes = 4;
    const offsetAfterTxHash = offset + sha256HashBytes;
    const outpointTransactionHash = bin
        .slice(offset, offsetAfterTxHash)
        .reverse();
    const offsetAfterOutpointIndex = offsetAfterTxHash + uint32Bytes;
    const outpointIndex = (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.binToNumberUint32LE)(bin.subarray(offsetAfterTxHash, offsetAfterOutpointIndex));
    const { nextOffset: offsetAfterBytecodeLength, value: bytecodeLength, } = (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.readBitcoinVarInt)(bin, offsetAfterOutpointIndex);
    const offsetAfterBytecode = offsetAfterBytecodeLength + Number(bytecodeLength);
    const unlockingBytecode = bin.slice(offsetAfterBytecodeLength, offsetAfterBytecode);
    const nextOffset = offsetAfterBytecode + uint32Bytes;
    const sequenceNumber = (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.binToNumberUint32LE)(bin.subarray(offsetAfterBytecode, nextOffset));
    return {
        input: {
            outpointIndex,
            outpointTransactionHash,
            sequenceNumber,
            unlockingBytecode,
        },
        nextOffset,
    };
};
/**
 * Encode a single input for inclusion in an encoded transaction.
 *
 * @param output - the input to encode
 */
const encodeInput = (input) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([
    input.outpointTransactionHash.slice().reverse(),
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(input.outpointIndex),
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.bigIntToBitcoinVarInt)(BigInt(input.unlockingBytecode.length)),
    input.unlockingBytecode,
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(input.sequenceNumber),
]);
/**
 * Encode a set of inputs for inclusion in an encoded transaction including
 * the prefixed number of inputs.
 *
 * Format: [BitcoinVarInt: input count] [encoded inputs]
 *
 * @param inputs - the set of inputs to encode
 */
const encodeInputs = (inputs) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.bigIntToBitcoinVarInt)(BigInt(inputs.length)),
    ...inputs.map(encodeInput),
]);
/**
 * Read a single transaction output from an encoded transaction.
 *
 * @param bin - the raw transaction from which to read the output
 * @param offset - the offset at which the output begins
 */
const readTransactionOutput = (bin, offset) => {
    const uint64Bytes = 8;
    const offsetAfterSatoshis = offset + uint64Bytes;
    const satoshis = bin.slice(offset, offsetAfterSatoshis);
    const { nextOffset: offsetAfterScriptLength, value } = (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.readBitcoinVarInt)(bin, offsetAfterSatoshis);
    const bytecodeLength = Number(value);
    const nextOffset = offsetAfterScriptLength + bytecodeLength;
    const lockingBytecode = bytecodeLength === 0
        ? new Uint8Array()
        : bin.slice(offsetAfterScriptLength, nextOffset);
    return {
        nextOffset,
        output: {
            lockingBytecode,
            satoshis,
        },
    };
};
/**
 * Encode a single output for inclusion in an encoded transaction.
 *
 * @param output - the output to encode
 */
const encodeOutput = (output) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([
    output.satoshis,
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.bigIntToBitcoinVarInt)(BigInt(output.lockingBytecode.length)),
    output.lockingBytecode,
]);
/**
 * Encode a set of outputs for inclusion in an encoded transaction
 * including the prefixed number of outputs.
 *
 * Format: [BitcoinVarInt: output count] [encoded outputs]
 *
 * @param outputs - the set of outputs to encode
 */
const encodeOutputsForTransaction = (outputs) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.bigIntToBitcoinVarInt)(BigInt(outputs.length)),
    ...outputs.map(encodeOutput),
]);
/**
 * Decode a `Uint8Array` using the version 1 or 2 raw transaction format.
 *
 * Note: this method throws runtime errors when attempting to decode messages
 * which do not properly follow the transaction format. If the input is
 * untrusted, use `decodeTransaction`.
 *
 * @param bin - the raw message to decode
 */
const decodeTransactionUnsafe = (bin) => {
    const uint32Bytes = 4;
    const version = (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.binToNumberUint32LE)(bin.subarray(0, uint32Bytes));
    const offsetAfterVersion = uint32Bytes;
    const { nextOffset: offsetAfterInputCount, value: inputCount, } = (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.readBitcoinVarInt)(bin, offsetAfterVersion);
    // eslint-disable-next-line functional/no-let
    let cursor = offsetAfterInputCount;
    const inputs = [];
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus
    for (let i = 0; i < Number(inputCount); i++) {
        const { input, nextOffset } = readTransactionInput(bin, cursor);
        // eslint-disable-next-line functional/no-expression-statement
        cursor = nextOffset;
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        inputs.push(input);
    }
    const { nextOffset: offsetAfterOutputCount, value: outputCount, } = (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.readBitcoinVarInt)(bin, cursor);
    // eslint-disable-next-line functional/no-expression-statement
    cursor = offsetAfterOutputCount;
    const outputs = [];
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus
    for (let i = 0; i < Number(outputCount); i++) {
        const { output, nextOffset } = readTransactionOutput(bin, cursor);
        // eslint-disable-next-line functional/no-expression-statement
        cursor = nextOffset;
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        outputs.push(output);
    }
    const locktime = (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.binToNumberUint32LE)(bin.subarray(cursor, cursor + uint32Bytes));
    return {
        inputs,
        locktime,
        outputs,
        version,
    };
};
var TransactionDecodingError;
(function (TransactionDecodingError) {
    TransactionDecodingError["invalidFormat"] = "Transaction decoding error: message does not follow the version 1 or version 2 transaction format.";
})(TransactionDecodingError || (TransactionDecodingError = {}));
/**
 * Decode a `Uint8Array` using the version 1 or 2 raw transaction format.
 *
 * @param bin - the raw message to decode
 */
const decodeTransaction = (bin) => {
    // eslint-disable-next-line functional/no-try-statement
    try {
        return decodeTransactionUnsafe(bin);
    }
    catch {
        return TransactionDecodingError.invalidFormat;
    }
};
/**
 * Encode a `Transaction` using the standard P2P network format. This
 * serialization is also used when computing the transaction's hash (A.K.A.
 * "transaction ID" or "TXID").
 */
const encodeTransaction = (tx) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(tx.version),
    encodeInputs(tx.inputs),
    encodeOutputsForTransaction(tx.outputs),
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(tx.locktime),
]);
/**
 * Compute a transaction hash (A.K.A. "transaction ID" or "TXID") from an
 * encoded transaction in big-endian byte order. This is the byte order
 * typically used by block explorers and other user interfaces.
 *
 * @returns the transaction hash as a string
 *
 * @param transaction - the encoded transaction
 * @param sha256 - an implementation of sha256
 */
const getTransactionHashBE = (sha256, transaction) => sha256.hash(sha256.hash(transaction));
/**
 * Compute a transaction hash (A.K.A. "transaction ID" or "TXID") from an
 * encoded transaction in little-endian byte order. This is the byte order
 * used in P2P network messages.
 *
 * @remarks
 * The result of sha256 is defined by its specification as big-endian, but
 * bitcoin message formats always reverse the order of this result for
 * serialization in P2P network messages.
 *
 * @returns the transaction hash in little-endian byte order
 *
 * @param transaction - the encoded transaction
 * @param sha256 - an implementation of sha256
 */
const getTransactionHashLE = (sha256, transaction) => getTransactionHashBE(sha256, transaction).reverse();
/**
 * Return a `Transaction`'s hash as a string (in big-endian byte order as is
 * common for user interfaces).
 *
 * @param transaction - the encoded transaction
 * @param sha256 - an implementation of sha256
 */
const getTransactionHash = (sha256, transaction) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.binToHex)(getTransactionHashBE(sha256, transaction));
/**
 * Get the hash of all outpoints in a series of inputs. (For use in
 * `hashTransactionOutpoints`.)
 *
 * @param inputs - the series of inputs from which to extract the outpoints
 * @param sha256 - an implementation of sha256
 */
const encodeOutpoints = (inputs) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)(inputs.map((i) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([
    i.outpointTransactionHash.slice().reverse(),
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(i.outpointIndex),
])));
/**
 * Encode an array of transaction outputs for use in transaction signing
 * serializations.
 *
 * @param outputs - the array of outputs to encode
 */
const encodeOutputsForSigning = (outputs) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)(outputs.map(encodeOutput));
/**
 * Encode an array of input sequence numbers for use in transaction signing
 * serializations.
 *
 * @param inputs - the array of inputs from which to extract the sequence
 * numbers
 */
const encodeSequenceNumbersForSigning = (inputs) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)(inputs.map((i) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(i.sequenceNumber)));
//# sourceMappingURL=transaction-serialization.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-types.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-types.js ***!
  \*****************************************************************************************/
/*! namespace exports */
/*! export invalidSatoshis [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "invalidSatoshis": () => /* binding */ invalidSatoshis
/* harmony export */ });
/**
 * The maximum uint64 value – an impossibly large, intentionally invalid value
 * for `satoshis`. See `Transaction.satoshis` for details.
 */
// prettier-ignore
// eslint-disable-next-line @typescript-eslint/no-magic-numbers
const invalidSatoshis = Uint8Array.from([255, 255, 255, 255, 255, 255, 255, 255]);
//# sourceMappingURL=transaction-types.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction.js ***!
  \***********************************************************************************/
/*! namespace exports */
/*! export TransactionDecodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .TransactionDecodingError */
/*! export compileInputTemplate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/generate-transaction.js .compileInputTemplate */
/*! export compileOutputTemplate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/generate-transaction.js .compileOutputTemplate */
/*! export decodeTransaction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .decodeTransaction */
/*! export decodeTransactionUnsafe [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .decodeTransactionUnsafe */
/*! export encodeInput [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .encodeInput */
/*! export encodeInputs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .encodeInputs */
/*! export encodeOutpoints [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .encodeOutpoints */
/*! export encodeOutput [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .encodeOutput */
/*! export encodeOutputsForSigning [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .encodeOutputsForSigning */
/*! export encodeOutputsForTransaction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .encodeOutputsForTransaction */
/*! export encodeSequenceNumbersForSigning [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .encodeSequenceNumbersForSigning */
/*! export encodeTransaction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .encodeTransaction */
/*! export extractMissingVariables [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/generate-transaction.js .extractMissingVariables */
/*! export extractResolvedVariables [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/generate-transaction.js .extractResolvedVariables */
/*! export generateTransaction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/generate-transaction.js .generateTransaction */
/*! export getTransactionHash [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .getTransactionHash */
/*! export getTransactionHashBE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .getTransactionHashBE */
/*! export getTransactionHashLE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .getTransactionHashLE */
/*! export invalidSatoshis [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-types.js .invalidSatoshis */
/*! export readTransactionInput [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .readTransactionInput */
/*! export readTransactionOutput [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .readTransactionOutput */
/*! export safelyExtendCompilationData [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/generate-transaction.js .safelyExtendCompilationData */
/*! export verifyTransaction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/verify-transaction.js .verifyTransaction */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "compileInputTemplate": () => /* reexport safe */ _generate_transaction__WEBPACK_IMPORTED_MODULE_0__.compileInputTemplate,
/* harmony export */   "compileOutputTemplate": () => /* reexport safe */ _generate_transaction__WEBPACK_IMPORTED_MODULE_0__.compileOutputTemplate,
/* harmony export */   "extractMissingVariables": () => /* reexport safe */ _generate_transaction__WEBPACK_IMPORTED_MODULE_0__.extractMissingVariables,
/* harmony export */   "extractResolvedVariables": () => /* reexport safe */ _generate_transaction__WEBPACK_IMPORTED_MODULE_0__.extractResolvedVariables,
/* harmony export */   "generateTransaction": () => /* reexport safe */ _generate_transaction__WEBPACK_IMPORTED_MODULE_0__.generateTransaction,
/* harmony export */   "safelyExtendCompilationData": () => /* reexport safe */ _generate_transaction__WEBPACK_IMPORTED_MODULE_0__.safelyExtendCompilationData,
/* harmony export */   "TransactionDecodingError": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.TransactionDecodingError,
/* harmony export */   "decodeTransaction": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.decodeTransaction,
/* harmony export */   "decodeTransactionUnsafe": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.decodeTransactionUnsafe,
/* harmony export */   "encodeInput": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeInput,
/* harmony export */   "encodeInputs": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeInputs,
/* harmony export */   "encodeOutpoints": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeOutpoints,
/* harmony export */   "encodeOutput": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeOutput,
/* harmony export */   "encodeOutputsForSigning": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeOutputsForSigning,
/* harmony export */   "encodeOutputsForTransaction": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeOutputsForTransaction,
/* harmony export */   "encodeSequenceNumbersForSigning": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeSequenceNumbersForSigning,
/* harmony export */   "encodeTransaction": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeTransaction,
/* harmony export */   "getTransactionHash": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.getTransactionHash,
/* harmony export */   "getTransactionHashBE": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.getTransactionHashBE,
/* harmony export */   "getTransactionHashLE": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.getTransactionHashLE,
/* harmony export */   "readTransactionInput": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.readTransactionInput,
/* harmony export */   "readTransactionOutput": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.readTransactionOutput,
/* harmony export */   "invalidSatoshis": () => /* reexport safe */ _transaction_types__WEBPACK_IMPORTED_MODULE_2__.invalidSatoshis,
/* harmony export */   "verifyTransaction": () => /* reexport safe */ _verify_transaction__WEBPACK_IMPORTED_MODULE_3__.verifyTransaction
/* harmony export */ });
/* harmony import */ var _generate_transaction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./generate-transaction */ "./node_modules/@bitauth/libauth/build/module/lib/transaction/generate-transaction.js");
/* harmony import */ var _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transaction-serialization */ "./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js");
/* harmony import */ var _transaction_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transaction-types */ "./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-types.js");
/* harmony import */ var _verify_transaction__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./verify-transaction */ "./node_modules/@bitauth/libauth/build/module/lib/transaction/verify-transaction.js");




//# sourceMappingURL=transaction.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/transaction/verify-transaction.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/transaction/verify-transaction.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! export verifyTransaction [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "verifyTransaction": () => /* binding */ verifyTransaction
/* harmony export */ });
/**
 * Statelessly verify a transaction given an `AuthenticationVirtualMachine` and
 * a list of spent outputs (the `lockingBytecode` and `satoshis` being spent by
 * each input).
 *
 * Note, while the virtual machine will evaluate locktime-related operations
 * against the transactions own `locktime`, this method does not verify the
 * transaction's `locktime` property itself (allowing verification to be
 * stateless).
 *
 * Before a statelessly verified transaction can be added to the blockchain,
 * node implementations must confirm that:
 * - all `spentOutputs` are still unspent, and
 * - both relative and absolute locktime consensus requirements have been met.
 * (See BIP65, BIP68, and BIP112 for details.)
 *
 * @param spentOutputs - an array of the `Output`s spent by the transaction's
 * `inputs` in matching order (`inputs[0]` spends `spentOutputs[0]`, etc.)
 * @param transaction - the transaction to verify
 * @param vm - the authentication virtual machine to use in validation
 */
const verifyTransaction = ({ spentOutputs, transaction, vm, }) => {
    if (transaction.inputs.length !== spentOutputs.length) {
        return [
            'Unable to verify transaction: a spent output must be provided for each transaction input.',
        ];
    }
    const errors = transaction.inputs.reduce((all, _, index) => {
        const program = {
            inputIndex: index,
            sourceOutput: spentOutputs[index],
            spendingTransaction: transaction,
        };
        const state = vm.evaluate(program);
        const verify = vm.verify(state);
        if (verify === true) {
            return all;
        }
        return [...all, `Error in evaluating input index "${index}": ${verify}`];
    }, []);
    return errors.length === 0 ? true : errors;
};
//# sourceMappingURL=verify-transaction.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-descriptions.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-descriptions.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! export OpcodeDescriptionsBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export OpcodeDescriptionsUniqueBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpcodeDescriptionsUniqueBCH": () => /* binding */ OpcodeDescriptionsUniqueBCH,
/* harmony export */   "OpcodeDescriptionsBCH": () => /* binding */ OpcodeDescriptionsBCH
/* harmony export */ });
/* harmony import */ var _common_descriptions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/descriptions */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/descriptions.js");

var OpcodeDescriptionsUniqueBCH;
(function (OpcodeDescriptionsUniqueBCH) {
    OpcodeDescriptionsUniqueBCH["OP_CAT"] = "Pop the top 2 items from the stack and concatenate them, pushing the result.";
    OpcodeDescriptionsUniqueBCH["OP_SPLIT"] = "Pop the top item from the stack as an index (Script Number) and the next item as a byte array. Split the byte array into two stack items at the index (zero-based), pushing the results.";
    OpcodeDescriptionsUniqueBCH["OP_NUM2BIN"] = "Pop the top item from the stack as an item length (Script Number) and the next item as a Script Number (without encoding restrictions). Re-encode the number using a byte array of the provided length, filling any unused bytes with zeros. (If the requested length is too short to encode the number, error.)";
    OpcodeDescriptionsUniqueBCH["OP_BIN2NUM"] = "Pop the top item from the stack as a Script Number without encoding restrictions. Minimally-encode the number and push the result. (If the number can't be encoded in 4 bytes or less, error.)";
    OpcodeDescriptionsUniqueBCH["OP_AND"] = "Pop the top 2 items from the stack and perform a bitwise AND on each byte, pushing the result. If the length of the items are not equal, error.";
    OpcodeDescriptionsUniqueBCH["OP_OR"] = "Pop the top 2 items from the stack and perform a bitwise OR on each byte, pushing the result. If the length of the items are not equal, error.";
    OpcodeDescriptionsUniqueBCH["OP_XOR"] = "Pop the top 2 items from the stack and perform a bitwise XOR on each byte, pushing the result. If the length of the items are not equal, error.";
    OpcodeDescriptionsUniqueBCH["OP_DIV"] = "Pop the top item from the stack as a denominator (Script Number) and the next as a numerator (Script Number). Divide and push the result to the stack.";
    OpcodeDescriptionsUniqueBCH["OP_MOD"] = "Pop the top item from the stack as a denominator (Script Number) and the next as a numerator (Script Number). Divide and push the remainder to the stack.";
    OpcodeDescriptionsUniqueBCH["OP_CHECKDATASIG"] = "Pop the top 3 items from the stack. Treat the top as a public key, the second as a message, and the third as a signature. If the signature is valid, push a Script Number 1, otherwise push a Script Number 0.";
    OpcodeDescriptionsUniqueBCH["OP_CHECKDATASIGVERIFY"] = "Pop the top 3 items from the stack. Treat the top as a public key, the second as a message, and the third as a signature. If the signature is not valid, error. (This operation is a combination of OP_CHECKDATASIG followed by OP_VERIFY.)";
    OpcodeDescriptionsUniqueBCH["OP_REVERSEBYTES"] = "Pop the top item from the stack and reverse it, pushing the result.";
})(OpcodeDescriptionsUniqueBCH || (OpcodeDescriptionsUniqueBCH = {}));
/**
 * A map of descriptions for each Bitcoin Cash opcode.
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
const OpcodeDescriptionsBCH = {
    ..._common_descriptions__WEBPACK_IMPORTED_MODULE_0__.OpcodeDescriptionsCommon,
    ...OpcodeDescriptionsUniqueBCH,
};
//# sourceMappingURL=bch-descriptions.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-errors.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-errors.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! export AuthenticationErrorBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AuthenticationErrorBCH": () => /* binding */ AuthenticationErrorBCH
/* harmony export */ });
var AuthenticationErrorBCH;
(function (AuthenticationErrorBCH) {
    AuthenticationErrorBCH["exceededMaximumOperationCount"] = "Program exceeded the maximum operation count (201 operations).";
    AuthenticationErrorBCH["exceededMaximumStackItemLength"] = "Program attempted to push a stack item which exceeded the maximum stack item length (520 bytes).";
    AuthenticationErrorBCH["exceededMaximumScriptNumberLength"] = "Program attempted an OP_BIN2NUM operation on a byte sequence which cannot be encoded within the maximum Script Number length (4 bytes).";
    AuthenticationErrorBCH["divisionByZero"] = "Program attempted to divide a number by zero.";
    AuthenticationErrorBCH["insufficientLength"] = "Program called an OP_NUM2BIN operation with an insufficient byte length to re-encode the provided number.";
    AuthenticationErrorBCH["invalidSplitIndex"] = "Program called an OP_SPLIT operation with an invalid index.";
    AuthenticationErrorBCH["malformedP2shBytecode"] = "Redeem bytecode was malformed prior to P2SH evaluation.";
    AuthenticationErrorBCH["mismatchedBitwiseOperandLength"] = "Program attempted a bitwise operation on operands of different lengths.";
    AuthenticationErrorBCH["requiresPushOnly"] = "Unlocking bytecode may contain only push operations.";
})(AuthenticationErrorBCH || (AuthenticationErrorBCH = {}));
//# sourceMappingURL=bch-errors.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-instruction-sets.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-instruction-sets.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! export InstructionSetBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export OpcodesBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-opcodes.js .OpcodesBCH */
/*! export createInstructionSetBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getFlagsForInstructionSetBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instructionSetBCHCurrentStrict [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isPayToScriptHash [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isWitnessProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpcodesBCH": () => /* reexport safe */ _bch_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesBCH,
/* harmony export */   "isPayToScriptHash": () => /* binding */ isPayToScriptHash,
/* harmony export */   "isWitnessProgram": () => /* binding */ isWitnessProgram,
/* harmony export */   "InstructionSetBCH": () => /* binding */ InstructionSetBCH,
/* harmony export */   "instructionSetBCHCurrentStrict": () => /* binding */ instructionSetBCHCurrentStrict,
/* harmony export */   "getFlagsForInstructionSetBCH": () => /* binding */ getFlagsForInstructionSetBCH,
/* harmony export */   "createInstructionSetBCH": () => /* binding */ createInstructionSetBCH
/* harmony export */ });
/* harmony import */ var _common_combinators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/combinators */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js");
/* harmony import */ var _common_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/common */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js");
/* harmony import */ var _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../instruction-sets-utils */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js");
/* harmony import */ var _bch_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bch-errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-errors.js");
/* harmony import */ var _bch_opcodes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bch-opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-opcodes.js");
/* harmony import */ var _bch_operations__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./bch-operations */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js");







const isPayToScriptHash = (verificationInstructions) => verificationInstructions.length === 3 /* length */ &&
    verificationInstructions[0].opcode ===
        _bch_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesBCH.OP_HASH160 &&
    verificationInstructions[1].opcode ===
        _bch_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesBCH.OP_PUSHBYTES_20 &&
    verificationInstructions[2 /* lastElement */]
        .opcode === _bch_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesBCH.OP_EQUAL;
/**
 * Test a stack item for the SegWit Recovery Rules activated in `BCH_2019_05`.
 *
 * @param bytecode - the stack item to test
 */
// eslint-disable-next-line complexity
const isWitnessProgram = (bytecode) => {
    const correctLength = bytecode.length >= 4 /* minimumLength */ &&
        bytecode.length <= 42 /* maximumLength */;
    const validVersionPush = bytecode[0] === 0 /* OP_0 */ ||
        (bytecode[0] >= 81 /* OP_1 */ && bytecode[0] <= 96 /* OP_16 */);
    const correctLengthByte = bytecode[1] + 2 /* versionAndLengthBytes */ === bytecode.length;
    return correctLength && validVersionPush && correctLengthByte;
};
/**
 * From C++ implementation:
 * Note that IsPushOnly() *does* consider OP_RESERVED to be a push-type
 * opcode, however execution of OP_RESERVED fails, so it's not relevant to
 * P2SH/BIP62 as the scriptSig would fail prior to the P2SH special
 * validation code being executed.
 */
const isPushOperation = (opcode) => opcode < _bch_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesBCH.OP_16;
/**
 * This library's supported versions of the BCH virtual machine. "Strict"
 * versions (A.K.A. `isStandard` from the C++ implementations) enable additional
 * validation which is commonly used on the P2P network before relaying
 * transactions. Transactions which fail these rules are often called
 * "non-standard" – the transactions can technically be included by miners in
 * valid blocks, but most network nodes will refuse to relay them.
 *
 * BCH instruction sets marked `SPEC` ("specification") have not yet been
 * deployed on the main network and are subject to change. After deployment, the
 * `SPEC` suffix is removed. This change only effects the name of the TypeScript
 * enum member – the value remains the same. E.g.
 * `InstructionSetBCH.BCH_2020_05_SPEC` became `InstructionSetBCH.BCH_2020_05`,
 * but the value remained `BCH_2020_05`.
 *
 * This allows consumers to select an upgrade policy: when a version of Libauth
 * is released in which compatibility with a deployed virtual machine is
 * confirmed, this change can help to identify downstream code which requires
 * review.
 *  - Consumers which prefer to upgrade manually should specify a `SPEC` type,
 * e.g. `InstructionSetBCH.BCH_2020_05_SPEC`.
 *  - Consumers which prefer full compatibility between Libauth version should
 * specify a precise instruction set value (e.g. `BCH_2020_05`) or use the
 * dedicated "current" value: `instructionSetBCHCurrentStrict`.
 */
var InstructionSetBCH;
(function (InstructionSetBCH) {
    InstructionSetBCH["BCH_2019_05"] = "BCH_2019_05";
    InstructionSetBCH["BCH_2019_05_STRICT"] = "BCH_2019_05_STRICT";
    InstructionSetBCH["BCH_2019_11"] = "BCH_2019_11";
    InstructionSetBCH["BCH_2019_11_STRICT"] = "BCH_2019_11_STRICT";
    InstructionSetBCH["BCH_2020_05"] = "BCH_2020_05";
    InstructionSetBCH["BCH_2020_05_STRICT"] = "BCH_2020_05_STRICT";
    InstructionSetBCH["BCH_2020_11_SPEC"] = "BCH_2020_11";
    InstructionSetBCH["BCH_2020_11_STRICT_SPEC"] = "BCH_2020_11_STRICT";
    InstructionSetBCH["BCH_2021_05_SPEC"] = "BCH_2021_05";
    InstructionSetBCH["BCH_2021_05_STRICT_SPEC"] = "BCH_2021_05_STRICT";
    InstructionSetBCH["BCH_2021_11_SPEC"] = "BCH_2021_11";
    InstructionSetBCH["BCH_2021_11_STRICT_SPEC"] = "BCH_2021_11_STRICT";
    InstructionSetBCH["BCH_2022_05_SPEC"] = "BCH_2022_05";
    InstructionSetBCH["BCH_2022_05_STRICT_SPEC"] = "BCH_2022_05_STRICT";
    InstructionSetBCH["BCH_2022_11_SPEC"] = "BCH_2022_11";
    InstructionSetBCH["BCH_2022_11_STRICT_SPEC"] = "BCH_2022_11_STRICT";
})(InstructionSetBCH || (InstructionSetBCH = {}));
/**
 * The current strict virtual machine version used by the Bitcoin Cash (BCH)
 * network.
 */
const instructionSetBCHCurrentStrict = InstructionSetBCH.BCH_2020_05_STRICT;
// eslint-disable-next-line complexity
const getFlagsForInstructionSetBCH = (instructionSet) => {
    switch (instructionSet) {
        case InstructionSetBCH.BCH_2019_05:
            return {
                disallowUpgradableNops: false,
                opReverseBytes: false,
                requireBugValueZero: false,
                requireMinimalEncoding: false,
                requireNullSignatureFailures: true,
            };
        case InstructionSetBCH.BCH_2019_05_STRICT:
            return {
                disallowUpgradableNops: true,
                opReverseBytes: false,
                requireBugValueZero: false,
                requireMinimalEncoding: true,
                requireNullSignatureFailures: true,
            };
        case InstructionSetBCH.BCH_2019_11:
            return {
                disallowUpgradableNops: false,
                opReverseBytes: false,
                requireBugValueZero: true,
                requireMinimalEncoding: true,
                requireNullSignatureFailures: true,
            };
        case InstructionSetBCH.BCH_2019_11_STRICT:
            return {
                disallowUpgradableNops: true,
                opReverseBytes: false,
                requireBugValueZero: true,
                requireMinimalEncoding: true,
                requireNullSignatureFailures: true,
            };
        case InstructionSetBCH.BCH_2020_05:
            return {
                disallowUpgradableNops: false,
                opReverseBytes: true,
                requireBugValueZero: false,
                requireMinimalEncoding: false,
                requireNullSignatureFailures: true,
            };
        case InstructionSetBCH.BCH_2020_05_STRICT:
            return {
                disallowUpgradableNops: true,
                opReverseBytes: true,
                requireBugValueZero: true,
                requireMinimalEncoding: true,
                requireNullSignatureFailures: true,
            };
        default:
            return new Error(`${instructionSet} is not a known instruction set.`);
    }
};
/**
 * Initialize a new instruction set for the BCH virtual machine.
 *
 * @param flags - an object configuring the flags for this vm (see
 * `getFlagsForInstructionSetBCH`)
 * @param sha1 - a Sha1 implementation
 * @param sha256 - a Sha256 implementation
 * @param ripemd160 - a Ripemd160 implementation
 * @param secp256k1 - a Secp256k1 implementation
 */
const createInstructionSetBCH = ({ flags, ripemd160, secp256k1, sha1, sha256, }) => ({
    clone: _common_common__WEBPACK_IMPORTED_MODULE_1__.cloneAuthenticationProgramStateCommon,
    continue: (state) => state.error === undefined && state.ip < state.instructions.length,
    // eslint-disable-next-line complexity
    evaluate: (program, stateEvaluate) => {
        const { unlockingBytecode } = program.spendingTransaction.inputs[program.inputIndex];
        const { lockingBytecode } = program.sourceOutput;
        const unlockingInstructions = (0,_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_2__.parseBytecode)(unlockingBytecode);
        const lockingInstructions = (0,_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_2__.parseBytecode)(lockingBytecode);
        const externalState = (0,_common_common__WEBPACK_IMPORTED_MODULE_1__.createTransactionContextCommon)(program);
        const initialState = (0,_common_common__WEBPACK_IMPORTED_MODULE_1__.createAuthenticationProgramStateCommon)({
            instructions: unlockingInstructions,
            stack: [],
            transactionContext: externalState,
        });
        const unlockingResult = unlockingBytecode.length > _common_common__WEBPACK_IMPORTED_MODULE_1__.ConsensusCommon.maximumBytecodeLength
            ? (0,_common_common__WEBPACK_IMPORTED_MODULE_1__.applyError)(_common_common__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.exceededMaximumBytecodeLengthUnlocking, initialState)
            : (0,_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_2__.authenticationInstructionsAreMalformed)(unlockingInstructions)
                ? (0,_common_common__WEBPACK_IMPORTED_MODULE_1__.applyError)(_common_common__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.malformedUnlockingBytecode, initialState)
                : lockingBytecode.length > _common_common__WEBPACK_IMPORTED_MODULE_1__.ConsensusCommon.maximumBytecodeLength
                    ? (0,_common_common__WEBPACK_IMPORTED_MODULE_1__.applyError)(_common_common__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.exceededMaximumBytecodeLengthLocking, initialState)
                    : (0,_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_2__.authenticationInstructionsAreMalformed)(lockingInstructions)
                        ? (0,_common_common__WEBPACK_IMPORTED_MODULE_1__.applyError)(_common_common__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.malformedLockingBytecode, initialState)
                        : initialState.instructions.every((instruction) => isPushOperation(instruction.opcode))
                            ? stateEvaluate(initialState)
                            : (0,_common_common__WEBPACK_IMPORTED_MODULE_1__.applyError)(_bch_errors__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorBCH.requiresPushOnly, initialState);
        if (unlockingResult.error !== undefined) {
            return unlockingResult;
        }
        const lockingResult = stateEvaluate((0,_common_common__WEBPACK_IMPORTED_MODULE_1__.createAuthenticationProgramStateCommon)({
            instructions: lockingInstructions,
            stack: unlockingResult.stack,
            transactionContext: externalState,
        }));
        if (!isPayToScriptHash(lockingInstructions)) {
            return lockingResult;
        }
        const p2shStack = (0,_common_common__WEBPACK_IMPORTED_MODULE_1__.cloneStack)(unlockingResult.stack);
        // eslint-disable-next-line functional/immutable-data
        const p2shScript = p2shStack.pop() ?? Uint8Array.of();
        if (p2shStack.length === 0 && isWitnessProgram(p2shScript)) {
            return lockingResult;
        }
        const p2shInstructions = (0,_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_2__.parseBytecode)(p2shScript);
        return (0,_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_2__.authenticationInstructionsAreMalformed)(p2shInstructions)
            ? {
                ...lockingResult,
                error: _bch_errors__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorBCH.malformedP2shBytecode,
            }
            : stateEvaluate((0,_common_common__WEBPACK_IMPORTED_MODULE_1__.createAuthenticationProgramStateCommon)({
                instructions: p2shInstructions,
                stack: p2shStack,
                transactionContext: externalState,
            }));
    },
    operations: {
        ...(0,_common_common__WEBPACK_IMPORTED_MODULE_1__.commonOperations)({ flags, ripemd160, secp256k1, sha1, sha256 }),
        ...(0,_common_combinators__WEBPACK_IMPORTED_MODULE_0__.mapOverOperations)((0,_bch_operations__WEBPACK_IMPORTED_MODULE_5__.bitcoinCashOperations)({
            flags,
            secp256k1,
            sha256,
        }), _common_combinators__WEBPACK_IMPORTED_MODULE_0__.conditionallyEvaluate, _common_combinators__WEBPACK_IMPORTED_MODULE_0__.incrementOperationCount, _common_common__WEBPACK_IMPORTED_MODULE_1__.checkLimitsCommon),
    },
    ...(0,_common_common__WEBPACK_IMPORTED_MODULE_1__.undefinedOperation)(),
    verify: (state) => {
        if (state.error !== undefined) {
            return state.error;
        }
        if (state.executionStack.length !== 0) {
            return _common_common__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.nonEmptyExecutionStack;
        }
        if (state.stack.length !== 1) {
            return _common_common__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.requiresCleanStack;
        }
        if (!(0,_common_common__WEBPACK_IMPORTED_MODULE_1__.stackItemIsTruthy)(state.stack[0])) {
            return _common_common__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.unsuccessfulEvaluation;
        }
        return true;
    },
});
//# sourceMappingURL=bch-instruction-sets.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-opcodes.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-opcodes.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export OpcodeAlternateNamesBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export OpcodesBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpcodesBCH": () => /* binding */ OpcodesBCH,
/* harmony export */   "OpcodeAlternateNamesBCH": () => /* binding */ OpcodeAlternateNamesBCH
/* harmony export */ });
var OpcodesBCH;
(function (OpcodesBCH) {
    /**
     * A.K.A. `OP_FALSE` or `OP_PUSHBYTES_0`
     */
    OpcodesBCH[OpcodesBCH["OP_0"] = 0] = "OP_0";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_1"] = 1] = "OP_PUSHBYTES_1";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_2"] = 2] = "OP_PUSHBYTES_2";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_3"] = 3] = "OP_PUSHBYTES_3";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_4"] = 4] = "OP_PUSHBYTES_4";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_5"] = 5] = "OP_PUSHBYTES_5";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_6"] = 6] = "OP_PUSHBYTES_6";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_7"] = 7] = "OP_PUSHBYTES_7";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_8"] = 8] = "OP_PUSHBYTES_8";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_9"] = 9] = "OP_PUSHBYTES_9";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_10"] = 10] = "OP_PUSHBYTES_10";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_11"] = 11] = "OP_PUSHBYTES_11";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_12"] = 12] = "OP_PUSHBYTES_12";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_13"] = 13] = "OP_PUSHBYTES_13";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_14"] = 14] = "OP_PUSHBYTES_14";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_15"] = 15] = "OP_PUSHBYTES_15";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_16"] = 16] = "OP_PUSHBYTES_16";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_17"] = 17] = "OP_PUSHBYTES_17";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_18"] = 18] = "OP_PUSHBYTES_18";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_19"] = 19] = "OP_PUSHBYTES_19";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_20"] = 20] = "OP_PUSHBYTES_20";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_21"] = 21] = "OP_PUSHBYTES_21";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_22"] = 22] = "OP_PUSHBYTES_22";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_23"] = 23] = "OP_PUSHBYTES_23";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_24"] = 24] = "OP_PUSHBYTES_24";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_25"] = 25] = "OP_PUSHBYTES_25";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_26"] = 26] = "OP_PUSHBYTES_26";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_27"] = 27] = "OP_PUSHBYTES_27";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_28"] = 28] = "OP_PUSHBYTES_28";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_29"] = 29] = "OP_PUSHBYTES_29";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_30"] = 30] = "OP_PUSHBYTES_30";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_31"] = 31] = "OP_PUSHBYTES_31";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_32"] = 32] = "OP_PUSHBYTES_32";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_33"] = 33] = "OP_PUSHBYTES_33";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_34"] = 34] = "OP_PUSHBYTES_34";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_35"] = 35] = "OP_PUSHBYTES_35";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_36"] = 36] = "OP_PUSHBYTES_36";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_37"] = 37] = "OP_PUSHBYTES_37";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_38"] = 38] = "OP_PUSHBYTES_38";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_39"] = 39] = "OP_PUSHBYTES_39";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_40"] = 40] = "OP_PUSHBYTES_40";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_41"] = 41] = "OP_PUSHBYTES_41";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_42"] = 42] = "OP_PUSHBYTES_42";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_43"] = 43] = "OP_PUSHBYTES_43";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_44"] = 44] = "OP_PUSHBYTES_44";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_45"] = 45] = "OP_PUSHBYTES_45";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_46"] = 46] = "OP_PUSHBYTES_46";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_47"] = 47] = "OP_PUSHBYTES_47";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_48"] = 48] = "OP_PUSHBYTES_48";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_49"] = 49] = "OP_PUSHBYTES_49";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_50"] = 50] = "OP_PUSHBYTES_50";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_51"] = 51] = "OP_PUSHBYTES_51";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_52"] = 52] = "OP_PUSHBYTES_52";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_53"] = 53] = "OP_PUSHBYTES_53";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_54"] = 54] = "OP_PUSHBYTES_54";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_55"] = 55] = "OP_PUSHBYTES_55";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_56"] = 56] = "OP_PUSHBYTES_56";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_57"] = 57] = "OP_PUSHBYTES_57";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_58"] = 58] = "OP_PUSHBYTES_58";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_59"] = 59] = "OP_PUSHBYTES_59";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_60"] = 60] = "OP_PUSHBYTES_60";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_61"] = 61] = "OP_PUSHBYTES_61";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_62"] = 62] = "OP_PUSHBYTES_62";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_63"] = 63] = "OP_PUSHBYTES_63";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_64"] = 64] = "OP_PUSHBYTES_64";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_65"] = 65] = "OP_PUSHBYTES_65";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_66"] = 66] = "OP_PUSHBYTES_66";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_67"] = 67] = "OP_PUSHBYTES_67";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_68"] = 68] = "OP_PUSHBYTES_68";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_69"] = 69] = "OP_PUSHBYTES_69";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_70"] = 70] = "OP_PUSHBYTES_70";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_71"] = 71] = "OP_PUSHBYTES_71";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_72"] = 72] = "OP_PUSHBYTES_72";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_73"] = 73] = "OP_PUSHBYTES_73";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_74"] = 74] = "OP_PUSHBYTES_74";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_75"] = 75] = "OP_PUSHBYTES_75";
    OpcodesBCH[OpcodesBCH["OP_PUSHDATA_1"] = 76] = "OP_PUSHDATA_1";
    OpcodesBCH[OpcodesBCH["OP_PUSHDATA_2"] = 77] = "OP_PUSHDATA_2";
    OpcodesBCH[OpcodesBCH["OP_PUSHDATA_4"] = 78] = "OP_PUSHDATA_4";
    OpcodesBCH[OpcodesBCH["OP_1NEGATE"] = 79] = "OP_1NEGATE";
    OpcodesBCH[OpcodesBCH["OP_RESERVED"] = 80] = "OP_RESERVED";
    /**
     * A.K.A. `OP_TRUE`
     */
    OpcodesBCH[OpcodesBCH["OP_1"] = 81] = "OP_1";
    OpcodesBCH[OpcodesBCH["OP_2"] = 82] = "OP_2";
    OpcodesBCH[OpcodesBCH["OP_3"] = 83] = "OP_3";
    OpcodesBCH[OpcodesBCH["OP_4"] = 84] = "OP_4";
    OpcodesBCH[OpcodesBCH["OP_5"] = 85] = "OP_5";
    OpcodesBCH[OpcodesBCH["OP_6"] = 86] = "OP_6";
    OpcodesBCH[OpcodesBCH["OP_7"] = 87] = "OP_7";
    OpcodesBCH[OpcodesBCH["OP_8"] = 88] = "OP_8";
    OpcodesBCH[OpcodesBCH["OP_9"] = 89] = "OP_9";
    OpcodesBCH[OpcodesBCH["OP_10"] = 90] = "OP_10";
    OpcodesBCH[OpcodesBCH["OP_11"] = 91] = "OP_11";
    OpcodesBCH[OpcodesBCH["OP_12"] = 92] = "OP_12";
    OpcodesBCH[OpcodesBCH["OP_13"] = 93] = "OP_13";
    OpcodesBCH[OpcodesBCH["OP_14"] = 94] = "OP_14";
    OpcodesBCH[OpcodesBCH["OP_15"] = 95] = "OP_15";
    OpcodesBCH[OpcodesBCH["OP_16"] = 96] = "OP_16";
    OpcodesBCH[OpcodesBCH["OP_NOP"] = 97] = "OP_NOP";
    OpcodesBCH[OpcodesBCH["OP_VER"] = 98] = "OP_VER";
    OpcodesBCH[OpcodesBCH["OP_IF"] = 99] = "OP_IF";
    OpcodesBCH[OpcodesBCH["OP_NOTIF"] = 100] = "OP_NOTIF";
    OpcodesBCH[OpcodesBCH["OP_VERIF"] = 101] = "OP_VERIF";
    OpcodesBCH[OpcodesBCH["OP_VERNOTIF"] = 102] = "OP_VERNOTIF";
    OpcodesBCH[OpcodesBCH["OP_ELSE"] = 103] = "OP_ELSE";
    OpcodesBCH[OpcodesBCH["OP_ENDIF"] = 104] = "OP_ENDIF";
    OpcodesBCH[OpcodesBCH["OP_VERIFY"] = 105] = "OP_VERIFY";
    OpcodesBCH[OpcodesBCH["OP_RETURN"] = 106] = "OP_RETURN";
    OpcodesBCH[OpcodesBCH["OP_TOALTSTACK"] = 107] = "OP_TOALTSTACK";
    OpcodesBCH[OpcodesBCH["OP_FROMALTSTACK"] = 108] = "OP_FROMALTSTACK";
    OpcodesBCH[OpcodesBCH["OP_2DROP"] = 109] = "OP_2DROP";
    OpcodesBCH[OpcodesBCH["OP_2DUP"] = 110] = "OP_2DUP";
    OpcodesBCH[OpcodesBCH["OP_3DUP"] = 111] = "OP_3DUP";
    OpcodesBCH[OpcodesBCH["OP_2OVER"] = 112] = "OP_2OVER";
    OpcodesBCH[OpcodesBCH["OP_2ROT"] = 113] = "OP_2ROT";
    OpcodesBCH[OpcodesBCH["OP_2SWAP"] = 114] = "OP_2SWAP";
    OpcodesBCH[OpcodesBCH["OP_IFDUP"] = 115] = "OP_IFDUP";
    OpcodesBCH[OpcodesBCH["OP_DEPTH"] = 116] = "OP_DEPTH";
    OpcodesBCH[OpcodesBCH["OP_DROP"] = 117] = "OP_DROP";
    OpcodesBCH[OpcodesBCH["OP_DUP"] = 118] = "OP_DUP";
    OpcodesBCH[OpcodesBCH["OP_NIP"] = 119] = "OP_NIP";
    OpcodesBCH[OpcodesBCH["OP_OVER"] = 120] = "OP_OVER";
    OpcodesBCH[OpcodesBCH["OP_PICK"] = 121] = "OP_PICK";
    OpcodesBCH[OpcodesBCH["OP_ROLL"] = 122] = "OP_ROLL";
    OpcodesBCH[OpcodesBCH["OP_ROT"] = 123] = "OP_ROT";
    OpcodesBCH[OpcodesBCH["OP_SWAP"] = 124] = "OP_SWAP";
    OpcodesBCH[OpcodesBCH["OP_TUCK"] = 125] = "OP_TUCK";
    OpcodesBCH[OpcodesBCH["OP_CAT"] = 126] = "OP_CAT";
    OpcodesBCH[OpcodesBCH["OP_SPLIT"] = 127] = "OP_SPLIT";
    OpcodesBCH[OpcodesBCH["OP_NUM2BIN"] = 128] = "OP_NUM2BIN";
    OpcodesBCH[OpcodesBCH["OP_BIN2NUM"] = 129] = "OP_BIN2NUM";
    OpcodesBCH[OpcodesBCH["OP_SIZE"] = 130] = "OP_SIZE";
    OpcodesBCH[OpcodesBCH["OP_INVERT"] = 131] = "OP_INVERT";
    OpcodesBCH[OpcodesBCH["OP_AND"] = 132] = "OP_AND";
    OpcodesBCH[OpcodesBCH["OP_OR"] = 133] = "OP_OR";
    OpcodesBCH[OpcodesBCH["OP_XOR"] = 134] = "OP_XOR";
    OpcodesBCH[OpcodesBCH["OP_EQUAL"] = 135] = "OP_EQUAL";
    OpcodesBCH[OpcodesBCH["OP_EQUALVERIFY"] = 136] = "OP_EQUALVERIFY";
    OpcodesBCH[OpcodesBCH["OP_RESERVED1"] = 137] = "OP_RESERVED1";
    OpcodesBCH[OpcodesBCH["OP_RESERVED2"] = 138] = "OP_RESERVED2";
    OpcodesBCH[OpcodesBCH["OP_1ADD"] = 139] = "OP_1ADD";
    OpcodesBCH[OpcodesBCH["OP_1SUB"] = 140] = "OP_1SUB";
    OpcodesBCH[OpcodesBCH["OP_2MUL"] = 141] = "OP_2MUL";
    OpcodesBCH[OpcodesBCH["OP_2DIV"] = 142] = "OP_2DIV";
    OpcodesBCH[OpcodesBCH["OP_NEGATE"] = 143] = "OP_NEGATE";
    OpcodesBCH[OpcodesBCH["OP_ABS"] = 144] = "OP_ABS";
    OpcodesBCH[OpcodesBCH["OP_NOT"] = 145] = "OP_NOT";
    OpcodesBCH[OpcodesBCH["OP_0NOTEQUAL"] = 146] = "OP_0NOTEQUAL";
    OpcodesBCH[OpcodesBCH["OP_ADD"] = 147] = "OP_ADD";
    OpcodesBCH[OpcodesBCH["OP_SUB"] = 148] = "OP_SUB";
    OpcodesBCH[OpcodesBCH["OP_MUL"] = 149] = "OP_MUL";
    OpcodesBCH[OpcodesBCH["OP_DIV"] = 150] = "OP_DIV";
    OpcodesBCH[OpcodesBCH["OP_MOD"] = 151] = "OP_MOD";
    OpcodesBCH[OpcodesBCH["OP_LSHIFT"] = 152] = "OP_LSHIFT";
    OpcodesBCH[OpcodesBCH["OP_RSHIFT"] = 153] = "OP_RSHIFT";
    OpcodesBCH[OpcodesBCH["OP_BOOLAND"] = 154] = "OP_BOOLAND";
    OpcodesBCH[OpcodesBCH["OP_BOOLOR"] = 155] = "OP_BOOLOR";
    OpcodesBCH[OpcodesBCH["OP_NUMEQUAL"] = 156] = "OP_NUMEQUAL";
    OpcodesBCH[OpcodesBCH["OP_NUMEQUALVERIFY"] = 157] = "OP_NUMEQUALVERIFY";
    OpcodesBCH[OpcodesBCH["OP_NUMNOTEQUAL"] = 158] = "OP_NUMNOTEQUAL";
    OpcodesBCH[OpcodesBCH["OP_LESSTHAN"] = 159] = "OP_LESSTHAN";
    OpcodesBCH[OpcodesBCH["OP_GREATERTHAN"] = 160] = "OP_GREATERTHAN";
    OpcodesBCH[OpcodesBCH["OP_LESSTHANOREQUAL"] = 161] = "OP_LESSTHANOREQUAL";
    OpcodesBCH[OpcodesBCH["OP_GREATERTHANOREQUAL"] = 162] = "OP_GREATERTHANOREQUAL";
    OpcodesBCH[OpcodesBCH["OP_MIN"] = 163] = "OP_MIN";
    OpcodesBCH[OpcodesBCH["OP_MAX"] = 164] = "OP_MAX";
    OpcodesBCH[OpcodesBCH["OP_WITHIN"] = 165] = "OP_WITHIN";
    OpcodesBCH[OpcodesBCH["OP_RIPEMD160"] = 166] = "OP_RIPEMD160";
    OpcodesBCH[OpcodesBCH["OP_SHA1"] = 167] = "OP_SHA1";
    OpcodesBCH[OpcodesBCH["OP_SHA256"] = 168] = "OP_SHA256";
    OpcodesBCH[OpcodesBCH["OP_HASH160"] = 169] = "OP_HASH160";
    OpcodesBCH[OpcodesBCH["OP_HASH256"] = 170] = "OP_HASH256";
    OpcodesBCH[OpcodesBCH["OP_CODESEPARATOR"] = 171] = "OP_CODESEPARATOR";
    OpcodesBCH[OpcodesBCH["OP_CHECKSIG"] = 172] = "OP_CHECKSIG";
    OpcodesBCH[OpcodesBCH["OP_CHECKSIGVERIFY"] = 173] = "OP_CHECKSIGVERIFY";
    OpcodesBCH[OpcodesBCH["OP_CHECKMULTISIG"] = 174] = "OP_CHECKMULTISIG";
    OpcodesBCH[OpcodesBCH["OP_CHECKMULTISIGVERIFY"] = 175] = "OP_CHECKMULTISIGVERIFY";
    OpcodesBCH[OpcodesBCH["OP_NOP1"] = 176] = "OP_NOP1";
    /**
     * Previously `OP_NOP2`
     */
    OpcodesBCH[OpcodesBCH["OP_CHECKLOCKTIMEVERIFY"] = 177] = "OP_CHECKLOCKTIMEVERIFY";
    /**
     * Previously `OP_NOP2`
     */
    OpcodesBCH[OpcodesBCH["OP_CHECKSEQUENCEVERIFY"] = 178] = "OP_CHECKSEQUENCEVERIFY";
    OpcodesBCH[OpcodesBCH["OP_NOP4"] = 179] = "OP_NOP4";
    OpcodesBCH[OpcodesBCH["OP_NOP5"] = 180] = "OP_NOP5";
    OpcodesBCH[OpcodesBCH["OP_NOP6"] = 181] = "OP_NOP6";
    OpcodesBCH[OpcodesBCH["OP_NOP7"] = 182] = "OP_NOP7";
    OpcodesBCH[OpcodesBCH["OP_NOP8"] = 183] = "OP_NOP8";
    OpcodesBCH[OpcodesBCH["OP_NOP9"] = 184] = "OP_NOP9";
    OpcodesBCH[OpcodesBCH["OP_NOP10"] = 185] = "OP_NOP10";
    /**
     * Previously `OP_UNKNOWN186`
     */
    OpcodesBCH[OpcodesBCH["OP_CHECKDATASIG"] = 186] = "OP_CHECKDATASIG";
    /**
     * Previously `OP_UNKNOWN187`
     */
    OpcodesBCH[OpcodesBCH["OP_CHECKDATASIGVERIFY"] = 187] = "OP_CHECKDATASIGVERIFY";
    /**
     * Previously `OP_UNKNOWN188`
     */
    OpcodesBCH[OpcodesBCH["OP_REVERSEBYTES"] = 188] = "OP_REVERSEBYTES";
    /**
     * A.K.A. `FIRST_UNDEFINED_OP_VALUE`
     */
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN189"] = 189] = "OP_UNKNOWN189";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN190"] = 190] = "OP_UNKNOWN190";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN191"] = 191] = "OP_UNKNOWN191";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN192"] = 192] = "OP_UNKNOWN192";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN193"] = 193] = "OP_UNKNOWN193";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN194"] = 194] = "OP_UNKNOWN194";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN195"] = 195] = "OP_UNKNOWN195";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN196"] = 196] = "OP_UNKNOWN196";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN197"] = 197] = "OP_UNKNOWN197";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN198"] = 198] = "OP_UNKNOWN198";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN199"] = 199] = "OP_UNKNOWN199";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN200"] = 200] = "OP_UNKNOWN200";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN201"] = 201] = "OP_UNKNOWN201";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN202"] = 202] = "OP_UNKNOWN202";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN203"] = 203] = "OP_UNKNOWN203";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN204"] = 204] = "OP_UNKNOWN204";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN205"] = 205] = "OP_UNKNOWN205";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN206"] = 206] = "OP_UNKNOWN206";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN207"] = 207] = "OP_UNKNOWN207";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN208"] = 208] = "OP_UNKNOWN208";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN209"] = 209] = "OP_UNKNOWN209";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN210"] = 210] = "OP_UNKNOWN210";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN211"] = 211] = "OP_UNKNOWN211";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN212"] = 212] = "OP_UNKNOWN212";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN213"] = 213] = "OP_UNKNOWN213";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN214"] = 214] = "OP_UNKNOWN214";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN215"] = 215] = "OP_UNKNOWN215";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN216"] = 216] = "OP_UNKNOWN216";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN217"] = 217] = "OP_UNKNOWN217";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN218"] = 218] = "OP_UNKNOWN218";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN219"] = 219] = "OP_UNKNOWN219";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN220"] = 220] = "OP_UNKNOWN220";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN221"] = 221] = "OP_UNKNOWN221";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN222"] = 222] = "OP_UNKNOWN222";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN223"] = 223] = "OP_UNKNOWN223";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN224"] = 224] = "OP_UNKNOWN224";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN225"] = 225] = "OP_UNKNOWN225";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN226"] = 226] = "OP_UNKNOWN226";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN227"] = 227] = "OP_UNKNOWN227";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN228"] = 228] = "OP_UNKNOWN228";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN229"] = 229] = "OP_UNKNOWN229";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN230"] = 230] = "OP_UNKNOWN230";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN231"] = 231] = "OP_UNKNOWN231";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN232"] = 232] = "OP_UNKNOWN232";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN233"] = 233] = "OP_UNKNOWN233";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN234"] = 234] = "OP_UNKNOWN234";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN235"] = 235] = "OP_UNKNOWN235";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN236"] = 236] = "OP_UNKNOWN236";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN237"] = 237] = "OP_UNKNOWN237";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN238"] = 238] = "OP_UNKNOWN238";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN239"] = 239] = "OP_UNKNOWN239";
    /**
     * A.K.A. `OP_PREFIX_BEGIN`
     */
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN240"] = 240] = "OP_UNKNOWN240";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN241"] = 241] = "OP_UNKNOWN241";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN242"] = 242] = "OP_UNKNOWN242";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN243"] = 243] = "OP_UNKNOWN243";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN244"] = 244] = "OP_UNKNOWN244";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN245"] = 245] = "OP_UNKNOWN245";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN246"] = 246] = "OP_UNKNOWN246";
    /**
     * A.K.A. `OP_PREFIX_END`
     */
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN247"] = 247] = "OP_UNKNOWN247";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN248"] = 248] = "OP_UNKNOWN248";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN249"] = 249] = "OP_UNKNOWN249";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN250"] = 250] = "OP_UNKNOWN250";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN251"] = 251] = "OP_UNKNOWN251";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN252"] = 252] = "OP_UNKNOWN252";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN253"] = 253] = "OP_UNKNOWN253";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN254"] = 254] = "OP_UNKNOWN254";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN255"] = 255] = "OP_UNKNOWN255";
})(OpcodesBCH || (OpcodesBCH = {}));
var OpcodeAlternateNamesBCH;
(function (OpcodeAlternateNamesBCH) {
    /**
     * A.K.A. `OP_0`
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_FALSE"] = 0] = "OP_FALSE";
    /**
     * A.K.A. `OP_0`
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_PUSHBYTES_0"] = 0] = "OP_PUSHBYTES_0";
    /**
     * A.K.A. `OP_1`
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_TRUE"] = 81] = "OP_TRUE";
    /**
     * A.K.A. `OP_CHECKLOCKTIMEVERIFY`
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_NOP2"] = 177] = "OP_NOP2";
    /**
     * A.K.A. `OP_CHECKSEQUENCEVERIFY`
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_NOP3"] = 178] = "OP_NOP3";
    /**
     * A.K.A. `OP_CHECKDATASIG`
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_UNKNOWN186"] = 186] = "OP_UNKNOWN186";
    /**
     * A.K.A. `OP_CHECKDATASIGVERIFY`
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_UNKNOWN187"] = 187] = "OP_UNKNOWN187";
    /**
     * A.K.A. `OP_UNKNOWN189`
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["FIRST_UNDEFINED_OP_VALUE"] = 189] = "FIRST_UNDEFINED_OP_VALUE";
    /**
     * A.K.A. `OP_UNKNOWN240`. Some implementations have reserved opcodes
     * `0xf0` through `0xf7` for a future range of multi-byte opcodes, though none
     * are yet available on the network.
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_PREFIX_BEGIN"] = 240] = "OP_PREFIX_BEGIN";
    /**
     * A.K.A. `OP_UNKNOWN247`. Some implementations have reserved opcodes
     * `0xf0` through `0xf7` for a future range of multi-byte opcodes, though none
     * are yet available on the network.
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_PREFIX_END"] = 247] = "OP_PREFIX_END";
    /**
     * `OP_SMALLINTEGER` is used internally for template matching in the C++
     * implementation. When found on the network, it is `OP_UNKNOWN250`.
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_SMALLINTEGER"] = 250] = "OP_SMALLINTEGER";
    /**
     * `OP_PUBKEYS` is used internally for template matching in the C++
     * implementation. When found on the network, it is `OP_UNKNOWN251`.
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_PUBKEYS"] = 251] = "OP_PUBKEYS";
    /**
     * `OP_PUBKEYHASH` is used internally for template matching in the C++
     * implementation. When found on the network, it is `OP_UNKNOWN253`.
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_PUBKEYHASH"] = 253] = "OP_PUBKEYHASH";
    /**
     * `OP_PUBKEY` is used internally for template matching in the C++
     * implementation. When found on the network, it is `OP_UNKNOWN254`.
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_PUBKEY"] = 254] = "OP_PUBKEY";
    /**
     * `OP_INVALIDOPCODE` is described as such for testing in the C++
     * implementation. When found on the network, it is `OP_UNKNOWN255`.
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_INVALIDOPCODE"] = 255] = "OP_INVALIDOPCODE";
})(OpcodeAlternateNamesBCH || (OpcodeAlternateNamesBCH = {}));
//# sourceMappingURL=bch-opcodes.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! export bitcoinCashOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bitwiseOperation [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isValidSignatureEncodingBCHRaw [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opAnd [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opBin2Num [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opCat [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opCheckDataSig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opCheckDataSigVerify [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opDiv [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opMod [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opNum2Bin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opOr [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opReverseBytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opSplit [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opXor [provided] [no usage info] [missing usage info prevents renaming] */
/*! export padMinimallyEncodedScriptNumber [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "opCat": () => /* binding */ opCat,
/* harmony export */   "opSplit": () => /* binding */ opSplit,
/* harmony export */   "padMinimallyEncodedScriptNumber": () => /* binding */ padMinimallyEncodedScriptNumber,
/* harmony export */   "opNum2Bin": () => /* binding */ opNum2Bin,
/* harmony export */   "opBin2Num": () => /* binding */ opBin2Num,
/* harmony export */   "bitwiseOperation": () => /* binding */ bitwiseOperation,
/* harmony export */   "opAnd": () => /* binding */ opAnd,
/* harmony export */   "opOr": () => /* binding */ opOr,
/* harmony export */   "opXor": () => /* binding */ opXor,
/* harmony export */   "opDiv": () => /* binding */ opDiv,
/* harmony export */   "opMod": () => /* binding */ opMod,
/* harmony export */   "isValidSignatureEncodingBCHRaw": () => /* binding */ isValidSignatureEncodingBCHRaw,
/* harmony export */   "opCheckDataSig": () => /* binding */ opCheckDataSig,
/* harmony export */   "opCheckDataSigVerify": () => /* binding */ opCheckDataSigVerify,
/* harmony export */   "opReverseBytes": () => /* binding */ opReverseBytes,
/* harmony export */   "bitcoinCashOperations": () => /* binding */ bitcoinCashOperations
/* harmony export */ });
/* harmony import */ var _format_hex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../format/hex */ "./node_modules/@bitauth/libauth/build/module/lib/format/hex.js");
/* harmony import */ var _common_combinators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/combinators */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js");
/* harmony import */ var _common_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/common */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js");
/* harmony import */ var _common_encoding__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/encoding */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/encoding.js");
/* harmony import */ var _common_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js");
/* harmony import */ var _common_flow_control__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/flow-control */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js");
/* harmony import */ var _common_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js");
/* harmony import */ var _bch_errors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./bch-errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-errors.js");
/* harmony import */ var _bch_opcodes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./bch-opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-opcodes.js");
/* harmony import */ var _bch_types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./bch-types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-types.js");










const opCat = () => (state) => (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.useTwoStackItems)(state, (nextState, [a, b]) => a.length + b.length > _common_common__WEBPACK_IMPORTED_MODULE_2__.ConsensusCommon.maximumStackItemLength
    ? (0,_common_errors__WEBPACK_IMPORTED_MODULE_4__.applyError)(_bch_errors__WEBPACK_IMPORTED_MODULE_7__.AuthenticationErrorBCH.exceededMaximumStackItemLength, nextState)
    : (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(nextState, (0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([a, b])));
const opSplit = ({ requireMinimalEncoding, }) => (state) => (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.useOneScriptNumber)(state, (nextState, value) => {
    const index = Number(value);
    return (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.useOneStackItem)(nextState, (finalState, [item]) => index < 0 || index > item.length
        ? (0,_common_errors__WEBPACK_IMPORTED_MODULE_4__.applyError)(_bch_errors__WEBPACK_IMPORTED_MODULE_7__.AuthenticationErrorBCH.invalidSplitIndex, finalState)
        : (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(finalState, item.slice(0, index), item.slice(index)));
}, { requireMinimalEncoding });
var Constants;
(function (Constants) {
    Constants[Constants["positiveSign"] = 0] = "positiveSign";
    Constants[Constants["negativeSign"] = 128] = "negativeSign";
})(Constants || (Constants = {}));
const padMinimallyEncodedScriptNumber = (scriptNumber, length) => {
    // eslint-disable-next-line functional/no-let
    let signBit = Constants.positiveSign;
    // eslint-disable-next-line functional/no-conditional-statement
    if (scriptNumber.length > 0) {
        // eslint-disable-next-line functional/no-expression-statement, no-bitwise
        signBit = scriptNumber[scriptNumber.length - 1] & Constants.negativeSign;
        // eslint-disable-next-line functional/no-expression-statement, no-bitwise, functional/immutable-data
        scriptNumber[scriptNumber.length - 1] &= Constants.negativeSign - 1;
    }
    const result = Array.from(scriptNumber);
    // eslint-disable-next-line functional/no-loop-statement
    while (result.length < length - 1) {
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        result.push(0);
    }
    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
    result.push(signBit);
    return Uint8Array.from(result);
};
const opNum2Bin = () => (state) => (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.useOneScriptNumber)(state, (nextState, value) => {
    const targetLength = Number(value);
    return targetLength > _common_common__WEBPACK_IMPORTED_MODULE_2__.ConsensusCommon.maximumStackItemLength
        ? (0,_common_errors__WEBPACK_IMPORTED_MODULE_4__.applyError)(_bch_errors__WEBPACK_IMPORTED_MODULE_7__.AuthenticationErrorBCH.exceededMaximumStackItemLength, nextState)
        : (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.useOneScriptNumber)(nextState, (finalState, [target]) => {
            const minimallyEncoded = (0,_common_types__WEBPACK_IMPORTED_MODULE_6__.bigIntToScriptNumber)(target);
            return minimallyEncoded.length > targetLength
                ? (0,_common_errors__WEBPACK_IMPORTED_MODULE_4__.applyError)(_bch_errors__WEBPACK_IMPORTED_MODULE_7__.AuthenticationErrorBCH.insufficientLength, finalState)
                : minimallyEncoded.length === targetLength
                    ? (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(finalState, minimallyEncoded)
                    : (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(finalState, padMinimallyEncodedScriptNumber(minimallyEncoded, targetLength));
        }, {
            maximumScriptNumberByteLength: 
            // TODO: is this right?
            _common_common__WEBPACK_IMPORTED_MODULE_2__.ConsensusCommon.maximumStackItemLength,
            requireMinimalEncoding: false,
        });
}, { requireMinimalEncoding: true });
const opBin2Num = () => (state) => (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.useOneScriptNumber)(state, (nextState, [target]) => {
    const minimallyEncoded = (0,_common_types__WEBPACK_IMPORTED_MODULE_6__.bigIntToScriptNumber)(target);
    return minimallyEncoded.length > _common_common__WEBPACK_IMPORTED_MODULE_2__.ConsensusCommon.maximumScriptNumberLength
        ? (0,_common_errors__WEBPACK_IMPORTED_MODULE_4__.applyError)(_bch_errors__WEBPACK_IMPORTED_MODULE_7__.AuthenticationErrorBCH.exceededMaximumScriptNumberLength, nextState)
        : (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(nextState, minimallyEncoded);
}, {
    // TODO: is this right?
    maximumScriptNumberByteLength: _common_common__WEBPACK_IMPORTED_MODULE_2__.ConsensusCommon.maximumStackItemLength,
    requireMinimalEncoding: false,
});
const bitwiseOperation = (combine) => (state) => (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.useTwoStackItems)(state, (nextState, [a, b]) => a.length === b.length
    ? (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(nextState, combine(a, b))
    : (0,_common_errors__WEBPACK_IMPORTED_MODULE_4__.applyError)(_bch_errors__WEBPACK_IMPORTED_MODULE_7__.AuthenticationErrorBCH.mismatchedBitwiseOperandLength, nextState));
const opAnd = () => bitwiseOperation((a, b) => a.map((v, i) => v & b[i]));
const opOr = () => bitwiseOperation((a, b) => a.map((v, i) => v | b[i]));
const opXor = () => bitwiseOperation((a, b) => a.map((v, i) => v ^ b[i]));
const opDiv = ({ requireMinimalEncoding, }) => (state) => (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.useTwoScriptNumbers)(state, (nextState, [a, b]) => b === BigInt(0)
    ? (0,_common_errors__WEBPACK_IMPORTED_MODULE_4__.applyError)(_bch_errors__WEBPACK_IMPORTED_MODULE_7__.AuthenticationErrorBCH.divisionByZero, nextState)
    : (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(nextState, (0,_common_types__WEBPACK_IMPORTED_MODULE_6__.bigIntToScriptNumber)(a / b)), { requireMinimalEncoding });
const opMod = ({ requireMinimalEncoding, }) => (state) => (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.useTwoScriptNumbers)(state, (nextState, [a, b]) => b === BigInt(0)
    ? (0,_common_errors__WEBPACK_IMPORTED_MODULE_4__.applyError)(_bch_errors__WEBPACK_IMPORTED_MODULE_7__.AuthenticationErrorBCH.divisionByZero, nextState)
    : (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(nextState, (0,_common_types__WEBPACK_IMPORTED_MODULE_6__.bigIntToScriptNumber)(a % b)), { requireMinimalEncoding });
/**
 * Validate the encoding of a raw signature – a signature without a signing
 * serialization type byte (A.K.A. "sighash" byte).
 *
 * @param signature - the raw signature
 */
const isValidSignatureEncodingBCHRaw = (signature) => signature.length === 0 ||
    signature.length === _bch_types__WEBPACK_IMPORTED_MODULE_9__.ConsensusBCH.schnorrSignatureLength ||
    (0,_common_encoding__WEBPACK_IMPORTED_MODULE_3__.isValidSignatureEncodingDER)(signature);
const opCheckDataSig = ({ secp256k1, sha256, }) => (state) => 
// eslint-disable-next-line complexity
(0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.useThreeStackItems)(state, (nextState, [signature, message, publicKey]) => {
    if (!isValidSignatureEncodingBCHRaw(signature)) {
        return (0,_common_errors__WEBPACK_IMPORTED_MODULE_4__.applyError)(_common_errors__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.invalidSignatureEncoding, nextState);
    }
    if (!(0,_common_encoding__WEBPACK_IMPORTED_MODULE_3__.isValidPublicKeyEncoding)(publicKey)) {
        return (0,_common_errors__WEBPACK_IMPORTED_MODULE_4__.applyError)(_common_errors__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.invalidPublicKeyEncoding, nextState);
    }
    const digest = sha256.hash(message);
    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
    nextState.signedMessages.push(message);
    const useSchnorr = signature.length === _bch_types__WEBPACK_IMPORTED_MODULE_9__.ConsensusBCH.schnorrSignatureLength;
    const success = useSchnorr
        ? secp256k1.verifySignatureSchnorr(signature, publicKey, digest)
        : secp256k1.verifySignatureDERLowS(signature, publicKey, digest);
    return !success && signature.length !== 0
        ? (0,_common_errors__WEBPACK_IMPORTED_MODULE_4__.applyError)(_common_errors__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.nonNullSignatureFailure, nextState)
        : (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(nextState, (0,_common_types__WEBPACK_IMPORTED_MODULE_6__.booleanToScriptNumber)(success));
});
const opCheckDataSigVerify = ({ secp256k1, sha256, }) => (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.combineOperations)(opCheckDataSig({ secp256k1, sha256 }), (0,_common_flow_control__WEBPACK_IMPORTED_MODULE_5__.opVerify)());
const opReverseBytes = () => (state) => (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.useOneStackItem)(state, (nextState, [item]) => (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(nextState, item.slice().reverse()));
const bitcoinCashOperations = ({ flags, secp256k1, sha256, }) => {
    const operations = {
        [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_CAT]: opCat(),
        [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_SPLIT]: opSplit(flags),
        [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_NUM2BIN]: opNum2Bin(),
        [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_BIN2NUM]: opBin2Num(),
        [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_AND]: opAnd(),
        [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_OR]: opOr(),
        [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_XOR]: opXor(),
        [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_DIV]: opDiv(flags),
        [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_MOD]: opMod(flags),
        [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_CHECKDATASIG]: opCheckDataSig({
            secp256k1,
            sha256,
        }),
        [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_CHECKDATASIGVERIFY]: opCheckDataSigVerify({ secp256k1, sha256 }),
    };
    return flags.opReverseBytes
        ? { ...operations, [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_REVERSEBYTES]: opReverseBytes() }
        : operations;
};
//# sourceMappingURL=bch-operations.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-types.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-types.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export ConsensusBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createTestAuthenticationProgramBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ConsensusBCH": () => /* binding */ ConsensusBCH,
/* harmony export */   "createTestAuthenticationProgramBCH": () => /* binding */ createTestAuthenticationProgramBCH
/* harmony export */ });
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");
/* harmony import */ var _transaction_transaction_serialization__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../transaction/transaction-serialization */ "./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js");


var ConsensusBCH;
(function (ConsensusBCH) {
    ConsensusBCH[ConsensusBCH["schnorrSignatureLength"] = 64] = "schnorrSignatureLength";
})(ConsensusBCH || (ConsensusBCH = {}));
const createTestAuthenticationProgramBCH = ({ lockingBytecode, satoshis, sha256, unlockingBytecode, }) => {
    const testFundingTransaction = {
        inputs: [
            {
                outpointIndex: 0xffffffff,
                outpointTransactionHash: (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.hexToBin)('0000000000000000000000000000000000000000000000000000000000000000'),
                sequenceNumber: 0xffffffff,
                unlockingBytecode: Uint8Array.of(0, 0),
            },
        ],
        locktime: 0,
        outputs: [{ lockingBytecode, satoshis }],
        version: 1,
    };
    const testSpendingTransaction = {
        inputs: [
            {
                outpointIndex: 0,
                outpointTransactionHash: (0,_transaction_transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.getTransactionHashBE)(sha256, (0,_transaction_transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeTransaction)(testFundingTransaction)),
                sequenceNumber: 0xffffffff,
                unlockingBytecode,
            },
        ],
        locktime: 0,
        outputs: [{ lockingBytecode: Uint8Array.of(), satoshis }],
        version: 1,
    };
    return {
        inputIndex: 0,
        sourceOutput: testFundingTransaction.outputs[0],
        spendingTransaction: testSpendingTransaction,
    };
};
//# sourceMappingURL=bch-types.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! export AuthenticationErrorBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-errors.js .AuthenticationErrorBCH */
/*! export ConsensusBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-types.js .ConsensusBCH */
/*! export InstructionSetBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-instruction-sets.js .InstructionSetBCH */
/*! export OpcodeAlternateNamesBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-opcodes.js .OpcodeAlternateNamesBCH */
/*! export OpcodeDescriptionsBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-descriptions.js .OpcodeDescriptionsBCH */
/*! export OpcodeDescriptionsUniqueBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-descriptions.js .OpcodeDescriptionsUniqueBCH */
/*! export OpcodesBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-opcodes.js .OpcodesBCH */
/*! export assembleBitcoinABCScript [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/fixtures/bitcoin-abc/bitcoin-abc-utils.js .assembleBitcoinABCScript */
/*! export bitcoinABCOpcodes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/fixtures/bitcoin-abc/bitcoin-abc-utils.js .bitcoinABCOpcodes */
/*! export bitcoinCashOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .bitcoinCashOperations */
/*! export bitwiseOperation [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .bitwiseOperation */
/*! export createInstructionSetBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-instruction-sets.js .createInstructionSetBCH */
/*! export createTestAuthenticationProgramBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-types.js .createTestAuthenticationProgramBCH */
/*! export getFlagsForInstructionSetBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-instruction-sets.js .getFlagsForInstructionSetBCH */
/*! export instantiateVirtualMachineBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instructionSetBCHCurrentStrict [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-instruction-sets.js .instructionSetBCHCurrentStrict */
/*! export isPayToScriptHash [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-instruction-sets.js .isPayToScriptHash */
/*! export isValidSignatureEncodingBCHRaw [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .isValidSignatureEncodingBCHRaw */
/*! export isWitnessProgram [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-instruction-sets.js .isWitnessProgram */
/*! export opAnd [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opAnd */
/*! export opBin2Num [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opBin2Num */
/*! export opCat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opCat */
/*! export opCheckDataSig [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opCheckDataSig */
/*! export opCheckDataSigVerify [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opCheckDataSigVerify */
/*! export opDiv [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opDiv */
/*! export opMod [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opMod */
/*! export opNum2Bin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opNum2Bin */
/*! export opOr [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opOr */
/*! export opReverseBytes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opReverseBytes */
/*! export opSplit [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opSplit */
/*! export opXor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opXor */
/*! export padMinimallyEncodedScriptNumber [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .padMinimallyEncodedScriptNumber */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpcodeDescriptionsBCH": () => /* reexport safe */ _bch_descriptions__WEBPACK_IMPORTED_MODULE_3__.OpcodeDescriptionsBCH,
/* harmony export */   "OpcodeDescriptionsUniqueBCH": () => /* reexport safe */ _bch_descriptions__WEBPACK_IMPORTED_MODULE_3__.OpcodeDescriptionsUniqueBCH,
/* harmony export */   "AuthenticationErrorBCH": () => /* reexport safe */ _bch_errors__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorBCH,
/* harmony export */   "InstructionSetBCH": () => /* reexport safe */ _bch_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.InstructionSetBCH,
/* harmony export */   "OpcodesBCH": () => /* reexport safe */ _bch_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.OpcodesBCH,
/* harmony export */   "createInstructionSetBCH": () => /* reexport safe */ _bch_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.createInstructionSetBCH,
/* harmony export */   "getFlagsForInstructionSetBCH": () => /* reexport safe */ _bch_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.getFlagsForInstructionSetBCH,
/* harmony export */   "instructionSetBCHCurrentStrict": () => /* reexport safe */ _bch_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.instructionSetBCHCurrentStrict,
/* harmony export */   "isPayToScriptHash": () => /* reexport safe */ _bch_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.isPayToScriptHash,
/* harmony export */   "isWitnessProgram": () => /* reexport safe */ _bch_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.isWitnessProgram,
/* harmony export */   "OpcodeAlternateNamesBCH": () => /* reexport safe */ _bch_opcodes__WEBPACK_IMPORTED_MODULE_5__.OpcodeAlternateNamesBCH,
/* harmony export */   "bitcoinCashOperations": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.bitcoinCashOperations,
/* harmony export */   "bitwiseOperation": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.bitwiseOperation,
/* harmony export */   "isValidSignatureEncodingBCHRaw": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.isValidSignatureEncodingBCHRaw,
/* harmony export */   "opAnd": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opAnd,
/* harmony export */   "opBin2Num": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opBin2Num,
/* harmony export */   "opCat": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opCat,
/* harmony export */   "opCheckDataSig": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opCheckDataSig,
/* harmony export */   "opCheckDataSigVerify": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opCheckDataSigVerify,
/* harmony export */   "opDiv": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opDiv,
/* harmony export */   "opMod": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opMod,
/* harmony export */   "opNum2Bin": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opNum2Bin,
/* harmony export */   "opOr": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opOr,
/* harmony export */   "opReverseBytes": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opReverseBytes,
/* harmony export */   "opSplit": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opSplit,
/* harmony export */   "opXor": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opXor,
/* harmony export */   "padMinimallyEncodedScriptNumber": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.padMinimallyEncodedScriptNumber,
/* harmony export */   "ConsensusBCH": () => /* reexport safe */ _bch_types__WEBPACK_IMPORTED_MODULE_7__.ConsensusBCH,
/* harmony export */   "createTestAuthenticationProgramBCH": () => /* reexport safe */ _bch_types__WEBPACK_IMPORTED_MODULE_7__.createTestAuthenticationProgramBCH,
/* harmony export */   "assembleBitcoinABCScript": () => /* reexport safe */ _fixtures_bitcoin_abc_bitcoin_abc_utils__WEBPACK_IMPORTED_MODULE_8__.assembleBitcoinABCScript,
/* harmony export */   "bitcoinABCOpcodes": () => /* reexport safe */ _fixtures_bitcoin_abc_bitcoin_abc_utils__WEBPACK_IMPORTED_MODULE_8__.bitcoinABCOpcodes,
/* harmony export */   "instantiateVirtualMachineBCH": () => /* binding */ instantiateVirtualMachineBCH
/* harmony export */ });
/* harmony import */ var _crypto_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../crypto/crypto */ "./node_modules/@bitauth/libauth/build/module/lib/crypto/crypto.js");
/* harmony import */ var _virtual_machine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../virtual-machine */ "./node_modules/@bitauth/libauth/build/module/lib/vm/virtual-machine.js");
/* harmony import */ var _bch_instruction_sets__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bch-instruction-sets */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-instruction-sets.js");
/* harmony import */ var _bch_descriptions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bch-descriptions */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-descriptions.js");
/* harmony import */ var _bch_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bch-errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-errors.js");
/* harmony import */ var _bch_opcodes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./bch-opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-opcodes.js");
/* harmony import */ var _bch_operations__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./bch-operations */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js");
/* harmony import */ var _bch_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./bch-types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-types.js");
/* harmony import */ var _fixtures_bitcoin_abc_bitcoin_abc_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./fixtures/bitcoin-abc/bitcoin-abc-utils */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/fixtures/bitcoin-abc/bitcoin-abc-utils.js");










/**
 * Initialize a virtual machine using the provided BCH instruction set.
 *
 * @param instructionSet - the VM version to instantiate – by default, the
 * current "strict" VM is used (`instructionSetBCHCurrentStrict`)
 */
const instantiateVirtualMachineBCH = async (instructionSet = _bch_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.instructionSetBCHCurrentStrict) => {
    const [sha1, sha256, ripemd160, secp256k1] = await Promise.all([
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateSha1)(),
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateSha256)(),
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateRipemd160)(),
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateSecp256k1)(),
    ]);
    return (0,_virtual_machine__WEBPACK_IMPORTED_MODULE_1__.createAuthenticationVirtualMachine)((0,_bch_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.createInstructionSetBCH)({
        flags: (0,_bch_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.getFlagsForInstructionSetBCH)(instructionSet),
        ripemd160,
        secp256k1,
        sha1,
        sha256,
    }));
};
//# sourceMappingURL=bch.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/fixtures/bitcoin-abc/bitcoin-abc-utils.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/fixtures/bitcoin-abc/bitcoin-abc-utils.js ***!
  \**************************************************************************************************************************/
/*! namespace exports */
/*! export assembleBitcoinABCScript [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bitcoinABCOpcodes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bitcoinABCOpcodes": () => /* binding */ bitcoinABCOpcodes,
/* harmony export */   "assembleBitcoinABCScript": () => /* binding */ assembleBitcoinABCScript
/* harmony export */ });
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");
/* harmony import */ var _common_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/common */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js");
/* harmony import */ var _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../instruction-sets-utils */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js");
/* harmony import */ var _bch_opcodes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../bch-opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-opcodes.js");




const bitcoinABCOpcodes = Object.entries((0,_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_2__.generateBytecodeMap)(_bch_opcodes__WEBPACK_IMPORTED_MODULE_3__.OpcodesBCH)).reduce((acc, cur) => ({ ...acc, [cur[0].slice('OP_'.length)]: cur[1] }), {
    PUSHDATA1: Uint8Array.of(_bch_opcodes__WEBPACK_IMPORTED_MODULE_3__.OpcodesBCH.OP_PUSHDATA_1),
    PUSHDATA2: Uint8Array.of(_bch_opcodes__WEBPACK_IMPORTED_MODULE_3__.OpcodesBCH.OP_PUSHDATA_2),
    PUSHDATA4: Uint8Array.of(_bch_opcodes__WEBPACK_IMPORTED_MODULE_3__.OpcodesBCH.OP_PUSHDATA_4),
});
/**
 * Convert a string from Bitcoin ABC's `script_tests.json` text-format to
 * bytecode. The string must be valid – this method attempts to convert all
 * unmatched tokens to `BigInt`s.
 *
 * @privateRemarks
 * This method doesn't use {@link compileScript} because of a slight
 * incompatibility in the languages. In BTL, BigIntLiterals are a primitive
 * type, and must be surrounded by a push statement (e.g. `<100>`) to push a
 * number to the stack. In the `script_tests.json` text-format, numbers are
 * assumed to be pushed. We could implement a transformation after the
 * compiler's parse step, but because this format doesn't require any other
 * features of the compiler, we opt to implement this as a simple method.
 * @param abcScript - the script in Bitcoin ABC's `script_tests.json` text
 * format
 */
const assembleBitcoinABCScript = (abcScript) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)(abcScript
    .split(' ')
    .filter((token) => token !== '')
    .map((token) => token.startsWith('0x')
    ? (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.hexToBin)(token.slice('0x'.length))
    : token.startsWith("'")
        ? (0,_common_common__WEBPACK_IMPORTED_MODULE_1__.encodeDataPush)((0,_format_format__WEBPACK_IMPORTED_MODULE_0__.utf8ToBin)(token.slice(1, token.length - 1)))
        : bitcoinABCOpcodes[token] === undefined
            ? (0,_common_common__WEBPACK_IMPORTED_MODULE_1__.encodeDataPush)((0,_common_common__WEBPACK_IMPORTED_MODULE_1__.bigIntToScriptNumber)(BigInt(token)))
            : bitcoinABCOpcodes[token]));
//# sourceMappingURL=bitcoin-abc-utils.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/btc/btc.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/btc/btc.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! export OpcodesBTC [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpcodesBTC": () => /* binding */ OpcodesBTC
/* harmony export */ });
var OpcodesBTC;
(function (OpcodesBTC) {
    OpcodesBTC[OpcodesBTC["OP_0"] = 0] = "OP_0";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_1"] = 1] = "OP_PUSHBYTES_1";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_2"] = 2] = "OP_PUSHBYTES_2";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_3"] = 3] = "OP_PUSHBYTES_3";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_4"] = 4] = "OP_PUSHBYTES_4";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_5"] = 5] = "OP_PUSHBYTES_5";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_6"] = 6] = "OP_PUSHBYTES_6";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_7"] = 7] = "OP_PUSHBYTES_7";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_8"] = 8] = "OP_PUSHBYTES_8";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_9"] = 9] = "OP_PUSHBYTES_9";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_10"] = 10] = "OP_PUSHBYTES_10";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_11"] = 11] = "OP_PUSHBYTES_11";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_12"] = 12] = "OP_PUSHBYTES_12";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_13"] = 13] = "OP_PUSHBYTES_13";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_14"] = 14] = "OP_PUSHBYTES_14";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_15"] = 15] = "OP_PUSHBYTES_15";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_16"] = 16] = "OP_PUSHBYTES_16";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_17"] = 17] = "OP_PUSHBYTES_17";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_18"] = 18] = "OP_PUSHBYTES_18";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_19"] = 19] = "OP_PUSHBYTES_19";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_20"] = 20] = "OP_PUSHBYTES_20";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_21"] = 21] = "OP_PUSHBYTES_21";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_22"] = 22] = "OP_PUSHBYTES_22";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_23"] = 23] = "OP_PUSHBYTES_23";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_24"] = 24] = "OP_PUSHBYTES_24";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_25"] = 25] = "OP_PUSHBYTES_25";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_26"] = 26] = "OP_PUSHBYTES_26";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_27"] = 27] = "OP_PUSHBYTES_27";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_28"] = 28] = "OP_PUSHBYTES_28";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_29"] = 29] = "OP_PUSHBYTES_29";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_30"] = 30] = "OP_PUSHBYTES_30";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_31"] = 31] = "OP_PUSHBYTES_31";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_32"] = 32] = "OP_PUSHBYTES_32";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_33"] = 33] = "OP_PUSHBYTES_33";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_34"] = 34] = "OP_PUSHBYTES_34";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_35"] = 35] = "OP_PUSHBYTES_35";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_36"] = 36] = "OP_PUSHBYTES_36";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_37"] = 37] = "OP_PUSHBYTES_37";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_38"] = 38] = "OP_PUSHBYTES_38";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_39"] = 39] = "OP_PUSHBYTES_39";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_40"] = 40] = "OP_PUSHBYTES_40";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_41"] = 41] = "OP_PUSHBYTES_41";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_42"] = 42] = "OP_PUSHBYTES_42";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_43"] = 43] = "OP_PUSHBYTES_43";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_44"] = 44] = "OP_PUSHBYTES_44";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_45"] = 45] = "OP_PUSHBYTES_45";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_46"] = 46] = "OP_PUSHBYTES_46";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_47"] = 47] = "OP_PUSHBYTES_47";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_48"] = 48] = "OP_PUSHBYTES_48";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_49"] = 49] = "OP_PUSHBYTES_49";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_50"] = 50] = "OP_PUSHBYTES_50";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_51"] = 51] = "OP_PUSHBYTES_51";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_52"] = 52] = "OP_PUSHBYTES_52";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_53"] = 53] = "OP_PUSHBYTES_53";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_54"] = 54] = "OP_PUSHBYTES_54";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_55"] = 55] = "OP_PUSHBYTES_55";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_56"] = 56] = "OP_PUSHBYTES_56";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_57"] = 57] = "OP_PUSHBYTES_57";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_58"] = 58] = "OP_PUSHBYTES_58";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_59"] = 59] = "OP_PUSHBYTES_59";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_60"] = 60] = "OP_PUSHBYTES_60";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_61"] = 61] = "OP_PUSHBYTES_61";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_62"] = 62] = "OP_PUSHBYTES_62";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_63"] = 63] = "OP_PUSHBYTES_63";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_64"] = 64] = "OP_PUSHBYTES_64";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_65"] = 65] = "OP_PUSHBYTES_65";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_66"] = 66] = "OP_PUSHBYTES_66";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_67"] = 67] = "OP_PUSHBYTES_67";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_68"] = 68] = "OP_PUSHBYTES_68";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_69"] = 69] = "OP_PUSHBYTES_69";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_70"] = 70] = "OP_PUSHBYTES_70";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_71"] = 71] = "OP_PUSHBYTES_71";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_72"] = 72] = "OP_PUSHBYTES_72";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_73"] = 73] = "OP_PUSHBYTES_73";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_74"] = 74] = "OP_PUSHBYTES_74";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_75"] = 75] = "OP_PUSHBYTES_75";
    OpcodesBTC[OpcodesBTC["OP_PUSHDATA_1"] = 76] = "OP_PUSHDATA_1";
    OpcodesBTC[OpcodesBTC["OP_PUSHDATA_2"] = 77] = "OP_PUSHDATA_2";
    OpcodesBTC[OpcodesBTC["OP_PUSHDATA_4"] = 78] = "OP_PUSHDATA_4";
    OpcodesBTC[OpcodesBTC["OP_1NEGATE"] = 79] = "OP_1NEGATE";
    OpcodesBTC[OpcodesBTC["OP_RESERVED"] = 80] = "OP_RESERVED";
    OpcodesBTC[OpcodesBTC["OP_1"] = 81] = "OP_1";
    OpcodesBTC[OpcodesBTC["OP_2"] = 82] = "OP_2";
    OpcodesBTC[OpcodesBTC["OP_3"] = 83] = "OP_3";
    OpcodesBTC[OpcodesBTC["OP_4"] = 84] = "OP_4";
    OpcodesBTC[OpcodesBTC["OP_5"] = 85] = "OP_5";
    OpcodesBTC[OpcodesBTC["OP_6"] = 86] = "OP_6";
    OpcodesBTC[OpcodesBTC["OP_7"] = 87] = "OP_7";
    OpcodesBTC[OpcodesBTC["OP_8"] = 88] = "OP_8";
    OpcodesBTC[OpcodesBTC["OP_9"] = 89] = "OP_9";
    OpcodesBTC[OpcodesBTC["OP_10"] = 90] = "OP_10";
    OpcodesBTC[OpcodesBTC["OP_11"] = 91] = "OP_11";
    OpcodesBTC[OpcodesBTC["OP_12"] = 92] = "OP_12";
    OpcodesBTC[OpcodesBTC["OP_13"] = 93] = "OP_13";
    OpcodesBTC[OpcodesBTC["OP_14"] = 94] = "OP_14";
    OpcodesBTC[OpcodesBTC["OP_15"] = 95] = "OP_15";
    OpcodesBTC[OpcodesBTC["OP_16"] = 96] = "OP_16";
    OpcodesBTC[OpcodesBTC["OP_NOP"] = 97] = "OP_NOP";
    OpcodesBTC[OpcodesBTC["OP_VER"] = 98] = "OP_VER";
    OpcodesBTC[OpcodesBTC["OP_IF"] = 99] = "OP_IF";
    OpcodesBTC[OpcodesBTC["OP_NOTIF"] = 100] = "OP_NOTIF";
    OpcodesBTC[OpcodesBTC["OP_VERIF"] = 101] = "OP_VERIF";
    OpcodesBTC[OpcodesBTC["OP_VERNOTIF"] = 102] = "OP_VERNOTIF";
    OpcodesBTC[OpcodesBTC["OP_ELSE"] = 103] = "OP_ELSE";
    OpcodesBTC[OpcodesBTC["OP_ENDIF"] = 104] = "OP_ENDIF";
    OpcodesBTC[OpcodesBTC["OP_VERIFY"] = 105] = "OP_VERIFY";
    OpcodesBTC[OpcodesBTC["OP_RETURN"] = 106] = "OP_RETURN";
    OpcodesBTC[OpcodesBTC["OP_TOALTSTACK"] = 107] = "OP_TOALTSTACK";
    OpcodesBTC[OpcodesBTC["OP_FROMALTSTACK"] = 108] = "OP_FROMALTSTACK";
    OpcodesBTC[OpcodesBTC["OP_2DROP"] = 109] = "OP_2DROP";
    OpcodesBTC[OpcodesBTC["OP_2DUP"] = 110] = "OP_2DUP";
    OpcodesBTC[OpcodesBTC["OP_3DUP"] = 111] = "OP_3DUP";
    OpcodesBTC[OpcodesBTC["OP_2OVER"] = 112] = "OP_2OVER";
    OpcodesBTC[OpcodesBTC["OP_2ROT"] = 113] = "OP_2ROT";
    OpcodesBTC[OpcodesBTC["OP_2SWAP"] = 114] = "OP_2SWAP";
    OpcodesBTC[OpcodesBTC["OP_IFDUP"] = 115] = "OP_IFDUP";
    OpcodesBTC[OpcodesBTC["OP_DEPTH"] = 116] = "OP_DEPTH";
    OpcodesBTC[OpcodesBTC["OP_DROP"] = 117] = "OP_DROP";
    OpcodesBTC[OpcodesBTC["OP_DUP"] = 118] = "OP_DUP";
    OpcodesBTC[OpcodesBTC["OP_NIP"] = 119] = "OP_NIP";
    OpcodesBTC[OpcodesBTC["OP_OVER"] = 120] = "OP_OVER";
    OpcodesBTC[OpcodesBTC["OP_PICK"] = 121] = "OP_PICK";
    OpcodesBTC[OpcodesBTC["OP_ROLL"] = 122] = "OP_ROLL";
    OpcodesBTC[OpcodesBTC["OP_ROT"] = 123] = "OP_ROT";
    OpcodesBTC[OpcodesBTC["OP_SWAP"] = 124] = "OP_SWAP";
    OpcodesBTC[OpcodesBTC["OP_TUCK"] = 125] = "OP_TUCK";
    OpcodesBTC[OpcodesBTC["OP_CAT"] = 126] = "OP_CAT";
    OpcodesBTC[OpcodesBTC["OP_SUBSTR"] = 127] = "OP_SUBSTR";
    OpcodesBTC[OpcodesBTC["OP_LEFT"] = 128] = "OP_LEFT";
    OpcodesBTC[OpcodesBTC["OP_RIGHT"] = 129] = "OP_RIGHT";
    OpcodesBTC[OpcodesBTC["OP_SIZE"] = 130] = "OP_SIZE";
    OpcodesBTC[OpcodesBTC["OP_INVERT"] = 131] = "OP_INVERT";
    OpcodesBTC[OpcodesBTC["OP_AND"] = 132] = "OP_AND";
    OpcodesBTC[OpcodesBTC["OP_OR"] = 133] = "OP_OR";
    OpcodesBTC[OpcodesBTC["OP_XOR"] = 134] = "OP_XOR";
    OpcodesBTC[OpcodesBTC["OP_EQUAL"] = 135] = "OP_EQUAL";
    OpcodesBTC[OpcodesBTC["OP_EQUALVERIFY"] = 136] = "OP_EQUALVERIFY";
    OpcodesBTC[OpcodesBTC["OP_RESERVED1"] = 137] = "OP_RESERVED1";
    OpcodesBTC[OpcodesBTC["OP_RESERVED2"] = 138] = "OP_RESERVED2";
    OpcodesBTC[OpcodesBTC["OP_1ADD"] = 139] = "OP_1ADD";
    OpcodesBTC[OpcodesBTC["OP_1SUB"] = 140] = "OP_1SUB";
    OpcodesBTC[OpcodesBTC["OP_2MUL"] = 141] = "OP_2MUL";
    OpcodesBTC[OpcodesBTC["OP_2DIV"] = 142] = "OP_2DIV";
    OpcodesBTC[OpcodesBTC["OP_NEGATE"] = 143] = "OP_NEGATE";
    OpcodesBTC[OpcodesBTC["OP_ABS"] = 144] = "OP_ABS";
    OpcodesBTC[OpcodesBTC["OP_NOT"] = 145] = "OP_NOT";
    OpcodesBTC[OpcodesBTC["OP_0NOTEQUAL"] = 146] = "OP_0NOTEQUAL";
    OpcodesBTC[OpcodesBTC["OP_ADD"] = 147] = "OP_ADD";
    OpcodesBTC[OpcodesBTC["OP_SUB"] = 148] = "OP_SUB";
    OpcodesBTC[OpcodesBTC["OP_MUL"] = 149] = "OP_MUL";
    OpcodesBTC[OpcodesBTC["OP_DIV"] = 150] = "OP_DIV";
    OpcodesBTC[OpcodesBTC["OP_MOD"] = 151] = "OP_MOD";
    OpcodesBTC[OpcodesBTC["OP_LSHIFT"] = 152] = "OP_LSHIFT";
    OpcodesBTC[OpcodesBTC["OP_RSHIFT"] = 153] = "OP_RSHIFT";
    OpcodesBTC[OpcodesBTC["OP_BOOLAND"] = 154] = "OP_BOOLAND";
    OpcodesBTC[OpcodesBTC["OP_BOOLOR"] = 155] = "OP_BOOLOR";
    OpcodesBTC[OpcodesBTC["OP_NUMEQUAL"] = 156] = "OP_NUMEQUAL";
    OpcodesBTC[OpcodesBTC["OP_NUMEQUALVERIFY"] = 157] = "OP_NUMEQUALVERIFY";
    OpcodesBTC[OpcodesBTC["OP_NUMNOTEQUAL"] = 158] = "OP_NUMNOTEQUAL";
    OpcodesBTC[OpcodesBTC["OP_LESSTHAN"] = 159] = "OP_LESSTHAN";
    OpcodesBTC[OpcodesBTC["OP_GREATERTHAN"] = 160] = "OP_GREATERTHAN";
    OpcodesBTC[OpcodesBTC["OP_LESSTHANOREQUAL"] = 161] = "OP_LESSTHANOREQUAL";
    OpcodesBTC[OpcodesBTC["OP_GREATERTHANOREQUAL"] = 162] = "OP_GREATERTHANOREQUAL";
    OpcodesBTC[OpcodesBTC["OP_MIN"] = 163] = "OP_MIN";
    OpcodesBTC[OpcodesBTC["OP_MAX"] = 164] = "OP_MAX";
    OpcodesBTC[OpcodesBTC["OP_WITHIN"] = 165] = "OP_WITHIN";
    OpcodesBTC[OpcodesBTC["OP_RIPEMD160"] = 166] = "OP_RIPEMD160";
    OpcodesBTC[OpcodesBTC["OP_SHA1"] = 167] = "OP_SHA1";
    OpcodesBTC[OpcodesBTC["OP_SHA256"] = 168] = "OP_SHA256";
    OpcodesBTC[OpcodesBTC["OP_HASH160"] = 169] = "OP_HASH160";
    OpcodesBTC[OpcodesBTC["OP_HASH256"] = 170] = "OP_HASH256";
    OpcodesBTC[OpcodesBTC["OP_CODESEPARATOR"] = 171] = "OP_CODESEPARATOR";
    OpcodesBTC[OpcodesBTC["OP_CHECKSIG"] = 172] = "OP_CHECKSIG";
    OpcodesBTC[OpcodesBTC["OP_CHECKSIGVERIFY"] = 173] = "OP_CHECKSIGVERIFY";
    OpcodesBTC[OpcodesBTC["OP_CHECKMULTISIG"] = 174] = "OP_CHECKMULTISIG";
    OpcodesBTC[OpcodesBTC["OP_CHECKMULTISIGVERIFY"] = 175] = "OP_CHECKMULTISIGVERIFY";
    OpcodesBTC[OpcodesBTC["OP_NOP1"] = 176] = "OP_NOP1";
    OpcodesBTC[OpcodesBTC["OP_CHECKLOCKTIMEVERIFY"] = 177] = "OP_CHECKLOCKTIMEVERIFY";
    OpcodesBTC[OpcodesBTC["OP_CHECKSEQUENCEVERIFY"] = 178] = "OP_CHECKSEQUENCEVERIFY";
    OpcodesBTC[OpcodesBTC["OP_NOP4"] = 179] = "OP_NOP4";
    OpcodesBTC[OpcodesBTC["OP_NOP5"] = 180] = "OP_NOP5";
    OpcodesBTC[OpcodesBTC["OP_NOP6"] = 181] = "OP_NOP6";
    OpcodesBTC[OpcodesBTC["OP_NOP7"] = 182] = "OP_NOP7";
    OpcodesBTC[OpcodesBTC["OP_NOP8"] = 183] = "OP_NOP8";
    OpcodesBTC[OpcodesBTC["OP_NOP9"] = 184] = "OP_NOP9";
    OpcodesBTC[OpcodesBTC["OP_NOP10"] = 185] = "OP_NOP10";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN186"] = 186] = "OP_UNKNOWN186";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN187"] = 187] = "OP_UNKNOWN187";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN188"] = 188] = "OP_UNKNOWN188";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN189"] = 189] = "OP_UNKNOWN189";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN190"] = 190] = "OP_UNKNOWN190";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN191"] = 191] = "OP_UNKNOWN191";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN192"] = 192] = "OP_UNKNOWN192";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN193"] = 193] = "OP_UNKNOWN193";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN194"] = 194] = "OP_UNKNOWN194";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN195"] = 195] = "OP_UNKNOWN195";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN196"] = 196] = "OP_UNKNOWN196";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN197"] = 197] = "OP_UNKNOWN197";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN198"] = 198] = "OP_UNKNOWN198";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN199"] = 199] = "OP_UNKNOWN199";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN200"] = 200] = "OP_UNKNOWN200";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN201"] = 201] = "OP_UNKNOWN201";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN202"] = 202] = "OP_UNKNOWN202";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN203"] = 203] = "OP_UNKNOWN203";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN204"] = 204] = "OP_UNKNOWN204";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN205"] = 205] = "OP_UNKNOWN205";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN206"] = 206] = "OP_UNKNOWN206";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN207"] = 207] = "OP_UNKNOWN207";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN208"] = 208] = "OP_UNKNOWN208";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN209"] = 209] = "OP_UNKNOWN209";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN210"] = 210] = "OP_UNKNOWN210";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN211"] = 211] = "OP_UNKNOWN211";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN212"] = 212] = "OP_UNKNOWN212";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN213"] = 213] = "OP_UNKNOWN213";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN214"] = 214] = "OP_UNKNOWN214";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN215"] = 215] = "OP_UNKNOWN215";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN216"] = 216] = "OP_UNKNOWN216";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN217"] = 217] = "OP_UNKNOWN217";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN218"] = 218] = "OP_UNKNOWN218";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN219"] = 219] = "OP_UNKNOWN219";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN220"] = 220] = "OP_UNKNOWN220";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN221"] = 221] = "OP_UNKNOWN221";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN222"] = 222] = "OP_UNKNOWN222";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN223"] = 223] = "OP_UNKNOWN223";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN224"] = 224] = "OP_UNKNOWN224";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN225"] = 225] = "OP_UNKNOWN225";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN226"] = 226] = "OP_UNKNOWN226";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN227"] = 227] = "OP_UNKNOWN227";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN228"] = 228] = "OP_UNKNOWN228";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN229"] = 229] = "OP_UNKNOWN229";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN230"] = 230] = "OP_UNKNOWN230";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN231"] = 231] = "OP_UNKNOWN231";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN232"] = 232] = "OP_UNKNOWN232";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN233"] = 233] = "OP_UNKNOWN233";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN234"] = 234] = "OP_UNKNOWN234";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN235"] = 235] = "OP_UNKNOWN235";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN236"] = 236] = "OP_UNKNOWN236";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN237"] = 237] = "OP_UNKNOWN237";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN238"] = 238] = "OP_UNKNOWN238";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN239"] = 239] = "OP_UNKNOWN239";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN240"] = 240] = "OP_UNKNOWN240";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN241"] = 241] = "OP_UNKNOWN241";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN242"] = 242] = "OP_UNKNOWN242";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN243"] = 243] = "OP_UNKNOWN243";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN244"] = 244] = "OP_UNKNOWN244";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN245"] = 245] = "OP_UNKNOWN245";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN246"] = 246] = "OP_UNKNOWN246";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN247"] = 247] = "OP_UNKNOWN247";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN248"] = 248] = "OP_UNKNOWN248";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN249"] = 249] = "OP_UNKNOWN249";
    /**
     * Used internally in the C++ implementation.
     */
    OpcodesBTC[OpcodesBTC["OP_SMALLINTEGER"] = 250] = "OP_SMALLINTEGER";
    /**
     * Used internally in the C++ implementation.
     */
    OpcodesBTC[OpcodesBTC["OP_PUBKEYS"] = 251] = "OP_PUBKEYS";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN252"] = 252] = "OP_UNKNOWN252";
    /**
     * Used internally in the C++ implementation.
     */
    OpcodesBTC[OpcodesBTC["OP_PUBKEYHASH"] = 253] = "OP_PUBKEYHASH";
    /**
     * Used internally in the C++ implementation.
     */
    OpcodesBTC[OpcodesBTC["OP_PUBKEY"] = 254] = "OP_PUBKEY";
    /**
     * Used internally in the C++ implementation.
     */
    OpcodesBTC[OpcodesBTC["OP_INVALIDOPCODE"] = 255] = "OP_INVALIDOPCODE";
})(OpcodesBTC || (OpcodesBTC = {}));
//# sourceMappingURL=btc.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! export arithmeticOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export op0NotEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export op1Add [provided] [no usage info] [missing usage info prevents renaming] */
/*! export op1Sub [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opAbs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opAdd [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opBoolAnd [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opBoolOr [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opGreaterThan [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opGreaterThanOrEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opLessThan [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opLessThanOrEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opMax [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opMin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opNegate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opNot [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opNumEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opNumEqualVerify [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opNumNotEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opSub [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opWithin [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "op1Add": () => /* binding */ op1Add,
/* harmony export */   "op1Sub": () => /* binding */ op1Sub,
/* harmony export */   "opNegate": () => /* binding */ opNegate,
/* harmony export */   "opAbs": () => /* binding */ opAbs,
/* harmony export */   "opNot": () => /* binding */ opNot,
/* harmony export */   "op0NotEqual": () => /* binding */ op0NotEqual,
/* harmony export */   "opAdd": () => /* binding */ opAdd,
/* harmony export */   "opSub": () => /* binding */ opSub,
/* harmony export */   "opBoolAnd": () => /* binding */ opBoolAnd,
/* harmony export */   "opBoolOr": () => /* binding */ opBoolOr,
/* harmony export */   "opNumEqual": () => /* binding */ opNumEqual,
/* harmony export */   "opNumEqualVerify": () => /* binding */ opNumEqualVerify,
/* harmony export */   "opNumNotEqual": () => /* binding */ opNumNotEqual,
/* harmony export */   "opLessThan": () => /* binding */ opLessThan,
/* harmony export */   "opLessThanOrEqual": () => /* binding */ opLessThanOrEqual,
/* harmony export */   "opGreaterThan": () => /* binding */ opGreaterThan,
/* harmony export */   "opGreaterThanOrEqual": () => /* binding */ opGreaterThanOrEqual,
/* harmony export */   "opMin": () => /* binding */ opMin,
/* harmony export */   "opMax": () => /* binding */ opMax,
/* harmony export */   "opWithin": () => /* binding */ opWithin,
/* harmony export */   "arithmeticOperations": () => /* binding */ arithmeticOperations
/* harmony export */ });
/* harmony import */ var _combinators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./combinators */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js");
/* harmony import */ var _flow_control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./flow-control */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js");
/* harmony import */ var _opcodes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js");




const op1Add = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneScriptNumber)(state, (nextState, [value]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(value + BigInt(1))), { requireMinimalEncoding });
const op1Sub = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneScriptNumber)(state, (nextState, [value]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(value - BigInt(1))), { requireMinimalEncoding });
const opNegate = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneScriptNumber)(state, (nextState, [value]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(-value)), { requireMinimalEncoding });
const opAbs = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneScriptNumber)(state, (nextState, [value]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(value < 0 ? -value : value)), { requireMinimalEncoding });
const opNot = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneScriptNumber)(state, (nextState, [value]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, value === BigInt(0)
    ? (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(BigInt(1))
    : (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(BigInt(0))), { requireMinimalEncoding });
const op0NotEqual = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneScriptNumber)(state, (nextState, [value]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, value === BigInt(0)
    ? (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(BigInt(0))
    : (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(BigInt(1))), { requireMinimalEncoding });
const opAdd = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(firstValue + secondValue)), { requireMinimalEncoding });
const opSub = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(firstValue - secondValue)), { requireMinimalEncoding });
const opBoolAnd = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(firstValue !== BigInt(0) && secondValue !== BigInt(0))), { requireMinimalEncoding });
const opBoolOr = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(firstValue !== BigInt(0) || secondValue !== BigInt(0))), { requireMinimalEncoding });
const opNumEqual = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(firstValue === secondValue)), { requireMinimalEncoding });
const opNumEqualVerify = (flags) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.combineOperations)(opNumEqual(flags), (0,_flow_control__WEBPACK_IMPORTED_MODULE_1__.opVerify)());
const opNumNotEqual = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(firstValue !== secondValue)), { requireMinimalEncoding });
const opLessThan = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(firstValue < secondValue)), { requireMinimalEncoding });
const opLessThanOrEqual = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(firstValue <= secondValue)), { requireMinimalEncoding });
const opGreaterThan = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(firstValue > secondValue)), { requireMinimalEncoding });
const opGreaterThanOrEqual = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(firstValue >= secondValue)), { requireMinimalEncoding });
const opMin = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(firstValue < secondValue ? firstValue : secondValue)), { requireMinimalEncoding });
const opMax = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(firstValue > secondValue ? firstValue : secondValue)), { requireMinimalEncoding });
const opWithin = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useThreeScriptNumbers)(state, (nextState, [firstValue, secondValue, thirdValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(secondValue <= firstValue && firstValue < thirdValue)), { requireMinimalEncoding });
const arithmeticOperations = (flags) => ({
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_1ADD]: op1Add(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_1SUB]: op1Sub(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_NEGATE]: opNegate(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_ABS]: opAbs(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_NOT]: opNot(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_0NOTEQUAL]: op0NotEqual(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_ADD]: opAdd(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_SUB]: opSub(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_BOOLAND]: opBoolAnd(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_BOOLOR]: opBoolOr(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_NUMEQUAL]: opNumEqual(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_NUMEQUALVERIFY]: opNumEqualVerify(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_NUMNOTEQUAL]: opNumNotEqual(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_LESSTHAN]: opLessThan(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_LESSTHANOREQUAL]: opLessThanOrEqual(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_GREATERTHAN]: opGreaterThan(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_GREATERTHANOREQUAL]: opGreaterThanOrEqual(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_MIN]: opMin(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_MAX]: opMax(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_WITHIN]: opWithin(flags),
});
//# sourceMappingURL=arithmetic.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/bitwise.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/bitwise.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! export bitwiseOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opEqualVerify [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "opEqual": () => /* binding */ opEqual,
/* harmony export */   "opEqualVerify": () => /* binding */ opEqualVerify,
/* harmony export */   "bitwiseOperations": () => /* binding */ bitwiseOperations
/* harmony export */ });
/* harmony import */ var _combinators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./combinators */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js");
/* harmony import */ var _flow_control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./flow-control */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js");
/* harmony import */ var _opcodes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js");




const areEqual = (a, b) => {
    if (a.length !== b.length) {
        return false;
    }
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus
    for (let i = 0; i < a.length; i++) {
        if (a[i] !== b[i]) {
            return false;
        }
    }
    return true;
};
const opEqual = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState, [element1, element2]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(areEqual(element1, element2))));
const opEqualVerify = () => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.combineOperations)(opEqual(), (0,_flow_control__WEBPACK_IMPORTED_MODULE_1__.opVerify)());
const bitwiseOperations = () => ({
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_EQUAL]: opEqual(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_EQUALVERIFY]: opEqualVerify(),
});
//# sourceMappingURL=bitwise.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! export combineOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export conditionallyEvaluate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export incrementOperationCount [provided] [no usage info] [missing usage info prevents renaming] */
/*! export mapOverOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export pushToStack [provided] [no usage info] [missing usage info prevents renaming] */
/*! export useFourStackItems [provided] [no usage info] [missing usage info prevents renaming] */
/*! export useOneScriptNumber [provided] [no usage info] [missing usage info prevents renaming] */
/*! export useOneStackItem [provided] [no usage info] [missing usage info prevents renaming] */
/*! export useSixStackItems [provided] [no usage info] [missing usage info prevents renaming] */
/*! export useThreeScriptNumbers [provided] [no usage info] [missing usage info prevents renaming] */
/*! export useThreeStackItems [provided] [no usage info] [missing usage info prevents renaming] */
/*! export useTwoScriptNumbers [provided] [no usage info] [missing usage info prevents renaming] */
/*! export useTwoStackItems [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "incrementOperationCount": () => /* binding */ incrementOperationCount,
/* harmony export */   "conditionallyEvaluate": () => /* binding */ conditionallyEvaluate,
/* harmony export */   "mapOverOperations": () => /* binding */ mapOverOperations,
/* harmony export */   "useOneStackItem": () => /* binding */ useOneStackItem,
/* harmony export */   "useTwoStackItems": () => /* binding */ useTwoStackItems,
/* harmony export */   "useThreeStackItems": () => /* binding */ useThreeStackItems,
/* harmony export */   "useFourStackItems": () => /* binding */ useFourStackItems,
/* harmony export */   "useSixStackItems": () => /* binding */ useSixStackItems,
/* harmony export */   "useOneScriptNumber": () => /* binding */ useOneScriptNumber,
/* harmony export */   "useTwoScriptNumbers": () => /* binding */ useTwoScriptNumbers,
/* harmony export */   "useThreeScriptNumbers": () => /* binding */ useThreeScriptNumbers,
/* harmony export */   "pushToStack": () => /* binding */ pushToStack,
/* harmony export */   "combineOperations": () => /* binding */ combineOperations
/* harmony export */ });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js");
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js");


const incrementOperationCount = (operation) => (state) => {
    const nextState = operation(state);
    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
    nextState.operationCount += 1;
    return nextState;
};
const conditionallyEvaluate = (operation) => (state) => state.executionStack.every((item) => item) ? operation(state) : state;
/**
 * Map a function over each operation in an `InstructionSet.operations` object,
 * assigning the result to the same `opcode` in the resulting object.
 * @param operations - an operations map from an `InstructionSet`
 * @param combinator - a function to apply to each operation
 */
const mapOverOperations = (operations, ...combinators) => Object.keys(operations).reduce((result, operation) => ({
    ...result,
    [operation]: combinators.reduce((op, combinator) => combinator(op), operations[parseInt(operation, 10)]),
}), {});
/**
 * Pop one stack item off of `state.stack` and provide that item to `operation`.
 */
const useOneStackItem = (state, operation) => {
    // eslint-disable-next-line functional/immutable-data
    const item = state.stack.pop();
    if (item === undefined) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.emptyStack, state);
    }
    return operation(state, [item]);
};
const useTwoStackItems = (state, operation) => useOneStackItem(state, (nextState, [valueTwo]) => useOneStackItem(nextState, (lastState, [valueTop]) => operation(lastState, [valueTop, valueTwo])));
const useThreeStackItems = (state, operation) => useOneStackItem(state, (nextState, [valueThree]) => useTwoStackItems(nextState, (lastState, [valueTop, valueTwo]) => operation(lastState, [valueTop, valueTwo, valueThree])));
const useFourStackItems = (state, operation) => useTwoStackItems(state, (nextState, [valueThree, valueFour]) => useTwoStackItems(nextState, (lastState, [valueTop, valueTwo]) => operation(lastState, [valueTop, valueTwo, valueThree, valueFour])));
const useSixStackItems = (state, operation) => useFourStackItems(state, (nextState, [valueThree, valueFour, valueFive, valueSix]) => useTwoStackItems(nextState, (lastState, [valueTop, valueTwo]) => operation(lastState, [
    valueTop,
    valueTwo,
    valueThree,
    valueFour,
    valueFive,
    valueSix,
])));
const normalMaximumScriptNumberByteLength = 4;
const useOneScriptNumber = (state, operation, { requireMinimalEncoding, maximumScriptNumberByteLength = normalMaximumScriptNumberByteLength, }) => useOneStackItem(state, (nextState, [item]) => {
    const value = (0,_common__WEBPACK_IMPORTED_MODULE_0__.parseBytesAsScriptNumber)(item, {
        maximumScriptNumberByteLength,
        requireMinimalEncoding,
    });
    if ((0,_common__WEBPACK_IMPORTED_MODULE_0__.isScriptNumberError)(value)) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.invalidScriptNumber, state);
    }
    return operation(nextState, [value]);
});
const useTwoScriptNumbers = (state, operation, { requireMinimalEncoding, maximumScriptNumberByteLength = normalMaximumScriptNumberByteLength, }) => useOneScriptNumber(state, (nextState, [secondValue]) => useOneScriptNumber(nextState, (lastState, [firstValue]) => operation(lastState, [firstValue, secondValue]), { maximumScriptNumberByteLength, requireMinimalEncoding }), { maximumScriptNumberByteLength, requireMinimalEncoding });
const useThreeScriptNumbers = (state, operation, { requireMinimalEncoding, maximumScriptNumberByteLength = normalMaximumScriptNumberByteLength, }) => useTwoScriptNumbers(state, (nextState, [secondValue, thirdValue]) => useOneScriptNumber(nextState, (lastState, [firstValue]) => operation(lastState, [firstValue, secondValue, thirdValue]), { maximumScriptNumberByteLength, requireMinimalEncoding }), { maximumScriptNumberByteLength, requireMinimalEncoding });
/**
 * Return the provided state with the provided value pushed to its stack.
 * @param state - the state to update and return
 * @param data - the value to push to the stack
 */
const pushToStack = (state, ...data) => {
    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
    state.stack.push(...data);
    return state;
};
// TODO: if firstOperation errors, secondOperation might overwrite the error
const combineOperations = (firstOperation, secondOperation) => (state) => secondOperation(firstOperation(state));
//# sourceMappingURL=combinators.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export AuthenticationErrorCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js .AuthenticationErrorCommon */
/*! export ConsensusCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! export OpcodeDescriptionsCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/descriptions.js .OpcodeDescriptionsCommon */
/*! export OpcodesCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js .OpcodesCommon */
/*! export PushOperationConstants [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/push.js .PushOperationConstants */
/*! export ScriptNumberError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js .ScriptNumberError */
/*! export SigningSerializationFlag [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js .SigningSerializationFlag */
/*! export applyError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js .applyError */
/*! export arithmeticOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .arithmeticOperations */
/*! export bigIntToScriptNumber [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js .bigIntToScriptNumber */
/*! export bitwiseOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/bitwise.js .bitwiseOperations */
/*! export booleanToScriptNumber [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js .booleanToScriptNumber */
/*! export checkLimitsCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cloneAuthenticationProgramStateCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cloneStack [provided] [no usage info] [missing usage info prevents renaming] */
/*! export combineOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .combineOperations */
/*! export commonOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export conditionalFlowControlOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js .conditionalFlowControlOperations */
/*! export conditionallyEvaluate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .conditionallyEvaluate */
/*! export createAuthenticationProgramInternalStateCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createAuthenticationProgramStateCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createAuthenticationProgramStateCommonEmpty [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createTransactionContextCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createTransactionContextCommonEmpty [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createTransactionContextCommonTesting [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cryptoOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js .cryptoOperations */
/*! export decodeBitcoinSignature [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/encoding.js .decodeBitcoinSignature */
/*! export disabledOperation [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/nop.js .disabledOperation */
/*! export disabledOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/nop.js .disabledOperations */
/*! export encodeDataPush [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/push.js .encodeDataPush */
/*! export generateSigningSerializationBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js .generateSigningSerializationBCH */
/*! export hashOutputs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js .hashOutputs */
/*! export hashPrevouts [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js .hashPrevouts */
/*! export hashSequence [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js .hashSequence */
/*! export incrementOperationCount [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .incrementOperationCount */
/*! export isDefinedSigningSerializationType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js .isDefinedSigningSerializationType */
/*! export isLegacySigningSerialization [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js .isLegacySigningSerialization */
/*! export isMinimalDataPush [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/push.js .isMinimalDataPush */
/*! export isScriptNumberError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js .isScriptNumberError */
/*! export isValidCompressedPublicKeyEncoding [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/encoding.js .isValidCompressedPublicKeyEncoding */
/*! export isValidPublicKeyEncoding [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/encoding.js .isValidPublicKeyEncoding */
/*! export isValidSignatureEncodingBCHTransaction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/encoding.js .isValidSignatureEncodingBCHTransaction */
/*! export isValidSignatureEncodingDER [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/encoding.js .isValidSignatureEncodingDER */
/*! export isValidUncompressedPublicKeyEncoding [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/encoding.js .isValidUncompressedPublicKeyEncoding */
/*! export mapOverOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .mapOverOperations */
/*! export nonOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/nop.js .nonOperations */
/*! export op0NotEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .op0NotEqual */
/*! export op1Add [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .op1Add */
/*! export op1Sub [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .op1Sub */
/*! export op2Drop [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .op2Drop */
/*! export op2Dup [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .op2Dup */
/*! export op2Over [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .op2Over */
/*! export op2Rot [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .op2Rot */
/*! export op2Swap [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .op2Swap */
/*! export op3Dup [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .op3Dup */
/*! export opAbs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opAbs */
/*! export opAdd [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opAdd */
/*! export opBoolAnd [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opBoolAnd */
/*! export opBoolOr [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opBoolOr */
/*! export opCheckLockTimeVerify [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/time.js .opCheckLockTimeVerify */
/*! export opCheckMultiSig [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js .opCheckMultiSig */
/*! export opCheckMultiSigVerify [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js .opCheckMultiSigVerify */
/*! export opCheckSequenceVerify [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/time.js .opCheckSequenceVerify */
/*! export opCheckSig [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js .opCheckSig */
/*! export opCheckSigVerify [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js .opCheckSigVerify */
/*! export opCodeSeparator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js .opCodeSeparator */
/*! export opDepth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opDepth */
/*! export opDrop [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opDrop */
/*! export opDup [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opDup */
/*! export opElse [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js .opElse */
/*! export opEndIf [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js .opEndIf */
/*! export opEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/bitwise.js .opEqual */
/*! export opEqualVerify [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/bitwise.js .opEqualVerify */
/*! export opFromAltStack [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opFromAltStack */
/*! export opGreaterThan [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opGreaterThan */
/*! export opGreaterThanOrEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opGreaterThanOrEqual */
/*! export opHash160 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js .opHash160 */
/*! export opHash256 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js .opHash256 */
/*! export opIf [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js .opIf */
/*! export opIfDup [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opIfDup */
/*! export opLessThan [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opLessThan */
/*! export opLessThanOrEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opLessThanOrEqual */
/*! export opMax [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opMax */
/*! export opMin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opMin */
/*! export opNegate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opNegate */
/*! export opNip [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opNip */
/*! export opNop [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/nop.js .opNop */
/*! export opNot [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opNot */
/*! export opNotIf [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js .opNotIf */
/*! export opNumEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opNumEqual */
/*! export opNumEqualVerify [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opNumEqualVerify */
/*! export opNumNotEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opNumNotEqual */
/*! export opOver [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opOver */
/*! export opPick [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opPick */
/*! export opReturn [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js .opReturn */
/*! export opRipemd160 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js .opRipemd160 */
/*! export opRoll [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opRoll */
/*! export opRot [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opRot */
/*! export opSha1 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js .opSha1 */
/*! export opSha256 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js .opSha256 */
/*! export opSize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/splice.js .opSize */
/*! export opSub [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opSub */
/*! export opSwap [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opSwap */
/*! export opToAltStack [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opToAltStack */
/*! export opTuck [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opTuck */
/*! export opVerify [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js .opVerify */
/*! export opWithin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opWithin */
/*! export parseBytesAsScriptNumber [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js .parseBytesAsScriptNumber */
/*! export pushByteOpcodes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/push.js .pushByteOpcodes */
/*! export pushNumberOpcodes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/push.js .pushNumberOpcodes */
/*! export pushNumberOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/push.js .pushNumberOperations */
/*! export pushOperation [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/push.js .pushOperation */
/*! export pushOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/push.js .pushOperations */
/*! export pushToStack [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .pushToStack */
/*! export readLocktime [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/time.js .readLocktime */
/*! export reservedOperation [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js .reservedOperation */
/*! export spliceOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/splice.js .spliceOperations */
/*! export stackItemIsTruthy [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js .stackItemIsTruthy */
/*! export stackOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .stackOperations */
/*! export timeOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/time.js .timeOperations */
/*! export unconditionalFlowControlOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js .unconditionalFlowControlOperations */
/*! export undefinedOperation [provided] [no usage info] [missing usage info prevents renaming] */
/*! export useFourStackItems [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .useFourStackItems */
/*! export useOneScriptNumber [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .useOneScriptNumber */
/*! export useOneStackItem [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .useOneStackItem */
/*! export useSixStackItems [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .useSixStackItems */
/*! export useThreeScriptNumbers [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .useThreeScriptNumbers */
/*! export useThreeStackItems [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .useThreeStackItems */
/*! export useTwoScriptNumbers [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .useTwoScriptNumbers */
/*! export useTwoStackItems [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .useTwoStackItems */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "arithmeticOperations": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.arithmeticOperations,
/* harmony export */   "op0NotEqual": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.op0NotEqual,
/* harmony export */   "op1Add": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.op1Add,
/* harmony export */   "op1Sub": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.op1Sub,
/* harmony export */   "opAbs": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opAbs,
/* harmony export */   "opAdd": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opAdd,
/* harmony export */   "opBoolAnd": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opBoolAnd,
/* harmony export */   "opBoolOr": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opBoolOr,
/* harmony export */   "opGreaterThan": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opGreaterThan,
/* harmony export */   "opGreaterThanOrEqual": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opGreaterThanOrEqual,
/* harmony export */   "opLessThan": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opLessThan,
/* harmony export */   "opLessThanOrEqual": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opLessThanOrEqual,
/* harmony export */   "opMax": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opMax,
/* harmony export */   "opMin": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opMin,
/* harmony export */   "opNegate": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opNegate,
/* harmony export */   "opNot": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opNot,
/* harmony export */   "opNumEqual": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opNumEqual,
/* harmony export */   "opNumEqualVerify": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opNumEqualVerify,
/* harmony export */   "opNumNotEqual": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opNumNotEqual,
/* harmony export */   "opSub": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opSub,
/* harmony export */   "opWithin": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opWithin,
/* harmony export */   "bitwiseOperations": () => /* reexport safe */ _bitwise__WEBPACK_IMPORTED_MODULE_2__.bitwiseOperations,
/* harmony export */   "opEqual": () => /* reexport safe */ _bitwise__WEBPACK_IMPORTED_MODULE_2__.opEqual,
/* harmony export */   "opEqualVerify": () => /* reexport safe */ _bitwise__WEBPACK_IMPORTED_MODULE_2__.opEqualVerify,
/* harmony export */   "combineOperations": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.combineOperations,
/* harmony export */   "conditionallyEvaluate": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.conditionallyEvaluate,
/* harmony export */   "incrementOperationCount": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.incrementOperationCount,
/* harmony export */   "mapOverOperations": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.mapOverOperations,
/* harmony export */   "pushToStack": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.pushToStack,
/* harmony export */   "useFourStackItems": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.useFourStackItems,
/* harmony export */   "useOneScriptNumber": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.useOneScriptNumber,
/* harmony export */   "useOneStackItem": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.useOneStackItem,
/* harmony export */   "useSixStackItems": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.useSixStackItems,
/* harmony export */   "useThreeScriptNumbers": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.useThreeScriptNumbers,
/* harmony export */   "useThreeStackItems": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.useThreeStackItems,
/* harmony export */   "useTwoScriptNumbers": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.useTwoScriptNumbers,
/* harmony export */   "useTwoStackItems": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.useTwoStackItems,
/* harmony export */   "cryptoOperations": () => /* reexport safe */ _crypto__WEBPACK_IMPORTED_MODULE_4__.cryptoOperations,
/* harmony export */   "opCheckMultiSig": () => /* reexport safe */ _crypto__WEBPACK_IMPORTED_MODULE_4__.opCheckMultiSig,
/* harmony export */   "opCheckMultiSigVerify": () => /* reexport safe */ _crypto__WEBPACK_IMPORTED_MODULE_4__.opCheckMultiSigVerify,
/* harmony export */   "opCheckSig": () => /* reexport safe */ _crypto__WEBPACK_IMPORTED_MODULE_4__.opCheckSig,
/* harmony export */   "opCheckSigVerify": () => /* reexport safe */ _crypto__WEBPACK_IMPORTED_MODULE_4__.opCheckSigVerify,
/* harmony export */   "opCodeSeparator": () => /* reexport safe */ _crypto__WEBPACK_IMPORTED_MODULE_4__.opCodeSeparator,
/* harmony export */   "opHash160": () => /* reexport safe */ _crypto__WEBPACK_IMPORTED_MODULE_4__.opHash160,
/* harmony export */   "opHash256": () => /* reexport safe */ _crypto__WEBPACK_IMPORTED_MODULE_4__.opHash256,
/* harmony export */   "opRipemd160": () => /* reexport safe */ _crypto__WEBPACK_IMPORTED_MODULE_4__.opRipemd160,
/* harmony export */   "opSha1": () => /* reexport safe */ _crypto__WEBPACK_IMPORTED_MODULE_4__.opSha1,
/* harmony export */   "opSha256": () => /* reexport safe */ _crypto__WEBPACK_IMPORTED_MODULE_4__.opSha256,
/* harmony export */   "OpcodeDescriptionsCommon": () => /* reexport safe */ _descriptions__WEBPACK_IMPORTED_MODULE_13__.OpcodeDescriptionsCommon,
/* harmony export */   "decodeBitcoinSignature": () => /* reexport safe */ _encoding__WEBPACK_IMPORTED_MODULE_14__.decodeBitcoinSignature,
/* harmony export */   "isValidCompressedPublicKeyEncoding": () => /* reexport safe */ _encoding__WEBPACK_IMPORTED_MODULE_14__.isValidCompressedPublicKeyEncoding,
/* harmony export */   "isValidPublicKeyEncoding": () => /* reexport safe */ _encoding__WEBPACK_IMPORTED_MODULE_14__.isValidPublicKeyEncoding,
/* harmony export */   "isValidSignatureEncodingBCHTransaction": () => /* reexport safe */ _encoding__WEBPACK_IMPORTED_MODULE_14__.isValidSignatureEncodingBCHTransaction,
/* harmony export */   "isValidSignatureEncodingDER": () => /* reexport safe */ _encoding__WEBPACK_IMPORTED_MODULE_14__.isValidSignatureEncodingDER,
/* harmony export */   "isValidUncompressedPublicKeyEncoding": () => /* reexport safe */ _encoding__WEBPACK_IMPORTED_MODULE_14__.isValidUncompressedPublicKeyEncoding,
/* harmony export */   "AuthenticationErrorCommon": () => /* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon,
/* harmony export */   "applyError": () => /* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_5__.applyError,
/* harmony export */   "conditionalFlowControlOperations": () => /* reexport safe */ _flow_control__WEBPACK_IMPORTED_MODULE_6__.conditionalFlowControlOperations,
/* harmony export */   "opElse": () => /* reexport safe */ _flow_control__WEBPACK_IMPORTED_MODULE_6__.opElse,
/* harmony export */   "opEndIf": () => /* reexport safe */ _flow_control__WEBPACK_IMPORTED_MODULE_6__.opEndIf,
/* harmony export */   "opIf": () => /* reexport safe */ _flow_control__WEBPACK_IMPORTED_MODULE_6__.opIf,
/* harmony export */   "opNotIf": () => /* reexport safe */ _flow_control__WEBPACK_IMPORTED_MODULE_6__.opNotIf,
/* harmony export */   "opReturn": () => /* reexport safe */ _flow_control__WEBPACK_IMPORTED_MODULE_6__.opReturn,
/* harmony export */   "opVerify": () => /* reexport safe */ _flow_control__WEBPACK_IMPORTED_MODULE_6__.opVerify,
/* harmony export */   "reservedOperation": () => /* reexport safe */ _flow_control__WEBPACK_IMPORTED_MODULE_6__.reservedOperation,
/* harmony export */   "unconditionalFlowControlOperations": () => /* reexport safe */ _flow_control__WEBPACK_IMPORTED_MODULE_6__.unconditionalFlowControlOperations,
/* harmony export */   "disabledOperation": () => /* reexport safe */ _nop__WEBPACK_IMPORTED_MODULE_7__.disabledOperation,
/* harmony export */   "disabledOperations": () => /* reexport safe */ _nop__WEBPACK_IMPORTED_MODULE_7__.disabledOperations,
/* harmony export */   "nonOperations": () => /* reexport safe */ _nop__WEBPACK_IMPORTED_MODULE_7__.nonOperations,
/* harmony export */   "opNop": () => /* reexport safe */ _nop__WEBPACK_IMPORTED_MODULE_7__.opNop,
/* harmony export */   "OpcodesCommon": () => /* reexport safe */ _opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesCommon,
/* harmony export */   "PushOperationConstants": () => /* reexport safe */ _push__WEBPACK_IMPORTED_MODULE_9__.PushOperationConstants,
/* harmony export */   "encodeDataPush": () => /* reexport safe */ _push__WEBPACK_IMPORTED_MODULE_9__.encodeDataPush,
/* harmony export */   "isMinimalDataPush": () => /* reexport safe */ _push__WEBPACK_IMPORTED_MODULE_9__.isMinimalDataPush,
/* harmony export */   "pushByteOpcodes": () => /* reexport safe */ _push__WEBPACK_IMPORTED_MODULE_9__.pushByteOpcodes,
/* harmony export */   "pushNumberOpcodes": () => /* reexport safe */ _push__WEBPACK_IMPORTED_MODULE_9__.pushNumberOpcodes,
/* harmony export */   "pushNumberOperations": () => /* reexport safe */ _push__WEBPACK_IMPORTED_MODULE_9__.pushNumberOperations,
/* harmony export */   "pushOperation": () => /* reexport safe */ _push__WEBPACK_IMPORTED_MODULE_9__.pushOperation,
/* harmony export */   "pushOperations": () => /* reexport safe */ _push__WEBPACK_IMPORTED_MODULE_9__.pushOperations,
/* harmony export */   "SigningSerializationFlag": () => /* reexport safe */ _signing_serialization__WEBPACK_IMPORTED_MODULE_15__.SigningSerializationFlag,
/* harmony export */   "generateSigningSerializationBCH": () => /* reexport safe */ _signing_serialization__WEBPACK_IMPORTED_MODULE_15__.generateSigningSerializationBCH,
/* harmony export */   "hashOutputs": () => /* reexport safe */ _signing_serialization__WEBPACK_IMPORTED_MODULE_15__.hashOutputs,
/* harmony export */   "hashPrevouts": () => /* reexport safe */ _signing_serialization__WEBPACK_IMPORTED_MODULE_15__.hashPrevouts,
/* harmony export */   "hashSequence": () => /* reexport safe */ _signing_serialization__WEBPACK_IMPORTED_MODULE_15__.hashSequence,
/* harmony export */   "isDefinedSigningSerializationType": () => /* reexport safe */ _signing_serialization__WEBPACK_IMPORTED_MODULE_15__.isDefinedSigningSerializationType,
/* harmony export */   "isLegacySigningSerialization": () => /* reexport safe */ _signing_serialization__WEBPACK_IMPORTED_MODULE_15__.isLegacySigningSerialization,
/* harmony export */   "opSize": () => /* reexport safe */ _splice__WEBPACK_IMPORTED_MODULE_10__.opSize,
/* harmony export */   "spliceOperations": () => /* reexport safe */ _splice__WEBPACK_IMPORTED_MODULE_10__.spliceOperations,
/* harmony export */   "op2Drop": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.op2Drop,
/* harmony export */   "op2Dup": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.op2Dup,
/* harmony export */   "op2Over": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.op2Over,
/* harmony export */   "op2Rot": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.op2Rot,
/* harmony export */   "op2Swap": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.op2Swap,
/* harmony export */   "op3Dup": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.op3Dup,
/* harmony export */   "opDepth": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opDepth,
/* harmony export */   "opDrop": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opDrop,
/* harmony export */   "opDup": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opDup,
/* harmony export */   "opFromAltStack": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opFromAltStack,
/* harmony export */   "opIfDup": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opIfDup,
/* harmony export */   "opNip": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opNip,
/* harmony export */   "opOver": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opOver,
/* harmony export */   "opPick": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opPick,
/* harmony export */   "opRoll": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opRoll,
/* harmony export */   "opRot": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opRot,
/* harmony export */   "opSwap": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opSwap,
/* harmony export */   "opToAltStack": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opToAltStack,
/* harmony export */   "opTuck": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opTuck,
/* harmony export */   "stackOperations": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.stackOperations,
/* harmony export */   "opCheckLockTimeVerify": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_12__.opCheckLockTimeVerify,
/* harmony export */   "opCheckSequenceVerify": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_12__.opCheckSequenceVerify,
/* harmony export */   "readLocktime": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_12__.readLocktime,
/* harmony export */   "timeOperations": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_12__.timeOperations,
/* harmony export */   "ScriptNumberError": () => /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_16__.ScriptNumberError,
/* harmony export */   "bigIntToScriptNumber": () => /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_16__.bigIntToScriptNumber,
/* harmony export */   "booleanToScriptNumber": () => /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_16__.booleanToScriptNumber,
/* harmony export */   "isScriptNumberError": () => /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_16__.isScriptNumberError,
/* harmony export */   "parseBytesAsScriptNumber": () => /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_16__.parseBytesAsScriptNumber,
/* harmony export */   "stackItemIsTruthy": () => /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_16__.stackItemIsTruthy,
/* harmony export */   "ConsensusCommon": () => /* binding */ ConsensusCommon,
/* harmony export */   "undefinedOperation": () => /* binding */ undefinedOperation,
/* harmony export */   "checkLimitsCommon": () => /* binding */ checkLimitsCommon,
/* harmony export */   "commonOperations": () => /* binding */ commonOperations,
/* harmony export */   "cloneStack": () => /* binding */ cloneStack,
/* harmony export */   "createAuthenticationProgramInternalStateCommon": () => /* binding */ createAuthenticationProgramInternalStateCommon,
/* harmony export */   "createTransactionContextCommon": () => /* binding */ createTransactionContextCommon,
/* harmony export */   "createAuthenticationProgramStateCommon": () => /* binding */ createAuthenticationProgramStateCommon,
/* harmony export */   "cloneAuthenticationProgramStateCommon": () => /* binding */ cloneAuthenticationProgramStateCommon,
/* harmony export */   "createTransactionContextCommonEmpty": () => /* binding */ createTransactionContextCommonEmpty,
/* harmony export */   "createTransactionContextCommonTesting": () => /* binding */ createTransactionContextCommonTesting,
/* harmony export */   "createAuthenticationProgramStateCommonEmpty": () => /* binding */ createAuthenticationProgramStateCommonEmpty
/* harmony export */ });
/* harmony import */ var _transaction_transaction_serialization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../transaction/transaction-serialization */ "./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js");
/* harmony import */ var _arithmetic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arithmetic */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js");
/* harmony import */ var _bitwise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bitwise */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/bitwise.js");
/* harmony import */ var _combinators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./combinators */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js");
/* harmony import */ var _crypto__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./crypto */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js");
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js");
/* harmony import */ var _flow_control__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./flow-control */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js");
/* harmony import */ var _nop__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./nop */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/nop.js");
/* harmony import */ var _opcodes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js");
/* harmony import */ var _push__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./push */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/push.js");
/* harmony import */ var _splice__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./splice */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/splice.js");
/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./stack */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js");
/* harmony import */ var _time__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./time */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/time.js");
/* harmony import */ var _descriptions__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./descriptions */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/descriptions.js");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./encoding */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/encoding.js");
/* harmony import */ var _signing_serialization__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./signing-serialization */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js");





























var ConsensusCommon;
(function (ConsensusCommon) {
    /**
     * A.K.A. `MAX_SCRIPT_ELEMENT_SIZE`
     */
    ConsensusCommon[ConsensusCommon["maximumStackItemLength"] = 520] = "maximumStackItemLength";
    ConsensusCommon[ConsensusCommon["maximumScriptNumberLength"] = 4] = "maximumScriptNumberLength";
    /**
     * A.K.A. `MAX_OPS_PER_SCRIPT`
     */
    ConsensusCommon[ConsensusCommon["maximumOperationCount"] = 201] = "maximumOperationCount";
    /**
     * A.K.A. `MAX_SCRIPT_SIZE`
     */
    ConsensusCommon[ConsensusCommon["maximumBytecodeLength"] = 10000] = "maximumBytecodeLength";
    /**
     * A.K.A. `MAX_STACK_SIZE`
     */
    ConsensusCommon[ConsensusCommon["maximumStackDepth"] = 1000] = "maximumStackDepth";
})(ConsensusCommon || (ConsensusCommon = {}));
const undefinedOperation = () => ({
    undefined: (0,_combinators__WEBPACK_IMPORTED_MODULE_3__.conditionallyEvaluate)((state) => (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.unknownOpcode, state)),
});
const checkLimitsCommon = (operation) => (state) => {
    const nextState = operation(state);
    return nextState.stack.length + nextState.alternateStack.length >
        ConsensusCommon.maximumStackDepth
        ? (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.exceededMaximumStackDepth, nextState)
        : nextState.operationCount > ConsensusCommon.maximumOperationCount
            ? (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.exceededMaximumOperationCount, nextState)
            : nextState;
};
const commonOperations = ({ flags, ripemd160, secp256k1, sha1, sha256, }) => {
    const unconditionalOperations = {
        ...(0,_nop__WEBPACK_IMPORTED_MODULE_7__.disabledOperations)(),
        ...(0,_push__WEBPACK_IMPORTED_MODULE_9__.pushOperations)(flags),
        ...(0,_combinators__WEBPACK_IMPORTED_MODULE_3__.mapOverOperations)((0,_flow_control__WEBPACK_IMPORTED_MODULE_6__.unconditionalFlowControlOperations)(flags), _combinators__WEBPACK_IMPORTED_MODULE_3__.incrementOperationCount),
    };
    const conditionalOperations = (0,_combinators__WEBPACK_IMPORTED_MODULE_3__.mapOverOperations)({
        ...(0,_push__WEBPACK_IMPORTED_MODULE_9__.pushNumberOperations)(),
        [_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesCommon.OP_RESERVED]: (0,_flow_control__WEBPACK_IMPORTED_MODULE_6__.reservedOperation)(),
    }, _combinators__WEBPACK_IMPORTED_MODULE_3__.conditionallyEvaluate);
    const incrementingOperations = (0,_combinators__WEBPACK_IMPORTED_MODULE_3__.mapOverOperations)({
        ...(0,_arithmetic__WEBPACK_IMPORTED_MODULE_1__.arithmeticOperations)(flags),
        ...(0,_bitwise__WEBPACK_IMPORTED_MODULE_2__.bitwiseOperations)(),
        ...(0,_crypto__WEBPACK_IMPORTED_MODULE_4__.cryptoOperations)({
            flags,
            ripemd160,
            secp256k1,
            sha1,
            sha256,
        }),
        ...(0,_flow_control__WEBPACK_IMPORTED_MODULE_6__.conditionalFlowControlOperations)(),
        ...(0,_stack__WEBPACK_IMPORTED_MODULE_11__.stackOperations)(flags),
        ...(0,_splice__WEBPACK_IMPORTED_MODULE_10__.spliceOperations)(),
        ...(0,_time__WEBPACK_IMPORTED_MODULE_12__.timeOperations)(flags),
        ...(0,_nop__WEBPACK_IMPORTED_MODULE_7__.nonOperations)(flags),
    }, _combinators__WEBPACK_IMPORTED_MODULE_3__.conditionallyEvaluate, _combinators__WEBPACK_IMPORTED_MODULE_3__.incrementOperationCount);
    return (0,_combinators__WEBPACK_IMPORTED_MODULE_3__.mapOverOperations)({
        ...unconditionalOperations,
        ...incrementingOperations,
        ...conditionalOperations,
    }, checkLimitsCommon);
};
const cloneStack = (stack) => stack.reduce((newStack, element) => {
    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
    newStack.push(element.slice());
    return newStack;
}, []);
const createAuthenticationProgramInternalStateCommon = ({ instructions, stack = [], }) => ({
    alternateStack: [],
    executionStack: [],
    instructions,
    ip: 0,
    lastCodeSeparator: -1,
    operationCount: 0,
    signatureOperationsCount: 0,
    signedMessages: [],
    stack,
});
const createTransactionContextCommon = (program) => ({
    correspondingOutput: program.inputIndex < program.spendingTransaction.outputs.length
        ? (0,_transaction_transaction_serialization__WEBPACK_IMPORTED_MODULE_0__.encodeOutput)(program.spendingTransaction.outputs[program.inputIndex])
        : undefined,
    locktime: program.spendingTransaction.locktime,
    outpointIndex: program.spendingTransaction.inputs[program.inputIndex].outpointIndex,
    outpointTransactionHash: program.spendingTransaction.inputs[program.inputIndex]
        .outpointTransactionHash,
    outputValue: program.sourceOutput.satoshis,
    sequenceNumber: program.spendingTransaction.inputs[program.inputIndex].sequenceNumber,
    transactionOutpoints: (0,_transaction_transaction_serialization__WEBPACK_IMPORTED_MODULE_0__.encodeOutpoints)(program.spendingTransaction.inputs),
    transactionOutputs: (0,_transaction_transaction_serialization__WEBPACK_IMPORTED_MODULE_0__.encodeOutputsForSigning)(program.spendingTransaction.outputs),
    transactionSequenceNumbers: (0,_transaction_transaction_serialization__WEBPACK_IMPORTED_MODULE_0__.encodeSequenceNumbersForSigning)(program.spendingTransaction.inputs),
    version: program.spendingTransaction.version,
});
const createAuthenticationProgramStateCommon = ({ transactionContext, instructions, stack, }) => ({
    ...createAuthenticationProgramInternalStateCommon({
        instructions,
        stack,
    }),
    ...transactionContext,
});
/**
 * Note: this implementation does not safely clone elements within array
 * properties. Mutating values within arrays will mutate those values in cloned
 * program states.
 */
const cloneAuthenticationProgramStateCommon = (state) => ({
    ...(state.error === undefined ? {} : { error: state.error }),
    alternateStack: state.alternateStack.slice(),
    correspondingOutput: state.correspondingOutput,
    executionStack: state.executionStack.slice(),
    instructions: state.instructions.slice(),
    ip: state.ip,
    lastCodeSeparator: state.lastCodeSeparator,
    locktime: state.locktime,
    operationCount: state.operationCount,
    outpointIndex: state.outpointIndex,
    outpointTransactionHash: state.outpointTransactionHash.slice(),
    outputValue: state.outputValue,
    sequenceNumber: state.sequenceNumber,
    signatureOperationsCount: state.signatureOperationsCount,
    signedMessages: state.signedMessages.slice(),
    stack: state.stack.slice(),
    transactionOutpoints: state.transactionOutpoints,
    transactionOutputs: state.transactionOutputs,
    transactionSequenceNumbers: state.transactionSequenceNumbers,
    version: state.version,
});
const sha256HashLength = 32;
const outputValueLength = 8;
/**
 * This is a meaningless but complete `TransactionContextCommon` which uses `0`
 * values for each property.
 */
const createTransactionContextCommonEmpty = () => ({
    correspondingOutput: Uint8Array.of(0),
    locktime: 0,
    outpointIndex: 0,
    outpointTransactionHash: new Uint8Array(sha256HashLength),
    outputValue: new Uint8Array(outputValueLength),
    sequenceNumber: 0,
    transactionOutpoints: Uint8Array.of(0),
    transactionOutputs: Uint8Array.of(0),
    transactionSequenceNumbers: Uint8Array.of(0),
    version: 0,
});
const correspondingOutput = 1;
const transactionOutpoints = 2;
const transactionOutputs = 3;
const transactionSequenceNumbers = 4;
const outpointTransactionHashFill = 5;
/**
 * This is a meaningless but complete `TransactionContextCommon` which uses a
 * different value for each property. This is useful for testing and debugging.
 */
const createTransactionContextCommonTesting = () => ({
    correspondingOutput: Uint8Array.of(correspondingOutput),
    locktime: 0,
    outpointIndex: 0,
    outpointTransactionHash: new Uint8Array(sha256HashLength).fill(outpointTransactionHashFill),
    outputValue: new Uint8Array(outputValueLength),
    sequenceNumber: 0,
    transactionOutpoints: Uint8Array.of(transactionOutpoints),
    transactionOutputs: Uint8Array.of(transactionOutputs),
    transactionSequenceNumbers: Uint8Array.of(transactionSequenceNumbers),
    version: 0,
});
/**
 * Create an "empty" common authentication program state, suitable for testing a
 * VM/compiler.
 */
const createAuthenticationProgramStateCommonEmpty = ({ instructions, stack = [], }) => ({
    ...createAuthenticationProgramInternalStateCommon({ instructions, stack }),
    ...createTransactionContextCommonEmpty(),
});
//# sourceMappingURL=common.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export cryptoOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opCheckMultiSig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opCheckMultiSigVerify [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opCheckSig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opCheckSigVerify [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opCodeSeparator [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opHash160 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opHash256 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opRipemd160 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opSha1 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opSha256 [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "opRipemd160": () => /* binding */ opRipemd160,
/* harmony export */   "opSha1": () => /* binding */ opSha1,
/* harmony export */   "opSha256": () => /* binding */ opSha256,
/* harmony export */   "opHash160": () => /* binding */ opHash160,
/* harmony export */   "opHash256": () => /* binding */ opHash256,
/* harmony export */   "opCodeSeparator": () => /* binding */ opCodeSeparator,
/* harmony export */   "opCheckSig": () => /* binding */ opCheckSig,
/* harmony export */   "opCheckMultiSig": () => /* binding */ opCheckMultiSig,
/* harmony export */   "opCheckSigVerify": () => /* binding */ opCheckSigVerify,
/* harmony export */   "opCheckMultiSigVerify": () => /* binding */ opCheckMultiSigVerify,
/* harmony export */   "cryptoOperations": () => /* binding */ cryptoOperations
/* harmony export */ });
/* harmony import */ var _bch_bch_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bch/bch-types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-types.js");
/* harmony import */ var _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../instruction-sets-utils */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js");
/* harmony import */ var _combinators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./combinators */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./encoding */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/encoding.js");
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js");
/* harmony import */ var _flow_control__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./flow-control */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js");
/* harmony import */ var _opcodes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js");
/* harmony import */ var _signing_serialization__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./signing-serialization */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js");









const opRipemd160 = ({ ripemd160, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.useOneStackItem)(state, (nextState, [value]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.pushToStack)(nextState, ripemd160.hash(value)));
const opSha1 = ({ sha1, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.useOneStackItem)(state, (nextState, [value]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.pushToStack)(nextState, sha1.hash(value)));
const opSha256 = ({ sha256, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.useOneStackItem)(state, (nextState, [value]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.pushToStack)(nextState, sha256.hash(value)));
const opHash160 = ({ ripemd160, sha256, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.useOneStackItem)(state, (nextState, [value]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.pushToStack)(nextState, ripemd160.hash(sha256.hash(value))));
const opHash256 = ({ sha256, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.useOneStackItem)(state, (nextState, [value]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.pushToStack)(nextState, sha256.hash(sha256.hash(value))));
const opCodeSeparator = () => (state) => {
    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
    state.lastCodeSeparator = state.ip;
    return state;
};
const opCheckSig = ({ flags, secp256k1, sha256, }) => (s) => 
// eslint-disable-next-line complexity
(0,_combinators__WEBPACK_IMPORTED_MODULE_2__.useTwoStackItems)(s, (state, [bitcoinEncodedSignature, publicKey]) => {
    if (!(0,_encoding__WEBPACK_IMPORTED_MODULE_4__.isValidPublicKeyEncoding)(publicKey)) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.invalidPublicKeyEncoding, state);
    }
    if (!(0,_encoding__WEBPACK_IMPORTED_MODULE_4__.isValidSignatureEncodingBCHTransaction)(bitcoinEncodedSignature)) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.invalidSignatureEncoding, state);
    }
    const coveredBytecode = (0,_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_1__.serializeAuthenticationInstructions)(state.instructions).subarray(state.lastCodeSeparator + 1);
    const { signingSerializationType, signature } = (0,_encoding__WEBPACK_IMPORTED_MODULE_4__.decodeBitcoinSignature)(bitcoinEncodedSignature);
    const serialization = (0,_signing_serialization__WEBPACK_IMPORTED_MODULE_8__.generateSigningSerializationBCH)({
        correspondingOutput: state.correspondingOutput,
        coveredBytecode,
        locktime: state.locktime,
        outpointIndex: state.outpointIndex,
        outpointTransactionHash: state.outpointTransactionHash,
        outputValue: state.outputValue,
        sequenceNumber: state.sequenceNumber,
        sha256,
        signingSerializationType,
        transactionOutpoints: state.transactionOutpoints,
        transactionOutputs: state.transactionOutputs,
        transactionSequenceNumbers: state.transactionSequenceNumbers,
        version: state.version,
    });
    const digest = sha256.hash(sha256.hash(serialization));
    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
    state.signedMessages.push(serialization);
    const useSchnorr = signature.length === _bch_bch_types__WEBPACK_IMPORTED_MODULE_0__.ConsensusBCH.schnorrSignatureLength;
    const success = useSchnorr
        ? secp256k1.verifySignatureSchnorr(signature, publicKey, digest)
        : secp256k1.verifySignatureDERLowS(signature, publicKey, digest);
    return !success &&
        flags.requireNullSignatureFailures &&
        signature.length !== 0
        ? (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.nonNullSignatureFailure, state)
        : (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.pushToStack)(state, (0,_common__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(success));
});
const opCheckMultiSig = ({ flags: { requireMinimalEncoding, requireBugValueZero, requireNullSignatureFailures, }, secp256k1, sha256, }) => (s) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.useOneScriptNumber)(s, (state, publicKeysValue) => {
    const potentialPublicKeys = Number(publicKeysValue);
    if (potentialPublicKeys < 0) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.invalidNaturalNumber, state);
    }
    if (potentialPublicKeys > 20 /* maximumPublicKeys */) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.exceedsMaximumMultisigPublicKeyCount, state);
    }
    const publicKeys = 
    // eslint-disable-next-line functional/immutable-data
    potentialPublicKeys > 0 ? state.stack.splice(-potentialPublicKeys) : [];
    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
    state.operationCount += potentialPublicKeys;
    return state.operationCount > _common__WEBPACK_IMPORTED_MODULE_3__.ConsensusCommon.maximumOperationCount
        ? (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.exceededMaximumOperationCount, state)
        : (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.useOneScriptNumber)(state, (nextState, approvingKeys) => {
            const requiredApprovingPublicKeys = Number(approvingKeys);
            if (requiredApprovingPublicKeys < 0) {
                return (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.invalidNaturalNumber, nextState);
            }
            if (requiredApprovingPublicKeys > potentialPublicKeys) {
                return (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.insufficientPublicKeys, nextState);
            }
            const signatures = requiredApprovingPublicKeys > 0
                ? // eslint-disable-next-line functional/immutable-data
                    nextState.stack.splice(-requiredApprovingPublicKeys)
                : [];
            return (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.useOneStackItem)(nextState, 
            // eslint-disable-next-line complexity
            (finalState, [protocolBugValue]) => {
                if (requireBugValueZero && protocolBugValue.length !== 0) {
                    return (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.invalidProtocolBugValue, finalState);
                }
                const coveredBytecode = (0,_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_1__.serializeAuthenticationInstructions)(finalState.instructions).subarray(finalState.lastCodeSeparator + 1);
                let approvingPublicKeys = 0; // eslint-disable-line functional/no-let
                let remainingSignatures = signatures.length; // eslint-disable-line functional/no-let
                let remainingPublicKeys = publicKeys.length; // eslint-disable-line functional/no-let
                // eslint-disable-next-line functional/no-loop-statement
                while (remainingSignatures > 0 &&
                    remainingPublicKeys > 0 &&
                    approvingPublicKeys + remainingPublicKeys >=
                        remainingSignatures &&
                    approvingPublicKeys !== requiredApprovingPublicKeys) {
                    const publicKey = publicKeys[remainingPublicKeys - 1];
                    const bitcoinEncodedSignature = signatures[remainingSignatures - 1];
                    if (!(0,_encoding__WEBPACK_IMPORTED_MODULE_4__.isValidPublicKeyEncoding)(publicKey)) {
                        return (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.invalidPublicKeyEncoding, finalState);
                    }
                    if (!(0,_encoding__WEBPACK_IMPORTED_MODULE_4__.isValidSignatureEncodingBCHTransaction)(bitcoinEncodedSignature)) {
                        return (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.invalidSignatureEncoding, finalState);
                    }
                    const { signingSerializationType, signature, } = (0,_encoding__WEBPACK_IMPORTED_MODULE_4__.decodeBitcoinSignature)(bitcoinEncodedSignature);
                    const serialization = (0,_signing_serialization__WEBPACK_IMPORTED_MODULE_8__.generateSigningSerializationBCH)({
                        correspondingOutput: state.correspondingOutput,
                        coveredBytecode,
                        locktime: state.locktime,
                        outpointIndex: state.outpointIndex,
                        outpointTransactionHash: state.outpointTransactionHash,
                        outputValue: state.outputValue,
                        sequenceNumber: state.sequenceNumber,
                        sha256,
                        signingSerializationType,
                        transactionOutpoints: state.transactionOutpoints,
                        transactionOutputs: state.transactionOutputs,
                        transactionSequenceNumbers: state.transactionSequenceNumbers,
                        version: state.version,
                    });
                    const digest = sha256.hash(sha256.hash(serialization));
                    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
                    finalState.signedMessages.push(serialization);
                    if (signature.length === _bch_bch_types__WEBPACK_IMPORTED_MODULE_0__.ConsensusBCH.schnorrSignatureLength) {
                        return (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.schnorrSizedSignatureInCheckMultiSig, finalState);
                    }
                    const signed = secp256k1.verifySignatureDERLowS(signature, publicKey, digest);
                    // eslint-disable-next-line functional/no-conditional-statement
                    if (signed) {
                        approvingPublicKeys += 1; // eslint-disable-line functional/no-expression-statement
                        remainingSignatures -= 1; // eslint-disable-line functional/no-expression-statement
                    }
                    remainingPublicKeys -= 1; // eslint-disable-line functional/no-expression-statement
                }
                const success = approvingPublicKeys === requiredApprovingPublicKeys;
                if (!success &&
                    requireNullSignatureFailures &&
                    !signatures.every((signature) => signature.length === 0)) {
                    return (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.nonNullSignatureFailure, finalState);
                }
                return (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.pushToStack)(finalState, (0,_common__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(success));
            });
        }, { requireMinimalEncoding });
}, { requireMinimalEncoding });
const opCheckSigVerify = ({ flags, secp256k1, sha256, }) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.combineOperations)(opCheckSig({ flags, secp256k1, sha256 }), (0,_flow_control__WEBPACK_IMPORTED_MODULE_6__.opVerify)());
const opCheckMultiSigVerify = ({ flags, secp256k1, sha256, }) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.combineOperations)(opCheckMultiSig({ flags, secp256k1, sha256 }), (0,_flow_control__WEBPACK_IMPORTED_MODULE_6__.opVerify)());
const cryptoOperations = ({ flags, ripemd160, secp256k1, sha1, sha256, }) => ({
    [_opcodes__WEBPACK_IMPORTED_MODULE_7__.OpcodesCommon.OP_RIPEMD160]: opRipemd160({
        ripemd160,
    }),
    [_opcodes__WEBPACK_IMPORTED_MODULE_7__.OpcodesCommon.OP_SHA1]: opSha1({ sha1 }),
    [_opcodes__WEBPACK_IMPORTED_MODULE_7__.OpcodesCommon.OP_SHA256]: opSha256({ sha256 }),
    [_opcodes__WEBPACK_IMPORTED_MODULE_7__.OpcodesCommon.OP_HASH160]: opHash160({
        ripemd160,
        sha256,
    }),
    [_opcodes__WEBPACK_IMPORTED_MODULE_7__.OpcodesCommon.OP_HASH256]: opHash256({ sha256 }),
    [_opcodes__WEBPACK_IMPORTED_MODULE_7__.OpcodesCommon.OP_CODESEPARATOR]: opCodeSeparator(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_7__.OpcodesCommon.OP_CHECKSIG]: opCheckSig({
        flags,
        secp256k1,
        sha256,
    }),
    [_opcodes__WEBPACK_IMPORTED_MODULE_7__.OpcodesCommon.OP_CHECKSIGVERIFY]: opCheckSigVerify({
        flags,
        secp256k1,
        sha256,
    }),
    [_opcodes__WEBPACK_IMPORTED_MODULE_7__.OpcodesCommon.OP_CHECKMULTISIG]: opCheckMultiSig({
        flags,
        secp256k1,
        sha256,
    }),
    [_opcodes__WEBPACK_IMPORTED_MODULE_7__.OpcodesCommon.OP_CHECKMULTISIGVERIFY]: opCheckMultiSigVerify({ flags, secp256k1, sha256 }),
});
//# sourceMappingURL=crypto.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/descriptions.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/descriptions.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! export OpcodeDescriptionsCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpcodeDescriptionsCommon": () => /* binding */ OpcodeDescriptionsCommon
/* harmony export */ });
var OpcodeDescriptionsCommon;
(function (OpcodeDescriptionsCommon) {
    OpcodeDescriptionsCommon["OP_0"] = "Push the Script Number 0 onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_1"] = "Push the next byte onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_2"] = "Push the next 2 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_3"] = "Push the next 3 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_4"] = "Push the next 4 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_5"] = "Push the next 5 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_6"] = "Push the next 6 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_7"] = "Push the next 7 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_8"] = "Push the next 8 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_9"] = "Push the next 9 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_10"] = "Push the next 10 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_11"] = "Push the next 11 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_12"] = "Push the next 12 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_13"] = "Push the next 13 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_14"] = "Push the next 14 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_15"] = "Push the next 15 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_16"] = "Push the next 16 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_17"] = "Push the next 17 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_18"] = "Push the next 18 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_19"] = "Push the next 19 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_20"] = "Push the next 20 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_21"] = "Push the next 21 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_22"] = "Push the next 22 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_23"] = "Push the next 23 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_24"] = "Push the next 24 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_25"] = "Push the next 25 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_26"] = "Push the next 26 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_27"] = "Push the next 27 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_28"] = "Push the next 28 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_29"] = "Push the next 29 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_30"] = "Push the next 30 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_31"] = "Push the next 31 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_32"] = "Push the next 32 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_33"] = "Push the next 33 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_34"] = "Push the next 34 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_35"] = "Push the next 35 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_36"] = "Push the next 36 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_37"] = "Push the next 37 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_38"] = "Push the next 38 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_39"] = "Push the next 39 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_40"] = "Push the next 40 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_41"] = "Push the next 41 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_42"] = "Push the next 42 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_43"] = "Push the next 43 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_44"] = "Push the next 44 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_45"] = "Push the next 45 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_46"] = "Push the next 46 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_47"] = "Push the next 47 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_48"] = "Push the next 48 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_49"] = "Push the next 49 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_50"] = "Push the next 50 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_51"] = "Push the next 51 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_52"] = "Push the next 52 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_53"] = "Push the next 53 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_54"] = "Push the next 54 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_55"] = "Push the next 55 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_56"] = "Push the next 56 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_57"] = "Push the next 57 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_58"] = "Push the next 58 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_59"] = "Push the next 59 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_60"] = "Push the next 60 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_61"] = "Push the next 61 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_62"] = "Push the next 62 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_63"] = "Push the next 63 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_64"] = "Push the next 64 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_65"] = "Push the next 65 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_66"] = "Push the next 66 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_67"] = "Push the next 67 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_68"] = "Push the next 68 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_69"] = "Push the next 69 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_70"] = "Push the next 70 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_71"] = "Push the next 71 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_72"] = "Push the next 72 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_73"] = "Push the next 73 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_74"] = "Push the next 74 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_75"] = "Push the next 75 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHDATA_1"] = "Read the next Uint8 and push that number of bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHDATA_2"] = "Read the next little-endian Uint16 and push that number of bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHDATA_4"] = "Read the next little-endian Uint32 and push that number of bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_1NEGATE"] = "Push the Script Number -1 onto the stack.";
    OpcodeDescriptionsCommon["OP_RESERVED"] = "Error unless found in an unexecuted conditional branch. Note: OP_RESERVED does not count toward the opcode limit.";
    OpcodeDescriptionsCommon["OP_1"] = "Push the Script Number 1 onto the stack.";
    OpcodeDescriptionsCommon["OP_2"] = "Push the Script Number 2 onto the stack.";
    OpcodeDescriptionsCommon["OP_3"] = "Push the Script Number 3 onto the stack.";
    OpcodeDescriptionsCommon["OP_4"] = "Push the Script Number 4 onto the stack.";
    OpcodeDescriptionsCommon["OP_5"] = "Push the Script Number 5 onto the stack.";
    OpcodeDescriptionsCommon["OP_6"] = "Push the Script Number 6 onto the stack.";
    OpcodeDescriptionsCommon["OP_7"] = "Push the Script Number 7 onto the stack.";
    OpcodeDescriptionsCommon["OP_8"] = "Push the Script Number 8 onto the stack.";
    OpcodeDescriptionsCommon["OP_9"] = "Push the Script Number 9 onto the stack.";
    OpcodeDescriptionsCommon["OP_10"] = "Push the Script Number 10 onto the stack.";
    OpcodeDescriptionsCommon["OP_11"] = "Push the Script Number 11 onto the stack.";
    OpcodeDescriptionsCommon["OP_12"] = "Push the Script Number 12 onto the stack.";
    OpcodeDescriptionsCommon["OP_13"] = "Push the Script Number 13 onto the stack.";
    OpcodeDescriptionsCommon["OP_14"] = "Push the Script Number 14 onto the stack.";
    OpcodeDescriptionsCommon["OP_15"] = "Push the Script Number 15 onto the stack.";
    OpcodeDescriptionsCommon["OP_16"] = "Push the Script Number 16 onto the stack.";
    OpcodeDescriptionsCommon["OP_NOP"] = "No operation. Note: OP_NOP counts toward the opcode limit.";
    OpcodeDescriptionsCommon["OP_VER"] = "Error unless found in an unexecuted conditional branch. Note: OP_VER counts toward the opcode limit. (Historically, this pushed a protocol version number to the stack.)";
    OpcodeDescriptionsCommon["OP_IF"] = "Pop the top item from the stack. If it is not \"truthy\", skip evaluation until the matching OP_ELSE or OP_ENDIF.";
    OpcodeDescriptionsCommon["OP_NOTIF"] = "Evaluate OP_NOT followed by OP_IF.";
    OpcodeDescriptionsCommon["OP_VERIF"] = "Error, even when found in an unexecuted conditional branch. (Historically, this was a combination of OP_VER and OP_IF.)";
    OpcodeDescriptionsCommon["OP_VERNOTIF"] = "Error, even when found in an unexecuted conditional branch. (Historically, this was a combination of OP_VER and OP_NOTIF.)";
    OpcodeDescriptionsCommon["OP_ELSE"] = "Invert conditional evaluation within the current OP_IF ... OP_ENDIF block. (If evaluation is enabled, disable it, if it is disabled, enable it.)";
    OpcodeDescriptionsCommon["OP_ENDIF"] = "End the current OP_IF ... OP_ENDIF block.";
    OpcodeDescriptionsCommon["OP_VERIFY"] = "Pop the top item from the stack and error if it isn't \"truthy\".";
    OpcodeDescriptionsCommon["OP_RETURN"] = "Error when executed.";
    OpcodeDescriptionsCommon["OP_TOALTSTACK"] = "Pop the top item from the stack and push it onto the alternate stack.";
    OpcodeDescriptionsCommon["OP_FROMALTSTACK"] = "Pop the top item from the alternate stack and push it onto the stack.";
    OpcodeDescriptionsCommon["OP_2DROP"] = "Pop the top 2 items from the stack and discard them.";
    OpcodeDescriptionsCommon["OP_2DUP"] = "Duplicate the top 2 items on the stack. (E.g. [a, b] -> [a, b, a, b])";
    OpcodeDescriptionsCommon["OP_3DUP"] = "Duplicate the top 3 items on the stack. (E.g. [a, b, c] -> [a, b, c, a, b, c])";
    OpcodeDescriptionsCommon["OP_2OVER"] = "Duplicate the 2 items beginning at a depth of 2 on the stack. (E.g. [a, b, c, d] -> [a, b, c, d, a, b])";
    OpcodeDescriptionsCommon["OP_2ROT"] = "Rotate the top 6 items on the stack, bringing the fifth and sixth items to the top. (E.g. [a, b, c, d, e, f] -> [c, d, e, f, a, b])";
    OpcodeDescriptionsCommon["OP_2SWAP"] = "Swap the positions of the top two pairs of items on the stack. (E.g. [a, b, c, d] -> [c, d, a, b])";
    OpcodeDescriptionsCommon["OP_IFDUP"] = "If the top item on the stack is \"truthy\", duplicate it.";
    OpcodeDescriptionsCommon["OP_DEPTH"] = "Push the current number of stack items as a Script Number.";
    OpcodeDescriptionsCommon["OP_DROP"] = "Pop the top item from the stack and discard it. (E.g. [a] -> [])";
    OpcodeDescriptionsCommon["OP_DUP"] = "Duplicate the top item on the stack. (E.g. [a] -> [a, a])";
    OpcodeDescriptionsCommon["OP_NIP"] = "Remove the second-to-top item from the stack. (E.g. [a, b] -> [b])";
    OpcodeDescriptionsCommon["OP_OVER"] = "Duplicate the second-to-top item on the stack. (E.g. [a, b] -> [a, b, a])";
    OpcodeDescriptionsCommon["OP_PICK"] = "Pop the top item from the stack as a Script Number. Duplicate the item at that depth (zero-indexed), placing it on top of the stack. (E.g. [a, b, c, 2] -> [a, b, c, a])";
    OpcodeDescriptionsCommon["OP_ROLL"] = "Pop the top item from the stack as a Script Number. Move the item at that depth (zero-indexed) to the top of the stack. (E.g. [a, b, c, 2] -> [b, c, a])";
    OpcodeDescriptionsCommon["OP_ROT"] = "Rotate the top 3 items on the stack, bringing the third item to the top. (E.g. [a, b, c] -> [b, c, a])";
    OpcodeDescriptionsCommon["OP_SWAP"] = "Swap the top two items on the stack. (E.g. [a, b] -> [b, a])";
    OpcodeDescriptionsCommon["OP_TUCK"] = "Duplicate the item at the top of the stack, inserting it below the second-to-top item. (E.g. [a, b] -> [b, a, b])";
    OpcodeDescriptionsCommon["OP_CAT"] = "Error, even when found in an unexecuted conditional branch. (Historically, this concatenated two stack items.)";
    OpcodeDescriptionsCommon["OP_SUBSTR"] = "Error, even when found in an unexecuted conditional branch. (Historically, this returned a section of a stack item.)";
    OpcodeDescriptionsCommon["OP_LEFT"] = "Error, even when found in an unexecuted conditional branch. (Historically, this returned a section to the left of a point in a stack item.)";
    OpcodeDescriptionsCommon["OP_RIGHT"] = "Error, even when found in an unexecuted conditional branch. (Historically, this returned a section to the right of a point in a stack item.)";
    OpcodeDescriptionsCommon["OP_SIZE"] = "Push the byte-length of the top stack item as a Script Number.";
    OpcodeDescriptionsCommon["OP_INVERT"] = "Error, even when found in an unexecuted conditional branch. (Historically, this flipped all the bits in a stack item.)";
    OpcodeDescriptionsCommon["OP_AND"] = "Error, even when found in an unexecuted conditional branch. (Historically, this performed a boolean AND on each bit in two stack items.)";
    OpcodeDescriptionsCommon["OP_OR"] = "Error, even when found in an unexecuted conditional branch. (Historically, this performed a boolean OR on each bit in two stack items.)";
    OpcodeDescriptionsCommon["OP_XOR"] = "Error, even when found in an unexecuted conditional branch. (Historically, this performed a boolean XOR on each bit in two stack items.)";
    OpcodeDescriptionsCommon["OP_EQUAL"] = "Pop the top two items from the stack and compare them byte-by-byte. If they are the same, push a Script Number 1, otherwise push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_EQUALVERIFY"] = "Pop the top two items from the stack and compare them byte-by-byte. If the values are different, error. (This operation is a combination of OP_EQUAL followed by OP_VERIFY.)";
    OpcodeDescriptionsCommon["OP_RESERVED1"] = "Error unless found in an unexecuted conditional branch. Note: OP_RESERVED1 counts toward the opcode limit.";
    OpcodeDescriptionsCommon["OP_RESERVED2"] = "Error unless found in an unexecuted conditional branch. Note: OP_RESERVED2 counts toward the opcode limit.";
    OpcodeDescriptionsCommon["OP_1ADD"] = "Pop the top item from the stack as a Script Number, add 1, then push the result.";
    OpcodeDescriptionsCommon["OP_1SUB"] = "Pop the top item from the stack as a Script Number, subtract 1, then push the result.";
    OpcodeDescriptionsCommon["OP_2MUL"] = "Error, even when found in an unexecuted conditional branch. (Historically, this multiplied a Script Number by 2.)";
    OpcodeDescriptionsCommon["OP_2DIV"] = "Error, even when found in an unexecuted conditional branch. (Historically, this divided a Script Number by 2.)";
    OpcodeDescriptionsCommon["OP_NEGATE"] = "Pop the top item from the stack as a Script Number, negate it, then push the result.";
    OpcodeDescriptionsCommon["OP_ABS"] = "Pop the top item from the stack as a Script Number, take its absolute value, then push the result.";
    OpcodeDescriptionsCommon["OP_NOT"] = "Pop the top item from the stack as a Script Number. If its value is 0, push a Script Number 1, otherwise, push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_0NOTEQUAL"] = "Pop the top item from the stack as a Script Number. If its value is not 0, push a Script Number 1, otherwise, push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_ADD"] = "Pop the top two items from the stack as Script Numbers. Add them, then push the result.";
    OpcodeDescriptionsCommon["OP_SUB"] = "Pop the top two items from the stack as Script Numbers. Subtract the top item from the second item, then push the result.";
    OpcodeDescriptionsCommon["OP_MUL"] = "Error, even when found in an unexecuted conditional branch. (Historically, this multiplied two Script Numbers.)";
    OpcodeDescriptionsCommon["OP_DIV"] = "Error, even when found in an unexecuted conditional branch. (Historically, this divided two Script Numbers.)";
    OpcodeDescriptionsCommon["OP_MOD"] = "Error, even when found in an unexecuted conditional branch. (Historically, this returned the remainder after dividing one Script Number by another.)";
    OpcodeDescriptionsCommon["OP_LSHIFT"] = "Error, even when found in an unexecuted conditional branch. (Historically, this performed a sign-preserving, left bit shift.)";
    OpcodeDescriptionsCommon["OP_RSHIFT"] = "Error, even when found in an unexecuted conditional branch. (Historically, this performed a sign-preserving, right bit shift.)";
    OpcodeDescriptionsCommon["OP_BOOLAND"] = "Pop the top two items from the stack as Script Numbers. If neither value is a Script Number 0, push a Script Number 1. Otherwise, push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_BOOLOR"] = "Pop the top two items from the stack as Script Numbers. If either value is a Script Number 1, push a Script Number 1. Otherwise, push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_NUMEQUAL"] = "Pop the top two items from the stack as Script Numbers. If the values are equal, push a Script Number 1. Otherwise, push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_NUMEQUALVERIFY"] = "Pop the top two items from the stack as Script Numbers. If the values are different, error. (This operation is a combination of OP_NUMEQUAL followed by OP_VERIFY.)";
    OpcodeDescriptionsCommon["OP_NUMNOTEQUAL"] = "Pop the top two items from the stack as Script Numbers. If the values are not equal, push a Script Number 1. Otherwise, push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_LESSTHAN"] = "Pop the top two items from the stack as Script Numbers. If the second item is less than top item, push a Script Number 1. Otherwise, push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_GREATERTHAN"] = "Pop the top two items from the stack as Script Numbers. If the second item is greater than top item, push a Script Number 1. Otherwise, push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_LESSTHANOREQUAL"] = "Pop the top two items from the stack as Script Numbers. If the second item is less than or equal to the top item, push a Script Number 1. Otherwise, push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_GREATERTHANOREQUAL"] = "Pop the top two items from the stack as Script Numbers. If the second item is greater than or equal to the top item, push a Script Number 1. Otherwise, push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_MIN"] = "Pop the top two items from the stack as Script Numbers. Push the smaller of the two numbers.";
    OpcodeDescriptionsCommon["OP_MAX"] = "Pop the top two items from the stack as Script Numbers. Push the larger of the two numbers.";
    OpcodeDescriptionsCommon["OP_WITHIN"] = "Pop the top three items from the stack as Script Numbers. If the top number is within the range defined by the following two numbers (left-inclusive), push a Script Number 1. Otherwise, push a Script Number 0. (E.g. for [a, b, c]: if (b <= a), and (a < c), [1]. Else [0].)";
    OpcodeDescriptionsCommon["OP_RIPEMD160"] = "Pop the top item from the stack and pass it through ripemd160, pushing the result onto the stack.";
    OpcodeDescriptionsCommon["OP_SHA1"] = "Pop the top item from the stack and pass it through sha1, pushing the result onto the stack.";
    OpcodeDescriptionsCommon["OP_SHA256"] = "Pop the top item from the stack and pass it through sha256, pushing the result onto the stack.";
    OpcodeDescriptionsCommon["OP_HASH160"] = "Pop the top item from the stack and pass it through sha256, then ripemd160, pushing the result onto the stack.";
    OpcodeDescriptionsCommon["OP_HASH256"] = "Pop the top item from the stack and pass it through sha256 twice, pushing the result onto the stack.";
    OpcodeDescriptionsCommon["OP_CODESEPARATOR"] = "Update the value of lastCodeSeparator to the instruction pointer's current value. (This reduces the coverage of signing serializations used in signature verification operations.)";
    OpcodeDescriptionsCommon["OP_CHECKSIG"] = "Pop the top two items from the stack. Treat the top as a signature and the second as a public key. If the signature is valid, push a Script Number 1, otherwise push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_CHECKSIGVERIFY"] = "Pop the top two items from the stack. Treat the top as a signature and the second as a public key. If the signature is not valid, error. (This operation is a combination of OP_CHECKSIG followed by OP_VERIFY.)";
    OpcodeDescriptionsCommon["OP_CHECKMULTISIG"] = "Pop items from the stack: first pop the Script Number of public keys, then pop each of those public keys. Next, pop the Script Number of required signatures, then pop each of those signatures. Finally, pop a final Script Number which must be 0 due to a protocol bug. Checking each signature against each public key in order, if all signatures are valid \u2013 and the required number of signatures have been provided \u2013 push a Script Number 1, otherwise push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_CHECKMULTISIGVERIFY"] = "Pop items from the stack: first pop the Script Number of public keys, then pop each of those public keys. Next, pop the Script Number of required signatures, then pop each of those signatures. Finally, (due to a protocol bug) pop an unused final Script Number which must be 0. Checking each signature against each public key in order, if any signatures are invalid \u2013 or the required number of signatures have not been provided \u2013 error. (This operation is a combination of OP_CHECKMULTISIG followed by OP_VERIFY.)";
    OpcodeDescriptionsCommon["OP_NOP1"] = "No operation (reserved for future expansion). Note: OP_NOP1 counts toward the opcode limit.";
    OpcodeDescriptionsCommon["OP_CHECKLOCKTIMEVERIFY"] = "Verify the transaction occurs after an absolute block time or height: read the top item on the stack as a Script Number (without removing it), and compare it to the transaction's locktime. If the required locktime has not passed, or if locktime has been disabled for this input by a maximized sequence number, error.";
    OpcodeDescriptionsCommon["OP_CHECKSEQUENCEVERIFY"] = "Verify the transaction occurs after the output being spent has \"aged\" by a relative block time or block height since it was created: read the top item on the stack as a Script Number (without removing it), and compare it to the age encoded in the input's sequence number. If the required relative locktime has not passed, or if relative locktime has been disabled by the sequence number or the transaction version, error.";
    OpcodeDescriptionsCommon["OP_NOP4"] = "No operation (reserved for future expansion). Note: OP_NOP4 counts toward the opcode limit.";
    OpcodeDescriptionsCommon["OP_NOP6"] = "No operation (reserved for future expansion). Note: OP_NOP6 counts toward the opcode limit.";
    OpcodeDescriptionsCommon["OP_NOP5"] = "No operation (reserved for future expansion). Note: OP_NOP5 counts toward the opcode limit.";
    OpcodeDescriptionsCommon["OP_NOP7"] = "No operation (reserved for future expansion). Note: OP_NOP7 counts toward the opcode limit.";
    OpcodeDescriptionsCommon["OP_NOP8"] = "No operation (reserved for future expansion). Note: OP_NOP8 counts toward the opcode limit.";
    OpcodeDescriptionsCommon["OP_NOP9"] = "No operation (reserved for future expansion). Note: OP_NOP9 counts toward the opcode limit.";
    OpcodeDescriptionsCommon["OP_NOP10"] = "No operation (reserved for future expansion). Note: OP_NOP10 counts toward the opcode limit.";
})(OpcodeDescriptionsCommon || (OpcodeDescriptionsCommon = {}));
//# sourceMappingURL=descriptions.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/encoding.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/encoding.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export decodeBitcoinSignature [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isValidCompressedPublicKeyEncoding [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isValidPublicKeyEncoding [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isValidSignatureEncodingBCHTransaction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isValidSignatureEncodingDER [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isValidUncompressedPublicKeyEncoding [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isValidUncompressedPublicKeyEncoding": () => /* binding */ isValidUncompressedPublicKeyEncoding,
/* harmony export */   "isValidCompressedPublicKeyEncoding": () => /* binding */ isValidCompressedPublicKeyEncoding,
/* harmony export */   "isValidPublicKeyEncoding": () => /* binding */ isValidPublicKeyEncoding,
/* harmony export */   "isValidSignatureEncodingDER": () => /* binding */ isValidSignatureEncodingDER,
/* harmony export */   "isValidSignatureEncodingBCHTransaction": () => /* binding */ isValidSignatureEncodingBCHTransaction,
/* harmony export */   "decodeBitcoinSignature": () => /* binding */ decodeBitcoinSignature
/* harmony export */ });
/* harmony import */ var _bch_bch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bch/bch */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch.js");
/* harmony import */ var _signing_serialization__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./signing-serialization */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js");


const isValidUncompressedPublicKeyEncoding = (publicKey) => publicKey.length === 65 /* uncompressedByteLength */ &&
    publicKey[0] === 4 /* uncompressedHeaderByte */;
const isValidCompressedPublicKeyEncoding = (publicKey) => publicKey.length === 33 /* compressedByteLength */ &&
    (publicKey[0] === 2 /* compressedHeaderByteEven */ ||
        publicKey[0] === 3 /* compressedHeaderByteOdd */);
const isValidPublicKeyEncoding = (publicKey) => isValidCompressedPublicKeyEncoding(publicKey) ||
    isValidUncompressedPublicKeyEncoding(publicKey);
const isNegative = (value) => 
// eslint-disable-next-line no-bitwise
(value & 128 /* negative */) !== 0;
const hasUnnecessaryPadding = (length, firstByte, secondByte) => length > 1 && firstByte === 0 && !isNegative(secondByte);
const isValidInteger = (signature, tagIndex, length, valueIndex
// eslint-disable-next-line max-params
) => signature[tagIndex] === 2 /* integerTagType */ &&
    length !== 0 &&
    !isNegative(signature[valueIndex]) &&
    !hasUnnecessaryPadding(length, signature[valueIndex], signature[valueIndex + 1]);
/**
 * Validate a DER-encoded signature.
 *
 * @remarks
 * This function is consensus-critical since BIP66, but differs from the BIP66
 * specification in that it does not validate the existence of a signing
 * serialization type byte at the end of the signature (to support
 * OP_CHECKDATASIG). To validate a bitcoin-encoded signature (including null
 * signatures), use `isValidSignatureEncodingBCH`.
 *
 * @privateRemarks
 * From the Bitcoin ABC C++ implementation:
 *
 * Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]
 * total-length: 1-byte length descriptor of everything that follows,
 * excluding the sighash byte.
 * R-length: 1-byte length descriptor of the R value that follows.
 * R: arbitrary-length big-endian encoded R value. It must use the
 * shortest possible encoding for a positive integers (which means no null
 * bytes at the start, except a single one when the next byte has its highest
 * bit set).
 * S-length: 1-byte length descriptor of the S value that follows.
 * S: arbitrary-length big-endian encoded S value. The same rules apply.
 */
// eslint-disable-next-line complexity
const isValidSignatureEncodingDER = (signature) => {
    const correctLengthRange = signature.length > 8 /* minimumLength */ &&
        signature.length < 72 /* maximumLength */;
    const correctSequenceTagType = signature[0 /* sequenceTagIndex */] === 48 /* sequenceTagType */;
    const correctSequenceLength = signature[1 /* sequenceLengthIndex */] ===
        signature.length - 2 /* sequenceMetadataBytes */;
    const rLength = signature[3 /* rLengthIndex */];
    if (rLength === undefined) {
        return false;
    }
    const consistentRLength = rLength <= signature.length - 7 /* minimumNonRValueBytes */;
    const rIsValid = isValidInteger(signature, 2 /* rTagIndex */, rLength, 4 /* rValueIndex */);
    const sTagIndex = 4 /* rValueIndex */ + rLength; // eslint-disable-line @typescript-eslint/restrict-plus-operands
    const sLengthIndex = sTagIndex + 1;
    const sLength = signature[sLengthIndex];
    if (sLength === undefined) {
        return false;
    }
    const sValueIndex = sLengthIndex + 1;
    const consistentSLength = sValueIndex + sLength === signature.length;
    const sIsValid = isValidInteger(signature, sTagIndex, sLength, sValueIndex);
    return (correctLengthRange &&
        correctSequenceTagType &&
        correctSequenceLength &&
        consistentRLength &&
        rIsValid &&
        consistentSLength &&
        sIsValid);
};
/**
 * Validate the encoding of a transaction signature, including a signing
 * serialization type byte (A.K.A. "sighash" byte).
 *
 * @param transactionSignature - the full transaction signature
 */
const isValidSignatureEncodingBCHTransaction = (transactionSignature) => transactionSignature.length === 0 ||
    transactionSignature.length === _bch_bch__WEBPACK_IMPORTED_MODULE_0__.ConsensusBCH.schnorrSignatureLength + 1 ||
    ((0,_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.isDefinedSigningSerializationType)(transactionSignature[transactionSignature.length - 1]) &&
        isValidSignatureEncodingDER(transactionSignature.slice(0, transactionSignature.length - 1)));
/**
 * Split a bitcoin-encoded signature into a signature and signing serialization
 * type.
 *
 * While a bitcoin-encoded signature only includes a single byte to encode the
 * signing serialization type, a 3-byte forkId can be appended to the signing
 * serialization to provide replay-protection between different forks. (See
 * Bitcoin Cash's Replay Protected Sighash spec for details.)
 *
 * @param signature - a signature which passes `isValidSignatureEncoding`
 */
const decodeBitcoinSignature = (encodedSignature) => ({
    signature: encodedSignature.slice(0, encodedSignature.length - 1),
    signingSerializationType: new Uint8Array([
        encodedSignature[encodedSignature.length - 1],
    ]),
});
//# sourceMappingURL=encoding.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export AuthenticationErrorCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! export applyError [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AuthenticationErrorCommon": () => /* binding */ AuthenticationErrorCommon,
/* harmony export */   "applyError": () => /* binding */ applyError
/* harmony export */ });
var AuthenticationErrorCommon;
(function (AuthenticationErrorCommon) {
    AuthenticationErrorCommon["calledReserved"] = "Program called an unassigned, reserved operation.";
    AuthenticationErrorCommon["calledReturn"] = "Program called an OP_RETURN operation.";
    AuthenticationErrorCommon["calledUpgradableNop"] = "Program called a disallowed upgradable non-operation (OP_NOP1-OP_NOP10).";
    AuthenticationErrorCommon["checkSequenceUnavailable"] = "Program called an OP_CHECKSEQUENCEVERIFY operation, but OP_CHECKSEQUENCEVERIFY requires transaction version 2 or higher.";
    AuthenticationErrorCommon["disabledOpcode"] = "Program contains a disabled opcode.";
    AuthenticationErrorCommon["emptyAlternateStack"] = "Tried to read from an empty alternate stack.";
    AuthenticationErrorCommon["emptyStack"] = "Tried to read from an empty stack.";
    AuthenticationErrorCommon["exceededMaximumBytecodeLengthLocking"] = "The provided locking bytecode exceeds the maximum bytecode length (10,000 bytes).";
    AuthenticationErrorCommon["exceededMaximumBytecodeLengthUnlocking"] = "The provided unlocking bytecode exceeds the maximum bytecode length (10,000 bytes).";
    AuthenticationErrorCommon["exceededMaximumStackDepth"] = "Program exceeded the maximum stack depth (1,000 items).";
    AuthenticationErrorCommon["exceededMaximumOperationCount"] = "Program exceeded the maximum operation count (201 operations).";
    AuthenticationErrorCommon["exceedsMaximumMultisigPublicKeyCount"] = "Program called an OP_CHECKMULTISIG which exceeds the maximum public key count (20 public keys).";
    AuthenticationErrorCommon["exceedsMaximumPush"] = "Push exceeds the push size limit of 520 bytes.";
    AuthenticationErrorCommon["failedVerify"] = "Program failed an OP_VERIFY operation.";
    AuthenticationErrorCommon["invalidStackIndex"] = "Tried to read from an invalid stack index.";
    AuthenticationErrorCommon["incompatibleLocktimeType"] = "Program called an OP_CHECKLOCKTIMEVERIFY operation with an incompatible locktime type. The transaction locktime and required locktime must both refer to either a block height or a block time.";
    AuthenticationErrorCommon["incompatibleSequenceType"] = "Program called an OP_CHECKSEQUENCEVERIFY operation with an incompatible sequence type flag. The input sequence number and required sequence number must both use the same sequence locktime type.";
    AuthenticationErrorCommon["insufficientPublicKeys"] = "Program called an OP_CHECKMULTISIG operation which requires signatures from more public keys than are provided.";
    AuthenticationErrorCommon["invalidNaturalNumber"] = "Invalid input: the key/signature count inputs for OP_CHECKMULTISIG require a natural number (n > 0).";
    AuthenticationErrorCommon["invalidProtocolBugValue"] = "The OP_CHECKMULTISIG protocol bug value must be a Script Number 0 (to comply with the \"NULLDUMMY\" rule).";
    AuthenticationErrorCommon["invalidPublicKeyEncoding"] = "Encountered an improperly encoded public key.";
    AuthenticationErrorCommon["invalidScriptNumber"] = "Invalid input: this operation requires a valid Script Number.";
    AuthenticationErrorCommon["invalidSignatureEncoding"] = "Encountered an improperly encoded signature.";
    AuthenticationErrorCommon["locktimeDisabled"] = "Program called an OP_CHECKLOCKTIMEVERIFY operation, but locktime is disabled for this transaction.";
    AuthenticationErrorCommon["malformedLockingBytecode"] = "The provided locking bytecode is malformed.";
    AuthenticationErrorCommon["malformedPush"] = "Program must be long enough to push the requested number of bytes.";
    AuthenticationErrorCommon["malformedUnlockingBytecode"] = "The provided unlocking bytecode is malformed.";
    AuthenticationErrorCommon["negativeLocktime"] = "Program called an OP_CHECKLOCKTIMEVERIFY or OP_CHECKSEQUENCEVERIFY operation with a negative locktime.";
    AuthenticationErrorCommon["nonEmptyExecutionStack"] = "Program completed with a non-empty execution stack (missing `OP_ENDIF`).";
    AuthenticationErrorCommon["nonMinimalPush"] = "Push operations must use the smallest possible encoding.";
    AuthenticationErrorCommon["nonNullSignatureFailure"] = "Program failed a signature verification with a non-null signature (violating the \"NULLFAIL\" rule).";
    AuthenticationErrorCommon["requiresCleanStack"] = "Program completed with an unexpected number of items on the stack (must be exactly 1).";
    AuthenticationErrorCommon["schnorrSizedSignatureInCheckMultiSig"] = "Program used a schnorr-sized signature (65 bytes) in an OP_CHECKMULTISIG operation.";
    AuthenticationErrorCommon["unexpectedElse"] = "Encountered an OP_ELSE outside of an OP_IF ... OP_ENDIF block.";
    AuthenticationErrorCommon["unexpectedEndIf"] = "Encountered an OP_ENDIF which is not following a matching OP_IF.";
    AuthenticationErrorCommon["unknownOpcode"] = "Called an unknown opcode.";
    AuthenticationErrorCommon["unmatchedSequenceDisable"] = "Program called an OP_CHECKSEQUENCEVERIFY operation requiring the disable flag, but the input's sequence number is missing the disable flag.";
    AuthenticationErrorCommon["unsatisfiedLocktime"] = "Program called an OP_CHECKLOCKTIMEVERIFY operation which requires a locktime greater than the transaction's locktime.";
    AuthenticationErrorCommon["unsatisfiedSequenceNumber"] = "Program called an OP_CHECKSEQUENCEVERIFY operation which requires a sequence number greater than the input's sequence number.";
    AuthenticationErrorCommon["unsuccessfulEvaluation"] = "Unsuccessful evaluation: completed with a non-truthy value on top of the stack.";
})(AuthenticationErrorCommon || (AuthenticationErrorCommon = {}));
/**
 * Applies the `error` to a `state`.
 *
 * @remarks
 * If the state already has an error, this method does not override it.
 * (Evaluation should end after the first encountered error, so further errors
 * aren't relevant.)
 */
const applyError = (error, state) => ({
    ...state,
    error: state.error === undefined ? error : state.error,
});
//# sourceMappingURL=errors.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! export conditionalFlowControlOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opElse [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opEndIf [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opIf [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opNotIf [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opReturn [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opVerify [provided] [no usage info] [missing usage info prevents renaming] */
/*! export reservedOperation [provided] [no usage info] [missing usage info prevents renaming] */
/*! export unconditionalFlowControlOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "opVerify": () => /* binding */ opVerify,
/* harmony export */   "reservedOperation": () => /* binding */ reservedOperation,
/* harmony export */   "opReturn": () => /* binding */ opReturn,
/* harmony export */   "conditionalFlowControlOperations": () => /* binding */ conditionalFlowControlOperations,
/* harmony export */   "opIf": () => /* binding */ opIf,
/* harmony export */   "opNotIf": () => /* binding */ opNotIf,
/* harmony export */   "opEndIf": () => /* binding */ opEndIf,
/* harmony export */   "opElse": () => /* binding */ opElse,
/* harmony export */   "unconditionalFlowControlOperations": () => /* binding */ unconditionalFlowControlOperations
/* harmony export */ });
/* harmony import */ var _arithmetic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arithmetic */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js");
/* harmony import */ var _combinators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./combinators */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js");
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js");
/* harmony import */ var _opcodes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js");





const opVerify = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_1__.useOneStackItem)(state, (nextState, [item]) => (0,_common__WEBPACK_IMPORTED_MODULE_2__.stackItemIsTruthy)(item)
    ? nextState
    : (0,_errors__WEBPACK_IMPORTED_MODULE_3__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.failedVerify, nextState));
const reservedOperation = () => (state) => (0,_errors__WEBPACK_IMPORTED_MODULE_3__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.calledReserved, state);
const opReturn = () => (state) => (0,_errors__WEBPACK_IMPORTED_MODULE_3__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.calledReturn, state);
const conditionalFlowControlOperations = () => ({
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_RESERVED]: reservedOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_VER]: reservedOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_VERIFY]: opVerify(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_RETURN]: opReturn(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_RESERVED1]: reservedOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_RESERVED2]: reservedOperation(),
});
const opIf = () => (state) => {
    if (state.executionStack.every((item) => item)) {
        // eslint-disable-next-line functional/immutable-data
        const element = state.stack.pop();
        if (element === undefined) {
            return (0,_errors__WEBPACK_IMPORTED_MODULE_3__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.emptyStack, state);
        }
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        state.executionStack.push((0,_common__WEBPACK_IMPORTED_MODULE_2__.stackItemIsTruthy)(element));
        return state;
    }
    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
    state.executionStack.push(false);
    return state;
};
const opNotIf = (flags) => {
    const not = (0,_combinators__WEBPACK_IMPORTED_MODULE_1__.conditionallyEvaluate)((0,_arithmetic__WEBPACK_IMPORTED_MODULE_0__.opNot)(flags));
    const ifOp = opIf();
    return (state) => ifOp(not(state));
};
const opEndIf = () => (state) => {
    // eslint-disable-next-line functional/immutable-data
    const element = state.executionStack.pop();
    if (element === undefined) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_3__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.unexpectedEndIf, state);
    }
    return state;
};
const opElse = () => (state) => {
    const top = state.executionStack[state.executionStack.length - 1];
    if (top === undefined) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_3__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.unexpectedElse, state);
    }
    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
    state.executionStack[state.executionStack.length - 1] = !top;
    return state;
};
const unconditionalFlowControlOperations = (flags) => ({
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_IF]: opIf(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_NOTIF]: opNotIf(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_VERIF]: reservedOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_VERNOTIF]: reservedOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_ELSE]: opElse(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_ENDIF]: opEndIf(),
});
//# sourceMappingURL=flow-control.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/nop.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/nop.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! export disabledOperation [provided] [no usage info] [missing usage info prevents renaming] */
/*! export disabledOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export nonOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opNop [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "opNop": () => /* binding */ opNop,
/* harmony export */   "nonOperations": () => /* binding */ nonOperations,
/* harmony export */   "disabledOperation": () => /* binding */ disabledOperation,
/* harmony export */   "disabledOperations": () => /* binding */ disabledOperations
/* harmony export */ });
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js");
/* harmony import */ var _opcodes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js");


const opNop = (flags) => (state) => flags.disallowUpgradableNops
    ? (0,_errors__WEBPACK_IMPORTED_MODULE_0__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_0__.AuthenticationErrorCommon.calledUpgradableNop, state)
    : state;
const nonOperations = (flags) => ({
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_NOP]: opNop(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_NOP1]: opNop(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_NOP4]: opNop(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_NOP5]: opNop(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_NOP6]: opNop(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_NOP7]: opNop(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_NOP8]: opNop(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_NOP9]: opNop(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_NOP10]: opNop(flags),
});
/**
 * "Disabled" operations are explicitly forbidden from occurring anywhere in a
 * script, even within an unexecuted branch.
 */
const disabledOperation = () => (state) => (0,_errors__WEBPACK_IMPORTED_MODULE_0__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_0__.AuthenticationErrorCommon.unknownOpcode, state);
const disabledOperations = () => ({
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_CAT]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_SUBSTR]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_LEFT]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_RIGHT]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_INVERT]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_AND]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_OR]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_XOR]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_2MUL]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_2DIV]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_MUL]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_DIV]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_MOD]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_LSHIFT]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_RSHIFT]: disabledOperation(),
});
//# sourceMappingURL=nop.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! export OpcodesCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpcodesCommon": () => /* binding */ OpcodesCommon
/* harmony export */ });
var OpcodesCommon;
(function (OpcodesCommon) {
    /**
     * A.K.A. `OP_FALSE` or `OP_PUSHBYTES_0`
     */
    OpcodesCommon[OpcodesCommon["OP_0"] = 0] = "OP_0";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_1"] = 1] = "OP_PUSHBYTES_1";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_2"] = 2] = "OP_PUSHBYTES_2";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_3"] = 3] = "OP_PUSHBYTES_3";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_4"] = 4] = "OP_PUSHBYTES_4";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_5"] = 5] = "OP_PUSHBYTES_5";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_6"] = 6] = "OP_PUSHBYTES_6";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_7"] = 7] = "OP_PUSHBYTES_7";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_8"] = 8] = "OP_PUSHBYTES_8";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_9"] = 9] = "OP_PUSHBYTES_9";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_10"] = 10] = "OP_PUSHBYTES_10";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_11"] = 11] = "OP_PUSHBYTES_11";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_12"] = 12] = "OP_PUSHBYTES_12";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_13"] = 13] = "OP_PUSHBYTES_13";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_14"] = 14] = "OP_PUSHBYTES_14";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_15"] = 15] = "OP_PUSHBYTES_15";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_16"] = 16] = "OP_PUSHBYTES_16";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_17"] = 17] = "OP_PUSHBYTES_17";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_18"] = 18] = "OP_PUSHBYTES_18";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_19"] = 19] = "OP_PUSHBYTES_19";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_20"] = 20] = "OP_PUSHBYTES_20";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_21"] = 21] = "OP_PUSHBYTES_21";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_22"] = 22] = "OP_PUSHBYTES_22";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_23"] = 23] = "OP_PUSHBYTES_23";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_24"] = 24] = "OP_PUSHBYTES_24";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_25"] = 25] = "OP_PUSHBYTES_25";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_26"] = 26] = "OP_PUSHBYTES_26";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_27"] = 27] = "OP_PUSHBYTES_27";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_28"] = 28] = "OP_PUSHBYTES_28";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_29"] = 29] = "OP_PUSHBYTES_29";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_30"] = 30] = "OP_PUSHBYTES_30";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_31"] = 31] = "OP_PUSHBYTES_31";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_32"] = 32] = "OP_PUSHBYTES_32";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_33"] = 33] = "OP_PUSHBYTES_33";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_34"] = 34] = "OP_PUSHBYTES_34";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_35"] = 35] = "OP_PUSHBYTES_35";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_36"] = 36] = "OP_PUSHBYTES_36";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_37"] = 37] = "OP_PUSHBYTES_37";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_38"] = 38] = "OP_PUSHBYTES_38";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_39"] = 39] = "OP_PUSHBYTES_39";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_40"] = 40] = "OP_PUSHBYTES_40";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_41"] = 41] = "OP_PUSHBYTES_41";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_42"] = 42] = "OP_PUSHBYTES_42";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_43"] = 43] = "OP_PUSHBYTES_43";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_44"] = 44] = "OP_PUSHBYTES_44";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_45"] = 45] = "OP_PUSHBYTES_45";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_46"] = 46] = "OP_PUSHBYTES_46";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_47"] = 47] = "OP_PUSHBYTES_47";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_48"] = 48] = "OP_PUSHBYTES_48";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_49"] = 49] = "OP_PUSHBYTES_49";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_50"] = 50] = "OP_PUSHBYTES_50";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_51"] = 51] = "OP_PUSHBYTES_51";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_52"] = 52] = "OP_PUSHBYTES_52";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_53"] = 53] = "OP_PUSHBYTES_53";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_54"] = 54] = "OP_PUSHBYTES_54";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_55"] = 55] = "OP_PUSHBYTES_55";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_56"] = 56] = "OP_PUSHBYTES_56";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_57"] = 57] = "OP_PUSHBYTES_57";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_58"] = 58] = "OP_PUSHBYTES_58";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_59"] = 59] = "OP_PUSHBYTES_59";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_60"] = 60] = "OP_PUSHBYTES_60";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_61"] = 61] = "OP_PUSHBYTES_61";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_62"] = 62] = "OP_PUSHBYTES_62";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_63"] = 63] = "OP_PUSHBYTES_63";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_64"] = 64] = "OP_PUSHBYTES_64";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_65"] = 65] = "OP_PUSHBYTES_65";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_66"] = 66] = "OP_PUSHBYTES_66";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_67"] = 67] = "OP_PUSHBYTES_67";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_68"] = 68] = "OP_PUSHBYTES_68";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_69"] = 69] = "OP_PUSHBYTES_69";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_70"] = 70] = "OP_PUSHBYTES_70";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_71"] = 71] = "OP_PUSHBYTES_71";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_72"] = 72] = "OP_PUSHBYTES_72";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_73"] = 73] = "OP_PUSHBYTES_73";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_74"] = 74] = "OP_PUSHBYTES_74";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_75"] = 75] = "OP_PUSHBYTES_75";
    OpcodesCommon[OpcodesCommon["OP_PUSHDATA_1"] = 76] = "OP_PUSHDATA_1";
    OpcodesCommon[OpcodesCommon["OP_PUSHDATA_2"] = 77] = "OP_PUSHDATA_2";
    OpcodesCommon[OpcodesCommon["OP_PUSHDATA_4"] = 78] = "OP_PUSHDATA_4";
    OpcodesCommon[OpcodesCommon["OP_1NEGATE"] = 79] = "OP_1NEGATE";
    OpcodesCommon[OpcodesCommon["OP_RESERVED"] = 80] = "OP_RESERVED";
    /**
     * A.K.A. `OP_TRUE`
     */
    OpcodesCommon[OpcodesCommon["OP_1"] = 81] = "OP_1";
    OpcodesCommon[OpcodesCommon["OP_2"] = 82] = "OP_2";
    OpcodesCommon[OpcodesCommon["OP_3"] = 83] = "OP_3";
    OpcodesCommon[OpcodesCommon["OP_4"] = 84] = "OP_4";
    OpcodesCommon[OpcodesCommon["OP_5"] = 85] = "OP_5";
    OpcodesCommon[OpcodesCommon["OP_6"] = 86] = "OP_6";
    OpcodesCommon[OpcodesCommon["OP_7"] = 87] = "OP_7";
    OpcodesCommon[OpcodesCommon["OP_8"] = 88] = "OP_8";
    OpcodesCommon[OpcodesCommon["OP_9"] = 89] = "OP_9";
    OpcodesCommon[OpcodesCommon["OP_10"] = 90] = "OP_10";
    OpcodesCommon[OpcodesCommon["OP_11"] = 91] = "OP_11";
    OpcodesCommon[OpcodesCommon["OP_12"] = 92] = "OP_12";
    OpcodesCommon[OpcodesCommon["OP_13"] = 93] = "OP_13";
    OpcodesCommon[OpcodesCommon["OP_14"] = 94] = "OP_14";
    OpcodesCommon[OpcodesCommon["OP_15"] = 95] = "OP_15";
    OpcodesCommon[OpcodesCommon["OP_16"] = 96] = "OP_16";
    OpcodesCommon[OpcodesCommon["OP_NOP"] = 97] = "OP_NOP";
    OpcodesCommon[OpcodesCommon["OP_VER"] = 98] = "OP_VER";
    OpcodesCommon[OpcodesCommon["OP_IF"] = 99] = "OP_IF";
    OpcodesCommon[OpcodesCommon["OP_NOTIF"] = 100] = "OP_NOTIF";
    OpcodesCommon[OpcodesCommon["OP_VERIF"] = 101] = "OP_VERIF";
    OpcodesCommon[OpcodesCommon["OP_VERNOTIF"] = 102] = "OP_VERNOTIF";
    OpcodesCommon[OpcodesCommon["OP_ELSE"] = 103] = "OP_ELSE";
    OpcodesCommon[OpcodesCommon["OP_ENDIF"] = 104] = "OP_ENDIF";
    OpcodesCommon[OpcodesCommon["OP_VERIFY"] = 105] = "OP_VERIFY";
    OpcodesCommon[OpcodesCommon["OP_RETURN"] = 106] = "OP_RETURN";
    OpcodesCommon[OpcodesCommon["OP_TOALTSTACK"] = 107] = "OP_TOALTSTACK";
    OpcodesCommon[OpcodesCommon["OP_FROMALTSTACK"] = 108] = "OP_FROMALTSTACK";
    OpcodesCommon[OpcodesCommon["OP_2DROP"] = 109] = "OP_2DROP";
    OpcodesCommon[OpcodesCommon["OP_2DUP"] = 110] = "OP_2DUP";
    OpcodesCommon[OpcodesCommon["OP_3DUP"] = 111] = "OP_3DUP";
    OpcodesCommon[OpcodesCommon["OP_2OVER"] = 112] = "OP_2OVER";
    OpcodesCommon[OpcodesCommon["OP_2ROT"] = 113] = "OP_2ROT";
    OpcodesCommon[OpcodesCommon["OP_2SWAP"] = 114] = "OP_2SWAP";
    OpcodesCommon[OpcodesCommon["OP_IFDUP"] = 115] = "OP_IFDUP";
    OpcodesCommon[OpcodesCommon["OP_DEPTH"] = 116] = "OP_DEPTH";
    OpcodesCommon[OpcodesCommon["OP_DROP"] = 117] = "OP_DROP";
    OpcodesCommon[OpcodesCommon["OP_DUP"] = 118] = "OP_DUP";
    OpcodesCommon[OpcodesCommon["OP_NIP"] = 119] = "OP_NIP";
    OpcodesCommon[OpcodesCommon["OP_OVER"] = 120] = "OP_OVER";
    OpcodesCommon[OpcodesCommon["OP_PICK"] = 121] = "OP_PICK";
    OpcodesCommon[OpcodesCommon["OP_ROLL"] = 122] = "OP_ROLL";
    OpcodesCommon[OpcodesCommon["OP_ROT"] = 123] = "OP_ROT";
    OpcodesCommon[OpcodesCommon["OP_SWAP"] = 124] = "OP_SWAP";
    OpcodesCommon[OpcodesCommon["OP_TUCK"] = 125] = "OP_TUCK";
    OpcodesCommon[OpcodesCommon["OP_CAT"] = 126] = "OP_CAT";
    OpcodesCommon[OpcodesCommon["OP_SUBSTR"] = 127] = "OP_SUBSTR";
    OpcodesCommon[OpcodesCommon["OP_LEFT"] = 128] = "OP_LEFT";
    OpcodesCommon[OpcodesCommon["OP_RIGHT"] = 129] = "OP_RIGHT";
    OpcodesCommon[OpcodesCommon["OP_SIZE"] = 130] = "OP_SIZE";
    OpcodesCommon[OpcodesCommon["OP_INVERT"] = 131] = "OP_INVERT";
    OpcodesCommon[OpcodesCommon["OP_AND"] = 132] = "OP_AND";
    OpcodesCommon[OpcodesCommon["OP_OR"] = 133] = "OP_OR";
    OpcodesCommon[OpcodesCommon["OP_XOR"] = 134] = "OP_XOR";
    OpcodesCommon[OpcodesCommon["OP_EQUAL"] = 135] = "OP_EQUAL";
    OpcodesCommon[OpcodesCommon["OP_EQUALVERIFY"] = 136] = "OP_EQUALVERIFY";
    OpcodesCommon[OpcodesCommon["OP_RESERVED1"] = 137] = "OP_RESERVED1";
    OpcodesCommon[OpcodesCommon["OP_RESERVED2"] = 138] = "OP_RESERVED2";
    OpcodesCommon[OpcodesCommon["OP_1ADD"] = 139] = "OP_1ADD";
    OpcodesCommon[OpcodesCommon["OP_1SUB"] = 140] = "OP_1SUB";
    OpcodesCommon[OpcodesCommon["OP_2MUL"] = 141] = "OP_2MUL";
    OpcodesCommon[OpcodesCommon["OP_2DIV"] = 142] = "OP_2DIV";
    OpcodesCommon[OpcodesCommon["OP_NEGATE"] = 143] = "OP_NEGATE";
    OpcodesCommon[OpcodesCommon["OP_ABS"] = 144] = "OP_ABS";
    OpcodesCommon[OpcodesCommon["OP_NOT"] = 145] = "OP_NOT";
    OpcodesCommon[OpcodesCommon["OP_0NOTEQUAL"] = 146] = "OP_0NOTEQUAL";
    OpcodesCommon[OpcodesCommon["OP_ADD"] = 147] = "OP_ADD";
    OpcodesCommon[OpcodesCommon["OP_SUB"] = 148] = "OP_SUB";
    OpcodesCommon[OpcodesCommon["OP_MUL"] = 149] = "OP_MUL";
    OpcodesCommon[OpcodesCommon["OP_DIV"] = 150] = "OP_DIV";
    OpcodesCommon[OpcodesCommon["OP_MOD"] = 151] = "OP_MOD";
    OpcodesCommon[OpcodesCommon["OP_LSHIFT"] = 152] = "OP_LSHIFT";
    OpcodesCommon[OpcodesCommon["OP_RSHIFT"] = 153] = "OP_RSHIFT";
    OpcodesCommon[OpcodesCommon["OP_BOOLAND"] = 154] = "OP_BOOLAND";
    OpcodesCommon[OpcodesCommon["OP_BOOLOR"] = 155] = "OP_BOOLOR";
    OpcodesCommon[OpcodesCommon["OP_NUMEQUAL"] = 156] = "OP_NUMEQUAL";
    OpcodesCommon[OpcodesCommon["OP_NUMEQUALVERIFY"] = 157] = "OP_NUMEQUALVERIFY";
    OpcodesCommon[OpcodesCommon["OP_NUMNOTEQUAL"] = 158] = "OP_NUMNOTEQUAL";
    OpcodesCommon[OpcodesCommon["OP_LESSTHAN"] = 159] = "OP_LESSTHAN";
    OpcodesCommon[OpcodesCommon["OP_GREATERTHAN"] = 160] = "OP_GREATERTHAN";
    OpcodesCommon[OpcodesCommon["OP_LESSTHANOREQUAL"] = 161] = "OP_LESSTHANOREQUAL";
    OpcodesCommon[OpcodesCommon["OP_GREATERTHANOREQUAL"] = 162] = "OP_GREATERTHANOREQUAL";
    OpcodesCommon[OpcodesCommon["OP_MIN"] = 163] = "OP_MIN";
    OpcodesCommon[OpcodesCommon["OP_MAX"] = 164] = "OP_MAX";
    OpcodesCommon[OpcodesCommon["OP_WITHIN"] = 165] = "OP_WITHIN";
    OpcodesCommon[OpcodesCommon["OP_RIPEMD160"] = 166] = "OP_RIPEMD160";
    OpcodesCommon[OpcodesCommon["OP_SHA1"] = 167] = "OP_SHA1";
    OpcodesCommon[OpcodesCommon["OP_SHA256"] = 168] = "OP_SHA256";
    OpcodesCommon[OpcodesCommon["OP_HASH160"] = 169] = "OP_HASH160";
    OpcodesCommon[OpcodesCommon["OP_HASH256"] = 170] = "OP_HASH256";
    OpcodesCommon[OpcodesCommon["OP_CODESEPARATOR"] = 171] = "OP_CODESEPARATOR";
    OpcodesCommon[OpcodesCommon["OP_CHECKSIG"] = 172] = "OP_CHECKSIG";
    OpcodesCommon[OpcodesCommon["OP_CHECKSIGVERIFY"] = 173] = "OP_CHECKSIGVERIFY";
    OpcodesCommon[OpcodesCommon["OP_CHECKMULTISIG"] = 174] = "OP_CHECKMULTISIG";
    OpcodesCommon[OpcodesCommon["OP_CHECKMULTISIGVERIFY"] = 175] = "OP_CHECKMULTISIGVERIFY";
    OpcodesCommon[OpcodesCommon["OP_NOP1"] = 176] = "OP_NOP1";
    /**
     * Previously `OP_NOP2`
     */
    OpcodesCommon[OpcodesCommon["OP_CHECKLOCKTIMEVERIFY"] = 177] = "OP_CHECKLOCKTIMEVERIFY";
    /**
     * Previously `OP_NOP2`
     */
    OpcodesCommon[OpcodesCommon["OP_CHECKSEQUENCEVERIFY"] = 178] = "OP_CHECKSEQUENCEVERIFY";
    OpcodesCommon[OpcodesCommon["OP_NOP4"] = 179] = "OP_NOP4";
    OpcodesCommon[OpcodesCommon["OP_NOP5"] = 180] = "OP_NOP5";
    OpcodesCommon[OpcodesCommon["OP_NOP6"] = 181] = "OP_NOP6";
    OpcodesCommon[OpcodesCommon["OP_NOP7"] = 182] = "OP_NOP7";
    OpcodesCommon[OpcodesCommon["OP_NOP8"] = 183] = "OP_NOP8";
    OpcodesCommon[OpcodesCommon["OP_NOP9"] = 184] = "OP_NOP9";
    OpcodesCommon[OpcodesCommon["OP_NOP10"] = 185] = "OP_NOP10";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN186"] = 186] = "OP_UNKNOWN186";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN187"] = 187] = "OP_UNKNOWN187";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN188"] = 188] = "OP_UNKNOWN188";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN189"] = 189] = "OP_UNKNOWN189";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN190"] = 190] = "OP_UNKNOWN190";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN191"] = 191] = "OP_UNKNOWN191";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN192"] = 192] = "OP_UNKNOWN192";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN193"] = 193] = "OP_UNKNOWN193";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN194"] = 194] = "OP_UNKNOWN194";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN195"] = 195] = "OP_UNKNOWN195";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN196"] = 196] = "OP_UNKNOWN196";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN197"] = 197] = "OP_UNKNOWN197";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN198"] = 198] = "OP_UNKNOWN198";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN199"] = 199] = "OP_UNKNOWN199";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN200"] = 200] = "OP_UNKNOWN200";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN201"] = 201] = "OP_UNKNOWN201";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN202"] = 202] = "OP_UNKNOWN202";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN203"] = 203] = "OP_UNKNOWN203";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN204"] = 204] = "OP_UNKNOWN204";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN205"] = 205] = "OP_UNKNOWN205";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN206"] = 206] = "OP_UNKNOWN206";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN207"] = 207] = "OP_UNKNOWN207";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN208"] = 208] = "OP_UNKNOWN208";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN209"] = 209] = "OP_UNKNOWN209";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN210"] = 210] = "OP_UNKNOWN210";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN211"] = 211] = "OP_UNKNOWN211";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN212"] = 212] = "OP_UNKNOWN212";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN213"] = 213] = "OP_UNKNOWN213";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN214"] = 214] = "OP_UNKNOWN214";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN215"] = 215] = "OP_UNKNOWN215";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN216"] = 216] = "OP_UNKNOWN216";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN217"] = 217] = "OP_UNKNOWN217";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN218"] = 218] = "OP_UNKNOWN218";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN219"] = 219] = "OP_UNKNOWN219";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN220"] = 220] = "OP_UNKNOWN220";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN221"] = 221] = "OP_UNKNOWN221";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN222"] = 222] = "OP_UNKNOWN222";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN223"] = 223] = "OP_UNKNOWN223";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN224"] = 224] = "OP_UNKNOWN224";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN225"] = 225] = "OP_UNKNOWN225";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN226"] = 226] = "OP_UNKNOWN226";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN227"] = 227] = "OP_UNKNOWN227";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN228"] = 228] = "OP_UNKNOWN228";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN229"] = 229] = "OP_UNKNOWN229";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN230"] = 230] = "OP_UNKNOWN230";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN231"] = 231] = "OP_UNKNOWN231";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN232"] = 232] = "OP_UNKNOWN232";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN233"] = 233] = "OP_UNKNOWN233";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN234"] = 234] = "OP_UNKNOWN234";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN235"] = 235] = "OP_UNKNOWN235";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN236"] = 236] = "OP_UNKNOWN236";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN237"] = 237] = "OP_UNKNOWN237";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN238"] = 238] = "OP_UNKNOWN238";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN239"] = 239] = "OP_UNKNOWN239";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN240"] = 240] = "OP_UNKNOWN240";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN241"] = 241] = "OP_UNKNOWN241";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN242"] = 242] = "OP_UNKNOWN242";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN243"] = 243] = "OP_UNKNOWN243";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN244"] = 244] = "OP_UNKNOWN244";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN245"] = 245] = "OP_UNKNOWN245";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN246"] = 246] = "OP_UNKNOWN246";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN247"] = 247] = "OP_UNKNOWN247";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN248"] = 248] = "OP_UNKNOWN248";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN249"] = 249] = "OP_UNKNOWN249";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN250"] = 250] = "OP_UNKNOWN250";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN251"] = 251] = "OP_UNKNOWN251";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN252"] = 252] = "OP_UNKNOWN252";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN253"] = 253] = "OP_UNKNOWN253";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN254"] = 254] = "OP_UNKNOWN254";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN255"] = 255] = "OP_UNKNOWN255";
})(OpcodesCommon || (OpcodesCommon = {}));
//# sourceMappingURL=opcodes.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/push.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/push.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! export PushOperationConstants [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeDataPush [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isMinimalDataPush [provided] [no usage info] [missing usage info prevents renaming] */
/*! export pushByteOpcodes [provided] [no usage info] [missing usage info prevents renaming] */
/*! export pushNumberOpcodes [provided] [no usage info] [missing usage info prevents renaming] */
/*! export pushNumberOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export pushOperation [provided] [no usage info] [missing usage info prevents renaming] */
/*! export pushOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PushOperationConstants": () => /* binding */ PushOperationConstants,
/* harmony export */   "encodeDataPush": () => /* binding */ encodeDataPush,
/* harmony export */   "isMinimalDataPush": () => /* binding */ isMinimalDataPush,
/* harmony export */   "pushByteOpcodes": () => /* binding */ pushByteOpcodes,
/* harmony export */   "pushOperation": () => /* binding */ pushOperation,
/* harmony export */   "pushOperations": () => /* binding */ pushOperations,
/* harmony export */   "pushNumberOpcodes": () => /* binding */ pushNumberOpcodes,
/* harmony export */   "pushNumberOperations": () => /* binding */ pushNumberOperations
/* harmony export */ });
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");
/* harmony import */ var _format_hex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../format/hex */ "./node_modules/@bitauth/libauth/build/module/lib/format/hex.js");
/* harmony import */ var _combinators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./combinators */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js");
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js");
/* harmony import */ var _opcodes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js");






var PushOperationConstants;
(function (PushOperationConstants) {
    PushOperationConstants[PushOperationConstants["OP_0"] = 0] = "OP_0";
    /**
     * OP_PUSHBYTES_75
     */
    PushOperationConstants[PushOperationConstants["maximumPushByteOperationSize"] = 75] = "maximumPushByteOperationSize";
    PushOperationConstants[PushOperationConstants["OP_PUSHDATA_1"] = 76] = "OP_PUSHDATA_1";
    PushOperationConstants[PushOperationConstants["OP_PUSHDATA_2"] = 77] = "OP_PUSHDATA_2";
    PushOperationConstants[PushOperationConstants["OP_PUSHDATA_4"] = 78] = "OP_PUSHDATA_4";
    /**
     * OP_PUSHDATA_4
     */
    PushOperationConstants[PushOperationConstants["highestPushDataOpcode"] = 78] = "highestPushDataOpcode";
    /**
     * For OP_1 to OP_16, `opcode` is the number offset by `0x50` (80):
     *
     * `OP_N = 0x50 + N`
     *
     * OP_0 is really OP_PUSHBYTES_0 (`0x00`), so it does not follow this pattern.
     */
    PushOperationConstants[PushOperationConstants["pushNumberOpcodesOffset"] = 80] = "pushNumberOpcodesOffset";
    /** OP_1 through OP_16 */
    PushOperationConstants[PushOperationConstants["pushNumberOpcodes"] = 16] = "pushNumberOpcodes";
    PushOperationConstants[PushOperationConstants["negativeOne"] = 129] = "negativeOne";
    PushOperationConstants[PushOperationConstants["OP_1NEGATE"] = 79] = "OP_1NEGATE";
    /**
     * 256 - 1
     */
    PushOperationConstants[PushOperationConstants["maximumPushData1Size"] = 255] = "maximumPushData1Size";
    /**
     * Standard consensus parameter for most Bitcoin forks.
     */
    PushOperationConstants[PushOperationConstants["maximumPushSize"] = 520] = "maximumPushSize";
    /**
     * 256 ** 2 - 1
     */
    PushOperationConstants[PushOperationConstants["maximumPushData2Size"] = 65535] = "maximumPushData2Size";
    /**
     * 256 ** 4 - 1
     */
    PushOperationConstants[PushOperationConstants["maximumPushData4Size"] = 4294967295] = "maximumPushData4Size";
})(PushOperationConstants || (PushOperationConstants = {}));
/**
 * Returns the minimal bytecode required to push the provided `data` to the
 * stack.
 *
 * @remarks
 * This method conservatively encodes a `Uint8Array` as a data push. For Script
 * Numbers which can be pushed using a single opcode (-1 through 16), the
 * equivalent bytecode value is returned. Other `data` values will be prefixed
 * with the proper opcode and push length bytes (if necessary) to create the
 * minimal push instruction.
 *
 * Note, while some single-byte Script Number pushes will be minimally-encoded
 * by this method, all larger inputs will be encoded as-is (it cannot be assumed
 * that inputs are intended to be used as Script Numbers). To encode the push of
 * a Script Number, minimally-encode the number before passing it to this
 * method, e.g.:
 * `encodeDataPush(bigIntToScriptNumber(parseBytesAsScriptNumber(nonMinimalNumber)))`.
 *
 * The maximum `bytecode` length which can be encoded for a push in the Bitcoin
 * system is `4294967295` (~4GB). This method assumes a smaller input – if
 * `bytecode` has the potential to be longer, it should be checked (and the
 * error handled) prior to calling this method.
 *
 * @param data - the Uint8Array to push to the stack
 */
// eslint-disable-next-line complexity
const encodeDataPush = (data) => data.length <= PushOperationConstants.maximumPushByteOperationSize
    ? data.length === 0
        ? Uint8Array.of(0)
        : data.length === 1
            ? data[0] !== 0 && data[0] <= PushOperationConstants.pushNumberOpcodes
                ? Uint8Array.of(data[0] + PushOperationConstants.pushNumberOpcodesOffset)
                : data[0] === PushOperationConstants.negativeOne
                    ? Uint8Array.of(PushOperationConstants.OP_1NEGATE)
                    : Uint8Array.from([1, ...data])
            : Uint8Array.from([data.length, ...data])
    : data.length <= PushOperationConstants.maximumPushData1Size
        ? Uint8Array.from([
            PushOperationConstants.OP_PUSHDATA_1,
            data.length,
            ...data,
        ])
        : data.length <= PushOperationConstants.maximumPushData2Size
            ? Uint8Array.from([
                PushOperationConstants.OP_PUSHDATA_2,
                ...(0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint16LE)(data.length),
                ...data,
            ])
            : Uint8Array.from([
                PushOperationConstants.OP_PUSHDATA_4,
                ...(0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(data.length),
                ...data,
            ]);
/**
 * Returns true if the provided `data` is minimally-encoded by the provided
 * `opcode`.
 * @param opcode - the opcode used to push `data`
 * @param data - the contents of the push
 */
// eslint-disable-next-line complexity
const isMinimalDataPush = (opcode, data) => data.length === 0
    ? opcode === PushOperationConstants.OP_0
    : data.length === 1
        ? data[0] >= 1 && data[0] <= PushOperationConstants.pushNumberOpcodes
            ? opcode === data[0] + PushOperationConstants.pushNumberOpcodesOffset
            : data[0] === PushOperationConstants.negativeOne
                ? opcode === PushOperationConstants.OP_1NEGATE
                : true
        : data.length <= PushOperationConstants.maximumPushByteOperationSize
            ? opcode === data.length
            : data.length <= PushOperationConstants.maximumPushData1Size
                ? opcode === PushOperationConstants.OP_PUSHDATA_1
                : data.length <= PushOperationConstants.maximumPushData2Size
                    ? opcode === PushOperationConstants.OP_PUSHDATA_2
                    : true;
const pushByteOpcodes = [
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_1,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_2,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_3,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_4,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_5,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_6,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_7,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_8,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_9,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_10,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_11,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_12,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_13,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_14,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_15,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_16,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_17,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_18,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_19,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_20,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_21,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_22,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_23,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_24,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_25,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_26,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_27,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_28,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_29,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_30,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_31,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_32,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_33,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_34,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_35,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_36,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_37,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_38,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_39,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_40,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_41,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_42,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_43,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_44,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_45,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_46,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_47,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_48,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_49,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_50,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_51,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_52,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_53,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_54,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_55,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_56,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_57,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_58,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_59,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_60,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_61,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_62,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_63,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_64,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_65,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_66,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_67,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_68,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_69,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_70,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_71,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_72,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_73,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_74,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_75,
];
const executionIsActive = (state) => state.executionStack.every((item) => item);
const pushOperation = (flags, maximumPushSize = PushOperationConstants.maximumPushSize) => (state) => {
    const instruction = state.instructions[state.ip];
    return instruction.data.length > maximumPushSize
        ? (0,_errors__WEBPACK_IMPORTED_MODULE_3__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.exceedsMaximumPush, state)
        : executionIsActive(state)
            ? flags.requireMinimalEncoding &&
                !isMinimalDataPush(instruction.opcode, instruction.data)
                ? (0,_errors__WEBPACK_IMPORTED_MODULE_3__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.nonMinimalPush, state)
                : (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.pushToStack)(state, instruction.data)
            : state;
};
const pushOperations = (flags, maximumPushSize = PushOperationConstants.maximumPushSize) => {
    const push = pushOperation(flags, maximumPushSize);
    return (0,_format_hex__WEBPACK_IMPORTED_MODULE_1__.range)(PushOperationConstants.highestPushDataOpcode + 1).reduce((group, i) => ({ ...group, [i]: push }), {});
};
const pushNumberOpcodes = [
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_1NEGATE,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_1,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_2,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_3,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_4,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_5,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_6,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_7,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_8,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_9,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_10,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_11,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_12,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_13,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_14,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_15,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_16,
];
const op1NegateValue = -1;
const pushNumberOperations = () => pushNumberOpcodes
    .map((opcode, i) => [
    opcode,
    [op1NegateValue, ...(0,_format_hex__WEBPACK_IMPORTED_MODULE_1__.range)(PushOperationConstants.pushNumberOpcodes, 1)]
        .map(BigInt)
        .map(_types__WEBPACK_IMPORTED_MODULE_5__.bigIntToScriptNumber)[i],
])
    .reduce((group, pair) => ({
    ...group,
    [pair[0]]: (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.pushToStack)(state, pair[1].slice()),
}), {});
//# sourceMappingURL=push.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! export SigningSerializationFlag [provided] [no usage info] [missing usage info prevents renaming] */
/*! export generateSigningSerializationBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hashOutputs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hashPrevouts [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hashSequence [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isDefinedSigningSerializationType [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isLegacySigningSerialization [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SigningSerializationFlag": () => /* binding */ SigningSerializationFlag,
/* harmony export */   "isDefinedSigningSerializationType": () => /* binding */ isDefinedSigningSerializationType,
/* harmony export */   "hashPrevouts": () => /* binding */ hashPrevouts,
/* harmony export */   "hashSequence": () => /* binding */ hashSequence,
/* harmony export */   "hashOutputs": () => /* binding */ hashOutputs,
/* harmony export */   "generateSigningSerializationBCH": () => /* binding */ generateSigningSerializationBCH,
/* harmony export */   "isLegacySigningSerialization": () => /* binding */ isLegacySigningSerialization
/* harmony export */ });
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");

/**
 * A.K.A. `sighash` flags
 */
var SigningSerializationFlag;
(function (SigningSerializationFlag) {
    /**
     * A.K.A. `SIGHASH_ALL`
     */
    SigningSerializationFlag[SigningSerializationFlag["allOutputs"] = 1] = "allOutputs";
    /**
     * A.K.A `SIGHASH_NONE`
     */
    SigningSerializationFlag[SigningSerializationFlag["noOutputs"] = 2] = "noOutputs";
    /**
     * A.K.A. `SIGHASH_SINGLE`
     */
    SigningSerializationFlag[SigningSerializationFlag["correspondingOutput"] = 3] = "correspondingOutput";
    SigningSerializationFlag[SigningSerializationFlag["forkId"] = 64] = "forkId";
    /**
     * A.K.A `ANYONE_CAN_PAY`
     */
    SigningSerializationFlag[SigningSerializationFlag["singleInput"] = 128] = "singleInput";
})(SigningSerializationFlag || (SigningSerializationFlag = {}));
const isDefinedSigningSerializationType = (byte) => {
    const baseType = 
    // eslint-disable-next-line no-bitwise
    byte &
        // eslint-disable-next-line no-bitwise
        ~(SigningSerializationFlag.forkId | SigningSerializationFlag.singleInput);
    return (baseType >= SigningSerializationFlag.allOutputs &&
        baseType <= SigningSerializationFlag.correspondingOutput);
};
const match = (type, flag) => 
// eslint-disable-next-line no-bitwise
(type[0] & flag) !== 0;
const equals = (type, flag
// eslint-disable-next-line no-bitwise
) => (type[0] & 31 /* mask5Bits */) === flag;
const shouldSerializeSingleInput = (type) => match(type, SigningSerializationFlag.singleInput);
const shouldSerializeCorrespondingOutput = (type) => equals(type, SigningSerializationFlag.correspondingOutput);
const shouldSerializeNoOutputs = (type) => equals(type, SigningSerializationFlag.noOutputs);
const emptyHash = () => new Uint8Array(32 /* sha256HashByteLength */).fill(0);
/**
 * Return the proper `hashPrevouts` value for a given a signing serialization
 * type.
 * @param signingSerializationType - the signing serialization type to test
 * @param transactionOutpoints - see `generateSigningSerializationBCH`
 */
const hashPrevouts = ({ sha256, signingSerializationType, transactionOutpoints, }) => shouldSerializeSingleInput(signingSerializationType)
    ? emptyHash()
    : sha256.hash(sha256.hash(transactionOutpoints));
/**
 * Return the proper `hashSequence` value for a given a signing serialization
 * type.
 * @param signingSerializationType - the signing serialization type to test
 * @param transactionSequenceNumbers - see
 * `generateSigningSerializationBCH`
 */
const hashSequence = ({ sha256, signingSerializationType, transactionSequenceNumbers, }) => !shouldSerializeSingleInput(signingSerializationType) &&
    !shouldSerializeCorrespondingOutput(signingSerializationType) &&
    !shouldSerializeNoOutputs(signingSerializationType)
    ? sha256.hash(sha256.hash(transactionSequenceNumbers))
    : emptyHash();
/**
 * Return the proper `hashOutputs` value for a given a signing serialization
 * type.
 * @param signingSerializationType - the signing serialization type to test
 * @param transactionOutputs - see `generateSigningSerializationBCH`
 * @param correspondingOutput - see `generateSigningSerializationBCH`
 */
const hashOutputs = ({ correspondingOutput, sha256, signingSerializationType, transactionOutputs, }) => !shouldSerializeCorrespondingOutput(signingSerializationType) &&
    !shouldSerializeNoOutputs(signingSerializationType)
    ? sha256.hash(sha256.hash(transactionOutputs))
    : shouldSerializeCorrespondingOutput(signingSerializationType)
        ? correspondingOutput === undefined
            ? emptyHash()
            : sha256.hash(sha256.hash(correspondingOutput))
        : emptyHash();
/**
 * Serialize the signature-protected properties of a transaction following the
 * algorithm required by the `signingSerializationType` of a signature.
 *
 * Note: this implementation re-computes all hashes each time it is called. A
 * performance-critical application could instead use memoization to avoid
 * re-computing these values when validating many signatures within a single
 * transaction. See BIP143 for details.
 */
const generateSigningSerializationBCH = ({ correspondingOutput, coveredBytecode, forkId = new Uint8Array([0, 0, 0]), locktime, outpointIndex, outpointTransactionHash, outputValue, sequenceNumber, sha256, signingSerializationType, transactionOutpoints, transactionOutputs, transactionSequenceNumbers, version, }) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(version),
    hashPrevouts({ sha256, signingSerializationType, transactionOutpoints }),
    hashSequence({
        sha256,
        signingSerializationType,
        transactionSequenceNumbers,
    }),
    outpointTransactionHash.slice().reverse(),
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(outpointIndex),
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.bigIntToBitcoinVarInt)(BigInt(coveredBytecode.length)),
    coveredBytecode,
    outputValue,
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(sequenceNumber),
    hashOutputs({
        correspondingOutput,
        sha256,
        signingSerializationType,
        transactionOutputs,
    }),
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(locktime),
    signingSerializationType,
    forkId,
]);
/**
 * @param signingSerializationType - the 32-bit number indicating the signing
 * serialization algorithm to use
 */
const isLegacySigningSerialization = (signingSerializationType) => {
    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers
    const forkValue = signingSerializationType >> 8;
    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers
    const newForkValue = (forkValue ^ 0xdead) | 0xff0000;
    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers
    const sighashType = (newForkValue << 8) | (signingSerializationType & 0xff);
    // eslint-disable-next-line no-bitwise
    return (sighashType & SigningSerializationFlag.forkId) === 0;
};
//# sourceMappingURL=signing-serialization.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/splice.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/splice.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export opSize [provided] [no usage info] [missing usage info prevents renaming] */
/*! export spliceOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "opSize": () => /* binding */ opSize,
/* harmony export */   "spliceOperations": () => /* binding */ spliceOperations
/* harmony export */ });
/* harmony import */ var _combinators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./combinators */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js");
/* harmony import */ var _opcodes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js");



const opSize = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneStackItem)(state, (nextState, [item]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, item, (0,_types__WEBPACK_IMPORTED_MODULE_2__.bigIntToScriptNumber)(BigInt(item.length))));
const spliceOperations = () => ({
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_SIZE]: opSize(),
});
//# sourceMappingURL=splice.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! export op2Drop [provided] [no usage info] [missing usage info prevents renaming] */
/*! export op2Dup [provided] [no usage info] [missing usage info prevents renaming] */
/*! export op2Over [provided] [no usage info] [missing usage info prevents renaming] */
/*! export op2Rot [provided] [no usage info] [missing usage info prevents renaming] */
/*! export op2Swap [provided] [no usage info] [missing usage info prevents renaming] */
/*! export op3Dup [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opDepth [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opDrop [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opDup [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opFromAltStack [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opIfDup [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opNip [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opOver [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opPick [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opRoll [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opRot [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opSwap [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opToAltStack [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opTuck [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stackOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "opToAltStack": () => /* binding */ opToAltStack,
/* harmony export */   "opFromAltStack": () => /* binding */ opFromAltStack,
/* harmony export */   "op2Drop": () => /* binding */ op2Drop,
/* harmony export */   "op2Dup": () => /* binding */ op2Dup,
/* harmony export */   "op3Dup": () => /* binding */ op3Dup,
/* harmony export */   "op2Over": () => /* binding */ op2Over,
/* harmony export */   "op2Rot": () => /* binding */ op2Rot,
/* harmony export */   "op2Swap": () => /* binding */ op2Swap,
/* harmony export */   "opIfDup": () => /* binding */ opIfDup,
/* harmony export */   "opDepth": () => /* binding */ opDepth,
/* harmony export */   "opDrop": () => /* binding */ opDrop,
/* harmony export */   "opDup": () => /* binding */ opDup,
/* harmony export */   "opNip": () => /* binding */ opNip,
/* harmony export */   "opOver": () => /* binding */ opOver,
/* harmony export */   "opPick": () => /* binding */ opPick,
/* harmony export */   "opRoll": () => /* binding */ opRoll,
/* harmony export */   "opRot": () => /* binding */ opRot,
/* harmony export */   "opSwap": () => /* binding */ opSwap,
/* harmony export */   "opTuck": () => /* binding */ opTuck,
/* harmony export */   "stackOperations": () => /* binding */ stackOperations
/* harmony export */ });
/* harmony import */ var _combinators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./combinators */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js");
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js");
/* harmony import */ var _opcodes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js");




const opToAltStack = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneStackItem)(state, (nextState, [item]) => {
    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
    nextState.alternateStack.push(item);
    return nextState;
});
const opFromAltStack = () => (state) => {
    // eslint-disable-next-line functional/immutable-data
    const item = state.alternateStack.pop();
    if (item === undefined) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.emptyAlternateStack, state);
    }
    return (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(state, item);
};
const op2Drop = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState) => nextState);
const op2Dup = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState, [a, b]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, a, b, a.slice(), b.slice()));
const op3Dup = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useThreeStackItems)(state, (nextState, [a, b, c]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, a, b, c, a.slice(), b.slice(), c.slice()));
const op2Over = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useFourStackItems)(state, (nextState, [a, b, c, d]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, a, b, c, d, a.slice(), b.slice()));
const op2Rot = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useSixStackItems)(state, (nextState, [a, b, c, d, e, f]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, c, d, e, f, a, b));
const op2Swap = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useFourStackItems)(state, (nextState, [a, b, c, d]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, c, d, a, b));
const opIfDup = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneStackItem)(state, (nextState, [item]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, ...((0,_types__WEBPACK_IMPORTED_MODULE_3__.stackItemIsTruthy)(item) ? [item, item.slice()] : [item])));
const opDepth = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(state, (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(BigInt(state.stack.length)));
const opDrop = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneStackItem)(state, (nextState) => nextState);
const opDup = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneStackItem)(state, (nextState, [item]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, item, item.slice()));
const opNip = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState, [, b]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, b));
const opOver = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState, [a, b]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, a, b, a.slice()));
const opPick = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneScriptNumber)(state, (nextState, depth) => {
    const item = nextState.stack[nextState.stack.length - 1 - Number(depth)];
    if (item === undefined) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.invalidStackIndex, state);
    }
    return (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, item.slice());
}, { requireMinimalEncoding });
const opRoll = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneScriptNumber)(state, (nextState, depth) => {
    const index = nextState.stack.length - 1 - Number(depth);
    if (index < 0 || index > nextState.stack.length - 1) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.invalidStackIndex, state);
    }
    // eslint-disable-next-line functional/immutable-data
    return (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, nextState.stack.splice(index, 1)[0]);
}, { requireMinimalEncoding });
const opRot = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useThreeStackItems)(state, (nextState, [a, b, c]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, b, c, a));
const opSwap = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState, [a, b]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, b, a));
const opTuck = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState, [a, b]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, b.slice(), a, b));
const stackOperations = (flags) => ({
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_TOALTSTACK]: opToAltStack(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_FROMALTSTACK]: opFromAltStack(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_2DROP]: op2Drop(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_2DUP]: op2Dup(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_3DUP]: op3Dup(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_2OVER]: op2Over(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_2ROT]: op2Rot(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_2SWAP]: op2Swap(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_IFDUP]: opIfDup(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_DEPTH]: opDepth(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_DROP]: opDrop(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_DUP]: opDup(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_NIP]: opNip(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_OVER]: opOver(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_PICK]: opPick(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_ROLL]: opRoll(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_ROT]: opRot(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_SWAP]: opSwap(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_TUCK]: opTuck(),
});
//# sourceMappingURL=stack.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/time.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/time.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! export opCheckLockTimeVerify [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opCheckSequenceVerify [provided] [no usage info] [missing usage info prevents renaming] */
/*! export readLocktime [provided] [no usage info] [missing usage info prevents renaming] */
/*! export timeOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "readLocktime": () => /* binding */ readLocktime,
/* harmony export */   "opCheckLockTimeVerify": () => /* binding */ opCheckLockTimeVerify,
/* harmony export */   "opCheckSequenceVerify": () => /* binding */ opCheckSequenceVerify,
/* harmony export */   "timeOperations": () => /* binding */ timeOperations
/* harmony export */ });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js");
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js");
/* harmony import */ var _opcodes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js");



var Bits;
(function (Bits) {
    Bits[Bits["sequenceLocktimeDisableFlag"] = 31] = "sequenceLocktimeDisableFlag";
    Bits[Bits["sequenceLocktimeTypeFlag"] = 22] = "sequenceLocktimeTypeFlag";
})(Bits || (Bits = {}));
var Constants;
(function (Constants) {
    Constants[Constants["locktimeScriptNumberByteLength"] = 5] = "locktimeScriptNumberByteLength";
    Constants[Constants["locktimeThreshold"] = 500000000] = "locktimeThreshold";
    Constants[Constants["locktimeDisablingSequenceNumber"] = 4294967295] = "locktimeDisablingSequenceNumber";
    Constants[Constants["sequenceLocktimeTransactionVersionMinimum"] = 2] = "sequenceLocktimeTransactionVersionMinimum";
    // eslint-disable-next-line no-bitwise
    Constants[Constants["sequenceLocktimeDisableFlag"] = 2147483648] = "sequenceLocktimeDisableFlag";
    // eslint-disable-next-line no-bitwise
    Constants[Constants["sequenceLocktimeTypeFlag"] = 4194304] = "sequenceLocktimeTypeFlag";
    Constants[Constants["sequenceGranularity"] = 9] = "sequenceGranularity";
    Constants[Constants["sequenceLocktimeMask"] = 65535] = "sequenceLocktimeMask";
})(Constants || (Constants = {}));
const readLocktime = (state, operation, flags) => {
    const item = state.stack[state.stack.length - 1];
    if (item === undefined) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.emptyStack, state);
    }
    const parsedLocktime = (0,_common__WEBPACK_IMPORTED_MODULE_0__.parseBytesAsScriptNumber)(item, {
        maximumScriptNumberByteLength: Constants.locktimeScriptNumberByteLength,
        requireMinimalEncoding: flags.requireMinimalEncoding,
    });
    if ((0,_common__WEBPACK_IMPORTED_MODULE_0__.isScriptNumberError)(parsedLocktime)) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.invalidScriptNumber, state);
    }
    const locktime = Number(parsedLocktime);
    if (locktime < 0) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.negativeLocktime, state);
    }
    return operation(state, locktime);
};
const locktimeTypesAreCompatible = (locktime, requiredLocktime) => (locktime < Constants.locktimeThreshold &&
    requiredLocktime < Constants.locktimeThreshold) ||
    (locktime >= Constants.locktimeThreshold &&
        requiredLocktime >= Constants.locktimeThreshold);
const opCheckLockTimeVerify = (flags) => (state) => readLocktime(state, (nextState, requiredLocktime) => {
    if (!locktimeTypesAreCompatible(nextState.locktime, requiredLocktime)) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.incompatibleLocktimeType, nextState);
    }
    if (requiredLocktime > nextState.locktime) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.unsatisfiedLocktime, nextState);
    }
    if (nextState.sequenceNumber === Constants.locktimeDisablingSequenceNumber) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.locktimeDisabled, nextState);
    }
    return nextState;
}, flags);
// eslint-disable-next-line no-bitwise
const includesFlag = (value, flag) => (value & flag) !== 0;
const opCheckSequenceVerify = (flags) => (state) => readLocktime(state, 
// eslint-disable-next-line complexity
(nextState, requiredSequence) => {
    const sequenceLocktimeDisabled = includesFlag(requiredSequence, Constants.sequenceLocktimeDisableFlag);
    if (sequenceLocktimeDisabled) {
        return nextState;
    }
    if (nextState.version < Constants.sequenceLocktimeTransactionVersionMinimum) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.checkSequenceUnavailable, nextState);
    }
    if (includesFlag(nextState.sequenceNumber, Constants.sequenceLocktimeDisableFlag)) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.unmatchedSequenceDisable, nextState);
    }
    if (includesFlag(requiredSequence, Constants.sequenceLocktimeTypeFlag) !==
        includesFlag(nextState.sequenceNumber, Constants.sequenceLocktimeTypeFlag)) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.incompatibleSequenceType, nextState);
    }
    if (
    // eslint-disable-next-line no-bitwise
    (requiredSequence & Constants.sequenceLocktimeMask) >
        // eslint-disable-next-line no-bitwise
        (nextState.sequenceNumber & Constants.sequenceLocktimeMask)) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.unsatisfiedSequenceNumber, nextState);
    }
    return nextState;
}, flags);
const timeOperations = (flags) => ({
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_CHECKLOCKTIMEVERIFY]: opCheckLockTimeVerify(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_CHECKSEQUENCEVERIFY]: opCheckSequenceVerify(flags),
});
//# sourceMappingURL=time.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! export ScriptNumberError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bigIntToScriptNumber [provided] [no usage info] [missing usage info prevents renaming] */
/*! export booleanToScriptNumber [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isScriptNumberError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseBytesAsScriptNumber [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stackItemIsTruthy [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ScriptNumberError": () => /* binding */ ScriptNumberError,
/* harmony export */   "isScriptNumberError": () => /* binding */ isScriptNumberError,
/* harmony export */   "parseBytesAsScriptNumber": () => /* binding */ parseBytesAsScriptNumber,
/* harmony export */   "bigIntToScriptNumber": () => /* binding */ bigIntToScriptNumber,
/* harmony export */   "stackItemIsTruthy": () => /* binding */ stackItemIsTruthy,
/* harmony export */   "booleanToScriptNumber": () => /* binding */ booleanToScriptNumber
/* harmony export */ });
var ScriptNumberError;
(function (ScriptNumberError) {
    ScriptNumberError["outOfRange"] = "Failed to parse Script Number: overflows Script Number range.";
    ScriptNumberError["requiresMinimal"] = "Failed to parse Script Number: the number is not minimally-encoded.";
})(ScriptNumberError || (ScriptNumberError = {}));
const isScriptNumberError = (value) => value === ScriptNumberError.outOfRange ||
    value === ScriptNumberError.requiresMinimal;
const normalMaximumScriptNumberByteLength = 4;
/**
 * This method attempts to parse a "Script Number", a format with which numeric
 * values are represented on the stack. (The Satoshi implementation calls this
 * `CScriptNum`.)
 *
 * If `bytes` is a valid Script Number, this method returns the represented
 * number in BigInt format. If `bytes` is not valid, a `ScriptNumberError` is
 * returned.
 *
 * All common operations accepting numeric parameters or pushing numeric values
 * to the stack currently use the Script Number format. The binary format of
 * numbers wouldn't be important if they could only be operated on by arithmetic
 * operators, but since the results of these operations may become input to
 * other operations (e.g. hashing), the specific representation is consensus-
 * critical.
 *
 * Parsing of Script Numbers is limited to 4 bytes (with the exception of
 * OP_CHECKLOCKTIMEVERIFY and OP_CHECKSEQUENCEVERIFY, which read up to 5-bytes).
 * The bytes are read as a signed integer (for 32-bits: inclusive range from
 * -2^31 + 1 to 2^31 - 1) in little-endian byte order. Script Numbers must
 * further be encoded as minimally as possible (no zero-padding). See code/tests
 * for details.
 *
 * @remarks
 * Operators may push numeric results to the stack which exceed the current
 * 4-byte length limit of Script Numbers. While these stack elements would
 * otherwise be valid Script Numbers, because of the 4-byte length limit, they
 * can only be used as non-numeric values in later operations.
 *
 * Most other implementations currently parse Script Numbers into 64-bit
 * integers to operate on them (rather than integers of arbitrary size like
 * BigInt). Currently, no operators are at risk of overflowing 64-bit integers
 * given 32-bit integer inputs, but future operators may require additional
 * refactoring in those implementations.
 *
 * @param bytes - a Uint8Array from the stack
 * @param requireMinimalEncoding - if true, this method returns an error when
 * parsing non-minimally encoded Script Numbers
 * @param maximumScriptNumberByteLength - the maximum valid number of bytes
 */
// eslint-disable-next-line complexity
const parseBytesAsScriptNumber = (bytes, { maximumScriptNumberByteLength = normalMaximumScriptNumberByteLength, requireMinimalEncoding = true, } = {
    maximumScriptNumberByteLength: normalMaximumScriptNumberByteLength,
    requireMinimalEncoding: true,
}) => {
    if (bytes.length === 0) {
        return BigInt(0);
    }
    if (bytes.length > maximumScriptNumberByteLength) {
        return ScriptNumberError.outOfRange;
    }
    const mostSignificantByte = bytes[bytes.length - 1];
    const secondMostSignificantByte = bytes[bytes.length - 1 - 1];
    const allButTheSignBit = 127;
    const justTheSignBit = 128;
    if (requireMinimalEncoding &&
        // eslint-disable-next-line no-bitwise
        (mostSignificantByte & allButTheSignBit) === 0 &&
        // eslint-disable-next-line no-bitwise
        (bytes.length <= 1 || (secondMostSignificantByte & justTheSignBit) === 0)) {
        return ScriptNumberError.requiresMinimal;
    }
    const bitsPerByte = 8;
    const signFlippingByte = 0x80;
    // eslint-disable-next-line functional/no-let
    let result = BigInt(0);
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus
    for (let byte = 0; byte < bytes.length; byte++) {
        // eslint-disable-next-line functional/no-expression-statement,  no-bitwise
        result |= BigInt(bytes[byte]) << BigInt(byte * bitsPerByte);
    }
    /* eslint-disable no-bitwise */
    const isNegative = (bytes[bytes.length - 1] & signFlippingByte) !== 0;
    return isNegative
        ? -(result &
            ~(BigInt(signFlippingByte) << BigInt(bitsPerByte * (bytes.length - 1))))
        : result;
    /* eslint-enable no-bitwise */
};
/**
 * Convert a BigInt into the "Script Number" format. See
 * `parseBytesAsScriptNumber` for more information.
 *
 * @param integer - the BigInt to encode as a Script Number
 */
// eslint-disable-next-line complexity
const bigIntToScriptNumber = (integer) => {
    if (integer === BigInt(0)) {
        return new Uint8Array();
    }
    const bytes = [];
    const isNegative = integer < 0;
    const byteStates = 0xff;
    const bitsPerByte = 8;
    // eslint-disable-next-line functional/no-let
    let remaining = isNegative ? -integer : integer;
    // eslint-disable-next-line functional/no-loop-statement
    while (remaining > 0) {
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data, no-bitwise
        bytes.push(Number(remaining & BigInt(byteStates)));
        // eslint-disable-next-line functional/no-expression-statement, no-bitwise
        remaining >>= BigInt(bitsPerByte);
    }
    const signFlippingByte = 0x80;
    // eslint-disable-next-line no-bitwise, functional/no-conditional-statement
    if ((bytes[bytes.length - 1] & signFlippingByte) > 0) {
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        bytes.push(isNegative ? signFlippingByte : 0x00);
        // eslint-disable-next-line functional/no-conditional-statement
    }
    else if (isNegative) {
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data, no-bitwise
        bytes[bytes.length - 1] |= signFlippingByte;
    }
    return new Uint8Array(bytes);
};
/**
 * Returns true if the provided stack item is "truthy" in the sense required
 * by several operations (anything but zero and "negative zero").
 *
 * The Satoshi implementation calls this method `CastToBool`.
 *
 * @param item - the stack item to check for truthiness
 */
const stackItemIsTruthy = (item) => {
    const signFlippingByte = 0x80;
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus
    for (let i = 0; i < item.length; i++) {
        if (item[i] !== 0) {
            if (i === item.length - 1 && item[i] === signFlippingByte) {
                return false;
            }
            return true;
        }
    }
    return false;
};
/**
 * Convert a boolean into Script Number format (the type used to express
 * boolean values emitted by several operations).
 *
 * @param value - the boolean value to convert
 */
const booleanToScriptNumber = (value) => value ? bigIntToScriptNumber(BigInt(1)) : bigIntToScriptNumber(BigInt(0));
//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js ***!
  \******************************************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
/***/ (() => {

//# sourceMappingURL=instruction-sets-types.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! export assembleBytecode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export assembleBytecodeBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export assembleBytecodeBTC [provided] [no usage info] [missing usage info prevents renaming] */
/*! export authenticationInstructionIsMalformed [provided] [no usage info] [missing usage info prevents renaming] */
/*! export authenticationInstructionsAreMalformed [provided] [no usage info] [missing usage info prevents renaming] */
/*! export authenticationInstructionsAreNotMalformed [provided] [no usage info] [missing usage info prevents renaming] */
/*! export disassembleAuthenticationInstruction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export disassembleBytecode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export disassembleBytecodeBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export disassembleBytecodeBTC [provided] [no usage info] [missing usage info prevents renaming] */
/*! export disassembleParsedAuthenticationInstruction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export disassembleParsedAuthenticationInstructionMalformed [provided] [no usage info] [missing usage info prevents renaming] */
/*! export disassembleParsedAuthenticationInstructions [provided] [no usage info] [missing usage info prevents renaming] */
/*! export generateBytecodeMap [provided] [no usage info] [missing usage info prevents renaming] */
/*! export lengthBytesForPushOpcode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseBytecode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export readAuthenticationInstruction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export serializeAuthenticationInstruction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export serializeAuthenticationInstructions [provided] [no usage info] [missing usage info prevents renaming] */
/*! export serializeParsedAuthenticationInstruction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export serializeParsedAuthenticationInstructionMalformed [provided] [no usage info] [missing usage info prevents renaming] */
/*! export serializeParsedAuthenticationInstructions [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "authenticationInstructionIsMalformed": () => /* binding */ authenticationInstructionIsMalformed,
/* harmony export */   "authenticationInstructionsAreMalformed": () => /* binding */ authenticationInstructionsAreMalformed,
/* harmony export */   "authenticationInstructionsAreNotMalformed": () => /* binding */ authenticationInstructionsAreNotMalformed,
/* harmony export */   "lengthBytesForPushOpcode": () => /* binding */ lengthBytesForPushOpcode,
/* harmony export */   "readAuthenticationInstruction": () => /* binding */ readAuthenticationInstruction,
/* harmony export */   "parseBytecode": () => /* binding */ parseBytecode,
/* harmony export */   "disassembleParsedAuthenticationInstructionMalformed": () => /* binding */ disassembleParsedAuthenticationInstructionMalformed,
/* harmony export */   "disassembleAuthenticationInstruction": () => /* binding */ disassembleAuthenticationInstruction,
/* harmony export */   "disassembleParsedAuthenticationInstruction": () => /* binding */ disassembleParsedAuthenticationInstruction,
/* harmony export */   "disassembleParsedAuthenticationInstructions": () => /* binding */ disassembleParsedAuthenticationInstructions,
/* harmony export */   "disassembleBytecode": () => /* binding */ disassembleBytecode,
/* harmony export */   "disassembleBytecodeBCH": () => /* binding */ disassembleBytecodeBCH,
/* harmony export */   "disassembleBytecodeBTC": () => /* binding */ disassembleBytecodeBTC,
/* harmony export */   "generateBytecodeMap": () => /* binding */ generateBytecodeMap,
/* harmony export */   "assembleBytecode": () => /* binding */ assembleBytecode,
/* harmony export */   "assembleBytecodeBCH": () => /* binding */ assembleBytecodeBCH,
/* harmony export */   "assembleBytecodeBTC": () => /* binding */ assembleBytecodeBTC,
/* harmony export */   "serializeAuthenticationInstruction": () => /* binding */ serializeAuthenticationInstruction,
/* harmony export */   "serializeParsedAuthenticationInstructionMalformed": () => /* binding */ serializeParsedAuthenticationInstructionMalformed,
/* harmony export */   "serializeParsedAuthenticationInstruction": () => /* binding */ serializeParsedAuthenticationInstruction,
/* harmony export */   "serializeAuthenticationInstructions": () => /* binding */ serializeAuthenticationInstructions,
/* harmony export */   "serializeParsedAuthenticationInstructions": () => /* binding */ serializeParsedAuthenticationInstructions
/* harmony export */ });
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");
/* harmony import */ var _template_compiler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../template/compiler */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler.js");
/* harmony import */ var _bch_bch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bch/bch */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch.js");
/* harmony import */ var _btc_btc__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./btc/btc */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/btc/btc.js");




/**
 * A type-guard which checks if the provided instruction is malformed.
 * @param instruction - the instruction to check
 */
const authenticationInstructionIsMalformed = (instruction) => 'malformed' in instruction;
/**
 * A type-guard which checks if the final instruction in the provided array of
 * instructions is malformed. (Only the final instruction can be malformed.)
 * @param instruction - the array of instructions to check
 */
const authenticationInstructionsAreMalformed = (instructions) => instructions.length > 0 &&
    authenticationInstructionIsMalformed(instructions[instructions.length - 1]);
/**
 * A type-guard which confirms that the final instruction in the provided array
 * is not malformed. (Only the final instruction can be malformed.)
 * @param instruction - the array of instructions to check
 */
const authenticationInstructionsAreNotMalformed = (instructions) => !authenticationInstructionsAreMalformed(instructions);
var CommonPushOpcodes;
(function (CommonPushOpcodes) {
    CommonPushOpcodes[CommonPushOpcodes["OP_0"] = 0] = "OP_0";
    CommonPushOpcodes[CommonPushOpcodes["OP_PUSHDATA_1"] = 76] = "OP_PUSHDATA_1";
    CommonPushOpcodes[CommonPushOpcodes["OP_PUSHDATA_2"] = 77] = "OP_PUSHDATA_2";
    CommonPushOpcodes[CommonPushOpcodes["OP_PUSHDATA_4"] = 78] = "OP_PUSHDATA_4";
})(CommonPushOpcodes || (CommonPushOpcodes = {}));
const uint8Bytes = 1;
const uint16Bytes = 2;
const uint32Bytes = 4;
const readLittleEndianNumber = (script, index, length) => {
    const view = new DataView(script.buffer, index, length);
    const readAsLittleEndian = true;
    return length === uint8Bytes
        ? view.getUint8(0)
        : length === uint16Bytes
            ? view.getUint16(0, readAsLittleEndian)
            : view.getUint32(0, readAsLittleEndian);
};
/**
 * Returns the number of bytes used to indicate the length of the push in this
 * operation.
 * @param opcode - an opcode between 0x00 and 0x4e
 */
const lengthBytesForPushOpcode = (opcode) => opcode < CommonPushOpcodes.OP_PUSHDATA_1
    ? 0
    : opcode === CommonPushOpcodes.OP_PUSHDATA_1
        ? uint8Bytes
        : opcode === CommonPushOpcodes.OP_PUSHDATA_2
            ? uint16Bytes
            : uint32Bytes;
/**
 * Parse one instruction from the provided script.
 *
 * Returns an object with an `instruction` referencing a
 * `ParsedAuthenticationInstruction`, and a `nextIndex` indicating the next
 * index from which to read. If the next index is greater than or equal to the
 * length of the script, the script has been fully parsed.
 *
 * The final `ParsedAuthenticationInstruction` from a serialized script may be
 * malformed if 1) the final operation is a push and 2) too few bytes remain for
 * the push operation to complete.
 *
 * @param script - the script from which to read the next instruction
 * @param index - the offset from which to begin reading
 */
// eslint-disable-next-line complexity
const readAuthenticationInstruction = (script, index) => {
    const opcode = script[index];
    if (opcode > CommonPushOpcodes.OP_PUSHDATA_4) {
        return {
            instruction: {
                opcode: opcode,
            },
            nextIndex: index + 1,
        };
    }
    const lengthBytes = lengthBytesForPushOpcode(opcode);
    if (lengthBytes !== 0 && index + lengthBytes >= script.length) {
        const sliceStart = index + 1;
        const sliceEnd = sliceStart + lengthBytes;
        return {
            instruction: {
                expectedLengthBytes: lengthBytes,
                length: script.slice(sliceStart, sliceEnd),
                malformed: true,
                opcode: opcode,
            },
            nextIndex: sliceEnd,
        };
    }
    const dataBytes = lengthBytes === 0
        ? opcode
        : readLittleEndianNumber(script, index + 1, lengthBytes);
    const dataStart = index + 1 + lengthBytes;
    const dataEnd = dataStart + dataBytes;
    return {
        instruction: {
            data: script.slice(dataStart, dataEnd),
            ...(dataEnd > script.length
                ? {
                    expectedDataBytes: dataEnd - dataStart,
                    malformed: true,
                }
                : undefined),
            opcode: opcode,
        },
        nextIndex: dataEnd,
    };
};
/**
 * Parse authentication bytecode (`lockingBytecode` or `unlockingBytecode`)
 * into `ParsedAuthenticationInstructions`. The method
 * `authenticationInstructionsAreMalformed` can be used to check if these
 * instructions include a malformed instruction. If not, they are valid
 * `AuthenticationInstructions`.
 *
 * This implementation is common to most bitcoin forks, but the type parameter
 * can be used to strongly type the resulting instructions. For example:
 *
 * ```js
 *  const instructions = parseAuthenticationBytecode<OpcodesBCH>(script);
 * ```
 *
 * @param script - the serialized script to parse
 */
const parseBytecode = (script) => {
    const instructions = [];
    // eslint-disable-next-line functional/no-let
    let i = 0;
    // eslint-disable-next-line functional/no-loop-statement
    while (i < script.length) {
        const { instruction, nextIndex } = readAuthenticationInstruction(script, i);
        // eslint-disable-next-line functional/no-expression-statement
        i = nextIndex;
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        instructions.push(instruction);
    }
    return instructions;
};
/**
 * OP_0 is the only single-word push. All other push instructions will
 * disassemble to multiple ASM words. (OP_1-OP_16 are handled like normal
 * operations.)
 */
const isMultiWordPush = (opcode) => opcode !== CommonPushOpcodes.OP_0;
const formatAsmPushHex = (data) => data.length > 0 ? `0x${(0,_format_format__WEBPACK_IMPORTED_MODULE_0__.binToHex)(data)}` : '';
const formatMissingBytesAsm = (missing) => `[missing ${missing} byte${missing === 1 ? '' : 's'}]`;
const hasMalformedLength = (instruction) => 'length' in instruction;
const isPushData = (pushOpcode) => pushOpcode >= CommonPushOpcodes.OP_PUSHDATA_1;
/**
 * Disassemble a malformed authentication instruction into a string description.
 * @param opcodes - a mapping of possible opcodes to their string representation
 * @param instruction - the malformed instruction to disassemble
 */
const disassembleParsedAuthenticationInstructionMalformed = (opcodes, instruction) => `${opcodes[instruction.opcode]} ${hasMalformedLength(instruction)
    ? `${formatAsmPushHex(instruction.length)}${formatMissingBytesAsm(instruction.expectedLengthBytes - instruction.length.length)}`
    : `${isPushData(instruction.opcode)
        ? `${instruction.expectedDataBytes} `
        : ''}${formatAsmPushHex(instruction.data)}${formatMissingBytesAsm(instruction.expectedDataBytes - instruction.data.length)}`}`;
/**
 * Disassemble a properly-formed authentication instruction into a string
 * description.
 * @param opcodes - a mapping of possible opcodes to their string representation
 * @param instruction - the instruction to disassemble
 */
const disassembleAuthenticationInstruction = (opcodes, instruction) => `${opcodes[instruction.opcode]}${'data' in instruction &&
    isMultiWordPush(instruction.opcode)
    ? ` ${isPushData(instruction.opcode)
        ? `${instruction.data.length} `
        : ''}${formatAsmPushHex(instruction.data)}`
    : ''}`;
/**
 * Disassemble a single `ParsedAuthenticationInstruction` (includes potentially
 * malformed instructions) into its ASM representation.
 *
 * @param script - the instruction to disassemble
 */
const disassembleParsedAuthenticationInstruction = (opcodes, instruction) => authenticationInstructionIsMalformed(instruction)
    ? disassembleParsedAuthenticationInstructionMalformed(opcodes, instruction)
    : disassembleAuthenticationInstruction(opcodes, instruction);
/**
 * Disassemble an array of `ParsedAuthenticationInstructions` (including
 * potentially malformed instructions) into its ASM representation.
 *
 * @param script - the array of instructions to disassemble
 */
const disassembleParsedAuthenticationInstructions = (opcodes, instructions) => instructions
    .map((instruction) => disassembleParsedAuthenticationInstruction(opcodes, instruction))
    .join(' ');
/**
 * Disassemble authentication bytecode into a lossless ASM representation. (All
 * push operations are represented with the same opcodes used in the bytecode,
 * even when non-minimally encoded.)
 *
 * @param opcodes - the set to use when determining the name of opcodes, e.g. `OpcodesBCH`
 * @param bytecode - the authentication bytecode to disassemble
 */
const disassembleBytecode = (opcodes, bytecode) => disassembleParsedAuthenticationInstructions(opcodes, parseBytecode(bytecode));
/**
 * Disassemble BCH authentication bytecode into its ASM representation.
 * @param bytecode - the authentication bytecode to disassemble
 */
const disassembleBytecodeBCH = (bytecode) => disassembleParsedAuthenticationInstructions(_bch_bch__WEBPACK_IMPORTED_MODULE_2__.OpcodesBCH, parseBytecode(bytecode));
/**
 * Disassemble BTC authentication bytecode into its ASM representation.
 * @param bytecode - the authentication bytecode to disassemble
 */
const disassembleBytecodeBTC = (bytecode) => disassembleParsedAuthenticationInstructions(_btc_btc__WEBPACK_IMPORTED_MODULE_3__.OpcodesBTC, parseBytecode(bytecode));
/**
 * Create an object where each key is an opcode identifier and each value is
 * the bytecode value (`Uint8Array`) it represents.
 * @param opcodes - An opcode enum, e.g. `OpcodesBCH`
 */
const generateBytecodeMap = (opcodes) => Object.entries(opcodes)
    .filter((entry) => typeof entry[1] === 'number')
    .reduce((identifiers, pair) => ({
    ...identifiers,
    [pair[0]]: Uint8Array.of(pair[1]),
}), {});
/**
 * Re-assemble a string of disassembled bytecode (see `disassembleBytecode`).
 *
 * @param opcodes - a mapping of opcodes to their respective Uint8Array
 * representation
 * @param disassembledBytecode - the disassembled bytecode to re-assemble
 */
const assembleBytecode = (opcodes, disassembledBytecode) => {
    const environment = {
        opcodes,
        scripts: { asm: disassembledBytecode },
    };
    return (0,_template_compiler__WEBPACK_IMPORTED_MODULE_1__.createCompilerCommonSynchronous)(environment).generateBytecode('asm', {});
};
/**
 * Re-assemble a string of disassembled BCH bytecode (see
 * `disassembleBytecodeBCH`).
 *
 * Note, this method performs automatic minimization of push instructions.
 *
 * @param disassembledBytecode - the disassembled BCH bytecode to re-assemble
 */
const assembleBytecodeBCH = (disassembledBytecode) => assembleBytecode(generateBytecodeMap(_bch_bch__WEBPACK_IMPORTED_MODULE_2__.OpcodesBCH), disassembledBytecode);
/**
 * Re-assemble a string of disassembled BCH bytecode (see
 * `disassembleBytecodeBTC`).
 *
 * Note, this method performs automatic minimization of push instructions.
 *
 * @param disassembledBytecode - the disassembled BTC bytecode to re-assemble
 */
const assembleBytecodeBTC = (disassembledBytecode) => assembleBytecode(generateBytecodeMap(_btc_btc__WEBPACK_IMPORTED_MODULE_3__.OpcodesBTC), disassembledBytecode);
const getInstructionLengthBytes = (instruction) => {
    const opcode = instruction.opcode;
    const expectedLength = lengthBytesForPushOpcode(opcode);
    return expectedLength === uint8Bytes
        ? Uint8Array.of(instruction.data.length)
        : expectedLength === uint16Bytes
            ? (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint16LE)(instruction.data.length)
            : (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(instruction.data.length);
};
/**
 * Re-serialize a valid authentication instruction.
 * @param instruction - the instruction to serialize
 */
const serializeAuthenticationInstruction = (instruction) => Uint8Array.from([
    instruction.opcode,
    ...('data' in instruction
        ? [
            ...(isPushData(instruction.opcode)
                ? getInstructionLengthBytes(instruction)
                : []),
            ...instruction.data,
        ]
        : []),
]);
/**
 * Re-serialize a malformed authentication instruction.
 * @param instruction - the malformed instruction to serialize
 */
const serializeParsedAuthenticationInstructionMalformed = (instruction) => {
    const opcode = instruction.opcode;
    if (hasMalformedLength(instruction)) {
        return Uint8Array.from([opcode, ...instruction.length]);
    }
    if (isPushData(opcode)) {
        return Uint8Array.from([
            opcode,
            ...(opcode === CommonPushOpcodes.OP_PUSHDATA_1
                ? Uint8Array.of(instruction.expectedDataBytes)
                : opcode === CommonPushOpcodes.OP_PUSHDATA_2
                    ? (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint16LE)(instruction.expectedDataBytes)
                    : (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(instruction.expectedDataBytes)),
            ...instruction.data,
        ]);
    }
    return Uint8Array.from([opcode, ...instruction.data]);
};
/**
 * Re-serialize a potentially-malformed authentication instruction.
 * @param instruction - the potentially-malformed instruction to serialize
 */
const serializeParsedAuthenticationInstruction = (instruction) => authenticationInstructionIsMalformed(instruction)
    ? serializeParsedAuthenticationInstructionMalformed(instruction)
    : serializeAuthenticationInstruction(instruction);
/**
 * Re-serialize an array of valid authentication instructions.
 * @param instructions - the array of valid instructions to serialize
 */
const serializeAuthenticationInstructions = (instructions) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)(instructions.map(serializeAuthenticationInstruction));
/**
 * Re-serialize an array of potentially-malformed authentication instructions.
 * @param instructions - the array of instructions to serialize
 */
const serializeParsedAuthenticationInstructions = (instructions) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)(instructions.map(serializeParsedAuthenticationInstruction));
//# sourceMappingURL=instruction-sets-utils.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! export AuthenticationErrorBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export AuthenticationErrorCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export CompilerDefaults [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .CompilerDefaults */
/*! export CompressionFlag [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .CompressionFlag */
/*! export ConsensusBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export ConsensusCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .ConsensusCommon */
/*! export ContextFlag [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .ContextFlag */
/*! export HdKeyDecodingError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .HdKeyDecodingError */
/*! export HdKeyVersion [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .HdKeyVersion */
/*! export HdNodeCrackingError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .HdNodeCrackingError */
/*! export HdNodeDerivationError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .HdNodeDerivationError */
/*! export InstructionSetBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export OpcodeAlternateNamesBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export OpcodeDescriptionsBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export OpcodeDescriptionsCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export OpcodeDescriptionsUniqueBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export OpcodesBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export OpcodesBTC [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/btc/btc.js .OpcodesBTC */
/*! export OpcodesCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export PushOperationConstants [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export ScriptNumberError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export SigningSerializationAlgorithmIdentifier [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .SigningSerializationAlgorithmIdentifier */
/*! export SigningSerializationFlag [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export TransactionDecodingError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .TransactionDecodingError */
/*! export WalletImportFormatError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .WalletImportFormatError */
/*! export applyError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export arithmeticOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export assembleBitcoinABCScript [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export assembleBytecode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .assembleBytecode */
/*! export assembleBytecodeBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .assembleBytecodeBCH */
/*! export assembleBytecodeBTC [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .assembleBytecodeBTC */
/*! export attemptCompilerOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .attemptCompilerOperations */
/*! export authenticationInstructionIsMalformed [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .authenticationInstructionIsMalformed */
/*! export authenticationInstructionsAreMalformed [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .authenticationInstructionsAreMalformed */
/*! export authenticationInstructionsAreNotMalformed [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .authenticationInstructionsAreNotMalformed */
/*! export authenticationTemplateToCompilerBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .authenticationTemplateToCompilerBCH */
/*! export bigIntToScriptNumber [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export bitcoinABCOpcodes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export bitcoinCashOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export bitwiseOperation [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export bitwiseOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export booleanToScriptNumber [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export checkLimitsCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .checkLimitsCommon */
/*! export cloneAuthenticationProgramStateCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .cloneAuthenticationProgramStateCommon */
/*! export cloneStack [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .cloneStack */
/*! export combineOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export commonOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .commonOperations */
/*! export compileInputTemplate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compileInputTemplate */
/*! export compileOutputTemplate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compileOutputTemplate */
/*! export compilerOperationAddressData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationAddressData */
/*! export compilerOperationAttemptBytecodeResolution [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationAttemptBytecodeResolution */
/*! export compilerOperationCurrentBlockHeight [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationCurrentBlockHeight */
/*! export compilerOperationCurrentBlockTime [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationCurrentBlockTime */
/*! export compilerOperationHdKeyEcdsaDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHdKeyEcdsaDataSignatureBCH */
/*! export compilerOperationHdKeyEcdsaSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHdKeyEcdsaSignatureBCH */
/*! export compilerOperationHdKeyPublicKeyCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHdKeyPublicKeyCommon */
/*! export compilerOperationHdKeySchnorrDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHdKeySchnorrDataSignatureBCH */
/*! export compilerOperationHdKeySchnorrSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHdKeySchnorrSignatureBCH */
/*! export compilerOperationHelperAddressIndex [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperAddressIndex */
/*! export compilerOperationHelperCompileScript [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperCompileScript */
/*! export compilerOperationHelperComputeDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperComputeDataSignatureBCH */
/*! export compilerOperationHelperComputeSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperComputeSignatureBCH */
/*! export compilerOperationHelperDeriveHdKeyPrivate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperDeriveHdKeyPrivate */
/*! export compilerOperationHelperDeriveHdPrivateNode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperDeriveHdPrivateNode */
/*! export compilerOperationHelperGenerateCoveredBytecode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperGenerateCoveredBytecode */
/*! export compilerOperationHelperHdKeyDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperHdKeyDataSignatureBCH */
/*! export compilerOperationHelperHdKeySignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperHdKeySignatureBCH */
/*! export compilerOperationHelperKeyDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperKeyDataSignatureBCH */
/*! export compilerOperationHelperKeySignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperKeySignatureBCH */
/*! export compilerOperationHelperUnknownEntity [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperUnknownEntity */
/*! export compilerOperationKeyEcdsaDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationKeyEcdsaDataSignatureBCH */
/*! export compilerOperationKeyEcdsaSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationKeyEcdsaSignatureBCH */
/*! export compilerOperationKeyPublicKeyCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationKeyPublicKeyCommon */
/*! export compilerOperationKeySchnorrDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationKeySchnorrDataSignatureBCH */
/*! export compilerOperationKeySchnorrSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationKeySchnorrSignatureBCH */
/*! export compilerOperationRequires [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationRequires */
/*! export compilerOperationSigningSerializationCorrespondingOutput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationCorrespondingOutput */
/*! export compilerOperationSigningSerializationCorrespondingOutputHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationCorrespondingOutputHash */
/*! export compilerOperationSigningSerializationCoveredBytecode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationCoveredBytecode */
/*! export compilerOperationSigningSerializationCoveredBytecodeLength [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationCoveredBytecodeLength */
/*! export compilerOperationSigningSerializationFullBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationFullBCH */
/*! export compilerOperationSigningSerializationLocktime [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationLocktime */
/*! export compilerOperationSigningSerializationOutpointIndex [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationOutpointIndex */
/*! export compilerOperationSigningSerializationOutpointTransactionHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationOutpointTransactionHash */
/*! export compilerOperationSigningSerializationOutputValue [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationOutputValue */
/*! export compilerOperationSigningSerializationSequenceNumber [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationSequenceNumber */
/*! export compilerOperationSigningSerializationTransactionOutpoints [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationTransactionOutpoints */
/*! export compilerOperationSigningSerializationTransactionOutpointsHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationTransactionOutpointsHash */
/*! export compilerOperationSigningSerializationTransactionOutputs [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationTransactionOutputs */
/*! export compilerOperationSigningSerializationTransactionOutputsHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationTransactionOutputsHash */
/*! export compilerOperationSigningSerializationTransactionSequenceNumbers [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationTransactionSequenceNumbers */
/*! export compilerOperationSigningSerializationTransactionSequenceNumbersHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationTransactionSequenceNumbersHash */
/*! export compilerOperationSigningSerializationVersion [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationVersion */
/*! export compilerOperationWalletData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationWalletData */
/*! export compilerOperationsBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationsBCH */
/*! export compilerOperationsCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationsCommon */
/*! export conditionalFlowControlOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export conditionallyEvaluate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode */
/*! export createAuthenticationProgramInternalStateCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .createAuthenticationProgramInternalStateCommon */
/*! export createAuthenticationProgramStateCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .createAuthenticationProgramStateCommon */
/*! export createAuthenticationProgramStateCommonEmpty [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .createAuthenticationProgramStateCommonEmpty */
/*! export createCompilerBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .createCompilerBCH */
/*! export createInstructionSetBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createTestAuthenticationProgramBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createTransactionContextCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .createTransactionContextCommon */
/*! export createTransactionContextCommonEmpty [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .createTransactionContextCommonEmpty */
/*! export createTransactionContextCommonTesting [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .createTransactionContextCommonTesting */
/*! export cryptoOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeBitcoinSignature [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeHdKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .decodeHdKey */
/*! export decodeHdPrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .decodeHdPrivateKey */
/*! export decodeHdPublicKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .decodeHdPublicKey */
/*! export decodePrivateKeyWif [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .decodePrivateKeyWif */
/*! export decodeTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .decodeTransaction */
/*! export decodeTransactionUnsafe [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .decodeTransactionUnsafe */
/*! export default [not provided] [no usage info] [missing usage info prevents renaming] */
/*! export deriveHdPath [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .deriveHdPath */
/*! export deriveHdPrivateNodeChild [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .deriveHdPrivateNodeChild */
/*! export deriveHdPrivateNodeFromSeed [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .deriveHdPrivateNodeFromSeed */
/*! export deriveHdPrivateNodeIdentifier [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .deriveHdPrivateNodeIdentifier */
/*! export deriveHdPublicNode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .deriveHdPublicNode */
/*! export deriveHdPublicNodeChild [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .deriveHdPublicNodeChild */
/*! export deriveHdPublicNodeIdentifier [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .deriveHdPublicNodeIdentifier */
/*! export disabledOperation [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export disabledOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export disassembleAuthenticationInstruction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .disassembleAuthenticationInstruction */
/*! export disassembleBytecode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .disassembleBytecode */
/*! export disassembleBytecodeBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .disassembleBytecodeBCH */
/*! export disassembleBytecodeBTC [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .disassembleBytecodeBTC */
/*! export disassembleParsedAuthenticationInstruction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .disassembleParsedAuthenticationInstruction */
/*! export disassembleParsedAuthenticationInstructionMalformed [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .disassembleParsedAuthenticationInstructionMalformed */
/*! export disassembleParsedAuthenticationInstructions [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .disassembleParsedAuthenticationInstructions */
/*! export encodeDataPush [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeHdPrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .encodeHdPrivateKey */
/*! export encodeHdPublicKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .encodeHdPublicKey */
/*! export encodeInput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .encodeInput */
/*! export encodeInputs [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .encodeInputs */
/*! export encodeOutpoints [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .encodeOutpoints */
/*! export encodeOutput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .encodeOutput */
/*! export encodeOutputsForSigning [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .encodeOutputsForSigning */
/*! export encodeOutputsForTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .encodeOutputsForTransaction */
/*! export encodePrivateKeyWif [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .encodePrivateKeyWif */
/*! export encodeSequenceNumbersForSigning [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .encodeSequenceNumbersForSigning */
/*! export encodeTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .encodeTransaction */
/*! export extractMissingVariables [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .extractMissingVariables */
/*! export extractResolvedVariables [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .extractResolvedVariables */
/*! export generateBytecodeMap [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .generateBytecodeMap */
/*! export generatePrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .generatePrivateKey */
/*! export generateSigningSerializationBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export generateTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .generateTransaction */
/*! export getEmbeddedRipemd160Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .getEmbeddedRipemd160Binary */
/*! export getEmbeddedSecp256k1Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .getEmbeddedSecp256k1Binary */
/*! export getEmbeddedSha1Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .getEmbeddedSha1Binary */
/*! export getEmbeddedSha256Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .getEmbeddedSha256Binary */
/*! export getEmbeddedSha512Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .getEmbeddedSha512Binary */
/*! export getFlagsForInstructionSetBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getTransactionHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .getTransactionHash */
/*! export getTransactionHashBE [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .getTransactionHashBE */
/*! export getTransactionHashLE [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .getTransactionHashLE */
/*! export hashOutputs [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export hashPrevouts [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export hashSequence [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export hmacSha256 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .hmacSha256 */
/*! export hmacSha512 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .hmacSha512 */
/*! export incrementOperationCount [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateBIP32Crypto [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateBIP32Crypto */
/*! export instantiateHmacFunction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateHmacFunction */
/*! export instantiateRipemd160 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateRipemd160 */
/*! export instantiateRipemd160Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateRipemd160Bytes */
/*! export instantiateRustWasm [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateRustWasm */
/*! export instantiateSecp256k1 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateSecp256k1 */
/*! export instantiateSecp256k1Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateSecp256k1Bytes */
/*! export instantiateSecp256k1Wasm [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateSecp256k1Wasm */
/*! export instantiateSecp256k1WasmBytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateSecp256k1WasmBytes */
/*! export instantiateSha1 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateSha1 */
/*! export instantiateSha1Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateSha1Bytes */
/*! export instantiateSha256 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateSha256 */
/*! export instantiateSha256Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateSha256Bytes */
/*! export instantiateSha512 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateSha512 */
/*! export instantiateSha512Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateSha512Bytes */
/*! export instantiateVirtualMachineBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch.js .instantiateVirtualMachineBCH */
/*! export instructionSetBCHCurrentStrict [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export invalidSatoshis [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .invalidSatoshis */
/*! export isDefinedSigningSerializationType [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isLegacySigningSerialization [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isMinimalDataPush [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isPayToScriptHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isScriptNumberError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isValidCompressedPublicKeyEncoding [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isValidPublicKeyEncoding [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isValidSignatureEncodingBCHRaw [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isValidSignatureEncodingBCHTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isValidSignatureEncodingDER [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isValidUncompressedPublicKeyEncoding [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isWitnessProgram [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export lengthBytesForPushOpcode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .lengthBytesForPushOpcode */
/*! export mapOverOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export nonOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export op0NotEqual [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export op1Add [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export op1Sub [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export op2Drop [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export op2Dup [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export op2Over [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export op2Rot [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export op2Swap [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export op3Dup [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opAbs [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opAdd [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opAnd [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opBin2Num [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opBoolAnd [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opBoolOr [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opCat [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opCheckDataSig [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opCheckDataSigVerify [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opCheckLockTimeVerify [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opCheckMultiSig [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opCheckMultiSigVerify [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opCheckSequenceVerify [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opCheckSig [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opCheckSigVerify [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opCodeSeparator [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opDepth [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opDiv [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opDrop [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opDup [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opElse [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opEndIf [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opEqual [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opEqualVerify [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opFromAltStack [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opGreaterThan [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opGreaterThanOrEqual [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opHash160 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opHash256 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opIf [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opIfDup [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opLessThan [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opLessThanOrEqual [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opMax [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opMin [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opMod [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opNegate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opNip [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opNop [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opNot [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opNotIf [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opNum2Bin [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opNumEqual [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opNumEqualVerify [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opNumNotEqual [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opOr [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opOver [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opPick [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opReturn [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opReverseBytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opRipemd160 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opRoll [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opRot [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opSha1 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opSha256 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opSize [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opSplit [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opSub [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opSwap [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opToAltStack [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opTuck [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opVerify [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opWithin [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opXor [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export padMinimallyEncodedScriptNumber [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseBytecode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .parseBytecode */
/*! export parseBytesAsScriptNumber [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export pushByteOpcodes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export pushNumberOpcodes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export pushNumberOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export pushOperation [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export pushOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export pushToStack [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export readAuthenticationInstruction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .readAuthenticationInstruction */
/*! export readLocktime [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export readTransactionInput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .readTransactionInput */
/*! export readTransactionOutput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .readTransactionOutput */
/*! export reservedOperation [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export ripemd160Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .ripemd160Base64Bytes */
/*! export safelyExtendCompilationData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .safelyExtendCompilationData */
/*! export serializeAuthenticationInstruction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .serializeAuthenticationInstruction */
/*! export serializeAuthenticationInstructions [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .serializeAuthenticationInstructions */
/*! export serializeParsedAuthenticationInstruction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .serializeParsedAuthenticationInstruction */
/*! export serializeParsedAuthenticationInstructionMalformed [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .serializeParsedAuthenticationInstructionMalformed */
/*! export serializeParsedAuthenticationInstructions [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .serializeParsedAuthenticationInstructions */
/*! export sha1Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .sha1Base64Bytes */
/*! export sha256Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .sha256Base64Bytes */
/*! export sha512Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .sha512Base64Bytes */
/*! export spliceOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export stackItemIsTruthy [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export stackOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export timeOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export unconditionalFlowControlOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export undefinedOperation [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .undefinedOperation */
/*! export useFourStackItems [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export useOneScriptNumber [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export useOneStackItem [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export useSixStackItems [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export useThreeScriptNumbers [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export useThreeStackItems [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export useTwoScriptNumbers [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export useTwoStackItems [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export validateSecp256k1PrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .validateSecp256k1PrivateKey */
/*! export verifyTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .verifyTransaction */
/*! other exports [maybe provided (runtime-defined)] [no usage info] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.n, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpcodesBTC": () => /* reexport safe */ _btc_btc__WEBPACK_IMPORTED_MODULE_0__.OpcodesBTC,
/* harmony export */   "AuthenticationErrorBCH": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorBCH,
/* harmony export */   "ConsensusBCH": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.ConsensusBCH,
/* harmony export */   "InstructionSetBCH": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.InstructionSetBCH,
/* harmony export */   "OpcodeAlternateNamesBCH": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.OpcodeAlternateNamesBCH,
/* harmony export */   "OpcodeDescriptionsBCH": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.OpcodeDescriptionsBCH,
/* harmony export */   "OpcodeDescriptionsUniqueBCH": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.OpcodeDescriptionsUniqueBCH,
/* harmony export */   "OpcodesBCH": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.OpcodesBCH,
/* harmony export */   "assembleBitcoinABCScript": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.assembleBitcoinABCScript,
/* harmony export */   "bitcoinABCOpcodes": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.bitcoinABCOpcodes,
/* harmony export */   "bitcoinCashOperations": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.bitcoinCashOperations,
/* harmony export */   "bitwiseOperation": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.bitwiseOperation,
/* harmony export */   "createInstructionSetBCH": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.createInstructionSetBCH,
/* harmony export */   "createTestAuthenticationProgramBCH": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.createTestAuthenticationProgramBCH,
/* harmony export */   "getFlagsForInstructionSetBCH": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.getFlagsForInstructionSetBCH,
/* harmony export */   "instantiateVirtualMachineBCH": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.instantiateVirtualMachineBCH,
/* harmony export */   "instructionSetBCHCurrentStrict": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.instructionSetBCHCurrentStrict,
/* harmony export */   "isPayToScriptHash": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.isPayToScriptHash,
/* harmony export */   "isValidSignatureEncodingBCHRaw": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.isValidSignatureEncodingBCHRaw,
/* harmony export */   "isWitnessProgram": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.isWitnessProgram,
/* harmony export */   "opAnd": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opAnd,
/* harmony export */   "opBin2Num": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opBin2Num,
/* harmony export */   "opCat": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opCat,
/* harmony export */   "opCheckDataSig": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opCheckDataSig,
/* harmony export */   "opCheckDataSigVerify": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opCheckDataSigVerify,
/* harmony export */   "opDiv": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opDiv,
/* harmony export */   "opMod": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opMod,
/* harmony export */   "opNum2Bin": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opNum2Bin,
/* harmony export */   "opOr": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opOr,
/* harmony export */   "opReverseBytes": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opReverseBytes,
/* harmony export */   "opSplit": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opSplit,
/* harmony export */   "opXor": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opXor,
/* harmony export */   "padMinimallyEncodedScriptNumber": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.padMinimallyEncodedScriptNumber,
/* harmony export */   "AuthenticationErrorCommon": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.AuthenticationErrorCommon,
/* harmony export */   "ConsensusCommon": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.ConsensusCommon,
/* harmony export */   "OpcodeDescriptionsCommon": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.OpcodeDescriptionsCommon,
/* harmony export */   "OpcodesCommon": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon,
/* harmony export */   "PushOperationConstants": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.PushOperationConstants,
/* harmony export */   "ScriptNumberError": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.ScriptNumberError,
/* harmony export */   "SigningSerializationFlag": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.SigningSerializationFlag,
/* harmony export */   "applyError": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.applyError,
/* harmony export */   "arithmeticOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.arithmeticOperations,
/* harmony export */   "bigIntToScriptNumber": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.bigIntToScriptNumber,
/* harmony export */   "bitwiseOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.bitwiseOperations,
/* harmony export */   "booleanToScriptNumber": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.booleanToScriptNumber,
/* harmony export */   "checkLimitsCommon": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.checkLimitsCommon,
/* harmony export */   "cloneAuthenticationProgramStateCommon": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.cloneAuthenticationProgramStateCommon,
/* harmony export */   "cloneStack": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.cloneStack,
/* harmony export */   "combineOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.combineOperations,
/* harmony export */   "commonOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.commonOperations,
/* harmony export */   "conditionalFlowControlOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.conditionalFlowControlOperations,
/* harmony export */   "conditionallyEvaluate": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.conditionallyEvaluate,
/* harmony export */   "createAuthenticationProgramInternalStateCommon": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.createAuthenticationProgramInternalStateCommon,
/* harmony export */   "createAuthenticationProgramStateCommon": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.createAuthenticationProgramStateCommon,
/* harmony export */   "createAuthenticationProgramStateCommonEmpty": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.createAuthenticationProgramStateCommonEmpty,
/* harmony export */   "createTransactionContextCommon": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.createTransactionContextCommon,
/* harmony export */   "createTransactionContextCommonEmpty": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.createTransactionContextCommonEmpty,
/* harmony export */   "createTransactionContextCommonTesting": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.createTransactionContextCommonTesting,
/* harmony export */   "cryptoOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.cryptoOperations,
/* harmony export */   "decodeBitcoinSignature": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.decodeBitcoinSignature,
/* harmony export */   "disabledOperation": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.disabledOperation,
/* harmony export */   "disabledOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.disabledOperations,
/* harmony export */   "encodeDataPush": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.encodeDataPush,
/* harmony export */   "generateSigningSerializationBCH": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.generateSigningSerializationBCH,
/* harmony export */   "hashOutputs": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.hashOutputs,
/* harmony export */   "hashPrevouts": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.hashPrevouts,
/* harmony export */   "hashSequence": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.hashSequence,
/* harmony export */   "incrementOperationCount": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.incrementOperationCount,
/* harmony export */   "isDefinedSigningSerializationType": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.isDefinedSigningSerializationType,
/* harmony export */   "isLegacySigningSerialization": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.isLegacySigningSerialization,
/* harmony export */   "isMinimalDataPush": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.isMinimalDataPush,
/* harmony export */   "isScriptNumberError": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.isScriptNumberError,
/* harmony export */   "isValidCompressedPublicKeyEncoding": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.isValidCompressedPublicKeyEncoding,
/* harmony export */   "isValidPublicKeyEncoding": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.isValidPublicKeyEncoding,
/* harmony export */   "isValidSignatureEncodingBCHTransaction": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.isValidSignatureEncodingBCHTransaction,
/* harmony export */   "isValidSignatureEncodingDER": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.isValidSignatureEncodingDER,
/* harmony export */   "isValidUncompressedPublicKeyEncoding": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.isValidUncompressedPublicKeyEncoding,
/* harmony export */   "mapOverOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.mapOverOperations,
/* harmony export */   "nonOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.nonOperations,
/* harmony export */   "op0NotEqual": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.op0NotEqual,
/* harmony export */   "op1Add": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.op1Add,
/* harmony export */   "op1Sub": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.op1Sub,
/* harmony export */   "op2Drop": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.op2Drop,
/* harmony export */   "op2Dup": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.op2Dup,
/* harmony export */   "op2Over": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.op2Over,
/* harmony export */   "op2Rot": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.op2Rot,
/* harmony export */   "op2Swap": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.op2Swap,
/* harmony export */   "op3Dup": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.op3Dup,
/* harmony export */   "opAbs": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opAbs,
/* harmony export */   "opAdd": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opAdd,
/* harmony export */   "opBoolAnd": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opBoolAnd,
/* harmony export */   "opBoolOr": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opBoolOr,
/* harmony export */   "opCheckLockTimeVerify": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opCheckLockTimeVerify,
/* harmony export */   "opCheckMultiSig": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opCheckMultiSig,
/* harmony export */   "opCheckMultiSigVerify": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opCheckMultiSigVerify,
/* harmony export */   "opCheckSequenceVerify": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opCheckSequenceVerify,
/* harmony export */   "opCheckSig": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opCheckSig,
/* harmony export */   "opCheckSigVerify": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opCheckSigVerify,
/* harmony export */   "opCodeSeparator": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opCodeSeparator,
/* harmony export */   "opDepth": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opDepth,
/* harmony export */   "opDrop": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opDrop,
/* harmony export */   "opDup": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opDup,
/* harmony export */   "opElse": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opElse,
/* harmony export */   "opEndIf": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opEndIf,
/* harmony export */   "opEqual": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opEqual,
/* harmony export */   "opEqualVerify": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opEqualVerify,
/* harmony export */   "opFromAltStack": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opFromAltStack,
/* harmony export */   "opGreaterThan": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opGreaterThan,
/* harmony export */   "opGreaterThanOrEqual": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opGreaterThanOrEqual,
/* harmony export */   "opHash160": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opHash160,
/* harmony export */   "opHash256": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opHash256,
/* harmony export */   "opIf": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opIf,
/* harmony export */   "opIfDup": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opIfDup,
/* harmony export */   "opLessThan": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opLessThan,
/* harmony export */   "opLessThanOrEqual": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opLessThanOrEqual,
/* harmony export */   "opMax": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opMax,
/* harmony export */   "opMin": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opMin,
/* harmony export */   "opNegate": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opNegate,
/* harmony export */   "opNip": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opNip,
/* harmony export */   "opNop": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opNop,
/* harmony export */   "opNot": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opNot,
/* harmony export */   "opNotIf": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opNotIf,
/* harmony export */   "opNumEqual": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opNumEqual,
/* harmony export */   "opNumEqualVerify": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opNumEqualVerify,
/* harmony export */   "opNumNotEqual": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opNumNotEqual,
/* harmony export */   "opOver": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opOver,
/* harmony export */   "opPick": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opPick,
/* harmony export */   "opReturn": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opReturn,
/* harmony export */   "opRipemd160": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opRipemd160,
/* harmony export */   "opRoll": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opRoll,
/* harmony export */   "opRot": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opRot,
/* harmony export */   "opSha1": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opSha1,
/* harmony export */   "opSha256": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opSha256,
/* harmony export */   "opSize": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opSize,
/* harmony export */   "opSub": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opSub,
/* harmony export */   "opSwap": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opSwap,
/* harmony export */   "opToAltStack": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opToAltStack,
/* harmony export */   "opTuck": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opTuck,
/* harmony export */   "opVerify": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opVerify,
/* harmony export */   "opWithin": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opWithin,
/* harmony export */   "parseBytesAsScriptNumber": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.parseBytesAsScriptNumber,
/* harmony export */   "pushByteOpcodes": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.pushByteOpcodes,
/* harmony export */   "pushNumberOpcodes": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.pushNumberOpcodes,
/* harmony export */   "pushNumberOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.pushNumberOperations,
/* harmony export */   "pushOperation": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.pushOperation,
/* harmony export */   "pushOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.pushOperations,
/* harmony export */   "pushToStack": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.pushToStack,
/* harmony export */   "readLocktime": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.readLocktime,
/* harmony export */   "reservedOperation": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.reservedOperation,
/* harmony export */   "spliceOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.spliceOperations,
/* harmony export */   "stackItemIsTruthy": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.stackItemIsTruthy,
/* harmony export */   "stackOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.stackOperations,
/* harmony export */   "timeOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.timeOperations,
/* harmony export */   "unconditionalFlowControlOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.unconditionalFlowControlOperations,
/* harmony export */   "undefinedOperation": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.undefinedOperation,
/* harmony export */   "useFourStackItems": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.useFourStackItems,
/* harmony export */   "useOneScriptNumber": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.useOneScriptNumber,
/* harmony export */   "useOneStackItem": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.useOneStackItem,
/* harmony export */   "useSixStackItems": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.useSixStackItems,
/* harmony export */   "useThreeScriptNumbers": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.useThreeScriptNumbers,
/* harmony export */   "useThreeStackItems": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.useThreeStackItems,
/* harmony export */   "useTwoScriptNumbers": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.useTwoScriptNumbers,
/* harmony export */   "useTwoStackItems": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.useTwoStackItems,
/* harmony export */   "assembleBytecode": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.assembleBytecode,
/* harmony export */   "assembleBytecodeBCH": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.assembleBytecodeBCH,
/* harmony export */   "assembleBytecodeBTC": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.assembleBytecodeBTC,
/* harmony export */   "authenticationInstructionIsMalformed": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.authenticationInstructionIsMalformed,
/* harmony export */   "authenticationInstructionsAreMalformed": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.authenticationInstructionsAreMalformed,
/* harmony export */   "authenticationInstructionsAreNotMalformed": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.authenticationInstructionsAreNotMalformed,
/* harmony export */   "disassembleAuthenticationInstruction": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.disassembleAuthenticationInstruction,
/* harmony export */   "disassembleBytecode": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.disassembleBytecode,
/* harmony export */   "disassembleBytecodeBCH": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.disassembleBytecodeBCH,
/* harmony export */   "disassembleBytecodeBTC": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.disassembleBytecodeBTC,
/* harmony export */   "disassembleParsedAuthenticationInstruction": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.disassembleParsedAuthenticationInstruction,
/* harmony export */   "disassembleParsedAuthenticationInstructionMalformed": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.disassembleParsedAuthenticationInstructionMalformed,
/* harmony export */   "disassembleParsedAuthenticationInstructions": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.disassembleParsedAuthenticationInstructions,
/* harmony export */   "generateBytecodeMap": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.generateBytecodeMap,
/* harmony export */   "lengthBytesForPushOpcode": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.lengthBytesForPushOpcode,
/* harmony export */   "parseBytecode": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.parseBytecode,
/* harmony export */   "readAuthenticationInstruction": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.readAuthenticationInstruction,
/* harmony export */   "serializeAuthenticationInstruction": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.serializeAuthenticationInstruction,
/* harmony export */   "serializeAuthenticationInstructions": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.serializeAuthenticationInstructions,
/* harmony export */   "serializeParsedAuthenticationInstruction": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.serializeParsedAuthenticationInstruction,
/* harmony export */   "serializeParsedAuthenticationInstructionMalformed": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.serializeParsedAuthenticationInstructionMalformed,
/* harmony export */   "serializeParsedAuthenticationInstructions": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.serializeParsedAuthenticationInstructions
/* harmony export */ });
/* harmony import */ var _btc_btc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./btc/btc */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/btc/btc.js");
/* harmony import */ var _bch_bch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bch/bch */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch.js");
/* harmony import */ var _common_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common/common */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js");
/* harmony import */ var _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./instruction-sets-utils */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js");
/* harmony import */ var _instruction_sets_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./instruction-sets-types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js");
/* harmony import */ var _instruction_sets_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_instruction_sets_types__WEBPACK_IMPORTED_MODULE_4__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _instruction_sets_types__WEBPACK_IMPORTED_MODULE_4__) if(["default","OpcodesBTC","AuthenticationErrorBCH","ConsensusBCH","InstructionSetBCH","OpcodeAlternateNamesBCH","OpcodeDescriptionsBCH","OpcodeDescriptionsUniqueBCH","OpcodesBCH","assembleBitcoinABCScript","bitcoinABCOpcodes","bitcoinCashOperations","bitwiseOperation","createInstructionSetBCH","createTestAuthenticationProgramBCH","getFlagsForInstructionSetBCH","instantiateVirtualMachineBCH","instructionSetBCHCurrentStrict","isPayToScriptHash","isValidSignatureEncodingBCHRaw","isWitnessProgram","opAnd","opBin2Num","opCat","opCheckDataSig","opCheckDataSigVerify","opDiv","opMod","opNum2Bin","opOr","opReverseBytes","opSplit","opXor","padMinimallyEncodedScriptNumber","AuthenticationErrorCommon","ConsensusCommon","OpcodeDescriptionsCommon","OpcodesCommon","PushOperationConstants","ScriptNumberError","SigningSerializationFlag","applyError","arithmeticOperations","bigIntToScriptNumber","bitwiseOperations","booleanToScriptNumber","checkLimitsCommon","cloneAuthenticationProgramStateCommon","cloneStack","combineOperations","commonOperations","conditionalFlowControlOperations","conditionallyEvaluate","createAuthenticationProgramInternalStateCommon","createAuthenticationProgramStateCommon","createAuthenticationProgramStateCommonEmpty","createTransactionContextCommon","createTransactionContextCommonEmpty","createTransactionContextCommonTesting","cryptoOperations","decodeBitcoinSignature","disabledOperation","disabledOperations","encodeDataPush","generateSigningSerializationBCH","hashOutputs","hashPrevouts","hashSequence","incrementOperationCount","isDefinedSigningSerializationType","isLegacySigningSerialization","isMinimalDataPush","isScriptNumberError","isValidCompressedPublicKeyEncoding","isValidPublicKeyEncoding","isValidSignatureEncodingBCHTransaction","isValidSignatureEncodingDER","isValidUncompressedPublicKeyEncoding","mapOverOperations","nonOperations","op0NotEqual","op1Add","op1Sub","op2Drop","op2Dup","op2Over","op2Rot","op2Swap","op3Dup","opAbs","opAdd","opBoolAnd","opBoolOr","opCheckLockTimeVerify","opCheckMultiSig","opCheckMultiSigVerify","opCheckSequenceVerify","opCheckSig","opCheckSigVerify","opCodeSeparator","opDepth","opDrop","opDup","opElse","opEndIf","opEqual","opEqualVerify","opFromAltStack","opGreaterThan","opGreaterThanOrEqual","opHash160","opHash256","opIf","opIfDup","opLessThan","opLessThanOrEqual","opMax","opMin","opNegate","opNip","opNop","opNot","opNotIf","opNumEqual","opNumEqualVerify","opNumNotEqual","opOver","opPick","opReturn","opRipemd160","opRoll","opRot","opSha1","opSha256","opSize","opSub","opSwap","opToAltStack","opTuck","opVerify","opWithin","parseBytesAsScriptNumber","pushByteOpcodes","pushNumberOpcodes","pushNumberOperations","pushOperation","pushOperations","pushToStack","readLocktime","reservedOperation","spliceOperations","stackItemIsTruthy","stackOperations","timeOperations","unconditionalFlowControlOperations","undefinedOperation","useFourStackItems","useOneScriptNumber","useOneStackItem","useSixStackItems","useThreeScriptNumbers","useThreeStackItems","useTwoScriptNumbers","useTwoStackItems","assembleBytecode","assembleBytecodeBCH","assembleBytecodeBTC","authenticationInstructionIsMalformed","authenticationInstructionsAreMalformed","authenticationInstructionsAreNotMalformed","disassembleAuthenticationInstruction","disassembleBytecode","disassembleBytecodeBCH","disassembleBytecodeBTC","disassembleParsedAuthenticationInstruction","disassembleParsedAuthenticationInstructionMalformed","disassembleParsedAuthenticationInstructions","generateBytecodeMap","lengthBytesForPushOpcode","parseBytecode","readAuthenticationInstruction","serializeAuthenticationInstruction","serializeAuthenticationInstructions","serializeParsedAuthenticationInstruction","serializeParsedAuthenticationInstructionMalformed","serializeParsedAuthenticationInstructions"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _instruction_sets_types__WEBPACK_IMPORTED_MODULE_4__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);





//# sourceMappingURL=instruction-sets.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/virtual-machine.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/virtual-machine.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export createAuthenticationVirtualMachine [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAuthenticationVirtualMachine": () => /* binding */ createAuthenticationVirtualMachine
/* harmony export */ });
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");

/**
 * Create an AuthenticationVirtualMachine to evaluate authentication programs
 * constructed from operations in the `instructionSet`.
 * @param instructionSet - an `InstructionSet`
 */
const createAuthenticationVirtualMachine = (instructionSet) => {
    const availableOpcodes = 256;
    const operators = (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.range)(availableOpcodes).map((codepoint) => instructionSet.operations[codepoint] === undefined
        ? instructionSet.undefined
        : instructionSet.operations[codepoint]);
    const getCodepoint = (state) => state.instructions[state.ip];
    const after = (state) => {
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        state.ip += 1;
        return state;
    };
    const getOperation = (state) => operators[getCodepoint(state).opcode];
    const stateStepMutate = (state) => after(getOperation(state)(state));
    const stateContinue = instructionSet.continue;
    /**
     * When we get real tail call optimization, this can be replaced
     * with recursion.
     */
    const untilComplete = (state, stepFunction) => {
        // eslint-disable-next-line functional/no-loop-statement
        while (stateContinue(state)) {
            // eslint-disable-next-line functional/no-expression-statement, no-param-reassign
            state = stepFunction(state);
        }
        return state;
    };
    const clone = (state) => instructionSet.clone(state);
    const { verify } = instructionSet;
    const stateEvaluate = (state) => untilComplete(clone(state), stateStepMutate);
    const stateDebugStep = (state) => {
        const operator = getOperation(state);
        return after(operator(clone(state)));
    };
    const stateDebug = (state) => {
        const trace = [];
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        trace.push(state);
        // eslint-disable-next-line functional/no-expression-statement
        untilComplete(state, (currentState) => {
            const nextState = stateDebugStep(currentState);
            // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
            trace.push(nextState);
            return nextState;
        });
        return trace;
    };
    const stateStep = (state) => stateStepMutate(clone(state));
    const evaluate = (program) => instructionSet.evaluate(program, stateEvaluate);
    const debug = (program) => {
        const results = [];
        const proxyDebug = (state) => {
            const debugResult = stateDebug(state);
            // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
            results.push(...debugResult);
            return (debugResult[debugResult.length - 1] ??
                state);
        };
        const finalResult = instructionSet.evaluate(program, proxyDebug);
        return [...results, finalResult];
    };
    return {
        debug,
        evaluate,
        stateContinue,
        stateDebug,
        stateEvaluate,
        stateStep,
        stateStepMutate,
        verify,
    };
};
//# sourceMappingURL=virtual-machine.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/vm-types.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/vm-types.js ***!
  \***********************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
/***/ (() => {

//# sourceMappingURL=vm-types.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/vm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/vm.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export CompilerDefaults [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export CompressionFlag [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export ConsensusCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export ContextFlag [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export HdKeyDecodingError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export HdKeyVersion [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export HdNodeCrackingError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export HdNodeDerivationError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export OpcodesBTC [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export SigningSerializationAlgorithmIdentifier [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export TransactionDecodingError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export WalletImportFormatError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export assembleBytecode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export assembleBytecodeBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export assembleBytecodeBTC [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export attemptCompilerOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export authenticationInstructionIsMalformed [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export authenticationInstructionsAreMalformed [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export authenticationInstructionsAreNotMalformed [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export authenticationTemplateToCompilerBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export checkLimitsCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export cloneAuthenticationProgramStateCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export cloneStack [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export commonOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compileInputTemplate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compileOutputTemplate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationAddressData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationAttemptBytecodeResolution [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationCurrentBlockHeight [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationCurrentBlockTime [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHdKeyEcdsaDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHdKeyEcdsaSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHdKeyPublicKeyCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHdKeySchnorrDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHdKeySchnorrSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperAddressIndex [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperCompileScript [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperComputeDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperComputeSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperDeriveHdKeyPrivate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperDeriveHdPrivateNode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperGenerateCoveredBytecode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperHdKeyDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperHdKeySignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperKeyDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperKeySignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperUnknownEntity [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationKeyEcdsaDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationKeyEcdsaSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationKeyPublicKeyCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationKeySchnorrDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationKeySchnorrSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationRequires [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationCorrespondingOutput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationCorrespondingOutputHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationCoveredBytecode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationCoveredBytecodeLength [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationFullBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationLocktime [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationOutpointIndex [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationOutpointTransactionHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationOutputValue [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationSequenceNumber [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionOutpoints [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionOutpointsHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionOutputs [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionOutputsHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionSequenceNumbers [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionSequenceNumbersHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationVersion [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationWalletData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationsBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationsCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createAuthenticationProgramInternalStateCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createAuthenticationProgramStateCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createAuthenticationProgramStateCommonEmpty [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createAuthenticationVirtualMachine [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createCompilerBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createTransactionContextCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createTransactionContextCommonEmpty [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createTransactionContextCommonTesting [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeHdKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeHdPrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeHdPublicKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodePrivateKeyWif [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeTransactionUnsafe [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export default [not provided] [no usage info] [missing usage info prevents renaming] */
/*! export deriveHdPath [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPrivateNodeChild [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPrivateNodeFromSeed [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPrivateNodeIdentifier [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPublicNode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPublicNodeChild [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPublicNodeIdentifier [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export disassembleAuthenticationInstruction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export disassembleBytecode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export disassembleBytecodeBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export disassembleBytecodeBTC [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export disassembleParsedAuthenticationInstruction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export disassembleParsedAuthenticationInstructionMalformed [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export disassembleParsedAuthenticationInstructions [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeHdPrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeHdPublicKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeInput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeInputs [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutpoints [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutputsForSigning [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutputsForTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodePrivateKeyWif [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeSequenceNumbersForSigning [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extractMissingVariables [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extractResolvedVariables [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export generateBytecodeMap [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export generatePrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export generateTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getEmbeddedRipemd160Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getEmbeddedSecp256k1Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getEmbeddedSha1Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getEmbeddedSha256Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getEmbeddedSha512Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getTransactionHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getTransactionHashBE [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getTransactionHashLE [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export hmacSha256 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export hmacSha512 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateBIP32Crypto [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateHmacFunction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateRipemd160 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateRipemd160Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateRustWasm [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSecp256k1 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSecp256k1Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSecp256k1Wasm [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSecp256k1WasmBytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha1 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha1Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha256 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha256Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha512 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha512Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateVirtualMachineBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export invalidSatoshis [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export lengthBytesForPushOpcode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseBytecode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export readAuthenticationInstruction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export readTransactionInput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export readTransactionOutput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export ripemd160Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export safelyExtendCompilationData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export serializeAuthenticationInstruction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export serializeAuthenticationInstructions [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export serializeParsedAuthenticationInstruction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export serializeParsedAuthenticationInstructionMalformed [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export serializeParsedAuthenticationInstructions [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export sha1Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export sha256Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export sha512Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export undefinedOperation [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export validateSecp256k1PrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export verifyTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! other exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.n, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAuthenticationVirtualMachine": () => /* reexport safe */ _virtual_machine__WEBPACK_IMPORTED_MODULE_2__.createAuthenticationVirtualMachine
/* harmony export */ });
/* harmony import */ var _instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instruction-sets/instruction-sets */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets.js");
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== "default") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _vm_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vm-types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/vm-types.js");
/* harmony import */ var _vm_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_vm_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _vm_types__WEBPACK_IMPORTED_MODULE_1__) if(["default","ConsensusCommon","OpcodesBTC","assembleBytecode","assembleBytecodeBCH","assembleBytecodeBTC","authenticationInstructionIsMalformed","authenticationInstructionsAreMalformed","authenticationInstructionsAreNotMalformed","checkLimitsCommon","cloneAuthenticationProgramStateCommon","cloneStack","commonOperations","createAuthenticationProgramInternalStateCommon","createAuthenticationProgramStateCommon","createAuthenticationProgramStateCommonEmpty","createTransactionContextCommon","createTransactionContextCommonEmpty","createTransactionContextCommonTesting","disassembleAuthenticationInstruction","disassembleBytecode","disassembleBytecodeBCH","disassembleBytecodeBTC","disassembleParsedAuthenticationInstruction","disassembleParsedAuthenticationInstructionMalformed","disassembleParsedAuthenticationInstructions","generateBytecodeMap","instantiateVirtualMachineBCH","lengthBytesForPushOpcode","parseBytecode","readAuthenticationInstruction","serializeAuthenticationInstruction","serializeAuthenticationInstructions","serializeParsedAuthenticationInstruction","serializeParsedAuthenticationInstructionMalformed","serializeParsedAuthenticationInstructions","undefinedOperation"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _vm_types__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _virtual_machine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./virtual-machine */ "./node_modules/@bitauth/libauth/build/module/lib/vm/virtual-machine.js");



//# sourceMappingURL=vm.js.map

/***/ }),

/***/ "./node_modules/aproba/index.js":
/*!**************************************!*\
  !*** ./node_modules/aproba/index.js ***!
  \**************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 24:15-29 */
/***/ ((module) => {

"use strict";


function isArguments (thingy) {
  return thingy != null && typeof thingy === 'object' && thingy.hasOwnProperty('callee')
}

var types = {
  '*': {label: 'any', check: function () { return true }},
  A: {label: 'array', check: function (thingy) { return Array.isArray(thingy) || isArguments(thingy) }},
  S: {label: 'string', check: function (thingy) { return typeof thingy === 'string' }},
  N: {label: 'number', check: function (thingy) { return typeof thingy === 'number' }},
  F: {label: 'function', check: function (thingy) { return typeof thingy === 'function' }},
  O: {label: 'object', check: function (thingy) { return typeof thingy === 'object' && thingy != null && !types.A.check(thingy) && !types.E.check(thingy) }},
  B: {label: 'boolean', check: function (thingy) { return typeof thingy === 'boolean' }},
  E: {label: 'error', check: function (thingy) { return thingy instanceof Error }},
  Z: {label: 'null', check: function (thingy) { return thingy == null }}
}

function addSchema (schema, arity) {
  var group = arity[schema.length] = arity[schema.length] || []
  if (group.indexOf(schema) === -1) group.push(schema)
}

var validate = module.exports = function (rawSchemas, args) {
  if (arguments.length !== 2) throw wrongNumberOfArgs(['SA'], arguments.length)
  if (!rawSchemas) throw missingRequiredArg(0, 'rawSchemas')
  if (!args) throw missingRequiredArg(1, 'args')
  if (!types.S.check(rawSchemas)) throw invalidType(0, ['string'], rawSchemas)
  if (!types.A.check(args)) throw invalidType(1, ['array'], args)
  var schemas = rawSchemas.split('|')
  var arity = {}

  schemas.forEach(function (schema) {
    for (var ii = 0; ii < schema.length; ++ii) {
      var type = schema[ii]
      if (!types[type]) throw unknownType(ii, type)
    }
    if (/E.*E/.test(schema)) throw moreThanOneError(schema)
    addSchema(schema, arity)
    if (/E/.test(schema)) {
      addSchema(schema.replace(/E.*$/, 'E'), arity)
      addSchema(schema.replace(/E/, 'Z'), arity)
      if (schema.length === 1) addSchema('', arity)
    }
  })
  var matching = arity[args.length]
  if (!matching) {
    throw wrongNumberOfArgs(Object.keys(arity), args.length)
  }
  for (var ii = 0; ii < args.length; ++ii) {
    var newMatching = matching.filter(function (schema) {
      var type = schema[ii]
      var typeCheck = types[type].check
      return typeCheck(args[ii])
    })
    if (!newMatching.length) {
      var labels = matching.map(function (schema) {
        return types[schema[ii]].label
      }).filter(function (schema) { return schema != null })
      throw invalidType(ii, labels, args[ii])
    }
    matching = newMatching
  }
}

function missingRequiredArg (num) {
  return newException('EMISSINGARG', 'Missing required argument #' + (num + 1))
}

function unknownType (num, type) {
  return newException('EUNKNOWNTYPE', 'Unknown type ' + type + ' in argument #' + (num + 1))
}

function invalidType (num, expectedTypes, value) {
  var valueType
  Object.keys(types).forEach(function (typeCode) {
    if (types[typeCode].check(value)) valueType = types[typeCode].label
  })
  return newException('EINVALIDTYPE', 'Argument #' + (num + 1) + ': Expected ' +
    englishList(expectedTypes) + ' but got ' + valueType)
}

function englishList (list) {
  return list.join(', ').replace(/, ([^,]+)$/, ' or $1')
}

function wrongNumberOfArgs (expected, got) {
  var english = englishList(expected)
  var args = expected.every(function (ex) { return ex.length === 1 })
    ? 'argument'
    : 'arguments'
  return newException('EWRONGARGCOUNT', 'Expected ' + english + ' ' + args + ' but got ' + got)
}

function moreThanOneError (schema) {
  return newException('ETOOMANYERRORTYPES',
    'Only one error type per argument signature is allowed, more than one found in "' + schema + '"')
}

function newException (code, msg) {
  var e = new Error(msg)
  e.code = code
  if (Error.captureStackTrace) Error.captureStackTrace(e, validate)
  return e
}


/***/ }),

/***/ "./node_modules/are-we-there-yet/index.js":
/*!************************************************!*\
  !*** ./node_modules/are-we-there-yet/index.js ***!
  \************************************************/
/*! default exports */
/*! export Tracker [provided] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/are-we-there-yet/tracker.js */
/*!   exports [maybe provided (runtime-defined)] [no usage info] */
/*! export TrackerGroup [provided] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/are-we-there-yet/tracker-group.js */
/*!   exports [maybe provided (runtime-defined)] [no usage info] */
/*! export TrackerStream [provided] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/are-we-there-yet/tracker-stream.js */
/*!   exports [maybe provided (runtime-defined)] [no usage info] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

exports.TrackerGroup = __webpack_require__(/*! ./tracker-group.js */ "./node_modules/are-we-there-yet/tracker-group.js")
exports.Tracker = __webpack_require__(/*! ./tracker.js */ "./node_modules/are-we-there-yet/tracker.js")
exports.TrackerStream = __webpack_require__(/*! ./tracker-stream.js */ "./node_modules/are-we-there-yet/tracker-stream.js")


/***/ }),

/***/ "./node_modules/are-we-there-yet/tracker-base.js":
/*!*******************************************************!*\
  !*** ./node_modules/are-we-there-yet/tracker-base.js ***!
  \*******************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_require__, module */
/*! CommonJS bailout: module.exports is used directly at 6:18-32 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var EventEmitter = __webpack_require__(/*! events */ "events").EventEmitter
var util = __webpack_require__(/*! util */ "util")

var trackerId = 0
var TrackerBase = module.exports = function (name) {
  EventEmitter.call(this)
  this.id = ++trackerId
  this.name = name
}
util.inherits(TrackerBase, EventEmitter)


/***/ }),

/***/ "./node_modules/are-we-there-yet/tracker-group.js":
/*!********************************************************!*\
  !*** ./node_modules/are-we-there-yet/tracker-group.js ***!
  \********************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 7:19-33 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var util = __webpack_require__(/*! util */ "util")
var TrackerBase = __webpack_require__(/*! ./tracker-base.js */ "./node_modules/are-we-there-yet/tracker-base.js")
var Tracker = __webpack_require__(/*! ./tracker.js */ "./node_modules/are-we-there-yet/tracker.js")
var TrackerStream = __webpack_require__(/*! ./tracker-stream.js */ "./node_modules/are-we-there-yet/tracker-stream.js")

var TrackerGroup = module.exports = function (name) {
  TrackerBase.call(this, name)
  this.parentGroup = null
  this.trackers = []
  this.completion = {}
  this.weight = {}
  this.totalWeight = 0
  this.finished = false
  this.bubbleChange = bubbleChange(this)
}
util.inherits(TrackerGroup, TrackerBase)

function bubbleChange (trackerGroup) {
  return function (name, completed, tracker) {
    trackerGroup.completion[tracker.id] = completed
    if (trackerGroup.finished) return
    trackerGroup.emit('change', name || trackerGroup.name, trackerGroup.completed(), trackerGroup)
  }
}

TrackerGroup.prototype.nameInTree = function () {
  var names = []
  var from = this
  while (from) {
    names.unshift(from.name)
    from = from.parentGroup
  }
  return names.join('/')
}

TrackerGroup.prototype.addUnit = function (unit, weight) {
  if (unit.addUnit) {
    var toTest = this
    while (toTest) {
      if (unit === toTest) {
        throw new Error(
          'Attempted to add tracker group ' +
          unit.name + ' to tree that already includes it ' +
          this.nameInTree(this))
      }
      toTest = toTest.parentGroup
    }
    unit.parentGroup = this
  }
  this.weight[unit.id] = weight || 1
  this.totalWeight += this.weight[unit.id]
  this.trackers.push(unit)
  this.completion[unit.id] = unit.completed()
  unit.on('change', this.bubbleChange)
  if (!this.finished) this.emit('change', unit.name, this.completion[unit.id], unit)
  return unit
}

TrackerGroup.prototype.completed = function () {
  if (this.trackers.length === 0) return 0
  var valPerWeight = 1 / this.totalWeight
  var completed = 0
  for (var ii = 0; ii < this.trackers.length; ii++) {
    var trackerId = this.trackers[ii].id
    completed += valPerWeight * this.weight[trackerId] * this.completion[trackerId]
  }
  return completed
}

TrackerGroup.prototype.newGroup = function (name, weight) {
  return this.addUnit(new TrackerGroup(name), weight)
}

TrackerGroup.prototype.newItem = function (name, todo, weight) {
  return this.addUnit(new Tracker(name, todo), weight)
}

TrackerGroup.prototype.newStream = function (name, todo, weight) {
  return this.addUnit(new TrackerStream(name, todo), weight)
}

TrackerGroup.prototype.finish = function () {
  this.finished = true
  if (!this.trackers.length) this.addUnit(new Tracker(), 1, true)
  for (var ii = 0; ii < this.trackers.length; ii++) {
    var tracker = this.trackers[ii]
    tracker.finish()
    tracker.removeListener('change', this.bubbleChange)
  }
  this.emit('change', this.name, 1, this)
}

var buffer = '                                  '
TrackerGroup.prototype.debug = function (depth) {
  depth = depth || 0
  var indent = depth ? buffer.substr(0, depth) : ''
  var output = indent + (this.name || 'top') + ': ' + this.completed() + '\n'
  this.trackers.forEach(function (tracker) {
    if (tracker instanceof TrackerGroup) {
      output += tracker.debug(depth + 1)
    } else {
      output += indent + ' ' + tracker.name + ': ' + tracker.completed() + '\n'
    }
  })
  return output
}


/***/ }),

/***/ "./node_modules/are-we-there-yet/tracker-stream.js":
/*!*********************************************************!*\
  !*** ./node_modules/are-we-there-yet/tracker-stream.js ***!
  \*********************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 7:20-34 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var util = __webpack_require__(/*! util */ "util")
var stream = __webpack_require__(/*! readable-stream */ "./node_modules/readable-stream/readable.js")
var delegate = __webpack_require__(/*! delegates */ "./node_modules/delegates/index.js")
var Tracker = __webpack_require__(/*! ./tracker.js */ "./node_modules/are-we-there-yet/tracker.js")

var TrackerStream = module.exports = function (name, size, options) {
  stream.Transform.call(this, options)
  this.tracker = new Tracker(name, size)
  this.name = name
  this.id = this.tracker.id
  this.tracker.on('change', delegateChange(this))
}
util.inherits(TrackerStream, stream.Transform)

function delegateChange (trackerStream) {
  return function (name, completion, tracker) {
    trackerStream.emit('change', name, completion, trackerStream)
  }
}

TrackerStream.prototype._transform = function (data, encoding, cb) {
  this.tracker.completeWork(data.length ? data.length : 1)
  this.push(data)
  cb()
}

TrackerStream.prototype._flush = function (cb) {
  this.tracker.finish()
  cb()
}

delegate(TrackerStream.prototype, 'tracker')
  .method('completed')
  .method('addWork')
  .method('finish')


/***/ }),

/***/ "./node_modules/are-we-there-yet/tracker.js":
/*!**************************************************!*\
  !*** ./node_modules/are-we-there-yet/tracker.js ***!
  \**************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 5:14-28 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var util = __webpack_require__(/*! util */ "util")
var TrackerBase = __webpack_require__(/*! ./tracker-base.js */ "./node_modules/are-we-there-yet/tracker-base.js")

var Tracker = module.exports = function (name, todo) {
  TrackerBase.call(this, name)
  this.workDone = 0
  this.workTodo = todo || 0
}
util.inherits(Tracker, TrackerBase)

Tracker.prototype.completed = function () {
  return this.workTodo === 0 ? 0 : this.workDone / this.workTodo
}

Tracker.prototype.addWork = function (work) {
  this.workTodo += work
  this.emit('change', this.name, this.completed(), this)
}

Tracker.prototype.completeWork = function (work) {
  this.workDone += work
  if (this.workDone > this.workTodo) this.workDone = this.workTodo
  this.emit('change', this.name, this.completed(), this)
}

Tracker.prototype.finish = function () {
  this.workTodo = this.workDone = 1
  this.emit('change', this.name, 1, this)
}


/***/ }),

/***/ "./node_modules/balanced-match/index.js":
/*!**********************************************!*\
  !*** ./node_modules/balanced-match/index.js ***!
  \**********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 2:0-14 */
/***/ ((module) => {

"use strict";

module.exports = balanced;
function balanced(a, b, str) {
  if (a instanceof RegExp) a = maybeMatch(a, str);
  if (b instanceof RegExp) b = maybeMatch(b, str);

  var r = range(a, b, str);

  return r && {
    start: r[0],
    end: r[1],
    pre: str.slice(0, r[0]),
    body: str.slice(r[0] + a.length, r[1]),
    post: str.slice(r[1] + b.length)
  };
}

function maybeMatch(reg, str) {
  var m = str.match(reg);
  return m ? m[0] : null;
}

balanced.range = range;
function range(a, b, str) {
  var begs, beg, left, right, result;
  var ai = str.indexOf(a);
  var bi = str.indexOf(b, ai + 1);
  var i = ai;

  if (ai >= 0 && bi > 0) {
    begs = [];
    left = str.length;

    while (i >= 0 && !result) {
      if (i == ai) {
        begs.push(i);
        ai = str.indexOf(a, i + 1);
      } else if (begs.length == 1) {
        result = [ begs.pop(), bi ];
      } else {
        beg = begs.pop();
        if (beg < left) {
          left = beg;
          right = bi;
        }

        bi = str.indexOf(b, i + 1);
      }

      i = ai < bi && ai >= 0 ? ai : bi;
    }

    if (begs.length) {
      result = [ left, right ];
    }
  }

  return result;
}


/***/ }),

/***/ "./node_modules/brace-expansion/index.js":
/*!***********************************************!*\
  !*** ./node_modules/brace-expansion/index.js ***!
  \***********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 4:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var concatMap = __webpack_require__(/*! concat-map */ "./node_modules/concat-map/index.js");
var balanced = __webpack_require__(/*! balanced-match */ "./node_modules/balanced-match/index.js");

module.exports = expandTop;

var escSlash = '\0SLASH'+Math.random()+'\0';
var escOpen = '\0OPEN'+Math.random()+'\0';
var escClose = '\0CLOSE'+Math.random()+'\0';
var escComma = '\0COMMA'+Math.random()+'\0';
var escPeriod = '\0PERIOD'+Math.random()+'\0';

function numeric(str) {
  return parseInt(str, 10) == str
    ? parseInt(str, 10)
    : str.charCodeAt(0);
}

function escapeBraces(str) {
  return str.split('\\\\').join(escSlash)
            .split('\\{').join(escOpen)
            .split('\\}').join(escClose)
            .split('\\,').join(escComma)
            .split('\\.').join(escPeriod);
}

function unescapeBraces(str) {
  return str.split(escSlash).join('\\')
            .split(escOpen).join('{')
            .split(escClose).join('}')
            .split(escComma).join(',')
            .split(escPeriod).join('.');
}


// Basically just str.split(","), but handling cases
// where we have nested braced sections, which should be
// treated as individual members, like {a,{b,c},d}
function parseCommaParts(str) {
  if (!str)
    return [''];

  var parts = [];
  var m = balanced('{', '}', str);

  if (!m)
    return str.split(',');

  var pre = m.pre;
  var body = m.body;
  var post = m.post;
  var p = pre.split(',');

  p[p.length-1] += '{' + body + '}';
  var postParts = parseCommaParts(post);
  if (post.length) {
    p[p.length-1] += postParts.shift();
    p.push.apply(p, postParts);
  }

  parts.push.apply(parts, p);

  return parts;
}

function expandTop(str) {
  if (!str)
    return [];

  // I don't know why Bash 4.3 does this, but it does.
  // Anything starting with {} will have the first two bytes preserved
  // but *only* at the top level, so {},a}b will not expand to anything,
  // but a{},b}c will be expanded to [a}c,abc].
  // One could argue that this is a bug in Bash, but since the goal of
  // this module is to match Bash's rules, we escape a leading {}
  if (str.substr(0, 2) === '{}') {
    str = '\\{\\}' + str.substr(2);
  }

  return expand(escapeBraces(str), true).map(unescapeBraces);
}

function identity(e) {
  return e;
}

function embrace(str) {
  return '{' + str + '}';
}
function isPadded(el) {
  return /^-?0\d/.test(el);
}

function lte(i, y) {
  return i <= y;
}
function gte(i, y) {
  return i >= y;
}

function expand(str, isTop) {
  var expansions = [];

  var m = balanced('{', '}', str);
  if (!m || /\$$/.test(m.pre)) return [str];

  var isNumericSequence = /^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(m.body);
  var isAlphaSequence = /^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(m.body);
  var isSequence = isNumericSequence || isAlphaSequence;
  var isOptions = m.body.indexOf(',') >= 0;
  if (!isSequence && !isOptions) {
    // {a},b}
    if (m.post.match(/,.*\}/)) {
      str = m.pre + '{' + m.body + escClose + m.post;
      return expand(str);
    }
    return [str];
  }

  var n;
  if (isSequence) {
    n = m.body.split(/\.\./);
  } else {
    n = parseCommaParts(m.body);
    if (n.length === 1) {
      // x{{a,b}}y ==> x{a}y x{b}y
      n = expand(n[0], false).map(embrace);
      if (n.length === 1) {
        var post = m.post.length
          ? expand(m.post, false)
          : [''];
        return post.map(function(p) {
          return m.pre + n[0] + p;
        });
      }
    }
  }

  // at this point, n is the parts, and we know it's not a comma set
  // with a single entry.

  // no need to expand pre, since it is guaranteed to be free of brace-sets
  var pre = m.pre;
  var post = m.post.length
    ? expand(m.post, false)
    : [''];

  var N;

  if (isSequence) {
    var x = numeric(n[0]);
    var y = numeric(n[1]);
    var width = Math.max(n[0].length, n[1].length)
    var incr = n.length == 3
      ? Math.abs(numeric(n[2]))
      : 1;
    var test = lte;
    var reverse = y < x;
    if (reverse) {
      incr *= -1;
      test = gte;
    }
    var pad = n.some(isPadded);

    N = [];

    for (var i = x; test(i, y); i += incr) {
      var c;
      if (isAlphaSequence) {
        c = String.fromCharCode(i);
        if (c === '\\')
          c = '';
      } else {
        c = String(i);
        if (pad) {
          var need = width - c.length;
          if (need > 0) {
            var z = new Array(need + 1).join('0');
            if (i < 0)
              c = '-' + z + c.slice(1);
            else
              c = z + c;
          }
        }
      }
      N.push(c);
    }
  } else {
    N = concatMap(n, function(el) { return expand(el, false) });
  }

  for (var j = 0; j < N.length; j++) {
    for (var k = 0; k < post.length; k++) {
      var expansion = pre + N[j] + post[k];
      if (!isTop || isSequence || expansion)
        expansions.push(expansion);
    }
  }

  return expansions;
}



/***/ }),

/***/ "./node_modules/bytebuffer/dist/bytebuffer-node.js":
/*!*********************************************************!*\
  !*** ./node_modules/bytebuffer/dist/bytebuffer-node.js ***!
  \*********************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 23:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/*
 Copyright 2013-2014 Daniel Wirtz <dcode@dcode.io>

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */

/**
 * @license bytebuffer.js (c) 2015 Daniel Wirtz <dcode@dcode.io>
 * Backing buffer / Accessor: node Buffer
 * Released under the Apache License, Version 2.0
 * see: https://github.com/dcodeIO/bytebuffer.js for details
 */
module.exports = (function() {
    "use strict";

    var buffer = __webpack_require__(/*! buffer */ "buffer"),
        Buffer = buffer["Buffer"],
        Long = __webpack_require__(/*! long */ "./node_modules/long/dist/long.js"),
        memcpy = null; try { memcpy = __webpack_require__(Object(function webpackMissingModule() { var e = new Error("Cannot find module 'memcpy'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())); } catch (e) {}

    /**
     * Constructs a new ByteBuffer.
     * @class The swiss army knife for binary data in JavaScript.
     * @exports ByteBuffer
     * @constructor
     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.
     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to
     *  {@link ByteBuffer.DEFAULT_ENDIAN}.
     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to
     *  {@link ByteBuffer.DEFAULT_NOASSERT}.
     * @expose
     */
    var ByteBuffer = function(capacity, littleEndian, noAssert) {
        if (typeof capacity === 'undefined')
            capacity = ByteBuffer.DEFAULT_CAPACITY;
        if (typeof littleEndian === 'undefined')
            littleEndian = ByteBuffer.DEFAULT_ENDIAN;
        if (typeof noAssert === 'undefined')
            noAssert = ByteBuffer.DEFAULT_NOASSERT;
        if (!noAssert) {
            capacity = capacity | 0;
            if (capacity < 0)
                throw RangeError("Illegal capacity");
            littleEndian = !!littleEndian;
            noAssert = !!noAssert;
        }

        /**
         * Backing node Buffer.
         * @type {!Buffer}
         * @expose
         */
        this.buffer = capacity === 0 ? EMPTY_BUFFER : new Buffer(capacity);

        /**
         * Absolute read/write offset.
         * @type {number}
         * @expose
         * @see ByteBuffer#flip
         * @see ByteBuffer#clear
         */
        this.offset = 0;

        /**
         * Marked offset.
         * @type {number}
         * @expose
         * @see ByteBuffer#mark
         * @see ByteBuffer#reset
         */
        this.markedOffset = -1;

        /**
         * Absolute limit of the contained data. Set to the backing buffer's capacity upon allocation.
         * @type {number}
         * @expose
         * @see ByteBuffer#flip
         * @see ByteBuffer#clear
         */
        this.limit = capacity;

        /**
         * Whether to use little endian byte order, defaults to `false` for big endian.
         * @type {boolean}
         * @expose
         */
        this.littleEndian = littleEndian;

        /**
         * Whether to skip assertions of offsets and values, defaults to `false`.
         * @type {boolean}
         * @expose
         */
        this.noAssert = noAssert;
    };

    /**
     * ByteBuffer version.
     * @type {string}
     * @const
     * @expose
     */
    ByteBuffer.VERSION = "5.0.1";

    /**
     * Little endian constant that can be used instead of its boolean value. Evaluates to `true`.
     * @type {boolean}
     * @const
     * @expose
     */
    ByteBuffer.LITTLE_ENDIAN = true;

    /**
     * Big endian constant that can be used instead of its boolean value. Evaluates to `false`.
     * @type {boolean}
     * @const
     * @expose
     */
    ByteBuffer.BIG_ENDIAN = false;

    /**
     * Default initial capacity of `16`.
     * @type {number}
     * @expose
     */
    ByteBuffer.DEFAULT_CAPACITY = 16;

    /**
     * Default endianess of `false` for big endian.
     * @type {boolean}
     * @expose
     */
    ByteBuffer.DEFAULT_ENDIAN = ByteBuffer.BIG_ENDIAN;

    /**
     * Default no assertions flag of `false`.
     * @type {boolean}
     * @expose
     */
    ByteBuffer.DEFAULT_NOASSERT = false;

    /**
     * A `Long` class for representing a 64-bit two's-complement integer value.
     * @type {!Long}
     * @const
     * @see https://npmjs.org/package/long
     * @expose
     */
    ByteBuffer.Long = Long;

    /**
     * @alias ByteBuffer.prototype
     * @inner
     */
    var ByteBufferPrototype = ByteBuffer.prototype;

    /**
     * An indicator used to reliably determine if an object is a ByteBuffer or not.
     * @type {boolean}
     * @const
     * @expose
     * @private
     */
    ByteBufferPrototype.__isByteBuffer__;

    Object.defineProperty(ByteBufferPrototype, "__isByteBuffer__", {
        value: true,
        enumerable: false,
        configurable: false
    });

    // helpers

    /**
     * @type {!Buffer}
     * @inner
     */
    var EMPTY_BUFFER = new Buffer(0);

    /**
     * String.fromCharCode reference for compile-time renaming.
     * @type {function(...number):string}
     * @inner
     */
    var stringFromCharCode = String.fromCharCode;

    /**
     * Creates a source function for a string.
     * @param {string} s String to read from
     * @returns {function():number|null} Source function returning the next char code respectively `null` if there are
     *  no more characters left.
     * @throws {TypeError} If the argument is invalid
     * @inner
     */
    function stringSource(s) {
        var i=0; return function() {
            return i < s.length ? s.charCodeAt(i++) : null;
        };
    }

    /**
     * Creates a destination function for a string.
     * @returns {function(number=):undefined|string} Destination function successively called with the next char code.
     *  Returns the final string when called without arguments.
     * @inner
     */
    function stringDestination() {
        var cs = [], ps = []; return function() {
            if (arguments.length === 0)
                return ps.join('')+stringFromCharCode.apply(String, cs);
            if (cs.length + arguments.length > 1024)
                ps.push(stringFromCharCode.apply(String, cs)),
                    cs.length = 0;
            Array.prototype.push.apply(cs, arguments);
        };
    }

    /**
     * Gets the accessor type.
     * @returns {Function} `Buffer` under node.js, `Uint8Array` respectively `DataView` in the browser (classes)
     * @expose
     */
    ByteBuffer.accessor = function() {
        return Buffer;
    };
    /**
     * Allocates a new ByteBuffer backed by a buffer of the specified capacity.
     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.
     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to
     *  {@link ByteBuffer.DEFAULT_ENDIAN}.
     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to
     *  {@link ByteBuffer.DEFAULT_NOASSERT}.
     * @returns {!ByteBuffer}
     * @expose
     */
    ByteBuffer.allocate = function(capacity, littleEndian, noAssert) {
        return new ByteBuffer(capacity, littleEndian, noAssert);
    };

    /**
     * Concatenates multiple ByteBuffers into one.
     * @param {!Array.<!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string>} buffers Buffers to concatenate
     * @param {(string|boolean)=} encoding String encoding if `buffers` contains a string ("base64", "hex", "binary",
     *  defaults to "utf8")
     * @param {boolean=} littleEndian Whether to use little or big endian byte order for the resulting ByteBuffer. Defaults
     *  to {@link ByteBuffer.DEFAULT_ENDIAN}.
     * @param {boolean=} noAssert Whether to skip assertions of offsets and values for the resulting ByteBuffer. Defaults to
     *  {@link ByteBuffer.DEFAULT_NOASSERT}.
     * @returns {!ByteBuffer} Concatenated ByteBuffer
     * @expose
     */
    ByteBuffer.concat = function(buffers, encoding, littleEndian, noAssert) {
        if (typeof encoding === 'boolean' || typeof encoding !== 'string') {
            noAssert = littleEndian;
            littleEndian = encoding;
            encoding = undefined;
        }
        var capacity = 0;
        for (var i=0, k=buffers.length, length; i<k; ++i) {
            if (!ByteBuffer.isByteBuffer(buffers[i]))
                buffers[i] = ByteBuffer.wrap(buffers[i], encoding);
            length = buffers[i].limit - buffers[i].offset;
            if (length > 0) capacity += length;
        }
        if (capacity === 0)
            return new ByteBuffer(0, littleEndian, noAssert);
        var bb = new ByteBuffer(capacity, littleEndian, noAssert),
            bi;
        i=0; while (i<k) {
            bi = buffers[i++];
            length = bi.limit - bi.offset;
            if (length <= 0) continue;
            bi.buffer.copy(bb.buffer, bb.offset, bi.offset, bi.limit);
            bb.offset += length;
        }
        bb.limit = bb.offset;
        bb.offset = 0;
        return bb;
    };

    /**
     * Tests if the specified type is a ByteBuffer.
     * @param {*} bb ByteBuffer to test
     * @returns {boolean} `true` if it is a ByteBuffer, otherwise `false`
     * @expose
     */
    ByteBuffer.isByteBuffer = function(bb) {
        return (bb && bb["__isByteBuffer__"]) === true;
    };
    /**
     * Gets the backing buffer type.
     * @returns {Function} `Buffer` under node.js, `ArrayBuffer` in the browser (classes)
     * @expose
     */
    ByteBuffer.type = function() {
        return Buffer;
    };
    /**
     * Wraps a buffer or a string. Sets the allocated ByteBuffer's {@link ByteBuffer#offset} to `0` and its
     *  {@link ByteBuffer#limit} to the length of the wrapped data.
     * @param {!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string|!Array.<number>} buffer Anything that can be wrapped
     * @param {(string|boolean)=} encoding String encoding if `buffer` is a string ("base64", "hex", "binary", defaults to
     *  "utf8")
     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to
     *  {@link ByteBuffer.DEFAULT_ENDIAN}.
     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to
     *  {@link ByteBuffer.DEFAULT_NOASSERT}.
     * @returns {!ByteBuffer} A ByteBuffer wrapping `buffer`
     * @expose
     */
    ByteBuffer.wrap = function(buffer, encoding, littleEndian, noAssert) {
        if (typeof encoding !== 'string') {
            noAssert = littleEndian;
            littleEndian = encoding;
            encoding = undefined;
        }
        if (typeof buffer === 'string') {
            if (typeof encoding === 'undefined')
                encoding = "utf8";
            switch (encoding) {
                case "base64":
                    return ByteBuffer.fromBase64(buffer, littleEndian);
                case "hex":
                    return ByteBuffer.fromHex(buffer, littleEndian);
                case "binary":
                    return ByteBuffer.fromBinary(buffer, littleEndian);
                case "utf8":
                    return ByteBuffer.fromUTF8(buffer, littleEndian);
                case "debug":
                    return ByteBuffer.fromDebug(buffer, littleEndian);
                default:
                    throw Error("Unsupported encoding: "+encoding);
            }
        }
        if (buffer === null || typeof buffer !== 'object')
            throw TypeError("Illegal buffer");
        var bb;
        if (ByteBuffer.isByteBuffer(buffer)) {
            bb = ByteBufferPrototype.clone.call(buffer);
            bb.markedOffset = -1;
            return bb;
        }
        var i = 0,
            k = 0,
            b;
        if (buffer instanceof Uint8Array) { // Extract bytes from Uint8Array
            b = new Buffer(buffer.length);
            if (memcpy) { // Fast
                memcpy(b, 0, buffer.buffer, buffer.byteOffset, buffer.byteOffset + buffer.length);
            } else { // Slow
                for (i=0, k=buffer.length; i<k; ++i)
                    b[i] = buffer[i];
            }
            buffer = b;
        } else if (buffer instanceof ArrayBuffer) { // Convert ArrayBuffer to Buffer
            b = new Buffer(buffer.byteLength);
            if (memcpy) { // Fast
                memcpy(b, 0, buffer, 0, buffer.byteLength);
            } else { // Slow
                buffer = new Uint8Array(buffer);
                for (i=0, k=buffer.length; i<k; ++i) {
                    b[i] = buffer[i];
                }
            }
            buffer = b;
        } else if (!(buffer instanceof Buffer)) { // Create from octets if it is an error, otherwise fail
            if (Object.prototype.toString.call(buffer) !== "[object Array]")
                throw TypeError("Illegal buffer");
            buffer = new Buffer(buffer);
        }
        bb = new ByteBuffer(0, littleEndian, noAssert);
        if (buffer.length > 0) { // Avoid references to more than one EMPTY_BUFFER
            bb.buffer = buffer;
            bb.limit = buffer.length;
        }
        return bb;
    };

    /**
     * Writes the array as a bitset.
     * @param {Array<boolean>} value Array of booleans to write
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.
     * @returns {!ByteBuffer}
     * @expose
     */
    ByteBufferPrototype.writeBitSet = function(value, offset) {
      var relative = typeof offset === 'undefined';
      if (relative) offset = this.offset;
      if (!this.noAssert) {
        if (!(value instanceof Array))
          throw TypeError("Illegal BitSet: Not an array");
        if (typeof offset !== 'number' || offset % 1 !== 0)
            throw TypeError("Illegal offset: "+offset+" (not an integer)");
        offset >>>= 0;
        if (offset < 0 || offset + 0 > this.buffer.length)
            throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.length);
      }

      var start = offset,
          bits = value.length,
          bytes = (bits >> 3),
          bit = 0,
          k;

      offset += this.writeVarint32(bits,offset);

      while(bytes--) {
        k = (!!value[bit++] & 1) |
            ((!!value[bit++] & 1) << 1) |
            ((!!value[bit++] & 1) << 2) |
            ((!!value[bit++] & 1) << 3) |
            ((!!value[bit++] & 1) << 4) |
            ((!!value[bit++] & 1) << 5) |
            ((!!value[bit++] & 1) << 6) |
            ((!!value[bit++] & 1) << 7);
        this.writeByte(k,offset++);
      }

      if(bit < bits) {
        var m = 0; k = 0;
        while(bit < bits) k = k | ((!!value[bit++] & 1) << (m++));
        this.writeByte(k,offset++);
      }

      if (relative) {
        this.offset = offset;
        return this;
      }
      return offset - start;
    }

    /**
     * Reads a BitSet as an array of booleans.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.
     * @returns {Array<boolean>
     * @expose
     */
    ByteBufferPrototype.readBitSet = function(offset) {
      var relative = typeof offset === 'undefined';
      if (relative) offset = this.offset;

      var ret = this.readVarint32(offset),
          bits = ret.value,
          bytes = (bits >> 3),
          bit = 0,
          value = [],
          k;

      offset += ret.length;

      while(bytes--) {
        k = this.readByte(offset++);
        value[bit++] = !!(k & 0x01);
        value[bit++] = !!(k & 0x02);
        value[bit++] = !!(k & 0x04);
        value[bit++] = !!(k & 0x08);
        value[bit++] = !!(k & 0x10);
        value[bit++] = !!(k & 0x20);
        value[bit++] = !!(k & 0x40);
        value[bit++] = !!(k & 0x80);
      }

      if(bit < bits) {
        var m = 0;
        k = this.readByte(offset++);
        while(bit < bits) value[bit++] = !!((k >> (m++)) & 1);
      }

      if (relative) {
        this.offset = offset;
      }
      return value;
    }
    /**
     * Reads the specified number of bytes.
     * @param {number} length Number of bytes to read
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.
     * @returns {!ByteBuffer}
     * @expose
     */
    ByteBufferPrototype.readBytes = function(length, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + length > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+length+") <= "+this.buffer.length);
        }
        var slice = this.slice(offset, offset + length);
        if (relative) this.offset += length;
        return slice;
    };

    /**
     * Writes a payload of bytes. This is an alias of {@link ByteBuffer#append}.
     * @function
     * @param {!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string} source Data to write. If `source` is a ByteBuffer, its
     * offsets will be modified according to the performed read operation.
     * @param {(string|number)=} encoding Encoding if `data` is a string ("base64", "hex", "binary", defaults to "utf8")
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  written if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.writeBytes = ByteBufferPrototype.append;

    // types/ints/int8

    /**
     * Writes an 8bit signed integer.
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.writeInt8 = function(value, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof value !== 'number' || value % 1 !== 0)
                throw TypeError("Illegal value: "+value+" (not an integer)");
            value |= 0;
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.length);
        }
        offset += 1;
        var capacity0 = this.buffer.length;
        if (offset > capacity0)
            this.resize((capacity0 *= 2) > offset ? capacity0 : offset);
        offset -= 1;
        this.buffer[offset] = value;
        if (relative) this.offset += 1;
        return this;
    };

    /**
     * Writes an 8bit signed integer. This is an alias of {@link ByteBuffer#writeInt8}.
     * @function
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.writeByte = ByteBufferPrototype.writeInt8;

    /**
     * Reads an 8bit signed integer.
     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.
     * @returns {number} Value read
     * @expose
     */
    ByteBufferPrototype.readInt8 = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 1 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+1+") <= "+this.buffer.length);
        }
        var value = this.buffer[offset];
        if ((value & 0x80) === 0x80) value = -(0xFF - value + 1); // Cast to signed
        if (relative) this.offset += 1;
        return value;
    };

    /**
     * Reads an 8bit signed integer. This is an alias of {@link ByteBuffer#readInt8}.
     * @function
     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.
     * @returns {number} Value read
     * @expose
     */
    ByteBufferPrototype.readByte = ByteBufferPrototype.readInt8;

    /**
     * Writes an 8bit unsigned integer.
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.writeUint8 = function(value, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof value !== 'number' || value % 1 !== 0)
                throw TypeError("Illegal value: "+value+" (not an integer)");
            value >>>= 0;
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.length);
        }
        offset += 1;
        var capacity1 = this.buffer.length;
        if (offset > capacity1)
            this.resize((capacity1 *= 2) > offset ? capacity1 : offset);
        offset -= 1;
        this.buffer[offset] = value;
        if (relative) this.offset += 1;
        return this;
    };

    /**
     * Writes an 8bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint8}.
     * @function
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.writeUInt8 = ByteBufferPrototype.writeUint8;

    /**
     * Reads an 8bit unsigned integer.
     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.
     * @returns {number} Value read
     * @expose
     */
    ByteBufferPrototype.readUint8 = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 1 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+1+") <= "+this.buffer.length);
        }
        var value = this.buffer[offset];
        if (relative) this.offset += 1;
        return value;
    };

    /**
     * Reads an 8bit unsigned integer. This is an alias of {@link ByteBuffer#readUint8}.
     * @function
     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.
     * @returns {number} Value read
     * @expose
     */
    ByteBufferPrototype.readUInt8 = ByteBufferPrototype.readUint8;

    // types/ints/int16

    /**
     * Writes a 16bit signed integer.
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.
     * @throws {TypeError} If `offset` or `value` is not a valid number
     * @throws {RangeError} If `offset` is out of bounds
     * @expose
     */
    ByteBufferPrototype.writeInt16 = function(value, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof value !== 'number' || value % 1 !== 0)
                throw TypeError("Illegal value: "+value+" (not an integer)");
            value |= 0;
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.length);
        }
        offset += 2;
        var capacity2 = this.buffer.length;
        if (offset > capacity2)
            this.resize((capacity2 *= 2) > offset ? capacity2 : offset);
        offset -= 2;
        if (this.littleEndian) {
            this.buffer[offset+1] = (value & 0xFF00) >>> 8;
            this.buffer[offset  ] =  value & 0x00FF;
        } else {
            this.buffer[offset]   = (value & 0xFF00) >>> 8;
            this.buffer[offset+1] =  value & 0x00FF;
        }
        if (relative) this.offset += 2;
        return this;
    };

    /**
     * Writes a 16bit signed integer. This is an alias of {@link ByteBuffer#writeInt16}.
     * @function
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.
     * @throws {TypeError} If `offset` or `value` is not a valid number
     * @throws {RangeError} If `offset` is out of bounds
     * @expose
     */
    ByteBufferPrototype.writeShort = ByteBufferPrototype.writeInt16;

    /**
     * Reads a 16bit signed integer.
     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.
     * @returns {number} Value read
     * @throws {TypeError} If `offset` is not a valid number
     * @throws {RangeError} If `offset` is out of bounds
     * @expose
     */
    ByteBufferPrototype.readInt16 = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 2 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+2+") <= "+this.buffer.length);
        }
        var value = 0;
        if (this.littleEndian) {
            value  = this.buffer[offset  ];
            value |= this.buffer[offset+1] << 8;
        } else {
            value  = this.buffer[offset  ] << 8;
            value |= this.buffer[offset+1];
        }
        if ((value & 0x8000) === 0x8000) value = -(0xFFFF - value + 1); // Cast to signed
        if (relative) this.offset += 2;
        return value;
    };

    /**
     * Reads a 16bit signed integer. This is an alias of {@link ByteBuffer#readInt16}.
     * @function
     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.
     * @returns {number} Value read
     * @throws {TypeError} If `offset` is not a valid number
     * @throws {RangeError} If `offset` is out of bounds
     * @expose
     */
    ByteBufferPrototype.readShort = ByteBufferPrototype.readInt16;

    /**
     * Writes a 16bit unsigned integer.
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.
     * @throws {TypeError} If `offset` or `value` is not a valid number
     * @throws {RangeError} If `offset` is out of bounds
     * @expose
     */
    ByteBufferPrototype.writeUint16 = function(value, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof value !== 'number' || value % 1 !== 0)
                throw TypeError("Illegal value: "+value+" (not an integer)");
            value >>>= 0;
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.length);
        }
        offset += 2;
        var capacity3 = this.buffer.length;
        if (offset > capacity3)
            this.resize((capacity3 *= 2) > offset ? capacity3 : offset);
        offset -= 2;
        if (this.littleEndian) {
            this.buffer[offset+1] = (value & 0xFF00) >>> 8;
            this.buffer[offset  ] =  value & 0x00FF;
        } else {
            this.buffer[offset]   = (value & 0xFF00) >>> 8;
            this.buffer[offset+1] =  value & 0x00FF;
        }
        if (relative) this.offset += 2;
        return this;
    };

    /**
     * Writes a 16bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint16}.
     * @function
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.
     * @throws {TypeError} If `offset` or `value` is not a valid number
     * @throws {RangeError} If `offset` is out of bounds
     * @expose
     */
    ByteBufferPrototype.writeUInt16 = ByteBufferPrototype.writeUint16;

    /**
     * Reads a 16bit unsigned integer.
     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.
     * @returns {number} Value read
     * @throws {TypeError} If `offset` is not a valid number
     * @throws {RangeError} If `offset` is out of bounds
     * @expose
     */
    ByteBufferPrototype.readUint16 = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 2 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+2+") <= "+this.buffer.length);
        }
        var value = 0;
        if (this.littleEndian) {
            value  = this.buffer[offset  ];
            value |= this.buffer[offset+1] << 8;
        } else {
            value  = this.buffer[offset  ] << 8;
            value |= this.buffer[offset+1];
        }
        if (relative) this.offset += 2;
        return value;
    };

    /**
     * Reads a 16bit unsigned integer. This is an alias of {@link ByteBuffer#readUint16}.
     * @function
     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.
     * @returns {number} Value read
     * @throws {TypeError} If `offset` is not a valid number
     * @throws {RangeError} If `offset` is out of bounds
     * @expose
     */
    ByteBufferPrototype.readUInt16 = ByteBufferPrototype.readUint16;

    // types/ints/int32

    /**
     * Writes a 32bit signed integer.
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.
     * @expose
     */
    ByteBufferPrototype.writeInt32 = function(value, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof value !== 'number' || value % 1 !== 0)
                throw TypeError("Illegal value: "+value+" (not an integer)");
            value |= 0;
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.length);
        }
        offset += 4;
        var capacity4 = this.buffer.length;
        if (offset > capacity4)
            this.resize((capacity4 *= 2) > offset ? capacity4 : offset);
        offset -= 4;
        if (this.littleEndian) {
            this.buffer[offset+3] = (value >>> 24) & 0xFF;
            this.buffer[offset+2] = (value >>> 16) & 0xFF;
            this.buffer[offset+1] = (value >>>  8) & 0xFF;
            this.buffer[offset  ] =  value         & 0xFF;
        } else {
            this.buffer[offset  ] = (value >>> 24) & 0xFF;
            this.buffer[offset+1] = (value >>> 16) & 0xFF;
            this.buffer[offset+2] = (value >>>  8) & 0xFF;
            this.buffer[offset+3] =  value         & 0xFF;
        }
        if (relative) this.offset += 4;
        return this;
    };

    /**
     * Writes a 32bit signed integer. This is an alias of {@link ByteBuffer#writeInt32}.
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.
     * @expose
     */
    ByteBufferPrototype.writeInt = ByteBufferPrototype.writeInt32;

    /**
     * Reads a 32bit signed integer.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.
     * @returns {number} Value read
     * @expose
     */
    ByteBufferPrototype.readInt32 = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 4 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+4+") <= "+this.buffer.length);
        }
        var value = 0;
        if (this.littleEndian) {
            value  = this.buffer[offset+2] << 16;
            value |= this.buffer[offset+1] <<  8;
            value |= this.buffer[offset  ];
            value += this.buffer[offset+3] << 24 >>> 0;
        } else {
            value  = this.buffer[offset+1] << 16;
            value |= this.buffer[offset+2] <<  8;
            value |= this.buffer[offset+3];
            value += this.buffer[offset  ] << 24 >>> 0;
        }
        value |= 0; // Cast to signed
        if (relative) this.offset += 4;
        return value;
    };

    /**
     * Reads a 32bit signed integer. This is an alias of {@link ByteBuffer#readInt32}.
     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `4` if omitted.
     * @returns {number} Value read
     * @expose
     */
    ByteBufferPrototype.readInt = ByteBufferPrototype.readInt32;

    /**
     * Writes a 32bit unsigned integer.
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.
     * @expose
     */
    ByteBufferPrototype.writeUint32 = function(value, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof value !== 'number' || value % 1 !== 0)
                throw TypeError("Illegal value: "+value+" (not an integer)");
            value >>>= 0;
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.length);
        }
        offset += 4;
        var capacity5 = this.buffer.length;
        if (offset > capacity5)
            this.resize((capacity5 *= 2) > offset ? capacity5 : offset);
        offset -= 4;
        if (this.littleEndian) {
            this.buffer[offset+3] = (value >>> 24) & 0xFF;
            this.buffer[offset+2] = (value >>> 16) & 0xFF;
            this.buffer[offset+1] = (value >>>  8) & 0xFF;
            this.buffer[offset  ] =  value         & 0xFF;
        } else {
            this.buffer[offset  ] = (value >>> 24) & 0xFF;
            this.buffer[offset+1] = (value >>> 16) & 0xFF;
            this.buffer[offset+2] = (value >>>  8) & 0xFF;
            this.buffer[offset+3] =  value         & 0xFF;
        }
        if (relative) this.offset += 4;
        return this;
    };

    /**
     * Writes a 32bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint32}.
     * @function
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.
     * @expose
     */
    ByteBufferPrototype.writeUInt32 = ByteBufferPrototype.writeUint32;

    /**
     * Reads a 32bit unsigned integer.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.
     * @returns {number} Value read
     * @expose
     */
    ByteBufferPrototype.readUint32 = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 4 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+4+") <= "+this.buffer.length);
        }
        var value = 0;
        if (this.littleEndian) {
            value  = this.buffer[offset+2] << 16;
            value |= this.buffer[offset+1] <<  8;
            value |= this.buffer[offset  ];
            value += this.buffer[offset+3] << 24 >>> 0;
        } else {
            value  = this.buffer[offset+1] << 16;
            value |= this.buffer[offset+2] <<  8;
            value |= this.buffer[offset+3];
            value += this.buffer[offset  ] << 24 >>> 0;
        }
        if (relative) this.offset += 4;
        return value;
    };

    /**
     * Reads a 32bit unsigned integer. This is an alias of {@link ByteBuffer#readUint32}.
     * @function
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.
     * @returns {number} Value read
     * @expose
     */
    ByteBufferPrototype.readUInt32 = ByteBufferPrototype.readUint32;

    // types/ints/int64

    if (Long) {

        /**
         * Writes a 64bit signed integer.
         * @param {number|!Long} value Value to write
         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
         * @returns {!ByteBuffer} this
         * @expose
         */
        ByteBufferPrototype.writeInt64 = function(value, offset) {
            var relative = typeof offset === 'undefined';
            if (relative) offset = this.offset;
            if (!this.noAssert) {
                if (typeof value === 'number')
                    value = Long.fromNumber(value);
                else if (typeof value === 'string')
                    value = Long.fromString(value);
                else if (!(value && value instanceof Long))
                    throw TypeError("Illegal value: "+value+" (not an integer or Long)");
                if (typeof offset !== 'number' || offset % 1 !== 0)
                    throw TypeError("Illegal offset: "+offset+" (not an integer)");
                offset >>>= 0;
                if (offset < 0 || offset + 0 > this.buffer.length)
                    throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.length);
            }
            if (typeof value === 'number')
                value = Long.fromNumber(value);
            else if (typeof value === 'string')
                value = Long.fromString(value);
            offset += 8;
            var capacity6 = this.buffer.length;
            if (offset > capacity6)
                this.resize((capacity6 *= 2) > offset ? capacity6 : offset);
            offset -= 8;
            var lo = value.low,
                hi = value.high;
            if (this.littleEndian) {
                this.buffer[offset+3] = (lo >>> 24) & 0xFF;
                this.buffer[offset+2] = (lo >>> 16) & 0xFF;
                this.buffer[offset+1] = (lo >>>  8) & 0xFF;
                this.buffer[offset  ] =  lo         & 0xFF;
                offset += 4;
                this.buffer[offset+3] = (hi >>> 24) & 0xFF;
                this.buffer[offset+2] = (hi >>> 16) & 0xFF;
                this.buffer[offset+1] = (hi >>>  8) & 0xFF;
                this.buffer[offset  ] =  hi         & 0xFF;
            } else {
                this.buffer[offset  ] = (hi >>> 24) & 0xFF;
                this.buffer[offset+1] = (hi >>> 16) & 0xFF;
                this.buffer[offset+2] = (hi >>>  8) & 0xFF;
                this.buffer[offset+3] =  hi         & 0xFF;
                offset += 4;
                this.buffer[offset  ] = (lo >>> 24) & 0xFF;
                this.buffer[offset+1] = (lo >>> 16) & 0xFF;
                this.buffer[offset+2] = (lo >>>  8) & 0xFF;
                this.buffer[offset+3] =  lo         & 0xFF;
            }
            if (relative) this.offset += 8;
            return this;
        };

        /**
         * Writes a 64bit signed integer. This is an alias of {@link ByteBuffer#writeInt64}.
         * @param {number|!Long} value Value to write
         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
         * @returns {!ByteBuffer} this
         * @expose
         */
        ByteBufferPrototype.writeLong = ByteBufferPrototype.writeInt64;

        /**
         * Reads a 64bit signed integer.
         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
         * @returns {!Long}
         * @expose
         */
        ByteBufferPrototype.readInt64 = function(offset) {
            var relative = typeof offset === 'undefined';
            if (relative) offset = this.offset;
            if (!this.noAssert) {
                if (typeof offset !== 'number' || offset % 1 !== 0)
                    throw TypeError("Illegal offset: "+offset+" (not an integer)");
                offset >>>= 0;
                if (offset < 0 || offset + 8 > this.buffer.length)
                    throw RangeError("Illegal offset: 0 <= "+offset+" (+"+8+") <= "+this.buffer.length);
            }
            var lo = 0,
                hi = 0;
            if (this.littleEndian) {
                lo  = this.buffer[offset+2] << 16;
                lo |= this.buffer[offset+1] <<  8;
                lo |= this.buffer[offset  ];
                lo += this.buffer[offset+3] << 24 >>> 0;
                offset += 4;
                hi  = this.buffer[offset+2] << 16;
                hi |= this.buffer[offset+1] <<  8;
                hi |= this.buffer[offset  ];
                hi += this.buffer[offset+3] << 24 >>> 0;
            } else {
                hi  = this.buffer[offset+1] << 16;
                hi |= this.buffer[offset+2] <<  8;
                hi |= this.buffer[offset+3];
                hi += this.buffer[offset  ] << 24 >>> 0;
                offset += 4;
                lo  = this.buffer[offset+1] << 16;
                lo |= this.buffer[offset+2] <<  8;
                lo |= this.buffer[offset+3];
                lo += this.buffer[offset  ] << 24 >>> 0;
            }
            var value = new Long(lo, hi, false);
            if (relative) this.offset += 8;
            return value;
        };

        /**
         * Reads a 64bit signed integer. This is an alias of {@link ByteBuffer#readInt64}.
         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
         * @returns {!Long}
         * @expose
         */
        ByteBufferPrototype.readLong = ByteBufferPrototype.readInt64;

        /**
         * Writes a 64bit unsigned integer.
         * @param {number|!Long} value Value to write
         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
         * @returns {!ByteBuffer} this
         * @expose
         */
        ByteBufferPrototype.writeUint64 = function(value, offset) {
            var relative = typeof offset === 'undefined';
            if (relative) offset = this.offset;
            if (!this.noAssert) {
                if (typeof value === 'number')
                    value = Long.fromNumber(value);
                else if (typeof value === 'string')
                    value = Long.fromString(value);
                else if (!(value && value instanceof Long))
                    throw TypeError("Illegal value: "+value+" (not an integer or Long)");
                if (typeof offset !== 'number' || offset % 1 !== 0)
                    throw TypeError("Illegal offset: "+offset+" (not an integer)");
                offset >>>= 0;
                if (offset < 0 || offset + 0 > this.buffer.length)
                    throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.length);
            }
            if (typeof value === 'number')
                value = Long.fromNumber(value);
            else if (typeof value === 'string')
                value = Long.fromString(value);
            offset += 8;
            var capacity7 = this.buffer.length;
            if (offset > capacity7)
                this.resize((capacity7 *= 2) > offset ? capacity7 : offset);
            offset -= 8;
            var lo = value.low,
                hi = value.high;
            if (this.littleEndian) {
                this.buffer[offset+3] = (lo >>> 24) & 0xFF;
                this.buffer[offset+2] = (lo >>> 16) & 0xFF;
                this.buffer[offset+1] = (lo >>>  8) & 0xFF;
                this.buffer[offset  ] =  lo         & 0xFF;
                offset += 4;
                this.buffer[offset+3] = (hi >>> 24) & 0xFF;
                this.buffer[offset+2] = (hi >>> 16) & 0xFF;
                this.buffer[offset+1] = (hi >>>  8) & 0xFF;
                this.buffer[offset  ] =  hi         & 0xFF;
            } else {
                this.buffer[offset  ] = (hi >>> 24) & 0xFF;
                this.buffer[offset+1] = (hi >>> 16) & 0xFF;
                this.buffer[offset+2] = (hi >>>  8) & 0xFF;
                this.buffer[offset+3] =  hi         & 0xFF;
                offset += 4;
                this.buffer[offset  ] = (lo >>> 24) & 0xFF;
                this.buffer[offset+1] = (lo >>> 16) & 0xFF;
                this.buffer[offset+2] = (lo >>>  8) & 0xFF;
                this.buffer[offset+3] =  lo         & 0xFF;
            }
            if (relative) this.offset += 8;
            return this;
        };

        /**
         * Writes a 64bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint64}.
         * @function
         * @param {number|!Long} value Value to write
         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
         * @returns {!ByteBuffer} this
         * @expose
         */
        ByteBufferPrototype.writeUInt64 = ByteBufferPrototype.writeUint64;

        /**
         * Reads a 64bit unsigned integer.
         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
         * @returns {!Long}
         * @expose
         */
        ByteBufferPrototype.readUint64 = function(offset) {
            var relative = typeof offset === 'undefined';
            if (relative) offset = this.offset;
            if (!this.noAssert) {
                if (typeof offset !== 'number' || offset % 1 !== 0)
                    throw TypeError("Illegal offset: "+offset+" (not an integer)");
                offset >>>= 0;
                if (offset < 0 || offset + 8 > this.buffer.length)
                    throw RangeError("Illegal offset: 0 <= "+offset+" (+"+8+") <= "+this.buffer.length);
            }
            var lo = 0,
                hi = 0;
            if (this.littleEndian) {
                lo  = this.buffer[offset+2] << 16;
                lo |= this.buffer[offset+1] <<  8;
                lo |= this.buffer[offset  ];
                lo += this.buffer[offset+3] << 24 >>> 0;
                offset += 4;
                hi  = this.buffer[offset+2] << 16;
                hi |= this.buffer[offset+1] <<  8;
                hi |= this.buffer[offset  ];
                hi += this.buffer[offset+3] << 24 >>> 0;
            } else {
                hi  = this.buffer[offset+1] << 16;
                hi |= this.buffer[offset+2] <<  8;
                hi |= this.buffer[offset+3];
                hi += this.buffer[offset  ] << 24 >>> 0;
                offset += 4;
                lo  = this.buffer[offset+1] << 16;
                lo |= this.buffer[offset+2] <<  8;
                lo |= this.buffer[offset+3];
                lo += this.buffer[offset  ] << 24 >>> 0;
            }
            var value = new Long(lo, hi, true);
            if (relative) this.offset += 8;
            return value;
        };

        /**
         * Reads a 64bit unsigned integer. This is an alias of {@link ByteBuffer#readUint64}.
         * @function
         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
         * @returns {!Long}
         * @expose
         */
        ByteBufferPrototype.readUInt64 = ByteBufferPrototype.readUint64;

    } // Long


    // types/floats/float32

    /**
     * Writes a 32bit float.
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.writeFloat32 = function(value, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof value !== 'number')
                throw TypeError("Illegal value: "+value+" (not a number)");
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.length);
        }
        offset += 4;
        var capacity8 = this.buffer.length;
        if (offset > capacity8)
            this.resize((capacity8 *= 2) > offset ? capacity8 : offset);
        offset -= 4;
        this.littleEndian
            ? this.buffer.writeFloatLE(value, offset, true)
            : this.buffer.writeFloatBE(value, offset, true);
        if (relative) this.offset += 4;
        return this;
    };

    /**
     * Writes a 32bit float. This is an alias of {@link ByteBuffer#writeFloat32}.
     * @function
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.writeFloat = ByteBufferPrototype.writeFloat32;

    /**
     * Reads a 32bit float.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.
     * @returns {number}
     * @expose
     */
    ByteBufferPrototype.readFloat32 = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 4 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+4+") <= "+this.buffer.length);
        }
        var value = this.littleEndian
            ? this.buffer.readFloatLE(offset, true)
            : this.buffer.readFloatBE(offset, true);
        if (relative) this.offset += 4;
        return value;
    };

    /**
     * Reads a 32bit float. This is an alias of {@link ByteBuffer#readFloat32}.
     * @function
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.
     * @returns {number}
     * @expose
     */
    ByteBufferPrototype.readFloat = ByteBufferPrototype.readFloat32;

    // types/floats/float64

    /**
     * Writes a 64bit float.
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.writeFloat64 = function(value, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof value !== 'number')
                throw TypeError("Illegal value: "+value+" (not a number)");
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.length);
        }
        offset += 8;
        var capacity9 = this.buffer.length;
        if (offset > capacity9)
            this.resize((capacity9 *= 2) > offset ? capacity9 : offset);
        offset -= 8;
        this.littleEndian
            ? this.buffer.writeDoubleLE(value, offset, true)
            : this.buffer.writeDoubleBE(value, offset, true);
        if (relative) this.offset += 8;
        return this;
    };

    /**
     * Writes a 64bit float. This is an alias of {@link ByteBuffer#writeFloat64}.
     * @function
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.writeDouble = ByteBufferPrototype.writeFloat64;

    /**
     * Reads a 64bit float.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
     * @returns {number}
     * @expose
     */
    ByteBufferPrototype.readFloat64 = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 8 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+8+") <= "+this.buffer.length);
        }
        var value = this.littleEndian
            ? this.buffer.readDoubleLE(offset, true)
            : this.buffer.readDoubleBE(offset, true);
        if (relative) this.offset += 8;
        return value;
    };

    /**
     * Reads a 64bit float. This is an alias of {@link ByteBuffer#readFloat64}.
     * @function
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.
     * @returns {number}
     * @expose
     */
    ByteBufferPrototype.readDouble = ByteBufferPrototype.readFloat64;


    // types/varints/varint32

    /**
     * Maximum number of bytes required to store a 32bit base 128 variable-length integer.
     * @type {number}
     * @const
     * @expose
     */
    ByteBuffer.MAX_VARINT32_BYTES = 5;

    /**
     * Calculates the actual number of bytes required to store a 32bit base 128 variable-length integer.
     * @param {number} value Value to encode
     * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT32_BYTES}
     * @expose
     */
    ByteBuffer.calculateVarint32 = function(value) {
        // ref: src/google/protobuf/io/coded_stream.cc
        value = value >>> 0;
             if (value < 1 << 7 ) return 1;
        else if (value < 1 << 14) return 2;
        else if (value < 1 << 21) return 3;
        else if (value < 1 << 28) return 4;
        else                      return 5;
    };

    /**
     * Zigzag encodes a signed 32bit integer so that it can be effectively used with varint encoding.
     * @param {number} n Signed 32bit integer
     * @returns {number} Unsigned zigzag encoded 32bit integer
     * @expose
     */
    ByteBuffer.zigZagEncode32 = function(n) {
        return (((n |= 0) << 1) ^ (n >> 31)) >>> 0; // ref: src/google/protobuf/wire_format_lite.h
    };

    /**
     * Decodes a zigzag encoded signed 32bit integer.
     * @param {number} n Unsigned zigzag encoded 32bit integer
     * @returns {number} Signed 32bit integer
     * @expose
     */
    ByteBuffer.zigZagDecode32 = function(n) {
        return ((n >>> 1) ^ -(n & 1)) | 0; // // ref: src/google/protobuf/wire_format_lite.h
    };

    /**
     * Writes a 32bit base 128 variable-length integer.
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  written if omitted.
     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written
     * @expose
     */
    ByteBufferPrototype.writeVarint32 = function(value, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof value !== 'number' || value % 1 !== 0)
                throw TypeError("Illegal value: "+value+" (not an integer)");
            value |= 0;
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.length);
        }
        var size = ByteBuffer.calculateVarint32(value),
            b;
        offset += size;
        var capacity10 = this.buffer.length;
        if (offset > capacity10)
            this.resize((capacity10 *= 2) > offset ? capacity10 : offset);
        offset -= size;
        value >>>= 0;
        while (value >= 0x80) {
            b = (value & 0x7f) | 0x80;
            this.buffer[offset++] = b;
            value >>>= 7;
        }
        this.buffer[offset++] = value;
        if (relative) {
            this.offset = offset;
            return this;
        }
        return size;
    };

    /**
     * Writes a zig-zag encoded (signed) 32bit base 128 variable-length integer.
     * @param {number} value Value to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  written if omitted.
     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written
     * @expose
     */
    ByteBufferPrototype.writeVarint32ZigZag = function(value, offset) {
        return this.writeVarint32(ByteBuffer.zigZagEncode32(value), offset);
    };

    /**
     * Reads a 32bit base 128 variable-length integer.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  written if omitted.
     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read
     *  and the actual number of bytes read.
     * @throws {Error} If it's not a valid varint. Has a property `truncated = true` if there is not enough data available
     *  to fully decode the varint.
     * @expose
     */
    ByteBufferPrototype.readVarint32 = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 1 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+1+") <= "+this.buffer.length);
        }
        var c = 0,
            value = 0 >>> 0,
            b;
        do {
            if (!this.noAssert && offset > this.limit) {
                var err = Error("Truncated");
                err['truncated'] = true;
                throw err;
            }
            b = this.buffer[offset++];
            if (c < 5)
                value |= (b & 0x7f) << (7*c);
            ++c;
        } while ((b & 0x80) !== 0);
        value |= 0;
        if (relative) {
            this.offset = offset;
            return value;
        }
        return {
            "value": value,
            "length": c
        };
    };

    /**
     * Reads a zig-zag encoded (signed) 32bit base 128 variable-length integer.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  written if omitted.
     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read
     *  and the actual number of bytes read.
     * @throws {Error} If it's not a valid varint
     * @expose
     */
    ByteBufferPrototype.readVarint32ZigZag = function(offset) {
        var val = this.readVarint32(offset);
        if (typeof val === 'object')
            val["value"] = ByteBuffer.zigZagDecode32(val["value"]);
        else
            val = ByteBuffer.zigZagDecode32(val);
        return val;
    };

    // types/varints/varint64

    if (Long) {

        /**
         * Maximum number of bytes required to store a 64bit base 128 variable-length integer.
         * @type {number}
         * @const
         * @expose
         */
        ByteBuffer.MAX_VARINT64_BYTES = 10;

        /**
         * Calculates the actual number of bytes required to store a 64bit base 128 variable-length integer.
         * @param {number|!Long} value Value to encode
         * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT64_BYTES}
         * @expose
         */
        ByteBuffer.calculateVarint64 = function(value) {
            if (typeof value === 'number')
                value = Long.fromNumber(value);
            else if (typeof value === 'string')
                value = Long.fromString(value);
            // ref: src/google/protobuf/io/coded_stream.cc
            var part0 = value.toInt() >>> 0,
                part1 = value.shiftRightUnsigned(28).toInt() >>> 0,
                part2 = value.shiftRightUnsigned(56).toInt() >>> 0;
            if (part2 == 0) {
                if (part1 == 0) {
                    if (part0 < 1 << 14)
                        return part0 < 1 << 7 ? 1 : 2;
                    else
                        return part0 < 1 << 21 ? 3 : 4;
                } else {
                    if (part1 < 1 << 14)
                        return part1 < 1 << 7 ? 5 : 6;
                    else
                        return part1 < 1 << 21 ? 7 : 8;
                }
            } else
                return part2 < 1 << 7 ? 9 : 10;
        };

        /**
         * Zigzag encodes a signed 64bit integer so that it can be effectively used with varint encoding.
         * @param {number|!Long} value Signed long
         * @returns {!Long} Unsigned zigzag encoded long
         * @expose
         */
        ByteBuffer.zigZagEncode64 = function(value) {
            if (typeof value === 'number')
                value = Long.fromNumber(value, false);
            else if (typeof value === 'string')
                value = Long.fromString(value, false);
            else if (value.unsigned !== false) value = value.toSigned();
            // ref: src/google/protobuf/wire_format_lite.h
            return value.shiftLeft(1).xor(value.shiftRight(63)).toUnsigned();
        };

        /**
         * Decodes a zigzag encoded signed 64bit integer.
         * @param {!Long|number} value Unsigned zigzag encoded long or JavaScript number
         * @returns {!Long} Signed long
         * @expose
         */
        ByteBuffer.zigZagDecode64 = function(value) {
            if (typeof value === 'number')
                value = Long.fromNumber(value, false);
            else if (typeof value === 'string')
                value = Long.fromString(value, false);
            else if (value.unsigned !== false) value = value.toSigned();
            // ref: src/google/protobuf/wire_format_lite.h
            return value.shiftRightUnsigned(1).xor(value.and(Long.ONE).toSigned().negate()).toSigned();
        };

        /**
         * Writes a 64bit base 128 variable-length integer.
         * @param {number|Long} value Value to write
         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes
         *  written if omitted.
         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.
         * @expose
         */
        ByteBufferPrototype.writeVarint64 = function(value, offset) {
            var relative = typeof offset === 'undefined';
            if (relative) offset = this.offset;
            if (!this.noAssert) {
                if (typeof value === 'number')
                    value = Long.fromNumber(value);
                else if (typeof value === 'string')
                    value = Long.fromString(value);
                else if (!(value && value instanceof Long))
                    throw TypeError("Illegal value: "+value+" (not an integer or Long)");
                if (typeof offset !== 'number' || offset % 1 !== 0)
                    throw TypeError("Illegal offset: "+offset+" (not an integer)");
                offset >>>= 0;
                if (offset < 0 || offset + 0 > this.buffer.length)
                    throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.length);
            }
            if (typeof value === 'number')
                value = Long.fromNumber(value, false);
            else if (typeof value === 'string')
                value = Long.fromString(value, false);
            else if (value.unsigned !== false) value = value.toSigned();
            var size = ByteBuffer.calculateVarint64(value),
                part0 = value.toInt() >>> 0,
                part1 = value.shiftRightUnsigned(28).toInt() >>> 0,
                part2 = value.shiftRightUnsigned(56).toInt() >>> 0;
            offset += size;
            var capacity11 = this.buffer.length;
            if (offset > capacity11)
                this.resize((capacity11 *= 2) > offset ? capacity11 : offset);
            offset -= size;
            switch (size) {
                case 10: this.buffer[offset+9] = (part2 >>>  7) & 0x01;
                case 9 : this.buffer[offset+8] = size !== 9 ? (part2       ) | 0x80 : (part2       ) & 0x7F;
                case 8 : this.buffer[offset+7] = size !== 8 ? (part1 >>> 21) | 0x80 : (part1 >>> 21) & 0x7F;
                case 7 : this.buffer[offset+6] = size !== 7 ? (part1 >>> 14) | 0x80 : (part1 >>> 14) & 0x7F;
                case 6 : this.buffer[offset+5] = size !== 6 ? (part1 >>>  7) | 0x80 : (part1 >>>  7) & 0x7F;
                case 5 : this.buffer[offset+4] = size !== 5 ? (part1       ) | 0x80 : (part1       ) & 0x7F;
                case 4 : this.buffer[offset+3] = size !== 4 ? (part0 >>> 21) | 0x80 : (part0 >>> 21) & 0x7F;
                case 3 : this.buffer[offset+2] = size !== 3 ? (part0 >>> 14) | 0x80 : (part0 >>> 14) & 0x7F;
                case 2 : this.buffer[offset+1] = size !== 2 ? (part0 >>>  7) | 0x80 : (part0 >>>  7) & 0x7F;
                case 1 : this.buffer[offset  ] = size !== 1 ? (part0       ) | 0x80 : (part0       ) & 0x7F;
            }
            if (relative) {
                this.offset += size;
                return this;
            } else {
                return size;
            }
        };

        /**
         * Writes a zig-zag encoded 64bit base 128 variable-length integer.
         * @param {number|Long} value Value to write
         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes
         *  written if omitted.
         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.
         * @expose
         */
        ByteBufferPrototype.writeVarint64ZigZag = function(value, offset) {
            return this.writeVarint64(ByteBuffer.zigZagEncode64(value), offset);
        };

        /**
         * Reads a 64bit base 128 variable-length integer. Requires Long.js.
         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes
         *  read if omitted.
         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and
         *  the actual number of bytes read.
         * @throws {Error} If it's not a valid varint
         * @expose
         */
        ByteBufferPrototype.readVarint64 = function(offset) {
            var relative = typeof offset === 'undefined';
            if (relative) offset = this.offset;
            if (!this.noAssert) {
                if (typeof offset !== 'number' || offset % 1 !== 0)
                    throw TypeError("Illegal offset: "+offset+" (not an integer)");
                offset >>>= 0;
                if (offset < 0 || offset + 1 > this.buffer.length)
                    throw RangeError("Illegal offset: 0 <= "+offset+" (+"+1+") <= "+this.buffer.length);
            }
            // ref: src/google/protobuf/io/coded_stream.cc
            var start = offset,
                part0 = 0,
                part1 = 0,
                part2 = 0,
                b  = 0;
            b = this.buffer[offset++]; part0  = (b & 0x7F)      ; if ( b & 0x80                                                   ) {
            b = this.buffer[offset++]; part0 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {
            b = this.buffer[offset++]; part0 |= (b & 0x7F) << 14; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {
            b = this.buffer[offset++]; part0 |= (b & 0x7F) << 21; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {
            b = this.buffer[offset++]; part1  = (b & 0x7F)      ; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {
            b = this.buffer[offset++]; part1 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {
            b = this.buffer[offset++]; part1 |= (b & 0x7F) << 14; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {
            b = this.buffer[offset++]; part1 |= (b & 0x7F) << 21; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {
            b = this.buffer[offset++]; part2  = (b & 0x7F)      ; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {
            b = this.buffer[offset++]; part2 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {
            throw Error("Buffer overrun"); }}}}}}}}}}
            var value = Long.fromBits(part0 | (part1 << 28), (part1 >>> 4) | (part2) << 24, false);
            if (relative) {
                this.offset = offset;
                return value;
            } else {
                return {
                    'value': value,
                    'length': offset-start
                };
            }
        };

        /**
         * Reads a zig-zag encoded 64bit base 128 variable-length integer. Requires Long.js.
         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes
         *  read if omitted.
         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and
         *  the actual number of bytes read.
         * @throws {Error} If it's not a valid varint
         * @expose
         */
        ByteBufferPrototype.readVarint64ZigZag = function(offset) {
            var val = this.readVarint64(offset);
            if (val && val['value'] instanceof Long)
                val["value"] = ByteBuffer.zigZagDecode64(val["value"]);
            else
                val = ByteBuffer.zigZagDecode64(val);
            return val;
        };

    } // Long


    // types/strings/cstring

    /**
     * Writes a NULL-terminated UTF8 encoded string. For this to work the specified string must not contain any NULL
     *  characters itself.
     * @param {string} str String to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  contained in `str` + 1 if omitted.
     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written
     * @expose
     */
    ByteBufferPrototype.writeCString = function(str, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        var i,
            k = str.length;
        if (!this.noAssert) {
            if (typeof str !== 'string')
                throw TypeError("Illegal str: Not a string");
            for (i=0; i<k; ++i) {
                if (str.charCodeAt(i) === 0)
                    throw RangeError("Illegal str: Contains NULL-characters");
            }
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.length);
        }
        // UTF8 strings do not contain zero bytes in between except for the zero character, so:
        k = Buffer.byteLength(str, "utf8");
        offset += k+1;
        var capacity12 = this.buffer.length;
        if (offset > capacity12)
            this.resize((capacity12 *= 2) > offset ? capacity12 : offset);
        offset -= k+1;
        offset += this.buffer.write(str, offset, k, "utf8");
        this.buffer[offset++] = 0;
        if (relative) {
            this.offset = offset;
            return this;
        }
        return k;
    };

    /**
     * Reads a NULL-terminated UTF8 encoded string. For this to work the string read must not contain any NULL characters
     *  itself.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  read if omitted.
     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string
     *  read and the actual number of bytes read.
     * @expose
     */
    ByteBufferPrototype.readCString = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 1 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+1+") <= "+this.buffer.length);
        }
        var start = offset,
            temp;
        // UTF8 strings do not contain zero bytes in between except for the zero character itself, so:
        do {
            if (offset >= this.buffer.length)
                throw RangeError("Index out of range: "+offset+" <= "+this.buffer.length);
            temp = this.buffer[offset++];
        } while (temp !== 0);
        var str = this.buffer.toString("utf8", start, offset-1);
        if (relative) {
            this.offset = offset;
            return str;
        } else {
            return {
                "string": str,
                "length": offset - start
            };
        }
    };

    // types/strings/istring

    /**
     * Writes a length as uint32 prefixed UTF8 encoded string.
     * @param {string} str String to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  written if omitted.
     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written
     * @expose
     * @see ByteBuffer#writeVarint32
     */
    ByteBufferPrototype.writeIString = function(str, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof str !== 'string')
                throw TypeError("Illegal str: Not a string");
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.length);
        }
        var start = offset,
            k;
        k = Buffer.byteLength(str, "utf8");
        offset += 4+k;
        var capacity13 = this.buffer.length;
        if (offset > capacity13)
            this.resize((capacity13 *= 2) > offset ? capacity13 : offset);
        offset -= 4+k;
        if (this.littleEndian) {
            this.buffer[offset+3] = (k >>> 24) & 0xFF;
            this.buffer[offset+2] = (k >>> 16) & 0xFF;
            this.buffer[offset+1] = (k >>>  8) & 0xFF;
            this.buffer[offset  ] =  k         & 0xFF;
        } else {
            this.buffer[offset  ] = (k >>> 24) & 0xFF;
            this.buffer[offset+1] = (k >>> 16) & 0xFF;
            this.buffer[offset+2] = (k >>>  8) & 0xFF;
            this.buffer[offset+3] =  k         & 0xFF;
        }
        offset += 4;
        offset += this.buffer.write(str, offset, k, "utf8");
        if (relative) {
            this.offset = offset;
            return this;
        }
        return offset - start;
    };

    /**
     * Reads a length as uint32 prefixed UTF8 encoded string.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  read if omitted.
     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string
     *  read and the actual number of bytes read.
     * @expose
     * @see ByteBuffer#readVarint32
     */
    ByteBufferPrototype.readIString = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 4 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+4+") <= "+this.buffer.length);
        }
        var start = offset;
        var len = this.readUint32(offset);
        var str = this.readUTF8String(len, ByteBuffer.METRICS_BYTES, offset += 4);
        offset += str['length'];
        if (relative) {
            this.offset = offset;
            return str['string'];
        } else {
            return {
                'string': str['string'],
                'length': offset - start
            };
        }
    };

    // types/strings/utf8string

    /**
     * Metrics representing number of UTF8 characters. Evaluates to `c`.
     * @type {string}
     * @const
     * @expose
     */
    ByteBuffer.METRICS_CHARS = 'c';

    /**
     * Metrics representing number of bytes. Evaluates to `b`.
     * @type {string}
     * @const
     * @expose
     */
    ByteBuffer.METRICS_BYTES = 'b';

    /**
     * Writes an UTF8 encoded string.
     * @param {string} str String to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.
     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.
     * @expose
     */
    ByteBufferPrototype.writeUTF8String = function(str, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.length);
        }
        var k;
        k = Buffer.byteLength(str, "utf8");
        offset += k;
        var capacity14 = this.buffer.length;
        if (offset > capacity14)
            this.resize((capacity14 *= 2) > offset ? capacity14 : offset);
        offset -= k;
        offset += this.buffer.write(str, offset, k, "utf8");
        if (relative) {
            this.offset = offset;
            return this;
        }
        return k;
    };

    /**
     * Writes an UTF8 encoded string. This is an alias of {@link ByteBuffer#writeUTF8String}.
     * @function
     * @param {string} str String to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.
     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.
     * @expose
     */
    ByteBufferPrototype.writeString = ByteBufferPrototype.writeUTF8String;

    /**
     * Calculates the number of UTF8 characters of a string. JavaScript itself uses UTF-16, so that a string's
     *  `length` property does not reflect its actual UTF8 size if it contains code points larger than 0xFFFF.
     * @param {string} str String to calculate
     * @returns {number} Number of UTF8 characters
     * @expose
     */
    ByteBuffer.calculateUTF8Chars = function(str) {
        return utfx.calculateUTF16asUTF8(stringSource(str))[0];
    };

    /**
     * Calculates the number of UTF8 bytes of a string.
     * @param {string} str String to calculate
     * @returns {number} Number of UTF8 bytes
     * @expose
     */
    ByteBuffer.calculateUTF8Bytes = function(str) {
        if (typeof str !== 'string')
            throw TypeError("Illegal argument: "+(typeof str));
        return Buffer.byteLength(str, "utf8");
    };

    /**
     * Calculates the number of UTF8 bytes of a string. This is an alias of {@link ByteBuffer.calculateUTF8Bytes}.
     * @function
     * @param {string} str String to calculate
     * @returns {number} Number of UTF8 bytes
     * @expose
     */
    ByteBuffer.calculateString = ByteBuffer.calculateUTF8Bytes;

    /**
     * Reads an UTF8 encoded string.
     * @param {number} length Number of characters or bytes to read.
     * @param {string=} metrics Metrics specifying what `length` is meant to count. Defaults to
     *  {@link ByteBuffer.METRICS_CHARS}.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  read if omitted.
     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string
     *  read and the actual number of bytes read.
     * @expose
     */
    ByteBufferPrototype.readUTF8String = function(length, metrics, offset) {
        if (typeof metrics === 'number') {
            offset = metrics;
            metrics = undefined;
        }
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (typeof metrics === 'undefined') metrics = ByteBuffer.METRICS_CHARS;
        if (!this.noAssert) {
            if (typeof length !== 'number' || length % 1 !== 0)
                throw TypeError("Illegal length: "+length+" (not an integer)");
            length |= 0;
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.length);
        }
        var i = 0,
            start = offset,
            temp,
            sd;
        if (metrics === ByteBuffer.METRICS_CHARS) { // The same for node and the browser
            sd = stringDestination();
            utfx.decodeUTF8(function() {
                return i < length && offset < this.limit ? this.buffer[offset++] : null;
            }.bind(this), function(cp) {
                ++i; utfx.UTF8toUTF16(cp, sd);
            });
            if (i !== length)
                throw RangeError("Illegal range: Truncated data, "+i+" == "+length);
            if (relative) {
                this.offset = offset;
                return sd();
            } else {
                return {
                    "string": sd(),
                    "length": offset - start
                };
            }
        } else if (metrics === ByteBuffer.METRICS_BYTES) {
            if (!this.noAssert) {
                if (typeof offset !== 'number' || offset % 1 !== 0)
                    throw TypeError("Illegal offset: "+offset+" (not an integer)");
                offset >>>= 0;
                if (offset < 0 || offset + length > this.buffer.length)
                    throw RangeError("Illegal offset: 0 <= "+offset+" (+"+length+") <= "+this.buffer.length);
            }
            temp = this.buffer.toString("utf8", offset, offset+length);
            if (relative) {
                this.offset += length;
                return temp;
            } else {
                return {
                    'string': temp,
                    'length': length
                };
            }
        } else
            throw TypeError("Unsupported metrics: "+metrics);
    };

    /**
     * Reads an UTF8 encoded string. This is an alias of {@link ByteBuffer#readUTF8String}.
     * @function
     * @param {number} length Number of characters or bytes to read
     * @param {number=} metrics Metrics specifying what `n` is meant to count. Defaults to
     *  {@link ByteBuffer.METRICS_CHARS}.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  read if omitted.
     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string
     *  read and the actual number of bytes read.
     * @expose
     */
    ByteBufferPrototype.readString = ByteBufferPrototype.readUTF8String;

    // types/strings/vstring

    /**
     * Writes a length as varint32 prefixed UTF8 encoded string.
     * @param {string} str String to write
     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  written if omitted.
     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written
     * @expose
     * @see ByteBuffer#writeVarint32
     */
    ByteBufferPrototype.writeVString = function(str, offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof str !== 'string')
                throw TypeError("Illegal str: Not a string");
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.length);
        }
        var start = offset,
            k, l;
        k = Buffer.byteLength(str, "utf8");
        l = ByteBuffer.calculateVarint32(k);
        offset += l+k;
        var capacity15 = this.buffer.length;
        if (offset > capacity15)
            this.resize((capacity15 *= 2) > offset ? capacity15 : offset);
        offset -= l+k;
        offset += this.writeVarint32(k, offset);
        offset += this.buffer.write(str, offset, k, "utf8");
        if (relative) {
            this.offset = offset;
            return this;
        }
        return offset - start;
    };

    /**
     * Reads a length as varint32 prefixed UTF8 encoded string.
     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  read if omitted.
     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string
     *  read and the actual number of bytes read.
     * @expose
     * @see ByteBuffer#readVarint32
     */
    ByteBufferPrototype.readVString = function(offset) {
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 1 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+1+") <= "+this.buffer.length);
        }
        var start = offset;
        var len = this.readVarint32(offset);
        var str = this.readUTF8String(len['value'], ByteBuffer.METRICS_BYTES, offset += len['length']);
        offset += str['length'];
        if (relative) {
            this.offset = offset;
            return str['string'];
        } else {
            return {
                'string': str['string'],
                'length': offset - start
            };
        }
    };


    /**
     * Appends some data to this ByteBuffer. This will overwrite any contents behind the specified offset up to the appended
     *  data's length.
     * @param {!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string} source Data to append. If `source` is a ByteBuffer, its
     * offsets will be modified according to the performed read operation.
     * @param {(string|number)=} encoding Encoding if `data` is a string ("base64", "hex", "binary", defaults to "utf8")
     * @param {number=} offset Offset to append at. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  written if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     * @example A relative `<01 02>03.append(<04 05>)` will result in `<01 02 04 05>, 04 05|`
     * @example An absolute `<01 02>03.append(04 05>, 1)` will result in `<01 04>05, 04 05|`
     */
    ByteBufferPrototype.append = function(source, encoding, offset) {
        if (typeof encoding === 'number' || typeof encoding !== 'string') {
            offset = encoding;
            encoding = undefined;
        }
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.length);
        }
        if (!(source instanceof ByteBuffer))
            source = ByteBuffer.wrap(source, encoding);
        var length = source.limit - source.offset;
        if (length <= 0) return this; // Nothing to append
        offset += length;
        var capacity16 = this.buffer.length;
        if (offset > capacity16)
            this.resize((capacity16 *= 2) > offset ? capacity16 : offset);
        offset -= length;
        source.buffer.copy(this.buffer, offset, source.offset, source.limit);
        source.offset += length;
        if (relative) this.offset += length;
        return this;
    };

    /**
     * Appends this ByteBuffer's contents to another ByteBuffer. This will overwrite any contents at and after the
        specified offset up to the length of this ByteBuffer's data.
     * @param {!ByteBuffer} target Target ByteBuffer
     * @param {number=} offset Offset to append to. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  read if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     * @see ByteBuffer#append
     */
    ByteBufferPrototype.appendTo = function(target, offset) {
        target.append(this, offset);
        return this;
    };

    /**
     * Enables or disables assertions of argument types and offsets. Assertions are enabled by default but you can opt to
     *  disable them if your code already makes sure that everything is valid.
     * @param {boolean} assert `true` to enable assertions, otherwise `false`
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.assert = function(assert) {
        this.noAssert = !assert;
        return this;
    };

    /**
     * Gets the capacity of this ByteBuffer's backing buffer.
     * @returns {number} Capacity of the backing buffer
     * @expose
     */
    ByteBufferPrototype.capacity = function() {
        return this.buffer.length;
    };
    /**
     * Clears this ByteBuffer's offsets by setting {@link ByteBuffer#offset} to `0` and {@link ByteBuffer#limit} to the
     *  backing buffer's capacity. Discards {@link ByteBuffer#markedOffset}.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.clear = function() {
        this.offset = 0;
        this.limit = this.buffer.length;
        this.markedOffset = -1;
        return this;
    };

    /**
     * Creates a cloned instance of this ByteBuffer, preset with this ByteBuffer's values for {@link ByteBuffer#offset},
     *  {@link ByteBuffer#markedOffset} and {@link ByteBuffer#limit}.
     * @param {boolean=} copy Whether to copy the backing buffer or to return another view on the same, defaults to `false`
     * @returns {!ByteBuffer} Cloned instance
     * @expose
     */
    ByteBufferPrototype.clone = function(copy) {
        var bb = new ByteBuffer(0, this.littleEndian, this.noAssert);
        if (copy) {
            var buffer = new Buffer(this.buffer.length);
            this.buffer.copy(buffer);
            bb.buffer = buffer;
        } else {
            bb.buffer = this.buffer;
        }
        bb.offset = this.offset;
        bb.markedOffset = this.markedOffset;
        bb.limit = this.limit;
        return bb;
    };

    /**
     * Compacts this ByteBuffer to be backed by a {@link ByteBuffer#buffer} of its contents' length. Contents are the bytes
     *  between {@link ByteBuffer#offset} and {@link ByteBuffer#limit}. Will set `offset = 0` and `limit = capacity` and
     *  adapt {@link ByteBuffer#markedOffset} to the same relative position if set.
     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}
     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.compact = function(begin, end) {
        if (typeof begin === 'undefined') begin = this.offset;
        if (typeof end === 'undefined') end = this.limit;
        if (!this.noAssert) {
            if (typeof begin !== 'number' || begin % 1 !== 0)
                throw TypeError("Illegal begin: Not an integer");
            begin >>>= 0;
            if (typeof end !== 'number' || end % 1 !== 0)
                throw TypeError("Illegal end: Not an integer");
            end >>>= 0;
            if (begin < 0 || begin > end || end > this.buffer.length)
                throw RangeError("Illegal range: 0 <= "+begin+" <= "+end+" <= "+this.buffer.length);
        }
        if (begin === 0 && end === this.buffer.length)
            return this; // Already compacted
        var len = end - begin;
        if (len === 0) {
            this.buffer = EMPTY_BUFFER;
            if (this.markedOffset >= 0) this.markedOffset -= begin;
            this.offset = 0;
            this.limit = 0;
            return this;
        }
        var buffer = new Buffer(len);
        this.buffer.copy(buffer, 0, begin, end);
        this.buffer = buffer;
        if (this.markedOffset >= 0) this.markedOffset -= begin;
        this.offset = 0;
        this.limit = len;
        return this;
    };

    /**
     * Creates a copy of this ByteBuffer's contents. Contents are the bytes between {@link ByteBuffer#offset} and
     *  {@link ByteBuffer#limit}.
     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.
     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.
     * @returns {!ByteBuffer} Copy
     * @expose
     */
    ByteBufferPrototype.copy = function(begin, end) {
        if (typeof begin === 'undefined') begin = this.offset;
        if (typeof end === 'undefined') end = this.limit;
        if (!this.noAssert) {
            if (typeof begin !== 'number' || begin % 1 !== 0)
                throw TypeError("Illegal begin: Not an integer");
            begin >>>= 0;
            if (typeof end !== 'number' || end % 1 !== 0)
                throw TypeError("Illegal end: Not an integer");
            end >>>= 0;
            if (begin < 0 || begin > end || end > this.buffer.length)
                throw RangeError("Illegal range: 0 <= "+begin+" <= "+end+" <= "+this.buffer.length);
        }
        if (begin === end)
            return new ByteBuffer(0, this.littleEndian, this.noAssert);
        var capacity = end - begin,
            bb = new ByteBuffer(capacity, this.littleEndian, this.noAssert);
        bb.offset = 0;
        bb.limit = capacity;
        if (bb.markedOffset >= 0) bb.markedOffset -= begin;
        this.copyTo(bb, 0, begin, end);
        return bb;
    };

    /**
     * Copies this ByteBuffer's contents to another ByteBuffer. Contents are the bytes between {@link ByteBuffer#offset} and
     *  {@link ByteBuffer#limit}.
     * @param {!ByteBuffer} target Target ByteBuffer
     * @param {number=} targetOffset Offset to copy to. Will use and increase the target's {@link ByteBuffer#offset}
     *  by the number of bytes copied if omitted.
     * @param {number=} sourceOffset Offset to start copying from. Will use and increase {@link ByteBuffer#offset} by the
     *  number of bytes copied if omitted.
     * @param {number=} sourceLimit Offset to end copying from, defaults to {@link ByteBuffer#limit}
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.copyTo = function(target, targetOffset, sourceOffset, sourceLimit) {
        var relative,
            targetRelative;
        if (!this.noAssert) {
            if (!ByteBuffer.isByteBuffer(target))
                throw TypeError("Illegal target: Not a ByteBuffer");
        }
        targetOffset = (targetRelative = typeof targetOffset === 'undefined') ? target.offset : targetOffset | 0;
        sourceOffset = (relative = typeof sourceOffset === 'undefined') ? this.offset : sourceOffset | 0;
        sourceLimit = typeof sourceLimit === 'undefined' ? this.limit : sourceLimit | 0;

        if (targetOffset < 0 || targetOffset > target.buffer.length)
            throw RangeError("Illegal target range: 0 <= "+targetOffset+" <= "+target.buffer.length);
        if (sourceOffset < 0 || sourceLimit > this.buffer.length)
            throw RangeError("Illegal source range: 0 <= "+sourceOffset+" <= "+this.buffer.length);

        var len = sourceLimit - sourceOffset;
        if (len === 0)
            return target; // Nothing to copy

        target.ensureCapacity(targetOffset + len);

        this.buffer.copy(target.buffer, targetOffset, sourceOffset, sourceLimit);

        if (relative) this.offset += len;
        if (targetRelative) target.offset += len;

        return this;
    };

    /**
     * Makes sure that this ByteBuffer is backed by a {@link ByteBuffer#buffer} of at least the specified capacity. If the
     *  current capacity is exceeded, it will be doubled. If double the current capacity is less than the required capacity,
     *  the required capacity will be used instead.
     * @param {number} capacity Required capacity
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.ensureCapacity = function(capacity) {
        var current = this.buffer.length;
        if (current < capacity)
            return this.resize((current *= 2) > capacity ? current : capacity);
        return this;
    };

    /**
     * Overwrites this ByteBuffer's contents with the specified value. Contents are the bytes between
     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.
     * @param {number|string} value Byte value to fill with. If given as a string, the first character is used.
     * @param {number=} begin Begin offset. Will use and increase {@link ByteBuffer#offset} by the number of bytes
     *  written if omitted. defaults to {@link ByteBuffer#offset}.
     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.
     * @returns {!ByteBuffer} this
     * @expose
     * @example `someByteBuffer.clear().fill(0)` fills the entire backing buffer with zeroes
     */
    ByteBufferPrototype.fill = function(value, begin, end) {
        var relative = typeof begin === 'undefined';
        if (relative) begin = this.offset;
        if (typeof value === 'string' && value.length > 0)
            value = value.charCodeAt(0);
        if (typeof begin === 'undefined') begin = this.offset;
        if (typeof end === 'undefined') end = this.limit;
        if (!this.noAssert) {
            if (typeof value !== 'number' || value % 1 !== 0)
                throw TypeError("Illegal value: "+value+" (not an integer)");
            value |= 0;
            if (typeof begin !== 'number' || begin % 1 !== 0)
                throw TypeError("Illegal begin: Not an integer");
            begin >>>= 0;
            if (typeof end !== 'number' || end % 1 !== 0)
                throw TypeError("Illegal end: Not an integer");
            end >>>= 0;
            if (begin < 0 || begin > end || end > this.buffer.length)
                throw RangeError("Illegal range: 0 <= "+begin+" <= "+end+" <= "+this.buffer.length);
        }
        if (begin >= end)
            return this; // Nothing to fill
        this.buffer.fill(value, begin, end);
        begin = end;
        if (relative) this.offset = begin;
        return this;
    };

    /**
     * Makes this ByteBuffer ready for a new sequence of write or relative read operations. Sets `limit = offset` and
     *  `offset = 0`. Make sure always to flip a ByteBuffer when all relative read or write operations are complete.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.flip = function() {
        this.limit = this.offset;
        this.offset = 0;
        return this;
    };
    /**
     * Marks an offset on this ByteBuffer to be used later.
     * @param {number=} offset Offset to mark. Defaults to {@link ByteBuffer#offset}.
     * @returns {!ByteBuffer} this
     * @throws {TypeError} If `offset` is not a valid number
     * @throws {RangeError} If `offset` is out of bounds
     * @see ByteBuffer#reset
     * @expose
     */
    ByteBufferPrototype.mark = function(offset) {
        offset = typeof offset === 'undefined' ? this.offset : offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.length);
        }
        this.markedOffset = offset;
        return this;
    };
    /**
     * Sets the byte order.
     * @param {boolean} littleEndian `true` for little endian byte order, `false` for big endian
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.order = function(littleEndian) {
        if (!this.noAssert) {
            if (typeof littleEndian !== 'boolean')
                throw TypeError("Illegal littleEndian: Not a boolean");
        }
        this.littleEndian = !!littleEndian;
        return this;
    };

    /**
     * Switches (to) little endian byte order.
     * @param {boolean=} littleEndian Defaults to `true`, otherwise uses big endian
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.LE = function(littleEndian) {
        this.littleEndian = typeof littleEndian !== 'undefined' ? !!littleEndian : true;
        return this;
    };

    /**
     * Switches (to) big endian byte order.
     * @param {boolean=} bigEndian Defaults to `true`, otherwise uses little endian
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.BE = function(bigEndian) {
        this.littleEndian = typeof bigEndian !== 'undefined' ? !bigEndian : false;
        return this;
    };
    /**
     * Prepends some data to this ByteBuffer. This will overwrite any contents before the specified offset up to the
     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer
     *  will be resized and its contents moved accordingly.
     * @param {!ByteBuffer|string||!Buffer} source Data to prepend. If `source` is a ByteBuffer, its offset will be modified
     *  according to the performed read operation.
     * @param {(string|number)=} encoding Encoding if `data` is a string ("base64", "hex", "binary", defaults to "utf8")
     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes
     *  prepended if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     * @example A relative `00<01 02 03>.prepend(<04 05>)` results in `<04 05 01 02 03>, 04 05|`
     * @example An absolute `00<01 02 03>.prepend(<04 05>, 2)` results in `04<05 02 03>, 04 05|`
     */
    ByteBufferPrototype.prepend = function(source, encoding, offset) {
        if (typeof encoding === 'number' || typeof encoding !== 'string') {
            offset = encoding;
            encoding = undefined;
        }
        var relative = typeof offset === 'undefined';
        if (relative) offset = this.offset;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: "+offset+" (not an integer)");
            offset >>>= 0;
            if (offset < 0 || offset + 0 > this.buffer.length)
                throw RangeError("Illegal offset: 0 <= "+offset+" (+"+0+") <= "+this.buffer.length);
        }
        if (!(source instanceof ByteBuffer))
            source = ByteBuffer.wrap(source, encoding);
        var len = source.limit - source.offset;
        if (len <= 0) return this; // Nothing to prepend
        var diff = len - offset;
        if (diff > 0) { // Not enough space before offset, so resize + move
            var buffer = new Buffer(this.buffer.length + diff);
            this.buffer.copy(buffer, len, offset, this.buffer.length);
            this.buffer = buffer;
            this.offset += diff;
            if (this.markedOffset >= 0) this.markedOffset += diff;
            this.limit += diff;
            offset += diff;
        }        source.buffer.copy(this.buffer, offset - len, source.offset, source.limit);

        source.offset = source.limit;
        if (relative)
            this.offset -= len;
        return this;
    };

    /**
     * Prepends this ByteBuffer to another ByteBuffer. This will overwrite any contents before the specified offset up to the
     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer
     *  will be resized and its contents moved accordingly.
     * @param {!ByteBuffer} target Target ByteBuffer
     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes
     *  prepended if omitted.
     * @returns {!ByteBuffer} this
     * @expose
     * @see ByteBuffer#prepend
     */
    ByteBufferPrototype.prependTo = function(target, offset) {
        target.prepend(this, offset);
        return this;
    };
    /**
     * Prints debug information about this ByteBuffer's contents.
     * @param {function(string)=} out Output function to call, defaults to console.log
     * @expose
     */
    ByteBufferPrototype.printDebug = function(out) {
        if (typeof out !== 'function') out = console.log.bind(console);
        out(
            this.toString()+"\n"+
            "-------------------------------------------------------------------\n"+
            this.toDebug(/* columns */ true)
        );
    };

    /**
     * Gets the number of remaining readable bytes. Contents are the bytes between {@link ByteBuffer#offset} and
     *  {@link ByteBuffer#limit}, so this returns `limit - offset`.
     * @returns {number} Remaining readable bytes. May be negative if `offset > limit`.
     * @expose
     */
    ByteBufferPrototype.remaining = function() {
        return this.limit - this.offset;
    };
    /**
     * Resets this ByteBuffer's {@link ByteBuffer#offset}. If an offset has been marked through {@link ByteBuffer#mark}
     *  before, `offset` will be set to {@link ByteBuffer#markedOffset}, which will then be discarded. If no offset has been
     *  marked, sets `offset = 0`.
     * @returns {!ByteBuffer} this
     * @see ByteBuffer#mark
     * @expose
     */
    ByteBufferPrototype.reset = function() {
        if (this.markedOffset >= 0) {
            this.offset = this.markedOffset;
            this.markedOffset = -1;
        } else {
            this.offset = 0;
        }
        return this;
    };
    /**
     * Resizes this ByteBuffer to be backed by a buffer of at least the given capacity. Will do nothing if already that
     *  large or larger.
     * @param {number} capacity Capacity required
     * @returns {!ByteBuffer} this
     * @throws {TypeError} If `capacity` is not a number
     * @throws {RangeError} If `capacity < 0`
     * @expose
     */
    ByteBufferPrototype.resize = function(capacity) {
        if (!this.noAssert) {
            if (typeof capacity !== 'number' || capacity % 1 !== 0)
                throw TypeError("Illegal capacity: "+capacity+" (not an integer)");
            capacity |= 0;
            if (capacity < 0)
                throw RangeError("Illegal capacity: 0 <= "+capacity);
        }
        if (this.buffer.length < capacity) {
            var buffer = new Buffer(capacity);
            this.buffer.copy(buffer);
            this.buffer = buffer;
        }
        return this;
    };
    /**
     * Reverses this ByteBuffer's contents.
     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}
     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.reverse = function(begin, end) {
        if (typeof begin === 'undefined') begin = this.offset;
        if (typeof end === 'undefined') end = this.limit;
        if (!this.noAssert) {
            if (typeof begin !== 'number' || begin % 1 !== 0)
                throw TypeError("Illegal begin: Not an integer");
            begin >>>= 0;
            if (typeof end !== 'number' || end % 1 !== 0)
                throw TypeError("Illegal end: Not an integer");
            end >>>= 0;
            if (begin < 0 || begin > end || end > this.buffer.length)
                throw RangeError("Illegal range: 0 <= "+begin+" <= "+end+" <= "+this.buffer.length);
        }
        if (begin === end)
            return this; // Nothing to reverse
        Array.prototype.reverse.call(this.buffer.slice(begin, end));
        return this;
    };
    /**
     * Skips the next `length` bytes. This will just advance
     * @param {number} length Number of bytes to skip. May also be negative to move the offset back.
     * @returns {!ByteBuffer} this
     * @expose
     */
    ByteBufferPrototype.skip = function(length) {
        if (!this.noAssert) {
            if (typeof length !== 'number' || length % 1 !== 0)
                throw TypeError("Illegal length: "+length+" (not an integer)");
            length |= 0;
        }
        var offset = this.offset + length;
        if (!this.noAssert) {
            if (offset < 0 || offset > this.buffer.length)
                throw RangeError("Illegal length: 0 <= "+this.offset+" + "+length+" <= "+this.buffer.length);
        }
        this.offset = offset;
        return this;
    };

    /**
     * Slices this ByteBuffer by creating a cloned instance with `offset = begin` and `limit = end`.
     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.
     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.
     * @returns {!ByteBuffer} Clone of this ByteBuffer with slicing applied, backed by the same {@link ByteBuffer#buffer}
     * @expose
     */
    ByteBufferPrototype.slice = function(begin, end) {
        if (typeof begin === 'undefined') begin = this.offset;
        if (typeof end === 'undefined') end = this.limit;
        if (!this.noAssert) {
            if (typeof begin !== 'number' || begin % 1 !== 0)
                throw TypeError("Illegal begin: Not an integer");
            begin >>>= 0;
            if (typeof end !== 'number' || end % 1 !== 0)
                throw TypeError("Illegal end: Not an integer");
            end >>>= 0;
            if (begin < 0 || begin > end || end > this.buffer.length)
                throw RangeError("Illegal range: 0 <= "+begin+" <= "+end+" <= "+this.buffer.length);
        }
        var bb = this.clone();
        bb.offset = begin;
        bb.limit = end;
        return bb;
    };
    /**
     * Returns a copy of the backing buffer that contains this ByteBuffer's contents. Contents are the bytes between
     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.
     * @param {boolean=} forceCopy If `true` returns a copy, otherwise returns a view referencing the same memory if
     *  possible. Defaults to `false`
     * @returns {!Buffer} Contents as a Buffer
     * @expose
     */
    ByteBufferPrototype.toBuffer = function(forceCopy) {
        var offset = this.offset,
            limit = this.limit;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: Not an integer");
            offset >>>= 0;
            if (typeof limit !== 'number' || limit % 1 !== 0)
                throw TypeError("Illegal limit: Not an integer");
            limit >>>= 0;
            if (offset < 0 || offset > limit || limit > this.buffer.length)
                throw RangeError("Illegal range: 0 <= "+offset+" <= "+limit+" <= "+this.buffer.length);
        }
        if (forceCopy) {
            var buffer = new Buffer(limit - offset);
            this.buffer.copy(buffer, 0, offset, limit);
            return buffer;
        } else {
            if (offset === 0 && limit === this.buffer.length)
                return this.buffer;
            else
                return this.buffer.slice(offset, limit);
        }
    };

    /**
     * Returns a copy of the backing buffer compacted to contain this ByteBuffer's contents. Contents are the bytes between
     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.
     * @returns {!ArrayBuffer} Contents as an ArrayBuffer
     */
    ByteBufferPrototype.toArrayBuffer = function() {
        var offset = this.offset,
            limit = this.limit;
        if (!this.noAssert) {
            if (typeof offset !== 'number' || offset % 1 !== 0)
                throw TypeError("Illegal offset: Not an integer");
            offset >>>= 0;
            if (typeof limit !== 'number' || limit % 1 !== 0)
                throw TypeError("Illegal limit: Not an integer");
            limit >>>= 0;
            if (offset < 0 || offset > limit || limit > this.buffer.length)
                throw RangeError("Illegal range: 0 <= "+offset+" <= "+limit+" <= "+this.buffer.length);
        }
        var ab = new ArrayBuffer(limit - offset);
        if (memcpy) { // Fast
            memcpy(ab, 0, this.buffer, offset, limit);
        } else { // Slow
            var dst = new Uint8Array(ab);
            for (var i=offset; i<limit; ++i)
                dst[i-offset] = this.buffer[i];
        }
        return ab;
    };

    /**
     * Converts the ByteBuffer's contents to a string.
     * @param {string=} encoding Output encoding. Returns an informative string representation if omitted but also allows
     *  direct conversion to "utf8", "hex", "base64" and "binary" encoding. "debug" returns a hex representation with
     *  highlighted offsets.
     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}
     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}
     * @returns {string} String representation
     * @throws {Error} If `encoding` is invalid
     * @expose
     */
    ByteBufferPrototype.toString = function(encoding, begin, end) {
        if (typeof encoding === 'undefined')
            return "ByteBufferNB(offset="+this.offset+",markedOffset="+this.markedOffset+",limit="+this.limit+",capacity="+this.capacity()+")";
        if (typeof encoding === 'number')
            encoding = "utf8",
            begin = encoding,
            end = begin;
        switch (encoding) {
            case "utf8":
                return this.toUTF8(begin, end);
            case "base64":
                return this.toBase64(begin, end);
            case "hex":
                return this.toHex(begin, end);
            case "binary":
                return this.toBinary(begin, end);
            case "debug":
                return this.toDebug();
            case "columns":
                return this.toColumns();
            default:
                throw Error("Unsupported encoding: "+encoding);
        }
    };

    // encodings/base64

    /**
     * Encodes this ByteBuffer's contents to a base64 encoded string.
     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}.
     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}.
     * @returns {string} Base64 encoded string
     * @throws {RangeError} If `begin` or `end` is out of bounds
     * @expose
     */
    ByteBufferPrototype.toBase64 = function(begin, end) {
        if (typeof begin === 'undefined')
            begin = this.offset;
        if (typeof end === 'undefined')
            end = this.limit;
        begin = begin | 0; end = end | 0;
        if (begin < 0 || end > this.capacity || begin > end)
            throw RangeError("begin, end");
        return this.buffer.toString("base64", begin, end);
    };

    /**
     * Decodes a base64 encoded string to a ByteBuffer.
     * @param {string} str String to decode
     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to
     *  {@link ByteBuffer.DEFAULT_ENDIAN}.
     * @returns {!ByteBuffer} ByteBuffer
     * @expose
     */
    ByteBuffer.fromBase64 = function(str, littleEndian) {
        return ByteBuffer.wrap(new Buffer(str, "base64"), littleEndian);
        return bb;
    };

    /**
     * Encodes a binary string to base64 like `window.btoa` does.
     * @param {string} str Binary string
     * @returns {string} Base64 encoded string
     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.btoa
     * @expose
     */
    ByteBuffer.btoa = function(str) {
        return ByteBuffer.fromBinary(str).toBase64();
    };

    /**
     * Decodes a base64 encoded string to binary like `window.atob` does.
     * @param {string} b64 Base64 encoded string
     * @returns {string} Binary string
     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.atob
     * @expose
     */
    ByteBuffer.atob = function(b64) {
        return ByteBuffer.fromBase64(b64).toBinary();
    };

    // encodings/binary

    /**
     * Encodes this ByteBuffer to a binary encoded string, that is using only characters 0x00-0xFF as bytes.
     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.
     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.
     * @returns {string} Binary encoded string
     * @throws {RangeError} If `offset > limit`
     * @expose
     */
    ByteBufferPrototype.toBinary = function(begin, end) {
        if (typeof begin === 'undefined')
            begin = this.offset;
        if (typeof end === 'undefined')
            end = this.limit;
        begin |= 0; end |= 0;
        if (begin < 0 || end > this.capacity() || begin > end)
            throw RangeError("begin, end");
        return this.buffer.toString("binary", begin, end);
    };

    /**
     * Decodes a binary encoded string, that is using only characters 0x00-0xFF as bytes, to a ByteBuffer.
     * @param {string} str String to decode
     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to
     *  {@link ByteBuffer.DEFAULT_ENDIAN}.
     * @returns {!ByteBuffer} ByteBuffer
     * @expose
     */
    ByteBuffer.fromBinary = function(str, littleEndian) {
        return ByteBuffer.wrap(new Buffer(str, "binary"), littleEndian);
        return bb;
    };

    // encodings/debug

    /**
     * Encodes this ByteBuffer to a hex encoded string with marked offsets. Offset symbols are:
     * * `<` : offset,
     * * `'` : markedOffset,
     * * `>` : limit,
     * * `|` : offset and limit,
     * * `[` : offset and markedOffset,
     * * `]` : markedOffset and limit,
     * * `!` : offset, markedOffset and limit
     * @param {boolean=} columns If `true` returns two columns hex + ascii, defaults to `false`
     * @returns {string|!Array.<string>} Debug string or array of lines if `asArray = true`
     * @expose
     * @example `>00'01 02<03` contains four bytes with `limit=0, markedOffset=1, offset=3`
     * @example `00[01 02 03>` contains four bytes with `offset=markedOffset=1, limit=4`
     * @example `00|01 02 03` contains four bytes with `offset=limit=1, markedOffset=-1`
     * @example `|` contains zero bytes with `offset=limit=0, markedOffset=-1`
     */
    ByteBufferPrototype.toDebug = function(columns) {
        var i = -1,
            k = this.buffer.length,
            b,
            hex = "",
            asc = "",
            out = "";
        while (i<k) {
            if (i !== -1) {
                b = this.buffer[i];
                if (b < 0x10) hex += "0"+b.toString(16).toUpperCase();
                else hex += b.toString(16).toUpperCase();
                if (columns)
                    asc += b > 32 && b < 127 ? String.fromCharCode(b) : '.';
            }
            ++i;
            if (columns) {
                if (i > 0 && i % 16 === 0 && i !== k) {
                    while (hex.length < 3*16+3) hex += " ";
                    out += hex+asc+"\n";
                    hex = asc = "";
                }
            }
            if (i === this.offset && i === this.limit)
                hex += i === this.markedOffset ? "!" : "|";
            else if (i === this.offset)
                hex += i === this.markedOffset ? "[" : "<";
            else if (i === this.limit)
                hex += i === this.markedOffset ? "]" : ">";
            else
                hex += i === this.markedOffset ? "'" : (columns || (i !== 0 && i !== k) ? " " : "");
        }
        if (columns && hex !== " ") {
            while (hex.length < 3*16+3)
                hex += " ";
            out += hex + asc + "\n";
        }
        return columns ? out : hex;
    };

    /**
     * Decodes a hex encoded string with marked offsets to a ByteBuffer.
     * @param {string} str Debug string to decode (not be generated with `columns = true`)
     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to
     *  {@link ByteBuffer.DEFAULT_ENDIAN}.
     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to
     *  {@link ByteBuffer.DEFAULT_NOASSERT}.
     * @returns {!ByteBuffer} ByteBuffer
     * @expose
     * @see ByteBuffer#toDebug
     */
    ByteBuffer.fromDebug = function(str, littleEndian, noAssert) {
        var k = str.length,
            bb = new ByteBuffer(((k+1)/3)|0, littleEndian, noAssert);
        var i = 0, j = 0, ch, b,
            rs = false, // Require symbol next
            ho = false, hm = false, hl = false, // Already has offset (ho), markedOffset (hm), limit (hl)?
            fail = false;
        while (i<k) {
            switch (ch = str.charAt(i++)) {
                case '!':
                    if (!noAssert) {
                        if (ho || hm || hl) {
                            fail = true;
                            break;
                        }
                        ho = hm = hl = true;
                    }
                    bb.offset = bb.markedOffset = bb.limit = j;
                    rs = false;
                    break;
                case '|':
                    if (!noAssert) {
                        if (ho || hl) {
                            fail = true;
                            break;
                        }
                        ho = hl = true;
                    }
                    bb.offset = bb.limit = j;
                    rs = false;
                    break;
                case '[':
                    if (!noAssert) {
                        if (ho || hm) {
                            fail = true;
                            break;
                        }
                        ho = hm = true;
                    }
                    bb.offset = bb.markedOffset = j;
                    rs = false;
                    break;
                case '<':
                    if (!noAssert) {
                        if (ho) {
                            fail = true;
                            break;
                        }
                        ho = true;
                    }
                    bb.offset = j;
                    rs = false;
                    break;
                case ']':
                    if (!noAssert) {
                        if (hl || hm) {
                            fail = true;
                            break;
                        }
                        hl = hm = true;
                    }
                    bb.limit = bb.markedOffset = j;
                    rs = false;
                    break;
                case '>':
                    if (!noAssert) {
                        if (hl) {
                            fail = true;
                            break;
                        }
                        hl = true;
                    }
                    bb.limit = j;
                    rs = false;
                    break;
                case "'":
                    if (!noAssert) {
                        if (hm) {
                            fail = true;
                            break;
                        }
                        hm = true;
                    }
                    bb.markedOffset = j;
                    rs = false;
                    break;
                case ' ':
                    rs = false;
                    break;
                default:
                    if (!noAssert) {
                        if (rs) {
                            fail = true;
                            break;
                        }
                    }
                    b = parseInt(ch+str.charAt(i++), 16);
                    if (!noAssert) {
                        if (isNaN(b) || b < 0 || b > 255)
                            throw TypeError("Illegal str: Not a debug encoded string");
                    }
                    bb.buffer[j++] = b;
                    rs = true;
            }
            if (fail)
                throw TypeError("Illegal str: Invalid symbol at "+i);
        }
        if (!noAssert) {
            if (!ho || !hl)
                throw TypeError("Illegal str: Missing offset or limit");
            if (j<bb.buffer.length)
                throw TypeError("Illegal str: Not a debug encoded string (is it hex?) "+j+" < "+k);
        }
        return bb;
    };

    // encodings/hex

    /**
     * Encodes this ByteBuffer's contents to a hex encoded string.
     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.
     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.
     * @returns {string} Hex encoded string
     * @expose
     */
    ByteBufferPrototype.toHex = function(begin, end) {
        begin = typeof begin === 'undefined' ? this.offset : begin;
        end = typeof end === 'undefined' ? this.limit : end;
        if (!this.noAssert) {
            if (typeof begin !== 'number' || begin % 1 !== 0)
                throw TypeError("Illegal begin: Not an integer");
            begin >>>= 0;
            if (typeof end !== 'number' || end % 1 !== 0)
                throw TypeError("Illegal end: Not an integer");
            end >>>= 0;
            if (begin < 0 || begin > end || end > this.buffer.length)
                throw RangeError("Illegal range: 0 <= "+begin+" <= "+end+" <= "+this.buffer.length);
        }
        return this.buffer.toString("hex", begin, end);
    };

    /**
     * Decodes a hex encoded string to a ByteBuffer.
     * @param {string} str String to decode
     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to
     *  {@link ByteBuffer.DEFAULT_ENDIAN}.
     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to
     *  {@link ByteBuffer.DEFAULT_NOASSERT}.
     * @returns {!ByteBuffer} ByteBuffer
     * @expose
     */
    ByteBuffer.fromHex = function(str, littleEndian, noAssert) {
        if (!noAssert) {
            if (typeof str !== 'string')
                throw TypeError("Illegal str: Not a string");
            if (str.length % 2 !== 0)
                throw TypeError("Illegal str: Length not a multiple of 2");
        }
        var bb = new ByteBuffer(0, littleEndian, true);
        bb.buffer = new Buffer(str, "hex");
        bb.limit = bb.buffer.length;
        return bb;
    };

    // utfx-embeddable

    /**
     * utfx-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>
     * Released under the Apache License, Version 2.0
     * see: https://github.com/dcodeIO/utfx for details
     */
    var utfx = function() {
        "use strict";

        /**
         * utfx namespace.
         * @inner
         * @type {!Object.<string,*>}
         */
        var utfx = {};

        /**
         * Maximum valid code point.
         * @type {number}
         * @const
         */
        utfx.MAX_CODEPOINT = 0x10FFFF;

        /**
         * Encodes UTF8 code points to UTF8 bytes.
         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point
         *  respectively `null` if there are no more code points left or a single numeric code point.
         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte
         */
        utfx.encodeUTF8 = function(src, dst) {
            var cp = null;
            if (typeof src === 'number')
                cp = src,
                src = function() { return null; };
            while (cp !== null || (cp = src()) !== null) {
                if (cp < 0x80)
                    dst(cp&0x7F);
                else if (cp < 0x800)
                    dst(((cp>>6)&0x1F)|0xC0),
                    dst((cp&0x3F)|0x80);
                else if (cp < 0x10000)
                    dst(((cp>>12)&0x0F)|0xE0),
                    dst(((cp>>6)&0x3F)|0x80),
                    dst((cp&0x3F)|0x80);
                else
                    dst(((cp>>18)&0x07)|0xF0),
                    dst(((cp>>12)&0x3F)|0x80),
                    dst(((cp>>6)&0x3F)|0x80),
                    dst((cp&0x3F)|0x80);
                cp = null;
            }
        };

        /**
         * Decodes UTF8 bytes to UTF8 code points.
         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there
         *  are no more bytes left.
         * @param {!function(number)} dst Code points destination as a function successively called with each decoded code point.
         * @throws {RangeError} If a starting byte is invalid in UTF8
         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the
         *  remaining bytes.
         */
        utfx.decodeUTF8 = function(src, dst) {
            var a, b, c, d, fail = function(b) {
                b = b.slice(0, b.indexOf(null));
                var err = Error(b.toString());
                err.name = "TruncatedError";
                err['bytes'] = b;
                throw err;
            };
            while ((a = src()) !== null) {
                if ((a&0x80) === 0)
                    dst(a);
                else if ((a&0xE0) === 0xC0)
                    ((b = src()) === null) && fail([a, b]),
                    dst(((a&0x1F)<<6) | (b&0x3F));
                else if ((a&0xF0) === 0xE0)
                    ((b=src()) === null || (c=src()) === null) && fail([a, b, c]),
                    dst(((a&0x0F)<<12) | ((b&0x3F)<<6) | (c&0x3F));
                else if ((a&0xF8) === 0xF0)
                    ((b=src()) === null || (c=src()) === null || (d=src()) === null) && fail([a, b, c ,d]),
                    dst(((a&0x07)<<18) | ((b&0x3F)<<12) | ((c&0x3F)<<6) | (d&0x3F));
                else throw RangeError("Illegal starting byte: "+a);
            }
        };

        /**
         * Converts UTF16 characters to UTF8 code points.
         * @param {!function():number|null} src Characters source as a function returning the next char code respectively
         *  `null` if there are no more characters left.
         * @param {!function(number)} dst Code points destination as a function successively called with each converted code
         *  point.
         */
        utfx.UTF16toUTF8 = function(src, dst) {
            var c1, c2 = null;
            while (true) {
                if ((c1 = c2 !== null ? c2 : src()) === null)
                    break;
                if (c1 >= 0xD800 && c1 <= 0xDFFF) {
                    if ((c2 = src()) !== null) {
                        if (c2 >= 0xDC00 && c2 <= 0xDFFF) {
                            dst((c1-0xD800)*0x400+c2-0xDC00+0x10000);
                            c2 = null; continue;
                        }
                    }
                }
                dst(c1);
            }
            if (c2 !== null) dst(c2);
        };

        /**
         * Converts UTF8 code points to UTF16 characters.
         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point
         *  respectively `null` if there are no more code points left or a single numeric code point.
         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.
         * @throws {RangeError} If a code point is out of range
         */
        utfx.UTF8toUTF16 = function(src, dst) {
            var cp = null;
            if (typeof src === 'number')
                cp = src, src = function() { return null; };
            while (cp !== null || (cp = src()) !== null) {
                if (cp <= 0xFFFF)
                    dst(cp);
                else
                    cp -= 0x10000,
                    dst((cp>>10)+0xD800),
                    dst((cp%0x400)+0xDC00);
                cp = null;
            }
        };

        /**
         * Converts and encodes UTF16 characters to UTF8 bytes.
         * @param {!function():number|null} src Characters source as a function returning the next char code respectively `null`
         *  if there are no more characters left.
         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.
         */
        utfx.encodeUTF16toUTF8 = function(src, dst) {
            utfx.UTF16toUTF8(src, function(cp) {
                utfx.encodeUTF8(cp, dst);
            });
        };

        /**
         * Decodes and converts UTF8 bytes to UTF16 characters.
         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there
         *  are no more bytes left.
         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.
         * @throws {RangeError} If a starting byte is invalid in UTF8
         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the remaining bytes.
         */
        utfx.decodeUTF8toUTF16 = function(src, dst) {
            utfx.decodeUTF8(src, function(cp) {
                utfx.UTF8toUTF16(cp, dst);
            });
        };

        /**
         * Calculates the byte length of an UTF8 code point.
         * @param {number} cp UTF8 code point
         * @returns {number} Byte length
         */
        utfx.calculateCodePoint = function(cp) {
            return (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;
        };

        /**
         * Calculates the number of UTF8 bytes required to store UTF8 code points.
         * @param {(!function():number|null)} src Code points source as a function returning the next code point respectively
         *  `null` if there are no more code points left.
         * @returns {number} The number of UTF8 bytes required
         */
        utfx.calculateUTF8 = function(src) {
            var cp, l=0;
            while ((cp = src()) !== null)
                l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;
            return l;
        };

        /**
         * Calculates the number of UTF8 code points respectively UTF8 bytes required to store UTF16 char codes.
         * @param {(!function():number|null)} src Characters source as a function returning the next char code respectively
         *  `null` if there are no more characters left.
         * @returns {!Array.<number>} The number of UTF8 code points at index 0 and the number of UTF8 bytes required at index 1.
         */
        utfx.calculateUTF16asUTF8 = function(src) {
            var n=0, l=0;
            utfx.UTF16toUTF8(src, function(cp) {
                ++n; l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;
            });
            return [n,l];
        };

        return utfx;
    }();

    // encodings/utf8

    /**
     * Encodes this ByteBuffer's contents between {@link ByteBuffer#offset} and {@link ByteBuffer#limit} to an UTF8 encoded
     *  string.
     * @returns {string} Hex encoded string
     * @throws {RangeError} If `offset > limit`
     * @expose
     */
    ByteBufferPrototype.toUTF8 = function(begin, end) {
        if (typeof begin === 'undefined') begin = this.offset;
        if (typeof end === 'undefined') end = this.limit;
        if (!this.noAssert) {
            if (typeof begin !== 'number' || begin % 1 !== 0)
                throw TypeError("Illegal begin: Not an integer");
            begin >>>= 0;
            if (typeof end !== 'number' || end % 1 !== 0)
                throw TypeError("Illegal end: Not an integer");
            end >>>= 0;
            if (begin < 0 || begin > end || end > this.buffer.length)
                throw RangeError("Illegal range: 0 <= "+begin+" <= "+end+" <= "+this.buffer.length);
        }
        return this.buffer.toString("utf8", begin, end);
    };

    /**
     * Decodes an UTF8 encoded string to a ByteBuffer.
     * @param {string} str String to decode
     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to
     *  {@link ByteBuffer.DEFAULT_ENDIAN}.
     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to
     *  {@link ByteBuffer.DEFAULT_NOASSERT}.
     * @returns {!ByteBuffer} ByteBuffer
     * @expose
     */
    ByteBuffer.fromUTF8 = function(str, littleEndian, noAssert) {
        if (!noAssert)
            if (typeof str !== 'string')
                throw TypeError("Illegal str: Not a string");
        var bb = new ByteBuffer(0, littleEndian, noAssert);
        bb.buffer = new Buffer(str, "utf8");
        bb.limit = bb.buffer.length;
        return bb;
    };


    /**
     * node-memcpy. This is an optional binding dependency and may not be present.
     * @function
     * @param {!(Buffer|ArrayBuffer|Uint8Array)} target Destination
     * @param {number|!(Buffer|ArrayBuffer)} targetStart Destination start, defaults to 0.
     * @param {(!(Buffer|ArrayBuffer|Uint8Array)|number)=} source Source
     * @param {number=} sourceStart Source start, defaults to 0.
     * @param {number=} sourceEnd Source end, defaults to capacity.
     * @returns {number} Number of bytes copied
     * @throws {Error} If any index is out of bounds
     * @expose
     */
    ByteBuffer.memcpy = memcpy;

    return ByteBuffer;

})();


/***/ }),

/***/ "./node_modules/code-point-at/index.js":
/*!*********************************************!*\
  !*** ./node_modules/code-point-at/index.js ***!
  \*********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 3:0-14 */
/***/ ((module) => {

"use strict";
/* eslint-disable babel/new-cap, xo/throw-new-error */

module.exports = function (str, pos) {
	if (str === null || str === undefined) {
		throw TypeError();
	}

	str = String(str);

	var size = str.length;
	var i = pos ? Number(pos) : 0;

	if (Number.isNaN(i)) {
		i = 0;
	}

	if (i < 0 || i >= size) {
		return undefined;
	}

	var first = str.charCodeAt(i);

	if (first >= 0xD800 && first <= 0xDBFF && size > i + 1) {
		var second = str.charCodeAt(i + 1);

		if (second >= 0xDC00 && second <= 0xDFFF) {
			return ((first - 0xD800) * 0x400) + second - 0xDC00 + 0x10000;
		}
	}

	return first;
};


/***/ }),

/***/ "./node_modules/concat-map/index.js":
/*!******************************************!*\
  !*** ./node_modules/concat-map/index.js ***!
  \******************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 1:0-14 */
/***/ ((module) => {

module.exports = function (xs, fn) {
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        var x = fn(xs[i], i);
        if (isArray(x)) res.push.apply(res, x);
        else res.push(x);
    }
    return res;
};

var isArray = Array.isArray || function (xs) {
    return Object.prototype.toString.call(xs) === '[object Array]';
};


/***/ }),

/***/ "./node_modules/console-control-strings/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/console-control-strings/index.js ***!
  \*******************************************************/
/*! default exports */
/*! export back [provided] [no usage info] [missing usage info prevents renaming] */
/*! export beep [provided] [no usage info] [missing usage info prevents renaming] */
/*! export color [provided] [no usage info] [missing usage info prevents renaming] */
/*! export down [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eraseData [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eraseLine [provided] [no usage info] [missing usage info prevents renaming] */
/*! export forward [provided] [no usage info] [missing usage info prevents renaming] */
/*! export goto [provided] [no usage info] [missing usage info prevents renaming] */
/*! export gotoSOL [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hideCursor [provided] [no usage info] [missing usage info prevents renaming] */
/*! export horizontalAbsolute [provided] [no usage info] [missing usage info prevents renaming] */
/*! export nextLine [provided] [no usage info] [missing usage info prevents renaming] */
/*! export previousLine [provided] [no usage info] [missing usage info prevents renaming] */
/*! export showCursor [provided] [no usage info] [missing usage info prevents renaming] */
/*! export up [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__ */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


// These tables borrowed from `ansi`

var prefix = '\x1b['

exports.up = function up (num) {
  return prefix + (num || '') + 'A'
}

exports.down = function down (num) {
  return prefix + (num || '') + 'B'
}

exports.forward = function forward (num) {
  return prefix + (num || '') + 'C'
}

exports.back = function back (num) {
  return prefix + (num || '') + 'D'
}

exports.nextLine = function nextLine (num) {
  return prefix + (num || '') + 'E'
}

exports.previousLine = function previousLine (num) {
  return prefix + (num || '') + 'F'
}

exports.horizontalAbsolute = function horizontalAbsolute (num) {
  if (num == null) throw new Error('horizontalAboslute requires a column to position to')
  return prefix + num + 'G'
}

exports.eraseData = function eraseData () {
  return prefix + 'J'
}

exports.eraseLine = function eraseLine () {
  return prefix + 'K'
}

exports.goto = function (x, y) {
  return prefix + y + ';' + x + 'H'
}

exports.gotoSOL = function () {
  return '\r'
}

exports.beep = function () {
  return '\x07'
}

exports.hideCursor = function hideCursor () {
  return prefix + '?25l'
}

exports.showCursor = function showCursor () {
  return prefix + '?25h'
}

var colors = {
  reset: 0,
// styles
  bold: 1,
  italic: 3,
  underline: 4,
  inverse: 7,
// resets
  stopBold: 22,
  stopItalic: 23,
  stopUnderline: 24,
  stopInverse: 27,
// colors
  white: 37,
  black: 30,
  blue: 34,
  cyan: 36,
  green: 32,
  magenta: 35,
  red: 31,
  yellow: 33,
  bgWhite: 47,
  bgBlack: 40,
  bgBlue: 44,
  bgCyan: 46,
  bgGreen: 42,
  bgMagenta: 45,
  bgRed: 41,
  bgYellow: 43,

  grey: 90,
  brightBlack: 90,
  brightRed: 91,
  brightGreen: 92,
  brightYellow: 93,
  brightBlue: 94,
  brightMagenta: 95,
  brightCyan: 96,
  brightWhite: 97,

  bgGrey: 100,
  bgBrightBlack: 100,
  bgBrightRed: 101,
  bgBrightGreen: 102,
  bgBrightYellow: 103,
  bgBrightBlue: 104,
  bgBrightMagenta: 105,
  bgBrightCyan: 106,
  bgBrightWhite: 107
}

exports.color = function color (colorWith) {
  if (arguments.length !== 1 || !Array.isArray(colorWith)) {
    colorWith = Array.prototype.slice.call(arguments)
  }
  return prefix + colorWith.map(colorNameToCode).join(';') + 'm'
}

function colorNameToCode (color) {
  if (colors[color] != null) return colors[color]
  throw new Error('Unknown color or style name: ' + color)
}


/***/ }),

/***/ "./node_modules/core-util-is/lib/util.js":
/*!***********************************************!*\
  !*** ./node_modules/core-util-is/lib/util.js ***!
  \***********************************************/
/*! default exports */
/*! export isArray [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isBoolean [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isDate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isFunction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isNull [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isNullOrUndefined [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isNumber [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isObject [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isPrimitive [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isRegExp [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isString [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isSymbol [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isUndefined [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__ */
/***/ ((__unused_webpack_module, exports) => {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


/***/ }),

/***/ "./node_modules/delegates/index.js":
/*!*****************************************!*\
  !*** ./node_modules/delegates/index.js ***!
  \*****************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 6:0-14 */
/***/ ((module) => {


/**
 * Expose `Delegator`.
 */

module.exports = Delegator;

/**
 * Initialize a delegator.
 *
 * @param {Object} proto
 * @param {String} target
 * @api public
 */

function Delegator(proto, target) {
  if (!(this instanceof Delegator)) return new Delegator(proto, target);
  this.proto = proto;
  this.target = target;
  this.methods = [];
  this.getters = [];
  this.setters = [];
  this.fluents = [];
}

/**
 * Delegate method `name`.
 *
 * @param {String} name
 * @return {Delegator} self
 * @api public
 */

Delegator.prototype.method = function(name){
  var proto = this.proto;
  var target = this.target;
  this.methods.push(name);

  proto[name] = function(){
    return this[target][name].apply(this[target], arguments);
  };

  return this;
};

/**
 * Delegator accessor `name`.
 *
 * @param {String} name
 * @return {Delegator} self
 * @api public
 */

Delegator.prototype.access = function(name){
  return this.getter(name).setter(name);
};

/**
 * Delegator getter `name`.
 *
 * @param {String} name
 * @return {Delegator} self
 * @api public
 */

Delegator.prototype.getter = function(name){
  var proto = this.proto;
  var target = this.target;
  this.getters.push(name);

  proto.__defineGetter__(name, function(){
    return this[target][name];
  });

  return this;
};

/**
 * Delegator setter `name`.
 *
 * @param {String} name
 * @return {Delegator} self
 * @api public
 */

Delegator.prototype.setter = function(name){
  var proto = this.proto;
  var target = this.target;
  this.setters.push(name);

  proto.__defineSetter__(name, function(val){
    return this[target][name] = val;
  });

  return this;
};

/**
 * Delegator fluent accessor
 *
 * @param {String} name
 * @return {Delegator} self
 * @api public
 */

Delegator.prototype.fluent = function (name) {
  var proto = this.proto;
  var target = this.target;
  this.fluents.push(name);

  proto[name] = function(val){
    if ('undefined' != typeof val) {
      this[target][name] = val;
      return this;
    } else {
      return this[target][name];
    }
  };

  return this;
};


/***/ }),

/***/ "./node_modules/detect-libc/lib/detect-libc.js":
/*!*****************************************************!*\
  !*** ./node_modules/detect-libc/lib/detect-libc.js ***!
  \*****************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_require__, module */
/*! CommonJS bailout: module.exports is used directly at 85:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var platform = __webpack_require__(/*! os */ "os").platform();
var spawnSync = __webpack_require__(/*! child_process */ "child_process").spawnSync;
var readdirSync = __webpack_require__(/*! fs */ "fs").readdirSync;

var GLIBC = 'glibc';
var MUSL = 'musl';

var spawnOptions = {
  encoding: 'utf8',
  env: process.env
};

if (!spawnSync) {
  spawnSync = function () {
    return { status: 126, stdout: '', stderr: '' };
  };
}

function contains (needle) {
  return function (haystack) {
    return haystack.indexOf(needle) !== -1;
  };
}

function versionFromMuslLdd (out) {
  return out.split(/[\r\n]+/)[1].trim().split(/\s/)[1];
}

function safeReaddirSync (path) {
  try {
    return readdirSync(path);
  } catch (e) {}
  return [];
}

var family = '';
var version = '';
var method = '';

if (platform === 'linux') {
  // Try getconf
  var glibc = spawnSync('getconf', ['GNU_LIBC_VERSION'], spawnOptions);
  if (glibc.status === 0) {
    family = GLIBC;
    version = glibc.stdout.trim().split(' ')[1];
    method = 'getconf';
  } else {
    // Try ldd
    var ldd = spawnSync('ldd', ['--version'], spawnOptions);
    if (ldd.status === 0 && ldd.stdout.indexOf(MUSL) !== -1) {
      family = MUSL;
      version = versionFromMuslLdd(ldd.stdout);
      method = 'ldd';
    } else if (ldd.status === 1 && ldd.stderr.indexOf(MUSL) !== -1) {
      family = MUSL;
      version = versionFromMuslLdd(ldd.stderr);
      method = 'ldd';
    } else {
      // Try filesystem (family only)
      var lib = safeReaddirSync('/lib');
      if (lib.some(contains('-linux-gnu'))) {
        family = GLIBC;
        method = 'filesystem';
      } else if (lib.some(contains('libc.musl-'))) {
        family = MUSL;
        method = 'filesystem';
      } else if (lib.some(contains('ld-musl-'))) {
        family = MUSL;
        method = 'filesystem';
      } else {
        var usrSbin = safeReaddirSync('/usr/sbin');
        if (usrSbin.some(contains('glibc'))) {
          family = GLIBC;
          method = 'filesystem';
        }
      }
    }
  }
}

var isNonGlibcLinux = (family !== '' && family !== GLIBC);

module.exports = {
  GLIBC: GLIBC,
  MUSL: MUSL,
  family: family,
  version: version,
  method: method,
  isNonGlibcLinux: isNonGlibcLinux
};


/***/ }),

/***/ "./node_modules/dexie/dist/dexie.mjs":
/*!*******************************************!*\
  !*** ./node_modules/dexie/dist/dexie.mjs ***!
  \*******************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/*
 * Dexie.js - a minimalistic wrapper for IndexedDB
 * ===============================================
 *
 * By David Fahlander, david.fahlander@gmail.com
 *
 * Version 3.0.2, Fri Jul 31 2020
 *
 * http://dexie.org
 *
 * Apache License Version 2.0, January 2004, http://www.apache.org/licenses/
 */
 
var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};










function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}

var keys = Object.keys;
var isArray = Array.isArray;
var _global = typeof self !== 'undefined' ? self :
    typeof window !== 'undefined' ? window :
        global;
if (typeof Promise !== 'undefined' && !_global.Promise) {
    _global.Promise = Promise;
}
function extend(obj, extension) {
    if (typeof extension !== 'object')
        return obj;
    keys(extension).forEach(function (key) {
        obj[key] = extension[key];
    });
    return obj;
}
var getProto = Object.getPrototypeOf;
var _hasOwn = {}.hasOwnProperty;
function hasOwn(obj, prop) {
    return _hasOwn.call(obj, prop);
}
function props(proto, extension) {
    if (typeof extension === 'function')
        extension = extension(getProto(proto));
    keys(extension).forEach(function (key) {
        setProp(proto, key, extension[key]);
    });
}
var defineProperty = Object.defineProperty;
function setProp(obj, prop, functionOrGetSet, options) {
    defineProperty(obj, prop, extend(functionOrGetSet && hasOwn(functionOrGetSet, "get") && typeof functionOrGetSet.get === 'function' ?
        { get: functionOrGetSet.get, set: functionOrGetSet.set, configurable: true } :
        { value: functionOrGetSet, configurable: true, writable: true }, options));
}
function derive(Child) {
    return {
        from: function (Parent) {
            Child.prototype = Object.create(Parent.prototype);
            setProp(Child.prototype, "constructor", Child);
            return {
                extend: props.bind(null, Child.prototype)
            };
        }
    };
}
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
function getPropertyDescriptor(obj, prop) {
    var pd = getOwnPropertyDescriptor(obj, prop);
    var proto;
    return pd || (proto = getProto(obj)) && getPropertyDescriptor(proto, prop);
}
var _slice = [].slice;
function slice(args, start, end) {
    return _slice.call(args, start, end);
}
function override(origFunc, overridedFactory) {
    return overridedFactory(origFunc);
}
function assert(b) {
    if (!b)
        throw new Error("Assertion Failed");
}
function asap(fn) {
    if (_global.setImmediate)
        setImmediate(fn);
    else
        setTimeout(fn, 0);
}

function arrayToObject(array, extractor) {
    return array.reduce(function (result, item, i) {
        var nameAndValue = extractor(item, i);
        if (nameAndValue)
            result[nameAndValue[0]] = nameAndValue[1];
        return result;
    }, {});
}

function tryCatch(fn, onerror, args) {
    try {
        fn.apply(null, args);
    }
    catch (ex) {
        onerror && onerror(ex);
    }
}
function getByKeyPath(obj, keyPath) {
    if (hasOwn(obj, keyPath))
        return obj[keyPath];
    if (!keyPath)
        return obj;
    if (typeof keyPath !== 'string') {
        var rv = [];
        for (var i = 0, l = keyPath.length; i < l; ++i) {
            var val = getByKeyPath(obj, keyPath[i]);
            rv.push(val);
        }
        return rv;
    }
    var period = keyPath.indexOf('.');
    if (period !== -1) {
        var innerObj = obj[keyPath.substr(0, period)];
        return innerObj === undefined ? undefined : getByKeyPath(innerObj, keyPath.substr(period + 1));
    }
    return undefined;
}
function setByKeyPath(obj, keyPath, value) {
    if (!obj || keyPath === undefined)
        return;
    if ('isFrozen' in Object && Object.isFrozen(obj))
        return;
    if (typeof keyPath !== 'string' && 'length' in keyPath) {
        assert(typeof value !== 'string' && 'length' in value);
        for (var i = 0, l = keyPath.length; i < l; ++i) {
            setByKeyPath(obj, keyPath[i], value[i]);
        }
    }
    else {
        var period = keyPath.indexOf('.');
        if (period !== -1) {
            var currentKeyPath = keyPath.substr(0, period);
            var remainingKeyPath = keyPath.substr(period + 1);
            if (remainingKeyPath === "")
                if (value === undefined) {
                    if (isArray(obj) && !isNaN(parseInt(currentKeyPath)))
                        obj.splice(currentKeyPath, 1);
                    else
                        delete obj[currentKeyPath];
                }
                else
                    obj[currentKeyPath] = value;
            else {
                var innerObj = obj[currentKeyPath];
                if (!innerObj)
                    innerObj = (obj[currentKeyPath] = {});
                setByKeyPath(innerObj, remainingKeyPath, value);
            }
        }
        else {
            if (value === undefined) {
                if (isArray(obj) && !isNaN(parseInt(keyPath)))
                    obj.splice(keyPath, 1);
                else
                    delete obj[keyPath];
            }
            else
                obj[keyPath] = value;
        }
    }
}
function delByKeyPath(obj, keyPath) {
    if (typeof keyPath === 'string')
        setByKeyPath(obj, keyPath, undefined);
    else if ('length' in keyPath)
        [].map.call(keyPath, function (kp) {
            setByKeyPath(obj, kp, undefined);
        });
}
function shallowClone(obj) {
    var rv = {};
    for (var m in obj) {
        if (hasOwn(obj, m))
            rv[m] = obj[m];
    }
    return rv;
}
var concat = [].concat;
function flatten(a) {
    return concat.apply([], a);
}
var intrinsicTypeNames = "Boolean,String,Date,RegExp,Blob,File,FileList,ArrayBuffer,DataView,Uint8ClampedArray,ImageData,Map,Set"
    .split(',').concat(flatten([8, 16, 32, 64].map(function (num) { return ["Int", "Uint", "Float"].map(function (t) { return t + num + "Array"; }); }))).filter(function (t) { return _global[t]; });
var intrinsicTypes = intrinsicTypeNames.map(function (t) { return _global[t]; });
var intrinsicTypeNameSet = arrayToObject(intrinsicTypeNames, function (x) { return [x, true]; });
function deepClone(any) {
    if (!any || typeof any !== 'object')
        return any;
    var rv;
    if (isArray(any)) {
        rv = [];
        for (var i = 0, l = any.length; i < l; ++i) {
            rv.push(deepClone(any[i]));
        }
    }
    else if (intrinsicTypes.indexOf(any.constructor) >= 0) {
        rv = any;
    }
    else {
        rv = any.constructor ? Object.create(any.constructor.prototype) : {};
        for (var prop in any) {
            if (hasOwn(any, prop)) {
                rv[prop] = deepClone(any[prop]);
            }
        }
    }
    return rv;
}
var toString = {}.toString;
function toStringTag(o) {
    return toString.call(o).slice(8, -1);
}
var getValueOf = function (val, type) {
    return type === "Array" ? '' + val.map(function (v) { return getValueOf(v, toStringTag(v)); }) :
        type === "ArrayBuffer" ? '' + new Uint8Array(val) :
            type === "Date" ? val.getTime() :
                ArrayBuffer.isView(val) ? '' + new Uint8Array(val.buffer) :
                    val;
};
function getObjectDiff(a, b, rv, prfx) {
    rv = rv || {};
    prfx = prfx || '';
    keys(a).forEach(function (prop) {
        if (!hasOwn(b, prop))
            rv[prfx + prop] = undefined;
        else {
            var ap = a[prop], bp = b[prop];
            if (typeof ap === 'object' && typeof bp === 'object' && ap && bp) {
                var apTypeName = toStringTag(ap);
                var bpTypeName = toStringTag(bp);
                if (apTypeName === bpTypeName) {
                    if (intrinsicTypeNameSet[apTypeName]) {
                        if (getValueOf(ap, apTypeName) !== getValueOf(bp, bpTypeName)) {
                            rv[prfx + prop] = b[prop];
                        }
                    }
                    else {
                        getObjectDiff(ap, bp, rv, prfx + prop + ".");
                    }
                }
                else {
                    rv[prfx + prop] = b[prop];
                }
            }
            else if (ap !== bp)
                rv[prfx + prop] = b[prop];
        }
    });
    keys(b).forEach(function (prop) {
        if (!hasOwn(a, prop)) {
            rv[prfx + prop] = b[prop];
        }
    });
    return rv;
}
var iteratorSymbol = typeof Symbol !== 'undefined' && Symbol.iterator;
var getIteratorOf = iteratorSymbol ? function (x) {
    var i;
    return x != null && (i = x[iteratorSymbol]) && i.apply(x);
} : function () { return null; };
var NO_CHAR_ARRAY = {};
function getArrayOf(arrayLike) {
    var i, a, x, it;
    if (arguments.length === 1) {
        if (isArray(arrayLike))
            return arrayLike.slice();
        if (this === NO_CHAR_ARRAY && typeof arrayLike === 'string')
            return [arrayLike];
        if ((it = getIteratorOf(arrayLike))) {
            a = [];
            while (x = it.next(), !x.done)
                a.push(x.value);
            return a;
        }
        if (arrayLike == null)
            return [arrayLike];
        i = arrayLike.length;
        if (typeof i === 'number') {
            a = new Array(i);
            while (i--)
                a[i] = arrayLike[i];
            return a;
        }
        return [arrayLike];
    }
    i = arguments.length;
    a = new Array(i);
    while (i--)
        a[i] = arguments[i];
    return a;
}
var isAsyncFunction = typeof Symbol !== 'undefined'
    ? function (fn) { return fn[Symbol.toStringTag] === 'AsyncFunction'; }
    : function () { return false; };

var debug = typeof location !== 'undefined' &&
    /^(http|https):\/\/(localhost|127\.0\.0\.1)/.test(location.href);
function setDebug(value, filter) {
    debug = value;
    libraryFilter = filter;
}
var libraryFilter = function () { return true; };
var NEEDS_THROW_FOR_STACK = !new Error("").stack;
function getErrorWithStack() {
    if (NEEDS_THROW_FOR_STACK)
        try {
            throw new Error();
        }
        catch (e) {
            return e;
        }
    return new Error();
}
function prettyStack(exception, numIgnoredFrames) {
    var stack = exception.stack;
    if (!stack)
        return "";
    numIgnoredFrames = (numIgnoredFrames || 0);
    if (stack.indexOf(exception.name) === 0)
        numIgnoredFrames += (exception.name + exception.message).split('\n').length;
    return stack.split('\n')
        .slice(numIgnoredFrames)
        .filter(libraryFilter)
        .map(function (frame) { return "\n" + frame; })
        .join('');
}

var dexieErrorNames = [
    'Modify',
    'Bulk',
    'OpenFailed',
    'VersionChange',
    'Schema',
    'Upgrade',
    'InvalidTable',
    'MissingAPI',
    'NoSuchDatabase',
    'InvalidArgument',
    'SubTransaction',
    'Unsupported',
    'Internal',
    'DatabaseClosed',
    'PrematureCommit',
    'ForeignAwait'
];
var idbDomErrorNames = [
    'Unknown',
    'Constraint',
    'Data',
    'TransactionInactive',
    'ReadOnly',
    'Version',
    'NotFound',
    'InvalidState',
    'InvalidAccess',
    'Abort',
    'Timeout',
    'QuotaExceeded',
    'Syntax',
    'DataClone'
];
var errorList = dexieErrorNames.concat(idbDomErrorNames);
var defaultTexts = {
    VersionChanged: "Database version changed by other database connection",
    DatabaseClosed: "Database has been closed",
    Abort: "Transaction aborted",
    TransactionInactive: "Transaction has already completed or failed"
};
function DexieError(name, msg) {
    this._e = getErrorWithStack();
    this.name = name;
    this.message = msg;
}
derive(DexieError).from(Error).extend({
    stack: {
        get: function () {
            return this._stack ||
                (this._stack = this.name + ": " + this.message + prettyStack(this._e, 2));
        }
    },
    toString: function () { return this.name + ": " + this.message; }
});
function getMultiErrorMessage(msg, failures) {
    return msg + ". Errors: " + Object.keys(failures)
        .map(function (key) { return failures[key].toString(); })
        .filter(function (v, i, s) { return s.indexOf(v) === i; })
        .join('\n');
}
function ModifyError(msg, failures, successCount, failedKeys) {
    this._e = getErrorWithStack();
    this.failures = failures;
    this.failedKeys = failedKeys;
    this.successCount = successCount;
    this.message = getMultiErrorMessage(msg, failures);
}
derive(ModifyError).from(DexieError);
function BulkError(msg, failures) {
    this._e = getErrorWithStack();
    this.name = "BulkError";
    this.failures = failures;
    this.message = getMultiErrorMessage(msg, failures);
}
derive(BulkError).from(DexieError);
var errnames = errorList.reduce(function (obj, name) { return (obj[name] = name + "Error", obj); }, {});
var BaseException = DexieError;
var exceptions = errorList.reduce(function (obj, name) {
    var fullName = name + "Error";
    function DexieError(msgOrInner, inner) {
        this._e = getErrorWithStack();
        this.name = fullName;
        if (!msgOrInner) {
            this.message = defaultTexts[name] || fullName;
            this.inner = null;
        }
        else if (typeof msgOrInner === 'string') {
            this.message = "" + msgOrInner + (!inner ? '' : '\n ' + inner);
            this.inner = inner || null;
        }
        else if (typeof msgOrInner === 'object') {
            this.message = msgOrInner.name + " " + msgOrInner.message;
            this.inner = msgOrInner;
        }
    }
    derive(DexieError).from(BaseException);
    obj[name] = DexieError;
    return obj;
}, {});
exceptions.Syntax = SyntaxError;
exceptions.Type = TypeError;
exceptions.Range = RangeError;
var exceptionMap = idbDomErrorNames.reduce(function (obj, name) {
    obj[name + "Error"] = exceptions[name];
    return obj;
}, {});
function mapError(domError, message) {
    if (!domError || domError instanceof DexieError || domError instanceof TypeError || domError instanceof SyntaxError || !domError.name || !exceptionMap[domError.name])
        return domError;
    var rv = new exceptionMap[domError.name](message || domError.message, domError);
    if ("stack" in domError) {
        setProp(rv, "stack", { get: function () {
                return this.inner.stack;
            } });
    }
    return rv;
}
var fullNameExceptions = errorList.reduce(function (obj, name) {
    if (["Syntax", "Type", "Range"].indexOf(name) === -1)
        obj[name + "Error"] = exceptions[name];
    return obj;
}, {});
fullNameExceptions.ModifyError = ModifyError;
fullNameExceptions.DexieError = DexieError;
fullNameExceptions.BulkError = BulkError;

function nop() { }
function mirror(val) { return val; }
function pureFunctionChain(f1, f2) {
    if (f1 == null || f1 === mirror)
        return f2;
    return function (val) {
        return f2(f1(val));
    };
}
function callBoth(on1, on2) {
    return function () {
        on1.apply(this, arguments);
        on2.apply(this, arguments);
    };
}
function hookCreatingChain(f1, f2) {
    if (f1 === nop)
        return f2;
    return function () {
        var res = f1.apply(this, arguments);
        if (res !== undefined)
            arguments[0] = res;
        var onsuccess = this.onsuccess,
        onerror = this.onerror;
        this.onsuccess = null;
        this.onerror = null;
        var res2 = f2.apply(this, arguments);
        if (onsuccess)
            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;
        if (onerror)
            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;
        return res2 !== undefined ? res2 : res;
    };
}
function hookDeletingChain(f1, f2) {
    if (f1 === nop)
        return f2;
    return function () {
        f1.apply(this, arguments);
        var onsuccess = this.onsuccess,
        onerror = this.onerror;
        this.onsuccess = this.onerror = null;
        f2.apply(this, arguments);
        if (onsuccess)
            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;
        if (onerror)
            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;
    };
}
function hookUpdatingChain(f1, f2) {
    if (f1 === nop)
        return f2;
    return function (modifications) {
        var res = f1.apply(this, arguments);
        extend(modifications, res);
        var onsuccess = this.onsuccess,
        onerror = this.onerror;
        this.onsuccess = null;
        this.onerror = null;
        var res2 = f2.apply(this, arguments);
        if (onsuccess)
            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;
        if (onerror)
            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;
        return res === undefined ?
            (res2 === undefined ? undefined : res2) :
            (extend(res, res2));
    };
}
function reverseStoppableEventChain(f1, f2) {
    if (f1 === nop)
        return f2;
    return function () {
        if (f2.apply(this, arguments) === false)
            return false;
        return f1.apply(this, arguments);
    };
}

function promisableChain(f1, f2) {
    if (f1 === nop)
        return f2;
    return function () {
        var res = f1.apply(this, arguments);
        if (res && typeof res.then === 'function') {
            var thiz = this, i = arguments.length, args = new Array(i);
            while (i--)
                args[i] = arguments[i];
            return res.then(function () {
                return f2.apply(thiz, args);
            });
        }
        return f2.apply(this, arguments);
    };
}

var INTERNAL = {};
var LONG_STACKS_CLIP_LIMIT = 100;
var MAX_LONG_STACKS = 20;
var ZONE_ECHO_LIMIT = 100;
var _a = typeof Promise === 'undefined' ?
    [] :
    (function () {
        var globalP = Promise.resolve();
        if (typeof crypto === 'undefined' || !crypto.subtle)
            return [globalP, globalP.__proto__, globalP];
        var nativeP = crypto.subtle.digest("SHA-512", new Uint8Array([0]));
        return [
            nativeP,
            nativeP.__proto__,
            globalP
        ];
    })();
var resolvedNativePromise = _a[0];
var nativePromiseProto = _a[1];
var resolvedGlobalPromise = _a[2];
var nativePromiseThen = nativePromiseProto && nativePromiseProto.then;
var NativePromise = resolvedNativePromise && resolvedNativePromise.constructor;
var patchGlobalPromise = !!resolvedGlobalPromise;
var stack_being_generated = false;
var schedulePhysicalTick = resolvedGlobalPromise ?
    function () { resolvedGlobalPromise.then(physicalTick); }
    :
        _global.setImmediate ?
            setImmediate.bind(null, physicalTick) :
            _global.MutationObserver ?
                function () {
                    var hiddenDiv = document.createElement("div");
                    (new MutationObserver(function () {
                        physicalTick();
                        hiddenDiv = null;
                    })).observe(hiddenDiv, { attributes: true });
                    hiddenDiv.setAttribute('i', '1');
                } :
                function () { setTimeout(physicalTick, 0); };
var asap$1 = function (callback, args) {
    microtickQueue.push([callback, args]);
    if (needsNewPhysicalTick) {
        schedulePhysicalTick();
        needsNewPhysicalTick = false;
    }
};
var isOutsideMicroTick = true;
var needsNewPhysicalTick = true;
var unhandledErrors = [];
var rejectingErrors = [];
var currentFulfiller = null;
var rejectionMapper = mirror;
var globalPSD = {
    id: 'global',
    global: true,
    ref: 0,
    unhandleds: [],
    onunhandled: globalError,
    pgp: false,
    env: {},
    finalize: function () {
        this.unhandleds.forEach(function (uh) {
            try {
                globalError(uh[0], uh[1]);
            }
            catch (e) { }
        });
    }
};
var PSD = globalPSD;
var microtickQueue = [];
var numScheduledCalls = 0;
var tickFinalizers = [];
function DexiePromise(fn) {
    if (typeof this !== 'object')
        throw new TypeError('Promises must be constructed via new');
    this._listeners = [];
    this.onuncatched = nop;
    this._lib = false;
    var psd = (this._PSD = PSD);
    if (debug) {
        this._stackHolder = getErrorWithStack();
        this._prev = null;
        this._numPrev = 0;
    }
    if (typeof fn !== 'function') {
        if (fn !== INTERNAL)
            throw new TypeError('Not a function');
        this._state = arguments[1];
        this._value = arguments[2];
        if (this._state === false)
            handleRejection(this, this._value);
        return;
    }
    this._state = null;
    this._value = null;
    ++psd.ref;
    executePromiseTask(this, fn);
}
var thenProp = {
    get: function () {
        var psd = PSD, microTaskId = totalEchoes;
        function then(onFulfilled, onRejected) {
            var _this = this;
            var possibleAwait = !psd.global && (psd !== PSD || microTaskId !== totalEchoes);
            if (possibleAwait)
                decrementExpectedAwaits();
            var rv = new DexiePromise(function (resolve, reject) {
                propagateToListener(_this, new Listener(nativeAwaitCompatibleWrap(onFulfilled, psd, possibleAwait), nativeAwaitCompatibleWrap(onRejected, psd, possibleAwait), resolve, reject, psd));
            });
            debug && linkToPreviousPromise(rv, this);
            return rv;
        }
        then.prototype = INTERNAL;
        return then;
    },
    set: function (value) {
        setProp(this, 'then', value && value.prototype === INTERNAL ?
            thenProp :
            {
                get: function () {
                    return value;
                },
                set: thenProp.set
            });
    }
};
props(DexiePromise.prototype, {
    then: thenProp,
    _then: function (onFulfilled, onRejected) {
        propagateToListener(this, new Listener(null, null, onFulfilled, onRejected, PSD));
    },
    catch: function (onRejected) {
        if (arguments.length === 1)
            return this.then(null, onRejected);
        var type = arguments[0], handler = arguments[1];
        return typeof type === 'function' ? this.then(null, function (err) {
            return err instanceof type ? handler(err) : PromiseReject(err);
        })
            : this.then(null, function (err) {
                return err && err.name === type ? handler(err) : PromiseReject(err);
            });
    },
    finally: function (onFinally) {
        return this.then(function (value) {
            onFinally();
            return value;
        }, function (err) {
            onFinally();
            return PromiseReject(err);
        });
    },
    stack: {
        get: function () {
            if (this._stack)
                return this._stack;
            try {
                stack_being_generated = true;
                var stacks = getStack(this, [], MAX_LONG_STACKS);
                var stack = stacks.join("\nFrom previous: ");
                if (this._state !== null)
                    this._stack = stack;
                return stack;
            }
            finally {
                stack_being_generated = false;
            }
        }
    },
    timeout: function (ms, msg) {
        var _this = this;
        return ms < Infinity ?
            new DexiePromise(function (resolve, reject) {
                var handle = setTimeout(function () { return reject(new exceptions.Timeout(msg)); }, ms);
                _this.then(resolve, reject).finally(clearTimeout.bind(null, handle));
            }) : this;
    }
});
if (typeof Symbol !== 'undefined' && Symbol.toStringTag)
    setProp(DexiePromise.prototype, Symbol.toStringTag, 'Dexie.Promise');
globalPSD.env = snapShot();
function Listener(onFulfilled, onRejected, resolve, reject, zone) {
    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
    this.onRejected = typeof onRejected === 'function' ? onRejected : null;
    this.resolve = resolve;
    this.reject = reject;
    this.psd = zone;
}
props(DexiePromise, {
    all: function () {
        var values = getArrayOf.apply(null, arguments)
            .map(onPossibleParallellAsync);
        return new DexiePromise(function (resolve, reject) {
            if (values.length === 0)
                resolve([]);
            var remaining = values.length;
            values.forEach(function (a, i) { return DexiePromise.resolve(a).then(function (x) {
                values[i] = x;
                if (!--remaining)
                    resolve(values);
            }, reject); });
        });
    },
    resolve: function (value) {
        if (value instanceof DexiePromise)
            return value;
        if (value && typeof value.then === 'function')
            return new DexiePromise(function (resolve, reject) {
                value.then(resolve, reject);
            });
        var rv = new DexiePromise(INTERNAL, true, value);
        linkToPreviousPromise(rv, currentFulfiller);
        return rv;
    },
    reject: PromiseReject,
    race: function () {
        var values = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);
        return new DexiePromise(function (resolve, reject) {
            values.map(function (value) { return DexiePromise.resolve(value).then(resolve, reject); });
        });
    },
    PSD: {
        get: function () { return PSD; },
        set: function (value) { return PSD = value; }
    },
    newPSD: newScope,
    usePSD: usePSD,
    scheduler: {
        get: function () { return asap$1; },
        set: function (value) { asap$1 = value; }
    },
    rejectionMapper: {
        get: function () { return rejectionMapper; },
        set: function (value) { rejectionMapper = value; }
    },
    follow: function (fn, zoneProps) {
        return new DexiePromise(function (resolve, reject) {
            return newScope(function (resolve, reject) {
                var psd = PSD;
                psd.unhandleds = [];
                psd.onunhandled = reject;
                psd.finalize = callBoth(function () {
                    var _this = this;
                    run_at_end_of_this_or_next_physical_tick(function () {
                        _this.unhandleds.length === 0 ? resolve() : reject(_this.unhandleds[0]);
                    });
                }, psd.finalize);
                fn();
            }, zoneProps, resolve, reject);
        });
    }
});
if (NativePromise) {
    if (NativePromise.allSettled)
        setProp(DexiePromise, "allSettled", function () {
            var possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);
            return new DexiePromise(function (resolve) {
                if (possiblePromises.length === 0)
                    resolve([]);
                var remaining = possiblePromises.length;
                var results = new Array(remaining);
                possiblePromises.forEach(function (p, i) { return DexiePromise.resolve(p).then(function (value) { return results[i] = { status: "fulfilled", value: value }; }, function (reason) { return results[i] = { status: "rejected", reason: reason }; })
                    .then(function () { return --remaining || resolve(results); }); });
            });
        });
    if (NativePromise.any && typeof AggregateError !== 'undefined')
        setProp(DexiePromise, "any", function () {
            var possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);
            return new DexiePromise(function (resolve, reject) {
                if (possiblePromises.length === 0)
                    reject(new AggregateError([]));
                var remaining = possiblePromises.length;
                var failures = new Array(remaining);
                possiblePromises.forEach(function (p, i) { return DexiePromise.resolve(p).then(function (value) { return resolve(value); }, function (failure) {
                    failures[i] = failure;
                    if (!--remaining)
                        reject(new AggregateError(failures));
                }); });
            });
        });
}
function executePromiseTask(promise, fn) {
    try {
        fn(function (value) {
            if (promise._state !== null)
                return;
            if (value === promise)
                throw new TypeError('A promise cannot be resolved with itself.');
            var shouldExecuteTick = promise._lib && beginMicroTickScope();
            if (value && typeof value.then === 'function') {
                executePromiseTask(promise, function (resolve, reject) {
                    value instanceof DexiePromise ?
                        value._then(resolve, reject) :
                        value.then(resolve, reject);
                });
            }
            else {
                promise._state = true;
                promise._value = value;
                propagateAllListeners(promise);
            }
            if (shouldExecuteTick)
                endMicroTickScope();
        }, handleRejection.bind(null, promise));
    }
    catch (ex) {
        handleRejection(promise, ex);
    }
}
function handleRejection(promise, reason) {
    rejectingErrors.push(reason);
    if (promise._state !== null)
        return;
    var shouldExecuteTick = promise._lib && beginMicroTickScope();
    reason = rejectionMapper(reason);
    promise._state = false;
    promise._value = reason;
    debug && reason !== null && typeof reason === 'object' && !reason._promise && tryCatch(function () {
        var origProp = getPropertyDescriptor(reason, "stack");
        reason._promise = promise;
        setProp(reason, "stack", {
            get: function () {
                return stack_being_generated ?
                    origProp && (origProp.get ?
                        origProp.get.apply(reason) :
                        origProp.value) :
                    promise.stack;
            }
        });
    });
    addPossiblyUnhandledError(promise);
    propagateAllListeners(promise);
    if (shouldExecuteTick)
        endMicroTickScope();
}
function propagateAllListeners(promise) {
    var listeners = promise._listeners;
    promise._listeners = [];
    for (var i = 0, len = listeners.length; i < len; ++i) {
        propagateToListener(promise, listeners[i]);
    }
    var psd = promise._PSD;
    --psd.ref || psd.finalize();
    if (numScheduledCalls === 0) {
        ++numScheduledCalls;
        asap$1(function () {
            if (--numScheduledCalls === 0)
                finalizePhysicalTick();
        }, []);
    }
}
function propagateToListener(promise, listener) {
    if (promise._state === null) {
        promise._listeners.push(listener);
        return;
    }
    var cb = promise._state ? listener.onFulfilled : listener.onRejected;
    if (cb === null) {
        return (promise._state ? listener.resolve : listener.reject)(promise._value);
    }
    ++listener.psd.ref;
    ++numScheduledCalls;
    asap$1(callListener, [cb, promise, listener]);
}
function callListener(cb, promise, listener) {
    try {
        currentFulfiller = promise;
        var ret, value = promise._value;
        if (promise._state) {
            ret = cb(value);
        }
        else {
            if (rejectingErrors.length)
                rejectingErrors = [];
            ret = cb(value);
            if (rejectingErrors.indexOf(value) === -1)
                markErrorAsHandled(promise);
        }
        listener.resolve(ret);
    }
    catch (e) {
        listener.reject(e);
    }
    finally {
        currentFulfiller = null;
        if (--numScheduledCalls === 0)
            finalizePhysicalTick();
        --listener.psd.ref || listener.psd.finalize();
    }
}
function getStack(promise, stacks, limit) {
    if (stacks.length === limit)
        return stacks;
    var stack = "";
    if (promise._state === false) {
        var failure = promise._value, errorName, message;
        if (failure != null) {
            errorName = failure.name || "Error";
            message = failure.message || failure;
            stack = prettyStack(failure, 0);
        }
        else {
            errorName = failure;
            message = "";
        }
        stacks.push(errorName + (message ? ": " + message : "") + stack);
    }
    if (debug) {
        stack = prettyStack(promise._stackHolder, 2);
        if (stack && stacks.indexOf(stack) === -1)
            stacks.push(stack);
        if (promise._prev)
            getStack(promise._prev, stacks, limit);
    }
    return stacks;
}
function linkToPreviousPromise(promise, prev) {
    var numPrev = prev ? prev._numPrev + 1 : 0;
    if (numPrev < LONG_STACKS_CLIP_LIMIT) {
        promise._prev = prev;
        promise._numPrev = numPrev;
    }
}
function physicalTick() {
    beginMicroTickScope() && endMicroTickScope();
}
function beginMicroTickScope() {
    var wasRootExec = isOutsideMicroTick;
    isOutsideMicroTick = false;
    needsNewPhysicalTick = false;
    return wasRootExec;
}
function endMicroTickScope() {
    var callbacks, i, l;
    do {
        while (microtickQueue.length > 0) {
            callbacks = microtickQueue;
            microtickQueue = [];
            l = callbacks.length;
            for (i = 0; i < l; ++i) {
                var item = callbacks[i];
                item[0].apply(null, item[1]);
            }
        }
    } while (microtickQueue.length > 0);
    isOutsideMicroTick = true;
    needsNewPhysicalTick = true;
}
function finalizePhysicalTick() {
    var unhandledErrs = unhandledErrors;
    unhandledErrors = [];
    unhandledErrs.forEach(function (p) {
        p._PSD.onunhandled.call(null, p._value, p);
    });
    var finalizers = tickFinalizers.slice(0);
    var i = finalizers.length;
    while (i)
        finalizers[--i]();
}
function run_at_end_of_this_or_next_physical_tick(fn) {
    function finalizer() {
        fn();
        tickFinalizers.splice(tickFinalizers.indexOf(finalizer), 1);
    }
    tickFinalizers.push(finalizer);
    ++numScheduledCalls;
    asap$1(function () {
        if (--numScheduledCalls === 0)
            finalizePhysicalTick();
    }, []);
}
function addPossiblyUnhandledError(promise) {
    if (!unhandledErrors.some(function (p) { return p._value === promise._value; }))
        unhandledErrors.push(promise);
}
function markErrorAsHandled(promise) {
    var i = unhandledErrors.length;
    while (i)
        if (unhandledErrors[--i]._value === promise._value) {
            unhandledErrors.splice(i, 1);
            return;
        }
}
function PromiseReject(reason) {
    return new DexiePromise(INTERNAL, false, reason);
}
function wrap(fn, errorCatcher) {
    var psd = PSD;
    return function () {
        var wasRootExec = beginMicroTickScope(), outerScope = PSD;
        try {
            switchToZone(psd, true);
            return fn.apply(this, arguments);
        }
        catch (e) {
            errorCatcher && errorCatcher(e);
        }
        finally {
            switchToZone(outerScope, false);
            if (wasRootExec)
                endMicroTickScope();
        }
    };
}
var task = { awaits: 0, echoes: 0, id: 0 };
var taskCounter = 0;
var zoneStack = [];
var zoneEchoes = 0;
var totalEchoes = 0;
var zone_id_counter = 0;
function newScope(fn, props$$1, a1, a2) {
    var parent = PSD, psd = Object.create(parent);
    psd.parent = parent;
    psd.ref = 0;
    psd.global = false;
    psd.id = ++zone_id_counter;
    var globalEnv = globalPSD.env;
    psd.env = patchGlobalPromise ? {
        Promise: DexiePromise,
        PromiseProp: { value: DexiePromise, configurable: true, writable: true },
        all: DexiePromise.all,
        race: DexiePromise.race,
        allSettled: DexiePromise.allSettled,
        any: DexiePromise.any,
        resolve: DexiePromise.resolve,
        reject: DexiePromise.reject,
        nthen: getPatchedPromiseThen(globalEnv.nthen, psd),
        gthen: getPatchedPromiseThen(globalEnv.gthen, psd)
    } : {};
    if (props$$1)
        extend(psd, props$$1);
    ++parent.ref;
    psd.finalize = function () {
        --this.parent.ref || this.parent.finalize();
    };
    var rv = usePSD(psd, fn, a1, a2);
    if (psd.ref === 0)
        psd.finalize();
    return rv;
}
function incrementExpectedAwaits() {
    if (!task.id)
        task.id = ++taskCounter;
    ++task.awaits;
    task.echoes += ZONE_ECHO_LIMIT;
    return task.id;
}
function decrementExpectedAwaits(sourceTaskId) {
    if (!task.awaits || (sourceTaskId && sourceTaskId !== task.id))
        return;
    if (--task.awaits === 0)
        task.id = 0;
    task.echoes = task.awaits * ZONE_ECHO_LIMIT;
}
if (('' + nativePromiseThen).indexOf('[native code]') === -1) {
    incrementExpectedAwaits = decrementExpectedAwaits = nop;
}
function onPossibleParallellAsync(possiblePromise) {
    if (task.echoes && possiblePromise && possiblePromise.constructor === NativePromise) {
        incrementExpectedAwaits();
        return possiblePromise.then(function (x) {
            decrementExpectedAwaits();
            return x;
        }, function (e) {
            decrementExpectedAwaits();
            return rejection(e);
        });
    }
    return possiblePromise;
}
function zoneEnterEcho(targetZone) {
    ++totalEchoes;
    if (!task.echoes || --task.echoes === 0) {
        task.echoes = task.id = 0;
    }
    zoneStack.push(PSD);
    switchToZone(targetZone, true);
}
function zoneLeaveEcho() {
    var zone = zoneStack[zoneStack.length - 1];
    zoneStack.pop();
    switchToZone(zone, false);
}
function switchToZone(targetZone, bEnteringZone) {
    var currentZone = PSD;
    if (bEnteringZone ? task.echoes && (!zoneEchoes++ || targetZone !== PSD) : zoneEchoes && (!--zoneEchoes || targetZone !== PSD)) {
        enqueueNativeMicroTask(bEnteringZone ? zoneEnterEcho.bind(null, targetZone) : zoneLeaveEcho);
    }
    if (targetZone === PSD)
        return;
    PSD = targetZone;
    if (currentZone === globalPSD)
        globalPSD.env = snapShot();
    if (patchGlobalPromise) {
        var GlobalPromise_1 = globalPSD.env.Promise;
        var targetEnv = targetZone.env;
        nativePromiseProto.then = targetEnv.nthen;
        GlobalPromise_1.prototype.then = targetEnv.gthen;
        if (currentZone.global || targetZone.global) {
            Object.defineProperty(_global, 'Promise', targetEnv.PromiseProp);
            GlobalPromise_1.all = targetEnv.all;
            GlobalPromise_1.race = targetEnv.race;
            GlobalPromise_1.resolve = targetEnv.resolve;
            GlobalPromise_1.reject = targetEnv.reject;
            if (targetEnv.allSettled)
                GlobalPromise_1.allSettled = targetEnv.allSettled;
            if (targetEnv.any)
                GlobalPromise_1.any = targetEnv.any;
        }
    }
}
function snapShot() {
    var GlobalPromise = _global.Promise;
    return patchGlobalPromise ? {
        Promise: GlobalPromise,
        PromiseProp: Object.getOwnPropertyDescriptor(_global, "Promise"),
        all: GlobalPromise.all,
        race: GlobalPromise.race,
        allSettled: GlobalPromise.allSettled,
        any: GlobalPromise.any,
        resolve: GlobalPromise.resolve,
        reject: GlobalPromise.reject,
        nthen: nativePromiseProto.then,
        gthen: GlobalPromise.prototype.then
    } : {};
}
function usePSD(psd, fn, a1, a2, a3) {
    var outerScope = PSD;
    try {
        switchToZone(psd, true);
        return fn(a1, a2, a3);
    }
    finally {
        switchToZone(outerScope, false);
    }
}
function enqueueNativeMicroTask(job) {
    nativePromiseThen.call(resolvedNativePromise, job);
}
function nativeAwaitCompatibleWrap(fn, zone, possibleAwait) {
    return typeof fn !== 'function' ? fn : function () {
        var outerZone = PSD;
        if (possibleAwait)
            incrementExpectedAwaits();
        switchToZone(zone, true);
        try {
            return fn.apply(this, arguments);
        }
        finally {
            switchToZone(outerZone, false);
        }
    };
}
function getPatchedPromiseThen(origThen, zone) {
    return function (onResolved, onRejected) {
        return origThen.call(this, nativeAwaitCompatibleWrap(onResolved, zone, false), nativeAwaitCompatibleWrap(onRejected, zone, false));
    };
}
var UNHANDLEDREJECTION = "unhandledrejection";
function globalError(err, promise) {
    var rv;
    try {
        rv = promise.onuncatched(err);
    }
    catch (e) { }
    if (rv !== false)
        try {
            var event, eventData = { promise: promise, reason: err };
            if (_global.document && document.createEvent) {
                event = document.createEvent('Event');
                event.initEvent(UNHANDLEDREJECTION, true, true);
                extend(event, eventData);
            }
            else if (_global.CustomEvent) {
                event = new CustomEvent(UNHANDLEDREJECTION, { detail: eventData });
                extend(event, eventData);
            }
            if (event && _global.dispatchEvent) {
                dispatchEvent(event);
                if (!_global.PromiseRejectionEvent && _global.onunhandledrejection)
                    try {
                        _global.onunhandledrejection(event);
                    }
                    catch (_) { }
            }
            if (debug && event && !event.defaultPrevented) {
                console.warn("Unhandled rejection: " + (err.stack || err));
            }
        }
        catch (e) { }
}
var rejection = DexiePromise.reject;

function tempTransaction(db, mode, storeNames, fn) {
    if (!db._state.openComplete && (!PSD.letThrough)) {
        if (!db._state.isBeingOpened) {
            if (!db._options.autoOpen)
                return rejection(new exceptions.DatabaseClosed());
            db.open().catch(nop);
        }
        return db._state.dbReadyPromise.then(function () { return tempTransaction(db, mode, storeNames, fn); });
    }
    else {
        var trans = db._createTransaction(mode, storeNames, db._dbSchema);
        try {
            trans.create();
        }
        catch (ex) {
            return rejection(ex);
        }
        return trans._promise(mode, function (resolve, reject) {
            return newScope(function () {
                PSD.trans = trans;
                return fn(resolve, reject, trans);
            });
        }).then(function (result) {
            return trans._completion.then(function () { return result; });
        });
    }
}

var DEXIE_VERSION = '3.0.2';
var maxString = String.fromCharCode(65535);
var minKey = -Infinity;
var INVALID_KEY_ARGUMENT = "Invalid key provided. Keys must be of type string, number, Date or Array<string | number | Date>.";
var STRING_EXPECTED = "String expected.";
var connections = [];
var isIEOrEdge = typeof navigator !== 'undefined' && /(MSIE|Trident|Edge)/.test(navigator.userAgent);
var hasIEDeleteObjectStoreBug = isIEOrEdge;
var hangsOnDeleteLargeKeyRange = isIEOrEdge;
var dexieStackFrameFilter = function (frame) { return !/(dexie\.js|dexie\.min\.js)/.test(frame); };
var DBNAMES_DB = '__dbnames';
var READONLY = 'readonly';
var READWRITE = 'readwrite';

function combine(filter1, filter2) {
    return filter1 ?
        filter2 ?
            function () { return filter1.apply(this, arguments) && filter2.apply(this, arguments); } :
            filter1 :
        filter2;
}

var AnyRange = {
    type: 3          ,
    lower: -Infinity,
    lowerOpen: false,
    upper: [[]],
    upperOpen: false
};

var Table =               (function () {
    function Table() {
    }
    Table.prototype._trans = function (mode, fn, writeLocked) {
        var trans = this._tx || PSD.trans;
        var tableName = this.name;
        function checkTableInTransaction(resolve, reject, trans) {
            if (!trans.schema[tableName])
                throw new exceptions.NotFound("Table " + tableName + " not part of transaction");
            return fn(trans.idbtrans, trans);
        }
        var wasRootExec = beginMicroTickScope();
        try {
            return trans && trans.db === this.db ?
                trans === PSD.trans ?
                    trans._promise(mode, checkTableInTransaction, writeLocked) :
                    newScope(function () { return trans._promise(mode, checkTableInTransaction, writeLocked); }, { trans: trans, transless: PSD.transless || PSD }) :
                tempTransaction(this.db, mode, [this.name], checkTableInTransaction);
        }
        finally {
            if (wasRootExec)
                endMicroTickScope();
        }
    };
    Table.prototype.get = function (keyOrCrit, cb) {
        var _this = this;
        if (keyOrCrit && keyOrCrit.constructor === Object)
            return this.where(keyOrCrit).first(cb);
        return this._trans('readonly', function (trans) {
            return _this.core.get({ trans: trans, key: keyOrCrit })
                .then(function (res) { return _this.hook.reading.fire(res); });
        }).then(cb);
    };
    Table.prototype.where = function (indexOrCrit) {
        if (typeof indexOrCrit === 'string')
            return new this.db.WhereClause(this, indexOrCrit);
        if (isArray(indexOrCrit))
            return new this.db.WhereClause(this, "[" + indexOrCrit.join('+') + "]");
        var keyPaths = keys(indexOrCrit);
        if (keyPaths.length === 1)
            return this
                .where(keyPaths[0])
                .equals(indexOrCrit[keyPaths[0]]);
        var compoundIndex = this.schema.indexes.concat(this.schema.primKey).filter(function (ix) {
            return ix.compound &&
                keyPaths.every(function (keyPath) { return ix.keyPath.indexOf(keyPath) >= 0; }) &&
                ix.keyPath.every(function (keyPath) { return keyPaths.indexOf(keyPath) >= 0; });
        })[0];
        if (compoundIndex && this.db._maxKey !== maxString)
            return this
                .where(compoundIndex.name)
                .equals(compoundIndex.keyPath.map(function (kp) { return indexOrCrit[kp]; }));
        if (!compoundIndex && debug)
            console.warn("The query " + JSON.stringify(indexOrCrit) + " on " + this.name + " would benefit of a " +
                ("compound index [" + keyPaths.join('+') + "]"));
        var idxByName = this.schema.idxByName;
        var idb = this.db._deps.indexedDB;
        function equals(a, b) {
            try {
                return idb.cmp(a, b) === 0;
            }
            catch (e) {
                return false;
            }
        }
        var _a = keyPaths.reduce(function (_a, keyPath) {
            var prevIndex = _a[0], prevFilterFn = _a[1];
            var index = idxByName[keyPath];
            var value = indexOrCrit[keyPath];
            return [
                prevIndex || index,
                prevIndex || !index ?
                    combine(prevFilterFn, index && index.multi ?
                        function (x) {
                            var prop = getByKeyPath(x, keyPath);
                            return isArray(prop) && prop.some(function (item) { return equals(value, item); });
                        } : function (x) { return equals(value, getByKeyPath(x, keyPath)); })
                    : prevFilterFn
            ];
        }, [null, null]), idx = _a[0], filterFunction = _a[1];
        return idx ?
            this.where(idx.name).equals(indexOrCrit[idx.keyPath])
                .filter(filterFunction) :
            compoundIndex ?
                this.filter(filterFunction) :
                this.where(keyPaths).equals('');
    };
    Table.prototype.filter = function (filterFunction) {
        return this.toCollection().and(filterFunction);
    };
    Table.prototype.count = function (thenShortcut) {
        return this.toCollection().count(thenShortcut);
    };
    Table.prototype.offset = function (offset) {
        return this.toCollection().offset(offset);
    };
    Table.prototype.limit = function (numRows) {
        return this.toCollection().limit(numRows);
    };
    Table.prototype.each = function (callback) {
        return this.toCollection().each(callback);
    };
    Table.prototype.toArray = function (thenShortcut) {
        return this.toCollection().toArray(thenShortcut);
    };
    Table.prototype.toCollection = function () {
        return new this.db.Collection(new this.db.WhereClause(this));
    };
    Table.prototype.orderBy = function (index) {
        return new this.db.Collection(new this.db.WhereClause(this, isArray(index) ?
            "[" + index.join('+') + "]" :
            index));
    };
    Table.prototype.reverse = function () {
        return this.toCollection().reverse();
    };
    Table.prototype.mapToClass = function (constructor) {
        this.schema.mappedClass = constructor;
        var readHook = function (obj) {
            if (!obj)
                return obj;
            var res = Object.create(constructor.prototype);
            for (var m in obj)
                if (hasOwn(obj, m))
                    try {
                        res[m] = obj[m];
                    }
                    catch (_) { }
            return res;
        };
        if (this.schema.readHook) {
            this.hook.reading.unsubscribe(this.schema.readHook);
        }
        this.schema.readHook = readHook;
        this.hook("reading", readHook);
        return constructor;
    };
    Table.prototype.defineClass = function () {
        function Class(content) {
            extend(this, content);
        }
        
        return this.mapToClass(Class);
    };
    Table.prototype.add = function (obj, key) {
        var _this = this;
        return this._trans('readwrite', function (trans) {
            return _this.core.mutate({ trans: trans, type: 'add', keys: key != null ? [key] : null, values: [obj] });
        }).then(function (res) { return res.numFailures ? DexiePromise.reject(res.failures[0]) : res.lastResult; })
            .then(function (lastResult) {
            if (!_this.core.schema.primaryKey.outbound) {
                try {
                    setByKeyPath(obj, _this.core.schema.primaryKey.keyPath, lastResult);
                }
                catch (_) { }
                
            }
            return lastResult;
        });
    };
    Table.prototype.update = function (keyOrObject, modifications) {
        if (typeof modifications !== 'object' || isArray(modifications))
            throw new exceptions.InvalidArgument("Modifications must be an object.");
        if (typeof keyOrObject === 'object' && !isArray(keyOrObject)) {
            keys(modifications).forEach(function (keyPath) {
                setByKeyPath(keyOrObject, keyPath, modifications[keyPath]);
            });
            var key = getByKeyPath(keyOrObject, this.schema.primKey.keyPath);
            if (key === undefined)
                return rejection(new exceptions.InvalidArgument("Given object does not contain its primary key"));
            return this.where(":id").equals(key).modify(modifications);
        }
        else {
            return this.where(":id").equals(keyOrObject).modify(modifications);
        }
    };
    Table.prototype.put = function (obj, key) {
        var _this = this;
        return this._trans('readwrite', function (trans) { return _this.core.mutate({ trans: trans, type: 'put', values: [obj], keys: key != null ? [key] : null }); })
            .then(function (res) { return res.numFailures ? DexiePromise.reject(res.failures[0]) : res.lastResult; })
            .then(function (lastResult) {
            if (!_this.core.schema.primaryKey.outbound) {
                try {
                    setByKeyPath(obj, _this.core.schema.primaryKey.keyPath, lastResult);
                }
                catch (_) { }
                
            }
            return lastResult;
        });
    };
    Table.prototype.delete = function (key) {
        var _this = this;
        return this._trans('readwrite', function (trans) { return _this.core.mutate({ trans: trans, type: 'delete', keys: [key] }); })
            .then(function (res) { return res.numFailures ? DexiePromise.reject(res.failures[0]) : undefined; });
    };
    Table.prototype.clear = function () {
        var _this = this;
        return this._trans('readwrite', function (trans) { return _this.core.mutate({ trans: trans, type: 'deleteRange', range: AnyRange }); })
            .then(function (res) { return res.numFailures ? DexiePromise.reject(res.failures[0]) : undefined; });
    };
    Table.prototype.bulkGet = function (keys$$1) {
        var _this = this;
        return this._trans('readonly', function (trans) {
            return _this.core.getMany({
                keys: keys$$1,
                trans: trans
            }).then(function (result) { return result.map(function (res) { return _this.hook.reading.fire(res); }); });
        });
    };
    Table.prototype.bulkAdd = function (objects, keysOrOptions, options) {
        var _this = this;
        var keys$$1 = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;
        options = options || (keys$$1 ? undefined : keysOrOptions);
        var wantResults = options ? options.allKeys : undefined;
        return this._trans('readwrite', function (trans) {
            var outbound = _this.core.schema.primaryKey.outbound;
            if (!outbound && keys$$1)
                throw new exceptions.InvalidArgument("bulkAdd(): keys argument invalid on tables with inbound keys");
            if (keys$$1 && keys$$1.length !== objects.length)
                throw new exceptions.InvalidArgument("Arguments objects and keys must have the same length");
            var numObjects = objects.length;
            return _this.core.mutate({ trans: trans, type: 'add', keys: keys$$1, values: objects, wantResults: wantResults })
                .then(function (_a) {
                var numFailures = _a.numFailures, results = _a.results, lastResult = _a.lastResult, failures = _a.failures;
                var result = wantResults ? results : lastResult;
                if (numFailures === 0)
                    return result;
                throw new BulkError(_this.name + ".bulkAdd(): " + numFailures + " of " + numObjects + " operations failed", Object.keys(failures).map(function (pos) { return failures[pos]; }));
            });
        });
    };
    Table.prototype.bulkPut = function (objects, keysOrOptions, options) {
        var _this = this;
        var keys$$1 = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;
        options = options || (keys$$1 ? undefined : keysOrOptions);
        var wantResults = options ? options.allKeys : undefined;
        return this._trans('readwrite', function (trans) {
            var outbound = _this.core.schema.primaryKey.outbound;
            if (!outbound && keys$$1)
                throw new exceptions.InvalidArgument("bulkPut(): keys argument invalid on tables with inbound keys");
            if (keys$$1 && keys$$1.length !== objects.length)
                throw new exceptions.InvalidArgument("Arguments objects and keys must have the same length");
            var numObjects = objects.length;
            return _this.core.mutate({ trans: trans, type: 'put', keys: keys$$1, values: objects, wantResults: wantResults })
                .then(function (_a) {
                var numFailures = _a.numFailures, results = _a.results, lastResult = _a.lastResult, failures = _a.failures;
                var result = wantResults ? results : lastResult;
                if (numFailures === 0)
                    return result;
                throw new BulkError(_this.name + ".bulkPut(): " + numFailures + " of " + numObjects + " operations failed", Object.keys(failures).map(function (pos) { return failures[pos]; }));
            });
        });
    };
    Table.prototype.bulkDelete = function (keys$$1) {
        var _this = this;
        var numKeys = keys$$1.length;
        return this._trans('readwrite', function (trans) {
            return _this.core.mutate({ trans: trans, type: 'delete', keys: keys$$1 });
        }).then(function (_a) {
            var numFailures = _a.numFailures, lastResult = _a.lastResult, failures = _a.failures;
            if (numFailures === 0)
                return lastResult;
            throw new BulkError(_this.name + ".bulkDelete(): " + numFailures + " of " + numKeys + " operations failed", failures);
        });
    };
    return Table;
}());

function Events(ctx) {
    var evs = {};
    var rv = function (eventName, subscriber) {
        if (subscriber) {
            var i = arguments.length, args = new Array(i - 1);
            while (--i)
                args[i - 1] = arguments[i];
            evs[eventName].subscribe.apply(null, args);
            return ctx;
        }
        else if (typeof (eventName) === 'string') {
            return evs[eventName];
        }
    };
    rv.addEventType = add;
    for (var i = 1, l = arguments.length; i < l; ++i) {
        add(arguments[i]);
    }
    return rv;
    function add(eventName, chainFunction, defaultFunction) {
        if (typeof eventName === 'object')
            return addConfiguredEvents(eventName);
        if (!chainFunction)
            chainFunction = reverseStoppableEventChain;
        if (!defaultFunction)
            defaultFunction = nop;
        var context = {
            subscribers: [],
            fire: defaultFunction,
            subscribe: function (cb) {
                if (context.subscribers.indexOf(cb) === -1) {
                    context.subscribers.push(cb);
                    context.fire = chainFunction(context.fire, cb);
                }
            },
            unsubscribe: function (cb) {
                context.subscribers = context.subscribers.filter(function (fn) { return fn !== cb; });
                context.fire = context.subscribers.reduce(chainFunction, defaultFunction);
            }
        };
        evs[eventName] = rv[eventName] = context;
        return context;
    }
    function addConfiguredEvents(cfg) {
        keys(cfg).forEach(function (eventName) {
            var args = cfg[eventName];
            if (isArray(args)) {
                add(eventName, cfg[eventName][0], cfg[eventName][1]);
            }
            else if (args === 'asap') {
                var context = add(eventName, mirror, function fire() {
                    var i = arguments.length, args = new Array(i);
                    while (i--)
                        args[i] = arguments[i];
                    context.subscribers.forEach(function (fn) {
                        asap(function fireEvent() {
                            fn.apply(null, args);
                        });
                    });
                });
            }
            else
                throw new exceptions.InvalidArgument("Invalid event config");
        });
    }
}

function makeClassConstructor(prototype, constructor) {
    derive(constructor).from({ prototype: prototype });
    return constructor;
}

function createTableConstructor(db) {
    return makeClassConstructor(Table.prototype, function Table$$1(name, tableSchema, trans) {
        this.db = db;
        this._tx = trans;
        this.name = name;
        this.schema = tableSchema;
        this.hook = db._allTables[name] ? db._allTables[name].hook : Events(null, {
            "creating": [hookCreatingChain, nop],
            "reading": [pureFunctionChain, mirror],
            "updating": [hookUpdatingChain, nop],
            "deleting": [hookDeletingChain, nop]
        });
    });
}

function isPlainKeyRange(ctx, ignoreLimitFilter) {
    return !(ctx.filter || ctx.algorithm || ctx.or) &&
        (ignoreLimitFilter ? ctx.justLimit : !ctx.replayFilter);
}
function addFilter(ctx, fn) {
    ctx.filter = combine(ctx.filter, fn);
}
function addReplayFilter(ctx, factory, isLimitFilter) {
    var curr = ctx.replayFilter;
    ctx.replayFilter = curr ? function () { return combine(curr(), factory()); } : factory;
    ctx.justLimit = isLimitFilter && !curr;
}
function addMatchFilter(ctx, fn) {
    ctx.isMatch = combine(ctx.isMatch, fn);
}
function getIndexOrStore(ctx, coreSchema) {
    if (ctx.isPrimKey)
        return coreSchema.primaryKey;
    var index = coreSchema.getIndexByKeyPath(ctx.index);
    if (!index)
        throw new exceptions.Schema("KeyPath " + ctx.index + " on object store " + coreSchema.name + " is not indexed");
    return index;
}
function openCursor(ctx, coreTable, trans) {
    var index = getIndexOrStore(ctx, coreTable.schema);
    return coreTable.openCursor({
        trans: trans,
        values: !ctx.keysOnly,
        reverse: ctx.dir === 'prev',
        unique: !!ctx.unique,
        query: {
            index: index,
            range: ctx.range
        }
    });
}
function iter(ctx, fn, coreTrans, coreTable) {
    var filter = ctx.replayFilter ? combine(ctx.filter, ctx.replayFilter()) : ctx.filter;
    if (!ctx.or) {
        return iterate(openCursor(ctx, coreTable, coreTrans), combine(ctx.algorithm, filter), fn, !ctx.keysOnly && ctx.valueMapper);
    }
    else {
        var set_1 = {};
        var union = function (item, cursor, advance) {
            if (!filter || filter(cursor, advance, function (result) { return cursor.stop(result); }, function (err) { return cursor.fail(err); })) {
                var primaryKey = cursor.primaryKey;
                var key = '' + primaryKey;
                if (key === '[object ArrayBuffer]')
                    key = '' + new Uint8Array(primaryKey);
                if (!hasOwn(set_1, key)) {
                    set_1[key] = true;
                    fn(item, cursor, advance);
                }
            }
        };
        return Promise.all([
            ctx.or._iterate(union, coreTrans),
            iterate(openCursor(ctx, coreTable, coreTrans), ctx.algorithm, union, !ctx.keysOnly && ctx.valueMapper)
        ]);
    }
}
function iterate(cursorPromise, filter, fn, valueMapper) {
    var mappedFn = valueMapper ? function (x, c, a) { return fn(valueMapper(x), c, a); } : fn;
    var wrappedFn = wrap(mappedFn);
    return cursorPromise.then(function (cursor) {
        if (cursor) {
            return cursor.start(function () {
                var c = function () { return cursor.continue(); };
                if (!filter || filter(cursor, function (advancer) { return c = advancer; }, function (val) { cursor.stop(val); c = nop; }, function (e) { cursor.fail(e); c = nop; }))
                    wrappedFn(cursor.value, cursor, function (advancer) { return c = advancer; });
                c();
            });
        }
    });
}

var Collection =               (function () {
    function Collection() {
    }
    Collection.prototype._read = function (fn, cb) {
        var ctx = this._ctx;
        return ctx.error ?
            ctx.table._trans(null, rejection.bind(null, ctx.error)) :
            ctx.table._trans('readonly', fn).then(cb);
    };
    Collection.prototype._write = function (fn) {
        var ctx = this._ctx;
        return ctx.error ?
            ctx.table._trans(null, rejection.bind(null, ctx.error)) :
            ctx.table._trans('readwrite', fn, "locked");
    };
    Collection.prototype._addAlgorithm = function (fn) {
        var ctx = this._ctx;
        ctx.algorithm = combine(ctx.algorithm, fn);
    };
    Collection.prototype._iterate = function (fn, coreTrans) {
        return iter(this._ctx, fn, coreTrans, this._ctx.table.core);
    };
    Collection.prototype.clone = function (props$$1) {
        var rv = Object.create(this.constructor.prototype), ctx = Object.create(this._ctx);
        if (props$$1)
            extend(ctx, props$$1);
        rv._ctx = ctx;
        return rv;
    };
    Collection.prototype.raw = function () {
        this._ctx.valueMapper = null;
        return this;
    };
    Collection.prototype.each = function (fn) {
        var ctx = this._ctx;
        return this._read(function (trans) { return iter(ctx, fn, trans, ctx.table.core); });
    };
    Collection.prototype.count = function (cb) {
        var _this = this;
        return this._read(function (trans) {
            var ctx = _this._ctx;
            var coreTable = ctx.table.core;
            if (isPlainKeyRange(ctx, true)) {
                return coreTable.count({
                    trans: trans,
                    query: {
                        index: getIndexOrStore(ctx, coreTable.schema),
                        range: ctx.range
                    }
                }).then(function (count) { return Math.min(count, ctx.limit); });
            }
            else {
                var count = 0;
                return iter(ctx, function () { ++count; return false; }, trans, coreTable)
                    .then(function () { return count; });
            }
        }).then(cb);
    };
    Collection.prototype.sortBy = function (keyPath, cb) {
        var parts = keyPath.split('.').reverse(), lastPart = parts[0], lastIndex = parts.length - 1;
        function getval(obj, i) {
            if (i)
                return getval(obj[parts[i]], i - 1);
            return obj[lastPart];
        }
        var order = this._ctx.dir === "next" ? 1 : -1;
        function sorter(a, b) {
            var aVal = getval(a, lastIndex), bVal = getval(b, lastIndex);
            return aVal < bVal ? -order : aVal > bVal ? order : 0;
        }
        return this.toArray(function (a) {
            return a.sort(sorter);
        }).then(cb);
    };
    Collection.prototype.toArray = function (cb) {
        var _this = this;
        return this._read(function (trans) {
            var ctx = _this._ctx;
            if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {
                var valueMapper_1 = ctx.valueMapper;
                var index = getIndexOrStore(ctx, ctx.table.core.schema);
                return ctx.table.core.query({
                    trans: trans,
                    limit: ctx.limit,
                    values: true,
                    query: {
                        index: index,
                        range: ctx.range
                    }
                }).then(function (_a) {
                    var result = _a.result;
                    return valueMapper_1 ? result.map(valueMapper_1) : result;
                });
            }
            else {
                var a_1 = [];
                return iter(ctx, function (item) { return a_1.push(item); }, trans, ctx.table.core).then(function () { return a_1; });
            }
        }, cb);
    };
    Collection.prototype.offset = function (offset) {
        var ctx = this._ctx;
        if (offset <= 0)
            return this;
        ctx.offset += offset;
        if (isPlainKeyRange(ctx)) {
            addReplayFilter(ctx, function () {
                var offsetLeft = offset;
                return function (cursor, advance) {
                    if (offsetLeft === 0)
                        return true;
                    if (offsetLeft === 1) {
                        --offsetLeft;
                        return false;
                    }
                    advance(function () {
                        cursor.advance(offsetLeft);
                        offsetLeft = 0;
                    });
                    return false;
                };
            });
        }
        else {
            addReplayFilter(ctx, function () {
                var offsetLeft = offset;
                return function () { return (--offsetLeft < 0); };
            });
        }
        return this;
    };
    Collection.prototype.limit = function (numRows) {
        this._ctx.limit = Math.min(this._ctx.limit, numRows);
        addReplayFilter(this._ctx, function () {
            var rowsLeft = numRows;
            return function (cursor, advance, resolve) {
                if (--rowsLeft <= 0)
                    advance(resolve);
                return rowsLeft >= 0;
            };
        }, true);
        return this;
    };
    Collection.prototype.until = function (filterFunction, bIncludeStopEntry) {
        addFilter(this._ctx, function (cursor, advance, resolve) {
            if (filterFunction(cursor.value)) {
                advance(resolve);
                return bIncludeStopEntry;
            }
            else {
                return true;
            }
        });
        return this;
    };
    Collection.prototype.first = function (cb) {
        return this.limit(1).toArray(function (a) { return a[0]; }).then(cb);
    };
    Collection.prototype.last = function (cb) {
        return this.reverse().first(cb);
    };
    Collection.prototype.filter = function (filterFunction) {
        addFilter(this._ctx, function (cursor) {
            return filterFunction(cursor.value);
        });
        addMatchFilter(this._ctx, filterFunction);
        return this;
    };
    Collection.prototype.and = function (filter) {
        return this.filter(filter);
    };
    Collection.prototype.or = function (indexName) {
        return new this.db.WhereClause(this._ctx.table, indexName, this);
    };
    Collection.prototype.reverse = function () {
        this._ctx.dir = (this._ctx.dir === "prev" ? "next" : "prev");
        if (this._ondirectionchange)
            this._ondirectionchange(this._ctx.dir);
        return this;
    };
    Collection.prototype.desc = function () {
        return this.reverse();
    };
    Collection.prototype.eachKey = function (cb) {
        var ctx = this._ctx;
        ctx.keysOnly = !ctx.isMatch;
        return this.each(function (val, cursor) { cb(cursor.key, cursor); });
    };
    Collection.prototype.eachUniqueKey = function (cb) {
        this._ctx.unique = "unique";
        return this.eachKey(cb);
    };
    Collection.prototype.eachPrimaryKey = function (cb) {
        var ctx = this._ctx;
        ctx.keysOnly = !ctx.isMatch;
        return this.each(function (val, cursor) { cb(cursor.primaryKey, cursor); });
    };
    Collection.prototype.keys = function (cb) {
        var ctx = this._ctx;
        ctx.keysOnly = !ctx.isMatch;
        var a = [];
        return this.each(function (item, cursor) {
            a.push(cursor.key);
        }).then(function () {
            return a;
        }).then(cb);
    };
    Collection.prototype.primaryKeys = function (cb) {
        var ctx = this._ctx;
        if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {
            return this._read(function (trans) {
                var index = getIndexOrStore(ctx, ctx.table.core.schema);
                return ctx.table.core.query({
                    trans: trans,
                    values: false,
                    limit: ctx.limit,
                    query: {
                        index: index,
                        range: ctx.range
                    }
                });
            }).then(function (_a) {
                var result = _a.result;
                return result;
            }).then(cb);
        }
        ctx.keysOnly = !ctx.isMatch;
        var a = [];
        return this.each(function (item, cursor) {
            a.push(cursor.primaryKey);
        }).then(function () {
            return a;
        }).then(cb);
    };
    Collection.prototype.uniqueKeys = function (cb) {
        this._ctx.unique = "unique";
        return this.keys(cb);
    };
    Collection.prototype.firstKey = function (cb) {
        return this.limit(1).keys(function (a) { return a[0]; }).then(cb);
    };
    Collection.prototype.lastKey = function (cb) {
        return this.reverse().firstKey(cb);
    };
    Collection.prototype.distinct = function () {
        var ctx = this._ctx, idx = ctx.index && ctx.table.schema.idxByName[ctx.index];
        if (!idx || !idx.multi)
            return this;
        var set = {};
        addFilter(this._ctx, function (cursor) {
            var strKey = cursor.primaryKey.toString();
            var found = hasOwn(set, strKey);
            set[strKey] = true;
            return !found;
        });
        return this;
    };
    Collection.prototype.modify = function (changes) {
        var _this = this;
        var ctx = this._ctx;
        return this._write(function (trans) {
            var modifyer;
            if (typeof changes === 'function') {
                modifyer = changes;
            }
            else {
                var keyPaths = keys(changes);
                var numKeys = keyPaths.length;
                modifyer = function (item) {
                    var anythingModified = false;
                    for (var i = 0; i < numKeys; ++i) {
                        var keyPath = keyPaths[i], val = changes[keyPath];
                        if (getByKeyPath(item, keyPath) !== val) {
                            setByKeyPath(item, keyPath, val);
                            anythingModified = true;
                        }
                    }
                    return anythingModified;
                };
            }
            var coreTable = ctx.table.core;
            var _a = coreTable.schema.primaryKey, outbound = _a.outbound, extractKey = _a.extractKey;
            var limit = 'testmode' in Dexie ? 1 : 2000;
            var cmp = _this.db.core.cmp;
            var totalFailures = [];
            var successCount = 0;
            var failedKeys = [];
            var applyMutateResult = function (expectedCount, res) {
                var failures = res.failures, numFailures = res.numFailures;
                successCount += expectedCount - numFailures;
                for (var _i = 0, _a = keys(failures); _i < _a.length; _i++) {
                    var pos = _a[_i];
                    totalFailures.push(failures[pos]);
                }
            };
            return _this.clone().primaryKeys().then(function (keys$$1) {
                var nextChunk = function (offset) {
                    var count = Math.min(limit, keys$$1.length - offset);
                    return coreTable.getMany({ trans: trans, keys: keys$$1.slice(offset, offset + count) }).then(function (values) {
                        var addValues = [];
                        var putValues = [];
                        var putKeys = outbound ? [] : null;
                        var deleteKeys = [];
                        for (var i = 0; i < count; ++i) {
                            var origValue = values[i];
                            var ctx_1 = {
                                value: deepClone(origValue),
                                primKey: keys$$1[offset + i]
                            };
                            if (modifyer.call(ctx_1, ctx_1.value, ctx_1) !== false) {
                                if (ctx_1.value == null) {
                                    deleteKeys.push(keys$$1[offset + i]);
                                }
                                else if (!outbound && cmp(extractKey(origValue), extractKey(ctx_1.value)) !== 0) {
                                    deleteKeys.push(keys$$1[offset + i]);
                                    addValues.push(ctx_1.value);
                                }
                                else {
                                    putValues.push(ctx_1.value);
                                    if (outbound)
                                        putKeys.push(keys$$1[offset + i]);
                                }
                            }
                        }
                        return Promise.resolve(addValues.length > 0 &&
                            coreTable.mutate({ trans: trans, type: 'add', values: addValues })
                                .then(function (res) {
                                for (var pos in res.failures) {
                                    deleteKeys.splice(parseInt(pos), 1);
                                }
                                applyMutateResult(addValues.length, res);
                            })).then(function (res) { return putValues.length > 0 &&
                            coreTable.mutate({ trans: trans, type: 'put', keys: putKeys, values: putValues })
                                .then(function (res) { return applyMutateResult(putValues.length, res); }); }).then(function () { return deleteKeys.length > 0 &&
                            coreTable.mutate({ trans: trans, type: 'delete', keys: deleteKeys })
                                .then(function (res) { return applyMutateResult(deleteKeys.length, res); }); }).then(function () {
                            return keys$$1.length > offset + count && nextChunk(offset + limit);
                        });
                    });
                };
                return nextChunk(0).then(function () {
                    if (totalFailures.length > 0)
                        throw new ModifyError("Error modifying one or more objects", totalFailures, successCount, failedKeys);
                    return keys$$1.length;
                });
            });
        });
    };
    Collection.prototype.delete = function () {
        var ctx = this._ctx, range = ctx.range;
        if (isPlainKeyRange(ctx) &&
            ((ctx.isPrimKey && !hangsOnDeleteLargeKeyRange) || range.type === 3          ))
         {
            return this._write(function (trans) {
                var primaryKey = ctx.table.core.schema.primaryKey;
                var coreRange = range;
                return ctx.table.core.count({ trans: trans, query: { index: primaryKey, range: coreRange } }).then(function (count) {
                    return ctx.table.core.mutate({ trans: trans, type: 'deleteRange', range: coreRange })
                        .then(function (_a) {
                        var failures = _a.failures, lastResult = _a.lastResult, results = _a.results, numFailures = _a.numFailures;
                        if (numFailures)
                            throw new ModifyError("Could not delete some values", Object.keys(failures).map(function (pos) { return failures[pos]; }), count - numFailures);
                        return count - numFailures;
                    });
                });
            });
        }
        return this.modify(function (value, ctx) { return ctx.value = null; });
    };
    return Collection;
}());

function createCollectionConstructor(db) {
    return makeClassConstructor(Collection.prototype, function Collection$$1(whereClause, keyRangeGenerator) {
        this.db = db;
        var keyRange = AnyRange, error = null;
        if (keyRangeGenerator)
            try {
                keyRange = keyRangeGenerator();
            }
            catch (ex) {
                error = ex;
            }
        var whereCtx = whereClause._ctx;
        var table = whereCtx.table;
        var readingHook = table.hook.reading.fire;
        this._ctx = {
            table: table,
            index: whereCtx.index,
            isPrimKey: (!whereCtx.index || (table.schema.primKey.keyPath && whereCtx.index === table.schema.primKey.name)),
            range: keyRange,
            keysOnly: false,
            dir: "next",
            unique: "",
            algorithm: null,
            filter: null,
            replayFilter: null,
            justLimit: true,
            isMatch: null,
            offset: 0,
            limit: Infinity,
            error: error,
            or: whereCtx.or,
            valueMapper: readingHook !== mirror ? readingHook : null
        };
    });
}

function simpleCompare(a, b) {
    return a < b ? -1 : a === b ? 0 : 1;
}
function simpleCompareReverse(a, b) {
    return a > b ? -1 : a === b ? 0 : 1;
}

function fail(collectionOrWhereClause, err, T) {
    var collection = collectionOrWhereClause instanceof WhereClause ?
        new collectionOrWhereClause.Collection(collectionOrWhereClause) :
        collectionOrWhereClause;
    collection._ctx.error = T ? new T(err) : new TypeError(err);
    return collection;
}
function emptyCollection(whereClause) {
    return new whereClause.Collection(whereClause, function () { return rangeEqual(""); }).limit(0);
}
function upperFactory(dir) {
    return dir === "next" ?
        function (s) { return s.toUpperCase(); } :
        function (s) { return s.toLowerCase(); };
}
function lowerFactory(dir) {
    return dir === "next" ?
        function (s) { return s.toLowerCase(); } :
        function (s) { return s.toUpperCase(); };
}
function nextCasing(key, lowerKey, upperNeedle, lowerNeedle, cmp, dir) {
    var length = Math.min(key.length, lowerNeedle.length);
    var llp = -1;
    for (var i = 0; i < length; ++i) {
        var lwrKeyChar = lowerKey[i];
        if (lwrKeyChar !== lowerNeedle[i]) {
            if (cmp(key[i], upperNeedle[i]) < 0)
                return key.substr(0, i) + upperNeedle[i] + upperNeedle.substr(i + 1);
            if (cmp(key[i], lowerNeedle[i]) < 0)
                return key.substr(0, i) + lowerNeedle[i] + upperNeedle.substr(i + 1);
            if (llp >= 0)
                return key.substr(0, llp) + lowerKey[llp] + upperNeedle.substr(llp + 1);
            return null;
        }
        if (cmp(key[i], lwrKeyChar) < 0)
            llp = i;
    }
    if (length < lowerNeedle.length && dir === "next")
        return key + upperNeedle.substr(key.length);
    if (length < key.length && dir === "prev")
        return key.substr(0, upperNeedle.length);
    return (llp < 0 ? null : key.substr(0, llp) + lowerNeedle[llp] + upperNeedle.substr(llp + 1));
}
function addIgnoreCaseAlgorithm(whereClause, match, needles, suffix) {
    var upper, lower, compare, upperNeedles, lowerNeedles, direction, nextKeySuffix, needlesLen = needles.length;
    if (!needles.every(function (s) { return typeof s === 'string'; })) {
        return fail(whereClause, STRING_EXPECTED);
    }
    function initDirection(dir) {
        upper = upperFactory(dir);
        lower = lowerFactory(dir);
        compare = (dir === "next" ? simpleCompare : simpleCompareReverse);
        var needleBounds = needles.map(function (needle) {
            return { lower: lower(needle), upper: upper(needle) };
        }).sort(function (a, b) {
            return compare(a.lower, b.lower);
        });
        upperNeedles = needleBounds.map(function (nb) { return nb.upper; });
        lowerNeedles = needleBounds.map(function (nb) { return nb.lower; });
        direction = dir;
        nextKeySuffix = (dir === "next" ? "" : suffix);
    }
    initDirection("next");
    var c = new whereClause.Collection(whereClause, function () { return createRange(upperNeedles[0], lowerNeedles[needlesLen - 1] + suffix); });
    c._ondirectionchange = function (direction) {
        initDirection(direction);
    };
    var firstPossibleNeedle = 0;
    c._addAlgorithm(function (cursor, advance, resolve) {
        var key = cursor.key;
        if (typeof key !== 'string')
            return false;
        var lowerKey = lower(key);
        if (match(lowerKey, lowerNeedles, firstPossibleNeedle)) {
            return true;
        }
        else {
            var lowestPossibleCasing = null;
            for (var i = firstPossibleNeedle; i < needlesLen; ++i) {
                var casing = nextCasing(key, lowerKey, upperNeedles[i], lowerNeedles[i], compare, direction);
                if (casing === null && lowestPossibleCasing === null)
                    firstPossibleNeedle = i + 1;
                else if (lowestPossibleCasing === null || compare(lowestPossibleCasing, casing) > 0) {
                    lowestPossibleCasing = casing;
                }
            }
            if (lowestPossibleCasing !== null) {
                advance(function () { cursor.continue(lowestPossibleCasing + nextKeySuffix); });
            }
            else {
                advance(resolve);
            }
            return false;
        }
    });
    return c;
}
function createRange(lower, upper, lowerOpen, upperOpen) {
    return {
        type: 2            ,
        lower: lower,
        upper: upper,
        lowerOpen: lowerOpen,
        upperOpen: upperOpen
    };
}
function rangeEqual(value) {
    return {
        type: 1            ,
        lower: value,
        upper: value
    };
}

var WhereClause =               (function () {
    function WhereClause() {
    }
    Object.defineProperty(WhereClause.prototype, "Collection", {
        get: function () {
            return this._ctx.table.db.Collection;
        },
        enumerable: true,
        configurable: true
    });
    WhereClause.prototype.between = function (lower, upper, includeLower, includeUpper) {
        includeLower = includeLower !== false;
        includeUpper = includeUpper === true;
        try {
            if ((this._cmp(lower, upper) > 0) ||
                (this._cmp(lower, upper) === 0 && (includeLower || includeUpper) && !(includeLower && includeUpper)))
                return emptyCollection(this);
            return new this.Collection(this, function () { return createRange(lower, upper, !includeLower, !includeUpper); });
        }
        catch (e) {
            return fail(this, INVALID_KEY_ARGUMENT);
        }
    };
    WhereClause.prototype.equals = function (value) {
        return new this.Collection(this, function () { return rangeEqual(value); });
    };
    WhereClause.prototype.above = function (value) {
        if (value == null)
            return fail(this, INVALID_KEY_ARGUMENT);
        return new this.Collection(this, function () { return createRange(value, undefined, true); });
    };
    WhereClause.prototype.aboveOrEqual = function (value) {
        if (value == null)
            return fail(this, INVALID_KEY_ARGUMENT);
        return new this.Collection(this, function () { return createRange(value, undefined, false); });
    };
    WhereClause.prototype.below = function (value) {
        if (value == null)
            return fail(this, INVALID_KEY_ARGUMENT);
        return new this.Collection(this, function () { return createRange(undefined, value, false, true); });
    };
    WhereClause.prototype.belowOrEqual = function (value) {
        if (value == null)
            return fail(this, INVALID_KEY_ARGUMENT);
        return new this.Collection(this, function () { return createRange(undefined, value); });
    };
    WhereClause.prototype.startsWith = function (str) {
        if (typeof str !== 'string')
            return fail(this, STRING_EXPECTED);
        return this.between(str, str + maxString, true, true);
    };
    WhereClause.prototype.startsWithIgnoreCase = function (str) {
        if (str === "")
            return this.startsWith(str);
        return addIgnoreCaseAlgorithm(this, function (x, a) { return x.indexOf(a[0]) === 0; }, [str], maxString);
    };
    WhereClause.prototype.equalsIgnoreCase = function (str) {
        return addIgnoreCaseAlgorithm(this, function (x, a) { return x === a[0]; }, [str], "");
    };
    WhereClause.prototype.anyOfIgnoreCase = function () {
        var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);
        if (set.length === 0)
            return emptyCollection(this);
        return addIgnoreCaseAlgorithm(this, function (x, a) { return a.indexOf(x) !== -1; }, set, "");
    };
    WhereClause.prototype.startsWithAnyOfIgnoreCase = function () {
        var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);
        if (set.length === 0)
            return emptyCollection(this);
        return addIgnoreCaseAlgorithm(this, function (x, a) { return a.some(function (n) { return x.indexOf(n) === 0; }); }, set, maxString);
    };
    WhereClause.prototype.anyOf = function () {
        var _this = this;
        var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);
        var compare = this._cmp;
        try {
            set.sort(compare);
        }
        catch (e) {
            return fail(this, INVALID_KEY_ARGUMENT);
        }
        if (set.length === 0)
            return emptyCollection(this);
        var c = new this.Collection(this, function () { return createRange(set[0], set[set.length - 1]); });
        c._ondirectionchange = function (direction) {
            compare = (direction === "next" ?
                _this._ascending :
                _this._descending);
            set.sort(compare);
        };
        var i = 0;
        c._addAlgorithm(function (cursor, advance, resolve) {
            var key = cursor.key;
            while (compare(key, set[i]) > 0) {
                ++i;
                if (i === set.length) {
                    advance(resolve);
                    return false;
                }
            }
            if (compare(key, set[i]) === 0) {
                return true;
            }
            else {
                advance(function () { cursor.continue(set[i]); });
                return false;
            }
        });
        return c;
    };
    WhereClause.prototype.notEqual = function (value) {
        return this.inAnyRange([[minKey, value], [value, this.db._maxKey]], { includeLowers: false, includeUppers: false });
    };
    WhereClause.prototype.noneOf = function () {
        var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);
        if (set.length === 0)
            return new this.Collection(this);
        try {
            set.sort(this._ascending);
        }
        catch (e) {
            return fail(this, INVALID_KEY_ARGUMENT);
        }
        var ranges = set.reduce(function (res, val) { return res ?
            res.concat([[res[res.length - 1][1], val]]) :
            [[minKey, val]]; }, null);
        ranges.push([set[set.length - 1], this.db._maxKey]);
        return this.inAnyRange(ranges, { includeLowers: false, includeUppers: false });
    };
    WhereClause.prototype.inAnyRange = function (ranges, options) {
        var _this = this;
        var cmp = this._cmp, ascending = this._ascending, descending = this._descending, min = this._min, max = this._max;
        if (ranges.length === 0)
            return emptyCollection(this);
        if (!ranges.every(function (range) {
            return range[0] !== undefined &&
                range[1] !== undefined &&
                ascending(range[0], range[1]) <= 0;
        })) {
            return fail(this, "First argument to inAnyRange() must be an Array of two-value Arrays [lower,upper] where upper must not be lower than lower", exceptions.InvalidArgument);
        }
        var includeLowers = !options || options.includeLowers !== false;
        var includeUppers = options && options.includeUppers === true;
        function addRange(ranges, newRange) {
            var i = 0, l = ranges.length;
            for (; i < l; ++i) {
                var range = ranges[i];
                if (cmp(newRange[0], range[1]) < 0 && cmp(newRange[1], range[0]) > 0) {
                    range[0] = min(range[0], newRange[0]);
                    range[1] = max(range[1], newRange[1]);
                    break;
                }
            }
            if (i === l)
                ranges.push(newRange);
            return ranges;
        }
        var sortDirection = ascending;
        function rangeSorter(a, b) { return sortDirection(a[0], b[0]); }
        var set;
        try {
            set = ranges.reduce(addRange, []);
            set.sort(rangeSorter);
        }
        catch (ex) {
            return fail(this, INVALID_KEY_ARGUMENT);
        }
        var rangePos = 0;
        var keyIsBeyondCurrentEntry = includeUppers ?
            function (key) { return ascending(key, set[rangePos][1]) > 0; } :
            function (key) { return ascending(key, set[rangePos][1]) >= 0; };
        var keyIsBeforeCurrentEntry = includeLowers ?
            function (key) { return descending(key, set[rangePos][0]) > 0; } :
            function (key) { return descending(key, set[rangePos][0]) >= 0; };
        function keyWithinCurrentRange(key) {
            return !keyIsBeyondCurrentEntry(key) && !keyIsBeforeCurrentEntry(key);
        }
        var checkKey = keyIsBeyondCurrentEntry;
        var c = new this.Collection(this, function () { return createRange(set[0][0], set[set.length - 1][1], !includeLowers, !includeUppers); });
        c._ondirectionchange = function (direction) {
            if (direction === "next") {
                checkKey = keyIsBeyondCurrentEntry;
                sortDirection = ascending;
            }
            else {
                checkKey = keyIsBeforeCurrentEntry;
                sortDirection = descending;
            }
            set.sort(rangeSorter);
        };
        c._addAlgorithm(function (cursor, advance, resolve) {
            var key = cursor.key;
            while (checkKey(key)) {
                ++rangePos;
                if (rangePos === set.length) {
                    advance(resolve);
                    return false;
                }
            }
            if (keyWithinCurrentRange(key)) {
                return true;
            }
            else if (_this._cmp(key, set[rangePos][1]) === 0 || _this._cmp(key, set[rangePos][0]) === 0) {
                return false;
            }
            else {
                advance(function () {
                    if (sortDirection === ascending)
                        cursor.continue(set[rangePos][0]);
                    else
                        cursor.continue(set[rangePos][1]);
                });
                return false;
            }
        });
        return c;
    };
    WhereClause.prototype.startsWithAnyOf = function () {
        var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);
        if (!set.every(function (s) { return typeof s === 'string'; })) {
            return fail(this, "startsWithAnyOf() only works with strings");
        }
        if (set.length === 0)
            return emptyCollection(this);
        return this.inAnyRange(set.map(function (str) { return [str, str + maxString]; }));
    };
    return WhereClause;
}());

function createWhereClauseConstructor(db) {
    return makeClassConstructor(WhereClause.prototype, function WhereClause$$1(table, index, orCollection) {
        this.db = db;
        this._ctx = {
            table: table,
            index: index === ":id" ? null : index,
            or: orCollection
        };
        var indexedDB = db._deps.indexedDB;
        if (!indexedDB)
            throw new exceptions.MissingAPI("indexedDB API missing");
        this._cmp = this._ascending = indexedDB.cmp.bind(indexedDB);
        this._descending = function (a, b) { return indexedDB.cmp(b, a); };
        this._max = function (a, b) { return indexedDB.cmp(a, b) > 0 ? a : b; };
        this._min = function (a, b) { return indexedDB.cmp(a, b) < 0 ? a : b; };
        this._IDBKeyRange = db._deps.IDBKeyRange;
    });
}

function safariMultiStoreFix(storeNames) {
    return storeNames.length === 1 ? storeNames[0] : storeNames;
}

function getMaxKey(IdbKeyRange) {
    try {
        IdbKeyRange.only([[]]);
        return [[]];
    }
    catch (e) {
        return maxString;
    }
}

function eventRejectHandler(reject) {
    return wrap(function (event) {
        preventDefault(event);
        reject(event.target.error);
        return false;
    });
}



function preventDefault(event) {
    if (event.stopPropagation)
        event.stopPropagation();
    if (event.preventDefault)
        event.preventDefault();
}

var Transaction =               (function () {
    function Transaction() {
    }
    Transaction.prototype._lock = function () {
        assert(!PSD.global);
        ++this._reculock;
        if (this._reculock === 1 && !PSD.global)
            PSD.lockOwnerFor = this;
        return this;
    };
    Transaction.prototype._unlock = function () {
        assert(!PSD.global);
        if (--this._reculock === 0) {
            if (!PSD.global)
                PSD.lockOwnerFor = null;
            while (this._blockedFuncs.length > 0 && !this._locked()) {
                var fnAndPSD = this._blockedFuncs.shift();
                try {
                    usePSD(fnAndPSD[1], fnAndPSD[0]);
                }
                catch (e) { }
            }
        }
        return this;
    };
    Transaction.prototype._locked = function () {
        return this._reculock && PSD.lockOwnerFor !== this;
    };
    Transaction.prototype.create = function (idbtrans) {
        var _this = this;
        if (!this.mode)
            return this;
        var idbdb = this.db.idbdb;
        var dbOpenError = this.db._state.dbOpenError;
        assert(!this.idbtrans);
        if (!idbtrans && !idbdb) {
            switch (dbOpenError && dbOpenError.name) {
                case "DatabaseClosedError":
                    throw new exceptions.DatabaseClosed(dbOpenError);
                case "MissingAPIError":
                    throw new exceptions.MissingAPI(dbOpenError.message, dbOpenError);
                default:
                    throw new exceptions.OpenFailed(dbOpenError);
            }
        }
        if (!this.active)
            throw new exceptions.TransactionInactive();
        assert(this._completion._state === null);
        idbtrans = this.idbtrans = idbtrans || idbdb.transaction(safariMultiStoreFix(this.storeNames), this.mode);
        idbtrans.onerror = wrap(function (ev) {
            preventDefault(ev);
            _this._reject(idbtrans.error);
        });
        idbtrans.onabort = wrap(function (ev) {
            preventDefault(ev);
            _this.active && _this._reject(new exceptions.Abort(idbtrans.error));
            _this.active = false;
            _this.on("abort").fire(ev);
        });
        idbtrans.oncomplete = wrap(function () {
            _this.active = false;
            _this._resolve();
        });
        return this;
    };
    Transaction.prototype._promise = function (mode, fn, bWriteLock) {
        var _this = this;
        if (mode === 'readwrite' && this.mode !== 'readwrite')
            return rejection(new exceptions.ReadOnly("Transaction is readonly"));
        if (!this.active)
            return rejection(new exceptions.TransactionInactive());
        if (this._locked()) {
            return new DexiePromise(function (resolve, reject) {
                _this._blockedFuncs.push([function () {
                        _this._promise(mode, fn, bWriteLock).then(resolve, reject);
                    }, PSD]);
            });
        }
        else if (bWriteLock) {
            return newScope(function () {
                var p = new DexiePromise(function (resolve, reject) {
                    _this._lock();
                    var rv = fn(resolve, reject, _this);
                    if (rv && rv.then)
                        rv.then(resolve, reject);
                });
                p.finally(function () { return _this._unlock(); });
                p._lib = true;
                return p;
            });
        }
        else {
            var p = new DexiePromise(function (resolve, reject) {
                var rv = fn(resolve, reject, _this);
                if (rv && rv.then)
                    rv.then(resolve, reject);
            });
            p._lib = true;
            return p;
        }
    };
    Transaction.prototype._root = function () {
        return this.parent ? this.parent._root() : this;
    };
    Transaction.prototype.waitFor = function (promiseLike) {
        var root = this._root();
        var promise = DexiePromise.resolve(promiseLike);
        if (root._waitingFor) {
            root._waitingFor = root._waitingFor.then(function () { return promise; });
        }
        else {
            root._waitingFor = promise;
            root._waitingQueue = [];
            var store = root.idbtrans.objectStore(root.storeNames[0]);
            (function spin() {
                ++root._spinCount;
                while (root._waitingQueue.length)
                    (root._waitingQueue.shift())();
                if (root._waitingFor)
                    store.get(-Infinity).onsuccess = spin;
            }());
        }
        var currentWaitPromise = root._waitingFor;
        return new DexiePromise(function (resolve, reject) {
            promise.then(function (res) { return root._waitingQueue.push(wrap(resolve.bind(null, res))); }, function (err) { return root._waitingQueue.push(wrap(reject.bind(null, err))); }).finally(function () {
                if (root._waitingFor === currentWaitPromise) {
                    root._waitingFor = null;
                }
            });
        });
    };
    Transaction.prototype.abort = function () {
        this.active && this._reject(new exceptions.Abort());
        this.active = false;
    };
    Transaction.prototype.table = function (tableName) {
        var memoizedTables = (this._memoizedTables || (this._memoizedTables = {}));
        if (hasOwn(memoizedTables, tableName))
            return memoizedTables[tableName];
        var tableSchema = this.schema[tableName];
        if (!tableSchema) {
            throw new exceptions.NotFound("Table " + tableName + " not part of transaction");
        }
        var transactionBoundTable = new this.db.Table(tableName, tableSchema, this);
        transactionBoundTable.core = this.db.core.table(tableName);
        memoizedTables[tableName] = transactionBoundTable;
        return transactionBoundTable;
    };
    return Transaction;
}());

function createTransactionConstructor(db) {
    return makeClassConstructor(Transaction.prototype, function Transaction$$1(mode, storeNames, dbschema, parent) {
        var _this = this;
        this.db = db;
        this.mode = mode;
        this.storeNames = storeNames;
        this.schema = dbschema;
        this.idbtrans = null;
        this.on = Events(this, "complete", "error", "abort");
        this.parent = parent || null;
        this.active = true;
        this._reculock = 0;
        this._blockedFuncs = [];
        this._resolve = null;
        this._reject = null;
        this._waitingFor = null;
        this._waitingQueue = null;
        this._spinCount = 0;
        this._completion = new DexiePromise(function (resolve, reject) {
            _this._resolve = resolve;
            _this._reject = reject;
        });
        this._completion.then(function () {
            _this.active = false;
            _this.on.complete.fire();
        }, function (e) {
            var wasActive = _this.active;
            _this.active = false;
            _this.on.error.fire(e);
            _this.parent ?
                _this.parent._reject(e) :
                wasActive && _this.idbtrans && _this.idbtrans.abort();
            return rejection(e);
        });
    });
}

function createIndexSpec(name, keyPath, unique, multi, auto, compound, isPrimKey) {
    return {
        name: name,
        keyPath: keyPath,
        unique: unique,
        multi: multi,
        auto: auto,
        compound: compound,
        src: (unique && !isPrimKey ? '&' : '') + (multi ? '*' : '') + (auto ? "++" : "") + nameFromKeyPath(keyPath)
    };
}
function nameFromKeyPath(keyPath) {
    return typeof keyPath === 'string' ?
        keyPath :
        keyPath ? ('[' + [].join.call(keyPath, '+') + ']') : "";
}

function createTableSchema(name, primKey, indexes) {
    return {
        name: name,
        primKey: primKey,
        indexes: indexes,
        mappedClass: null,
        idxByName: arrayToObject(indexes, function (index) { return [index.name, index]; })
    };
}

function getKeyExtractor(keyPath) {
    if (keyPath == null) {
        return function () { return undefined; };
    }
    else if (typeof keyPath === 'string') {
        return getSinglePathKeyExtractor(keyPath);
    }
    else {
        return function (obj) { return getByKeyPath(obj, keyPath); };
    }
}
function getSinglePathKeyExtractor(keyPath) {
    var split = keyPath.split('.');
    if (split.length === 1) {
        return function (obj) { return obj[keyPath]; };
    }
    else {
        return function (obj) { return getByKeyPath(obj, keyPath); };
    }
}

function getEffectiveKeys(primaryKey, req) {
    if (req.type === 'delete')
        return req.keys;
    return req.keys || req.values.map(primaryKey.extractKey);
}
function getExistingValues(table, req, effectiveKeys) {
    return req.type === 'add' ? Promise.resolve(new Array(req.values.length)) :
        table.getMany({ trans: req.trans, keys: effectiveKeys });
}

function arrayify(arrayLike) {
    return [].slice.call(arrayLike);
}

var _id_counter = 0;
function getKeyPathAlias(keyPath) {
    return keyPath == null ?
        ":id" :
        typeof keyPath === 'string' ?
            keyPath :
            "[" + keyPath.join('+') + "]";
}
function createDBCore(db, indexedDB, IdbKeyRange, tmpTrans) {
    var cmp = indexedDB.cmp.bind(indexedDB);
    function extractSchema(db, trans) {
        var tables = arrayify(db.objectStoreNames);
        return {
            schema: {
                name: db.name,
                tables: tables.map(function (table) { return trans.objectStore(table); }).map(function (store) {
                    var keyPath = store.keyPath, autoIncrement = store.autoIncrement;
                    var compound = isArray(keyPath);
                    var outbound = keyPath == null;
                    var indexByKeyPath = {};
                    var result = {
                        name: store.name,
                        primaryKey: {
                            name: null,
                            isPrimaryKey: true,
                            outbound: outbound,
                            compound: compound,
                            keyPath: keyPath,
                            autoIncrement: autoIncrement,
                            unique: true,
                            extractKey: getKeyExtractor(keyPath)
                        },
                        indexes: arrayify(store.indexNames).map(function (indexName) { return store.index(indexName); })
                            .map(function (index) {
                            var name = index.name, unique = index.unique, multiEntry = index.multiEntry, keyPath = index.keyPath;
                            var compound = isArray(keyPath);
                            var result = {
                                name: name,
                                compound: compound,
                                keyPath: keyPath,
                                unique: unique,
                                multiEntry: multiEntry,
                                extractKey: getKeyExtractor(keyPath)
                            };
                            indexByKeyPath[getKeyPathAlias(keyPath)] = result;
                            return result;
                        }),
                        getIndexByKeyPath: function (keyPath) { return indexByKeyPath[getKeyPathAlias(keyPath)]; }
                    };
                    indexByKeyPath[":id"] = result.primaryKey;
                    if (keyPath != null) {
                        indexByKeyPath[getKeyPathAlias(keyPath)] = result.primaryKey;
                    }
                    return result;
                })
            },
            hasGetAll: tables.length > 0 && ('getAll' in trans.objectStore(tables[0])) &&
                !(typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&
                    !/(Chrome\/|Edge\/)/.test(navigator.userAgent) &&
                    [].concat(navigator.userAgent.match(/Safari\/(\d*)/))[1] < 604)
        };
    }
    function makeIDBKeyRange(range) {
        if (range.type === 3          )
            return null;
        if (range.type === 4            )
            throw new Error("Cannot convert never type to IDBKeyRange");
        var lower = range.lower, upper = range.upper, lowerOpen = range.lowerOpen, upperOpen = range.upperOpen;
        var idbRange = lower === undefined ?
            upper === undefined ?
                null :
                IdbKeyRange.upperBound(upper, !!upperOpen) :
            upper === undefined ?
                IdbKeyRange.lowerBound(lower, !!lowerOpen) :
                IdbKeyRange.bound(lower, upper, !!lowerOpen, !!upperOpen);
        return idbRange;
    }
    function createDbCoreTable(tableSchema) {
        var tableName = tableSchema.name;
        function mutate(_a) {
            var trans = _a.trans, type = _a.type, keys$$1 = _a.keys, values = _a.values, range = _a.range, wantResults = _a.wantResults;
            return new Promise(function (resolve, reject) {
                resolve = wrap(resolve);
                var store = trans.objectStore(tableName);
                var outbound = store.keyPath == null;
                var isAddOrPut = type === "put" || type === "add";
                if (!isAddOrPut && type !== 'delete' && type !== 'deleteRange')
                    throw new Error("Invalid operation type: " + type);
                var length = (keys$$1 || values || { length: 1 }).length;
                if (keys$$1 && values && keys$$1.length !== values.length) {
                    throw new Error("Given keys array must have same length as given values array.");
                }
                if (length === 0)
                    return resolve({ numFailures: 0, failures: {}, results: [], lastResult: undefined });
                var results = wantResults && __spreadArrays((keys$$1 ?
                    keys$$1 :
                    getEffectiveKeys(tableSchema.primaryKey, { type: type, keys: keys$$1, values: values })));
                var req;
                var failures = [];
                var numFailures = 0;
                var errorHandler = function (event) {
                    ++numFailures;
                    preventDefault(event);
                    if (results)
                        results[event.target._reqno] = undefined;
                    failures[event.target._reqno] = event.target.error;
                };
                var setResult = function (_a) {
                    var target = _a.target;
                    results[target._reqno] = target.result;
                };
                if (type === 'deleteRange') {
                    if (range.type === 4            )
                        return resolve({ numFailures: numFailures, failures: failures, results: results, lastResult: undefined });
                    if (range.type === 3          )
                        req = store.clear();
                    else
                        req = store.delete(makeIDBKeyRange(range));
                }
                else {
                    var _a = isAddOrPut ?
                        outbound ?
                            [values, keys$$1] :
                            [values, null] :
                        [keys$$1, null], args1 = _a[0], args2 = _a[1];
                    if (isAddOrPut) {
                        for (var i = 0; i < length; ++i) {
                            req = (args2 && args2[i] !== undefined ?
                                store[type](args1[i], args2[i]) :
                                store[type](args1[i]));
                            req._reqno = i;
                            if (results && results[i] === undefined) {
                                req.onsuccess = setResult;
                            }
                            req.onerror = errorHandler;
                        }
                    }
                    else {
                        for (var i = 0; i < length; ++i) {
                            req = store[type](args1[i]);
                            req._reqno = i;
                            req.onerror = errorHandler;
                        }
                    }
                }
                var done = function (event) {
                    var lastResult = event.target.result;
                    if (results)
                        results[length - 1] = lastResult;
                    resolve({
                        numFailures: numFailures,
                        failures: failures,
                        results: results,
                        lastResult: lastResult
                    });
                };
                req.onerror = function (event) {
                    errorHandler(event);
                    done(event);
                };
                req.onsuccess = done;
            });
        }
        function openCursor(_a) {
            var trans = _a.trans, values = _a.values, query = _a.query, reverse = _a.reverse, unique = _a.unique;
            return new Promise(function (resolve, reject) {
                resolve = wrap(resolve);
                var index = query.index, range = query.range;
                var store = trans.objectStore(tableName);
                var source = index.isPrimaryKey ?
                    store :
                    store.index(index.name);
                var direction = reverse ?
                    unique ?
                        "prevunique" :
                        "prev" :
                    unique ?
                        "nextunique" :
                        "next";
                var req = values || !('openKeyCursor' in source) ?
                    source.openCursor(makeIDBKeyRange(range), direction) :
                    source.openKeyCursor(makeIDBKeyRange(range), direction);
                req.onerror = eventRejectHandler(reject);
                req.onsuccess = wrap(function (ev) {
                    var cursor = req.result;
                    if (!cursor) {
                        resolve(null);
                        return;
                    }
                    cursor.___id = ++_id_counter;
                    cursor.done = false;
                    var _cursorContinue = cursor.continue.bind(cursor);
                    var _cursorContinuePrimaryKey = cursor.continuePrimaryKey;
                    if (_cursorContinuePrimaryKey)
                        _cursorContinuePrimaryKey = _cursorContinuePrimaryKey.bind(cursor);
                    var _cursorAdvance = cursor.advance.bind(cursor);
                    var doThrowCursorIsNotStarted = function () { throw new Error("Cursor not started"); };
                    var doThrowCursorIsStopped = function () { throw new Error("Cursor not stopped"); };
                    cursor.trans = trans;
                    cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsNotStarted;
                    cursor.fail = wrap(reject);
                    cursor.next = function () {
                        var _this = this;
                        var gotOne = 1;
                        return this.start(function () { return gotOne-- ? _this.continue() : _this.stop(); }).then(function () { return _this; });
                    };
                    cursor.start = function (callback) {
                        var iterationPromise = new Promise(function (resolveIteration, rejectIteration) {
                            resolveIteration = wrap(resolveIteration);
                            req.onerror = eventRejectHandler(rejectIteration);
                            cursor.fail = rejectIteration;
                            cursor.stop = function (value) {
                                cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsStopped;
                                resolveIteration(value);
                            };
                        });
                        var guardedCallback = function () {
                            if (req.result) {
                                try {
                                    callback();
                                }
                                catch (err) {
                                    cursor.fail(err);
                                }
                            }
                            else {
                                cursor.done = true;
                                cursor.start = function () { throw new Error("Cursor behind last entry"); };
                                cursor.stop();
                            }
                        };
                        req.onsuccess = wrap(function (ev) {
                            req.onsuccess = guardedCallback;
                            guardedCallback();
                        });
                        cursor.continue = _cursorContinue;
                        cursor.continuePrimaryKey = _cursorContinuePrimaryKey;
                        cursor.advance = _cursorAdvance;
                        guardedCallback();
                        return iterationPromise;
                    };
                    resolve(cursor);
                }, reject);
            });
        }
        function query(hasGetAll) {
            return function (request) {
                return new Promise(function (resolve, reject) {
                    resolve = wrap(resolve);
                    var trans = request.trans, values = request.values, limit = request.limit, query = request.query;
                    var nonInfinitLimit = limit === Infinity ? undefined : limit;
                    var index = query.index, range = query.range;
                    var store = trans.objectStore(tableName);
                    var source = index.isPrimaryKey ? store : store.index(index.name);
                    var idbKeyRange = makeIDBKeyRange(range);
                    if (limit === 0)
                        return resolve({ result: [] });
                    if (hasGetAll) {
                        var req = values ?
                            source.getAll(idbKeyRange, nonInfinitLimit) :
                            source.getAllKeys(idbKeyRange, nonInfinitLimit);
                        req.onsuccess = function (event) { return resolve({ result: event.target.result }); };
                        req.onerror = eventRejectHandler(reject);
                    }
                    else {
                        var count_1 = 0;
                        var req_1 = values || !('openKeyCursor' in source) ?
                            source.openCursor(idbKeyRange) :
                            source.openKeyCursor(idbKeyRange);
                        var result_1 = [];
                        req_1.onsuccess = function (event) {
                            var cursor = req_1.result;
                            if (!cursor)
                                return resolve({ result: result_1 });
                            result_1.push(values ? cursor.value : cursor.primaryKey);
                            if (++count_1 === limit)
                                return resolve({ result: result_1 });
                            cursor.continue();
                        };
                        req_1.onerror = eventRejectHandler(reject);
                    }
                });
            };
        }
        return {
            name: tableName,
            schema: tableSchema,
            mutate: mutate,
            getMany: function (_a) {
                var trans = _a.trans, keys$$1 = _a.keys;
                return new Promise(function (resolve, reject) {
                    resolve = wrap(resolve);
                    var store = trans.objectStore(tableName);
                    var length = keys$$1.length;
                    var result = new Array(length);
                    var keyCount = 0;
                    var callbackCount = 0;
                    var valueCount = 0;
                    var req;
                    var successHandler = function (event) {
                        var req = event.target;
                        if ((result[req._pos] = req.result) != null)
                            ++valueCount;
                        if (++callbackCount === keyCount)
                            resolve(result);
                    };
                    var errorHandler = eventRejectHandler(reject);
                    for (var i = 0; i < length; ++i) {
                        var key = keys$$1[i];
                        if (key != null) {
                            req = store.get(keys$$1[i]);
                            req._pos = i;
                            req.onsuccess = successHandler;
                            req.onerror = errorHandler;
                            ++keyCount;
                        }
                    }
                    if (keyCount === 0)
                        resolve(result);
                });
            },
            get: function (_a) {
                var trans = _a.trans, key = _a.key;
                return new Promise(function (resolve, reject) {
                    resolve = wrap(resolve);
                    var store = trans.objectStore(tableName);
                    var req = store.get(key);
                    req.onsuccess = function (event) { return resolve(event.target.result); };
                    req.onerror = eventRejectHandler(reject);
                });
            },
            query: query(hasGetAll),
            openCursor: openCursor,
            count: function (_a) {
                var query = _a.query, trans = _a.trans;
                var index = query.index, range = query.range;
                return new Promise(function (resolve, reject) {
                    var store = trans.objectStore(tableName);
                    var source = index.isPrimaryKey ? store : store.index(index.name);
                    var idbKeyRange = makeIDBKeyRange(range);
                    var req = idbKeyRange ? source.count(idbKeyRange) : source.count();
                    req.onsuccess = wrap(function (ev) { return resolve(ev.target.result); });
                    req.onerror = eventRejectHandler(reject);
                });
            }
        };
    }
    var _a = extractSchema(db, tmpTrans), schema = _a.schema, hasGetAll = _a.hasGetAll;
    var tables = schema.tables.map(function (tableSchema) { return createDbCoreTable(tableSchema); });
    var tableMap = {};
    tables.forEach(function (table) { return tableMap[table.name] = table; });
    return {
        stack: "dbcore",
        transaction: db.transaction.bind(db),
        table: function (name) {
            var result = tableMap[name];
            if (!result)
                throw new Error("Table '" + name + "' not found");
            return tableMap[name];
        },
        cmp: cmp,
        MIN_KEY: -Infinity,
        MAX_KEY: getMaxKey(IdbKeyRange),
        schema: schema
    };
}

function createMiddlewareStack(stackImpl, middlewares) {
    return middlewares.reduce(function (down, _a) {
        var create = _a.create;
        return (__assign(__assign({}, down), create(down)));
    }, stackImpl);
}
function createMiddlewareStacks(middlewares, idbdb, _a, tmpTrans) {
    var IDBKeyRange = _a.IDBKeyRange, indexedDB = _a.indexedDB;
    var dbcore = createMiddlewareStack(createDBCore(idbdb, indexedDB, IDBKeyRange, tmpTrans), middlewares.dbcore);
    return {
        dbcore: dbcore
    };
}
function generateMiddlewareStacks(db, tmpTrans) {
    var idbdb = tmpTrans.db;
    var stacks = createMiddlewareStacks(db._middlewares, idbdb, db._deps, tmpTrans);
    db.core = stacks.dbcore;
    db.tables.forEach(function (table) {
        var tableName = table.name;
        if (db.core.schema.tables.some(function (tbl) { return tbl.name === tableName; })) {
            table.core = db.core.table(tableName);
            if (db[tableName] instanceof db.Table) {
                db[tableName].core = table.core;
            }
        }
    });
}

function setApiOnPlace(db, objs, tableNames, dbschema) {
    tableNames.forEach(function (tableName) {
        var schema = dbschema[tableName];
        objs.forEach(function (obj) {
            if (!(tableName in obj)) {
                if (obj === db.Transaction.prototype || obj instanceof db.Transaction) {
                    setProp(obj, tableName, {
                        get: function () { return this.table(tableName); },
                        set: function (value) {
                            defineProperty(this, tableName, { value: value, writable: true, configurable: true, enumerable: true });
                        }
                    });
                }
                else {
                    obj[tableName] = new db.Table(tableName, schema);
                }
            }
        });
    });
}
function removeTablesApi(db, objs) {
    objs.forEach(function (obj) {
        for (var key in obj) {
            if (obj[key] instanceof db.Table)
                delete obj[key];
        }
    });
}
function lowerVersionFirst(a, b) {
    return a._cfg.version - b._cfg.version;
}
function runUpgraders(db, oldVersion, idbUpgradeTrans, reject) {
    var globalSchema = db._dbSchema;
    var trans = db._createTransaction('readwrite', db._storeNames, globalSchema);
    trans.create(idbUpgradeTrans);
    trans._completion.catch(reject);
    var rejectTransaction = trans._reject.bind(trans);
    var transless = PSD.transless || PSD;
    newScope(function () {
        PSD.trans = trans;
        PSD.transless = transless;
        if (oldVersion === 0) {
            keys(globalSchema).forEach(function (tableName) {
                createTable(idbUpgradeTrans, tableName, globalSchema[tableName].primKey, globalSchema[tableName].indexes);
            });
            generateMiddlewareStacks(db, idbUpgradeTrans);
            DexiePromise.follow(function () { return db.on.populate.fire(trans); }).catch(rejectTransaction);
        }
        else
            updateTablesAndIndexes(db, oldVersion, trans, idbUpgradeTrans).catch(rejectTransaction);
    });
}
function updateTablesAndIndexes(db, oldVersion, trans, idbUpgradeTrans) {
    var queue = [];
    var versions = db._versions;
    var globalSchema = db._dbSchema = buildGlobalSchema(db, db.idbdb, idbUpgradeTrans);
    var anyContentUpgraderHasRun = false;
    var versToRun = versions.filter(function (v) { return v._cfg.version >= oldVersion; });
    versToRun.forEach(function (version) {
        queue.push(function () {
            var oldSchema = globalSchema;
            var newSchema = version._cfg.dbschema;
            adjustToExistingIndexNames(db, oldSchema, idbUpgradeTrans);
            adjustToExistingIndexNames(db, newSchema, idbUpgradeTrans);
            globalSchema = db._dbSchema = newSchema;
            var diff = getSchemaDiff(oldSchema, newSchema);
            diff.add.forEach(function (tuple) {
                createTable(idbUpgradeTrans, tuple[0], tuple[1].primKey, tuple[1].indexes);
            });
            diff.change.forEach(function (change) {
                if (change.recreate) {
                    throw new exceptions.Upgrade("Not yet support for changing primary key");
                }
                else {
                    var store_1 = idbUpgradeTrans.objectStore(change.name);
                    change.add.forEach(function (idx) { return addIndex(store_1, idx); });
                    change.change.forEach(function (idx) {
                        store_1.deleteIndex(idx.name);
                        addIndex(store_1, idx);
                    });
                    change.del.forEach(function (idxName) { return store_1.deleteIndex(idxName); });
                }
            });
            var contentUpgrade = version._cfg.contentUpgrade;
            if (contentUpgrade && version._cfg.version > oldVersion) {
                generateMiddlewareStacks(db, idbUpgradeTrans);
                anyContentUpgraderHasRun = true;
                var upgradeSchema_1 = shallowClone(newSchema);
                diff.del.forEach(function (table) {
                    upgradeSchema_1[table] = oldSchema[table];
                });
                removeTablesApi(db, [db.Transaction.prototype]);
                setApiOnPlace(db, [db.Transaction.prototype], keys(upgradeSchema_1), upgradeSchema_1);
                trans.schema = upgradeSchema_1;
                var contentUpgradeIsAsync_1 = isAsyncFunction(contentUpgrade);
                if (contentUpgradeIsAsync_1) {
                    incrementExpectedAwaits();
                }
                var returnValue_1;
                var promiseFollowed = DexiePromise.follow(function () {
                    returnValue_1 = contentUpgrade(trans);
                    if (returnValue_1) {
                        if (contentUpgradeIsAsync_1) {
                            var decrementor = decrementExpectedAwaits.bind(null, null);
                            returnValue_1.then(decrementor, decrementor);
                        }
                    }
                });
                return (returnValue_1 && typeof returnValue_1.then === 'function' ?
                    DexiePromise.resolve(returnValue_1) : promiseFollowed.then(function () { return returnValue_1; }));
            }
        });
        queue.push(function (idbtrans) {
            if (!anyContentUpgraderHasRun || !hasIEDeleteObjectStoreBug) {
                var newSchema = version._cfg.dbschema;
                deleteRemovedTables(newSchema, idbtrans);
            }
            removeTablesApi(db, [db.Transaction.prototype]);
            setApiOnPlace(db, [db.Transaction.prototype], db._storeNames, db._dbSchema);
            trans.schema = db._dbSchema;
        });
    });
    function runQueue() {
        return queue.length ? DexiePromise.resolve(queue.shift()(trans.idbtrans)).then(runQueue) :
            DexiePromise.resolve();
    }
    return runQueue().then(function () {
        createMissingTables(globalSchema, idbUpgradeTrans);
    });
}
function getSchemaDiff(oldSchema, newSchema) {
    var diff = {
        del: [],
        add: [],
        change: []
    };
    var table;
    for (table in oldSchema) {
        if (!newSchema[table])
            diff.del.push(table);
    }
    for (table in newSchema) {
        var oldDef = oldSchema[table], newDef = newSchema[table];
        if (!oldDef) {
            diff.add.push([table, newDef]);
        }
        else {
            var change = {
                name: table,
                def: newDef,
                recreate: false,
                del: [],
                add: [],
                change: []
            };
            if (oldDef.primKey.src !== newDef.primKey.src &&
                !isIEOrEdge
            ) {
                change.recreate = true;
                diff.change.push(change);
            }
            else {
                var oldIndexes = oldDef.idxByName;
                var newIndexes = newDef.idxByName;
                var idxName = void 0;
                for (idxName in oldIndexes) {
                    if (!newIndexes[idxName])
                        change.del.push(idxName);
                }
                for (idxName in newIndexes) {
                    var oldIdx = oldIndexes[idxName], newIdx = newIndexes[idxName];
                    if (!oldIdx)
                        change.add.push(newIdx);
                    else if (oldIdx.src !== newIdx.src)
                        change.change.push(newIdx);
                }
                if (change.del.length > 0 || change.add.length > 0 || change.change.length > 0) {
                    diff.change.push(change);
                }
            }
        }
    }
    return diff;
}
function createTable(idbtrans, tableName, primKey, indexes) {
    var store = idbtrans.db.createObjectStore(tableName, primKey.keyPath ?
        { keyPath: primKey.keyPath, autoIncrement: primKey.auto } :
        { autoIncrement: primKey.auto });
    indexes.forEach(function (idx) { return addIndex(store, idx); });
    return store;
}
function createMissingTables(newSchema, idbtrans) {
    keys(newSchema).forEach(function (tableName) {
        if (!idbtrans.db.objectStoreNames.contains(tableName)) {
            createTable(idbtrans, tableName, newSchema[tableName].primKey, newSchema[tableName].indexes);
        }
    });
}
function deleteRemovedTables(newSchema, idbtrans) {
    for (var i = 0; i < idbtrans.db.objectStoreNames.length; ++i) {
        var storeName = idbtrans.db.objectStoreNames[i];
        if (newSchema[storeName] == null) {
            idbtrans.db.deleteObjectStore(storeName);
        }
    }
}
function addIndex(store, idx) {
    store.createIndex(idx.name, idx.keyPath, { unique: idx.unique, multiEntry: idx.multi });
}
function buildGlobalSchema(db, idbdb, tmpTrans) {
    var globalSchema = {};
    var dbStoreNames = slice(idbdb.objectStoreNames, 0);
    dbStoreNames.forEach(function (storeName) {
        var store = tmpTrans.objectStore(storeName);
        var keyPath = store.keyPath;
        var primKey = createIndexSpec(nameFromKeyPath(keyPath), keyPath || "", false, false, !!store.autoIncrement, keyPath && typeof keyPath !== "string", true);
        var indexes = [];
        for (var j = 0; j < store.indexNames.length; ++j) {
            var idbindex = store.index(store.indexNames[j]);
            keyPath = idbindex.keyPath;
            var index = createIndexSpec(idbindex.name, keyPath, !!idbindex.unique, !!idbindex.multiEntry, false, keyPath && typeof keyPath !== "string", false);
            indexes.push(index);
        }
        globalSchema[storeName] = createTableSchema(storeName, primKey, indexes);
    });
    return globalSchema;
}
function readGlobalSchema(db, idbdb, tmpTrans) {
    db.verno = idbdb.version / 10;
    var globalSchema = db._dbSchema = buildGlobalSchema(db, idbdb, tmpTrans);
    db._storeNames = slice(idbdb.objectStoreNames, 0);
    setApiOnPlace(db, [db._allTables], keys(globalSchema), globalSchema);
}
function adjustToExistingIndexNames(db, schema, idbtrans) {
    var storeNames = idbtrans.db.objectStoreNames;
    for (var i = 0; i < storeNames.length; ++i) {
        var storeName = storeNames[i];
        var store = idbtrans.objectStore(storeName);
        db._hasGetAll = 'getAll' in store;
        for (var j = 0; j < store.indexNames.length; ++j) {
            var indexName = store.indexNames[j];
            var keyPath = store.index(indexName).keyPath;
            var dexieName = typeof keyPath === 'string' ? keyPath : "[" + slice(keyPath).join('+') + "]";
            if (schema[storeName]) {
                var indexSpec = schema[storeName].idxByName[dexieName];
                if (indexSpec) {
                    indexSpec.name = indexName;
                    delete schema[storeName].idxByName[dexieName];
                    schema[storeName].idxByName[indexName] = indexSpec;
                }
            }
        }
    }
    if (typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&
        !/(Chrome\/|Edge\/)/.test(navigator.userAgent) &&
        _global.WorkerGlobalScope && _global instanceof _global.WorkerGlobalScope &&
        [].concat(navigator.userAgent.match(/Safari\/(\d*)/))[1] < 604) {
        db._hasGetAll = false;
    }
}
function parseIndexSyntax(primKeyAndIndexes) {
    return primKeyAndIndexes.split(',').map(function (index, indexNum) {
        index = index.trim();
        var name = index.replace(/([&*]|\+\+)/g, "");
        var keyPath = /^\[/.test(name) ? name.match(/^\[(.*)\]$/)[1].split('+') : name;
        return createIndexSpec(name, keyPath || null, /\&/.test(index), /\*/.test(index), /\+\+/.test(index), isArray(keyPath), indexNum === 0);
    });
}

var Version =               (function () {
    function Version() {
    }
    Version.prototype._parseStoresSpec = function (stores, outSchema) {
        keys(stores).forEach(function (tableName) {
            if (stores[tableName] !== null) {
                var indexes = parseIndexSyntax(stores[tableName]);
                var primKey = indexes.shift();
                if (primKey.multi)
                    throw new exceptions.Schema("Primary key cannot be multi-valued");
                indexes.forEach(function (idx) {
                    if (idx.auto)
                        throw new exceptions.Schema("Only primary key can be marked as autoIncrement (++)");
                    if (!idx.keyPath)
                        throw new exceptions.Schema("Index must have a name and cannot be an empty string");
                });
                outSchema[tableName] = createTableSchema(tableName, primKey, indexes);
            }
        });
    };
    Version.prototype.stores = function (stores) {
        var db = this.db;
        this._cfg.storesSource = this._cfg.storesSource ?
            extend(this._cfg.storesSource, stores) :
            stores;
        var versions = db._versions;
        var storesSpec = {};
        var dbschema = {};
        versions.forEach(function (version) {
            extend(storesSpec, version._cfg.storesSource);
            dbschema = (version._cfg.dbschema = {});
            version._parseStoresSpec(storesSpec, dbschema);
        });
        db._dbSchema = dbschema;
        removeTablesApi(db, [db._allTables, db, db.Transaction.prototype]);
        setApiOnPlace(db, [db._allTables, db, db.Transaction.prototype, this._cfg.tables], keys(dbschema), dbschema);
        db._storeNames = keys(dbschema);
        return this;
    };
    Version.prototype.upgrade = function (upgradeFunction) {
        this._cfg.contentUpgrade = upgradeFunction;
        return this;
    };
    return Version;
}());

function createVersionConstructor(db) {
    return makeClassConstructor(Version.prototype, function Version$$1(versionNumber) {
        this.db = db;
        this._cfg = {
            version: versionNumber,
            storesSource: null,
            dbschema: {},
            tables: {},
            contentUpgrade: null
        };
    });
}

var databaseEnumerator;
function DatabaseEnumerator(indexedDB) {
    var hasDatabasesNative = indexedDB && typeof indexedDB.databases === 'function';
    var dbNamesTable;
    if (!hasDatabasesNative) {
        var db = new Dexie(DBNAMES_DB, { addons: [] });
        db.version(1).stores({ dbnames: 'name' });
        dbNamesTable = db.table('dbnames');
    }
    return {
        getDatabaseNames: function () {
            return hasDatabasesNative
                ?
                    DexiePromise.resolve(indexedDB.databases()).then(function (infos) { return infos
                        .map(function (info) { return info.name; })
                        .filter(function (name) { return name !== DBNAMES_DB; }); })
                :
                    dbNamesTable.toCollection().primaryKeys();
        },
        add: function (name) {
            return !hasDatabasesNative && name !== DBNAMES_DB && dbNamesTable.put({ name: name }).catch(nop);
        },
        remove: function (name) {
            return !hasDatabasesNative && name !== DBNAMES_DB && dbNamesTable.delete(name).catch(nop);
        }
    };
}
function initDatabaseEnumerator(indexedDB) {
    try {
        databaseEnumerator = DatabaseEnumerator(indexedDB);
    }
    catch (e) { }
}

function vip(fn) {
    return newScope(function () {
        PSD.letThrough = true;
        return fn();
    });
}

function dexieOpen(db) {
    var state = db._state;
    var indexedDB = db._deps.indexedDB;
    if (state.isBeingOpened || db.idbdb)
        return state.dbReadyPromise.then(function () { return state.dbOpenError ?
            rejection(state.dbOpenError) :
            db; });
    debug && (state.openCanceller._stackHolder = getErrorWithStack());
    state.isBeingOpened = true;
    state.dbOpenError = null;
    state.openComplete = false;
    var resolveDbReady = state.dbReadyResolve,
    upgradeTransaction = null;
    return DexiePromise.race([state.openCanceller, new DexiePromise(function (resolve, reject) {
            if (!indexedDB)
                throw new exceptions.MissingAPI("indexedDB API not found. If using IE10+, make sure to run your code on a server URL " +
                    "(not locally). If using old Safari versions, make sure to include indexedDB polyfill.");
            var dbName = db.name;
            var req = state.autoSchema ?
                indexedDB.open(dbName) :
                indexedDB.open(dbName, Math.round(db.verno * 10));
            if (!req)
                throw new exceptions.MissingAPI("IndexedDB API not available");
            req.onerror = eventRejectHandler(reject);
            req.onblocked = wrap(db._fireOnBlocked);
            req.onupgradeneeded = wrap(function (e) {
                upgradeTransaction = req.transaction;
                if (state.autoSchema && !db._options.allowEmptyDB) {
                    req.onerror = preventDefault;
                    upgradeTransaction.abort();
                    req.result.close();
                    var delreq = indexedDB.deleteDatabase(dbName);
                    delreq.onsuccess = delreq.onerror = wrap(function () {
                        reject(new exceptions.NoSuchDatabase("Database " + dbName + " doesnt exist"));
                    });
                }
                else {
                    upgradeTransaction.onerror = eventRejectHandler(reject);
                    var oldVer = e.oldVersion > Math.pow(2, 62) ? 0 : e.oldVersion;
                    db.idbdb = req.result;
                    runUpgraders(db, oldVer / 10, upgradeTransaction, reject);
                }
            }, reject);
            req.onsuccess = wrap(function () {
                upgradeTransaction = null;
                var idbdb = db.idbdb = req.result;
                var objectStoreNames = slice(idbdb.objectStoreNames);
                if (objectStoreNames.length > 0)
                    try {
                        var tmpTrans = idbdb.transaction(safariMultiStoreFix(objectStoreNames), 'readonly');
                        if (state.autoSchema)
                            readGlobalSchema(db, idbdb, tmpTrans);
                        else
                            adjustToExistingIndexNames(db, db._dbSchema, tmpTrans);
                        generateMiddlewareStacks(db, tmpTrans);
                    }
                    catch (e) {
                    }
                connections.push(db);
                idbdb.onversionchange = wrap(function (ev) {
                    state.vcFired = true;
                    db.on("versionchange").fire(ev);
                });
                databaseEnumerator.add(dbName);
                resolve();
            }, reject);
        })]).then(function () {
        state.onReadyBeingFired = [];
        return DexiePromise.resolve(vip(db.on.ready.fire)).then(function fireRemainders() {
            if (state.onReadyBeingFired.length > 0) {
                var remainders = state.onReadyBeingFired.reduce(promisableChain, nop);
                state.onReadyBeingFired = [];
                return DexiePromise.resolve(vip(remainders)).then(fireRemainders);
            }
        });
    }).finally(function () {
        state.onReadyBeingFired = null;
    }).then(function () {
        state.isBeingOpened = false;
        return db;
    }).catch(function (err) {
        try {
            upgradeTransaction && upgradeTransaction.abort();
        }
        catch (e) { }
        state.isBeingOpened = false;
        db.close();
        state.dbOpenError = err;
        return rejection(state.dbOpenError);
    }).finally(function () {
        state.openComplete = true;
        resolveDbReady();
    });
}

function awaitIterator(iterator) {
    var callNext = function (result) { return iterator.next(result); }, doThrow = function (error) { return iterator.throw(error); }, onSuccess = step(callNext), onError = step(doThrow);
    function step(getNext) {
        return function (val) {
            var next = getNext(val), value = next.value;
            return next.done ? value :
                (!value || typeof value.then !== 'function' ?
                    isArray(value) ? Promise.all(value).then(onSuccess, onError) : onSuccess(value) :
                    value.then(onSuccess, onError));
        };
    }
    return step(callNext)();
}

function extractTransactionArgs(mode, _tableArgs_, scopeFunc) {
    var i = arguments.length;
    if (i < 2)
        throw new exceptions.InvalidArgument("Too few arguments");
    var args = new Array(i - 1);
    while (--i)
        args[i - 1] = arguments[i];
    scopeFunc = args.pop();
    var tables = flatten(args);
    return [mode, tables, scopeFunc];
}
function enterTransactionScope(db, mode, storeNames, parentTransaction, scopeFunc) {
    return DexiePromise.resolve().then(function () {
        var transless = PSD.transless || PSD;
        var trans = db._createTransaction(mode, storeNames, db._dbSchema, parentTransaction);
        var zoneProps = {
            trans: trans,
            transless: transless
        };
        if (parentTransaction) {
            trans.idbtrans = parentTransaction.idbtrans;
        }
        else {
            trans.create();
        }
        var scopeFuncIsAsync = isAsyncFunction(scopeFunc);
        if (scopeFuncIsAsync) {
            incrementExpectedAwaits();
        }
        var returnValue;
        var promiseFollowed = DexiePromise.follow(function () {
            returnValue = scopeFunc.call(trans, trans);
            if (returnValue) {
                if (scopeFuncIsAsync) {
                    var decrementor = decrementExpectedAwaits.bind(null, null);
                    returnValue.then(decrementor, decrementor);
                }
                else if (typeof returnValue.next === 'function' && typeof returnValue.throw === 'function') {
                    returnValue = awaitIterator(returnValue);
                }
            }
        }, zoneProps);
        return (returnValue && typeof returnValue.then === 'function' ?
            DexiePromise.resolve(returnValue).then(function (x) { return trans.active ?
                x
                : rejection(new exceptions.PrematureCommit("Transaction committed too early. See http://bit.ly/2kdckMn")); })
            : promiseFollowed.then(function () { return returnValue; })).then(function (x) {
            if (parentTransaction)
                trans._resolve();
            return trans._completion.then(function () { return x; });
        }).catch(function (e) {
            trans._reject(e);
            return rejection(e);
        });
    });
}

function pad(a, value, count) {
    var result = isArray(a) ? a.slice() : [a];
    for (var i = 0; i < count; ++i)
        result.push(value);
    return result;
}
function createVirtualIndexMiddleware(down) {
    return __assign(__assign({}, down), { table: function (tableName) {
            var table = down.table(tableName);
            var schema = table.schema;
            var indexLookup = {};
            var allVirtualIndexes = [];
            function addVirtualIndexes(keyPath, keyTail, lowLevelIndex) {
                var keyPathAlias = getKeyPathAlias(keyPath);
                var indexList = (indexLookup[keyPathAlias] = indexLookup[keyPathAlias] || []);
                var keyLength = keyPath == null ? 0 : typeof keyPath === 'string' ? 1 : keyPath.length;
                var isVirtual = keyTail > 0;
                var virtualIndex = __assign(__assign({}, lowLevelIndex), { isVirtual: isVirtual, isPrimaryKey: !isVirtual && lowLevelIndex.isPrimaryKey, keyTail: keyTail,
                    keyLength: keyLength, extractKey: getKeyExtractor(keyPath), unique: !isVirtual && lowLevelIndex.unique });
                indexList.push(virtualIndex);
                if (!virtualIndex.isPrimaryKey) {
                    allVirtualIndexes.push(virtualIndex);
                }
                if (keyLength > 1) {
                    var virtualKeyPath = keyLength === 2 ?
                        keyPath[0] :
                        keyPath.slice(0, keyLength - 1);
                    addVirtualIndexes(virtualKeyPath, keyTail + 1, lowLevelIndex);
                }
                indexList.sort(function (a, b) { return a.keyTail - b.keyTail; });
                return virtualIndex;
            }
            var primaryKey = addVirtualIndexes(schema.primaryKey.keyPath, 0, schema.primaryKey);
            indexLookup[":id"] = [primaryKey];
            for (var _i = 0, _a = schema.indexes; _i < _a.length; _i++) {
                var index = _a[_i];
                addVirtualIndexes(index.keyPath, 0, index);
            }
            function findBestIndex(keyPath) {
                var result = indexLookup[getKeyPathAlias(keyPath)];
                return result && result[0];
            }
            function translateRange(range, keyTail) {
                return {
                    type: range.type === 1             ?
                        2             :
                        range.type,
                    lower: pad(range.lower, range.lowerOpen ? down.MAX_KEY : down.MIN_KEY, keyTail),
                    lowerOpen: true,
                    upper: pad(range.upper, range.upperOpen ? down.MIN_KEY : down.MAX_KEY, keyTail),
                    upperOpen: true
                };
            }
            function translateRequest(req) {
                var index = req.query.index;
                return index.isVirtual ? __assign(__assign({}, req), { query: {
                        index: index,
                        range: translateRange(req.query.range, index.keyTail)
                    } }) : req;
            }
            var result = __assign(__assign({}, table), { schema: __assign(__assign({}, schema), { primaryKey: primaryKey, indexes: allVirtualIndexes, getIndexByKeyPath: findBestIndex }), count: function (req) {
                    return table.count(translateRequest(req));
                },
                query: function (req) {
                    return table.query(translateRequest(req));
                },
                openCursor: function (req) {
                    var _a = req.query.index, keyTail = _a.keyTail, isVirtual = _a.isVirtual, keyLength = _a.keyLength;
                    if (!isVirtual)
                        return table.openCursor(req);
                    function createVirtualCursor(cursor) {
                        function _continue(key) {
                            key != null ?
                                cursor.continue(pad(key, req.reverse ? down.MAX_KEY : down.MIN_KEY, keyTail)) :
                                req.unique ?
                                    cursor.continue(pad(cursor.key, req.reverse ? down.MIN_KEY : down.MAX_KEY, keyTail)) :
                                    cursor.continue();
                        }
                        var virtualCursor = Object.create(cursor, {
                            continue: { value: _continue },
                            continuePrimaryKey: {
                                value: function (key, primaryKey) {
                                    cursor.continuePrimaryKey(pad(key, down.MAX_KEY, keyTail), primaryKey);
                                }
                            },
                            key: {
                                get: function () {
                                    var key = cursor.key;
                                    return keyLength === 1 ?
                                        key[0] :
                                        key.slice(0, keyLength);
                                }
                            },
                            value: {
                                get: function () {
                                    return cursor.value;
                                }
                            }
                        });
                        return virtualCursor;
                    }
                    return table.openCursor(translateRequest(req))
                        .then(function (cursor) { return cursor && createVirtualCursor(cursor); });
                } });
            return result;
        } });
}
var virtualIndexMiddleware = {
    stack: "dbcore",
    name: "VirtualIndexMiddleware",
    level: 1,
    create: createVirtualIndexMiddleware
};

var hooksMiddleware = {
    stack: "dbcore",
    name: "HooksMiddleware",
    level: 2,
    create: function (downCore) { return (__assign(__assign({}, downCore), { table: function (tableName) {
            var downTable = downCore.table(tableName);
            var primaryKey = downTable.schema.primaryKey;
            var tableMiddleware = __assign(__assign({}, downTable), { mutate: function (req) {
                    var dxTrans = PSD.trans;
                    var _a = dxTrans.table(tableName).hook, deleting = _a.deleting, creating = _a.creating, updating = _a.updating;
                    switch (req.type) {
                        case 'add':
                            if (creating.fire === nop)
                                break;
                            return dxTrans._promise('readwrite', function () { return addPutOrDelete(req); }, true);
                        case 'put':
                            if (creating.fire === nop && updating.fire === nop)
                                break;
                            return dxTrans._promise('readwrite', function () { return addPutOrDelete(req); }, true);
                        case 'delete':
                            if (deleting.fire === nop)
                                break;
                            return dxTrans._promise('readwrite', function () { return addPutOrDelete(req); }, true);
                        case 'deleteRange':
                            if (deleting.fire === nop)
                                break;
                            return dxTrans._promise('readwrite', function () { return deleteRange(req); }, true);
                    }
                    return downTable.mutate(req);
                    function addPutOrDelete(req) {
                        var dxTrans = PSD.trans;
                        var keys$$1 = req.keys || getEffectiveKeys(primaryKey, req);
                        if (!keys$$1)
                            throw new Error("Keys missing");
                        req = req.type === 'add' || req.type === 'put' ? __assign(__assign({}, req), { keys: keys$$1, wantResults: true }) :
                         __assign({}, req);
                        if (req.type !== 'delete')
                            req.values = __spreadArrays(req.values);
                        if (req.keys)
                            req.keys = __spreadArrays(req.keys);
                        return getExistingValues(downTable, req, keys$$1).then(function (existingValues) {
                            var contexts = keys$$1.map(function (key, i) {
                                var existingValue = existingValues[i];
                                var ctx = { onerror: null, onsuccess: null };
                                if (req.type === 'delete') {
                                    deleting.fire.call(ctx, key, existingValue, dxTrans);
                                }
                                else if (req.type === 'add' || existingValue === undefined) {
                                    var generatedPrimaryKey = creating.fire.call(ctx, key, req.values[i], dxTrans);
                                    if (key == null && generatedPrimaryKey != null) {
                                        key = generatedPrimaryKey;
                                        req.keys[i] = key;
                                        if (!primaryKey.outbound) {
                                            setByKeyPath(req.values[i], primaryKey.keyPath, key);
                                        }
                                    }
                                }
                                else {
                                    var objectDiff = getObjectDiff(existingValue, req.values[i]);
                                    var additionalChanges_1 = updating.fire.call(ctx, objectDiff, key, existingValue, dxTrans);
                                    if (additionalChanges_1) {
                                        var requestedValue_1 = req.values[i];
                                        Object.keys(additionalChanges_1).forEach(function (keyPath) {
                                            setByKeyPath(requestedValue_1, keyPath, additionalChanges_1[keyPath]);
                                        });
                                    }
                                }
                                return ctx;
                            });
                            return downTable.mutate(req).then(function (_a) {
                                var failures = _a.failures, results = _a.results, numFailures = _a.numFailures, lastResult = _a.lastResult;
                                for (var i = 0; i < keys$$1.length; ++i) {
                                    var primKey = results ? results[i] : keys$$1[i];
                                    var ctx = contexts[i];
                                    if (primKey == null) {
                                        ctx.onerror && ctx.onerror(failures[i]);
                                    }
                                    else {
                                        ctx.onsuccess && ctx.onsuccess(req.type === 'put' && existingValues[i] ?
                                            req.values[i] :
                                            primKey
                                        );
                                    }
                                }
                                return { failures: failures, results: results, numFailures: numFailures, lastResult: lastResult };
                            }).catch(function (error) {
                                contexts.forEach(function (ctx) { return ctx.onerror && ctx.onerror(error); });
                                return Promise.reject(error);
                            });
                        });
                    }
                    function deleteRange(req) {
                        return deleteNextChunk(req.trans, req.range, 10000);
                    }
                    function deleteNextChunk(trans, range, limit) {
                        return downTable.query({ trans: trans, values: false, query: { index: primaryKey, range: range }, limit: limit })
                            .then(function (_a) {
                            var result = _a.result;
                            return addPutOrDelete({ type: 'delete', keys: result, trans: trans }).then(function (res) {
                                if (res.numFailures > 0)
                                    return Promise.reject(res.failures[0]);
                                if (result.length < limit) {
                                    return { failures: [], numFailures: 0, lastResult: undefined };
                                }
                                else {
                                    return deleteNextChunk(trans, __assign(__assign({}, range), { lower: result[result.length - 1], lowerOpen: true }), limit);
                                }
                            });
                        });
                    }
                } });
            return tableMiddleware;
        } })); }
};

var Dexie =               (function () {
    function Dexie(name, options) {
        var _this = this;
        this._middlewares = {};
        this.verno = 0;
        var deps = Dexie.dependencies;
        this._options = options = __assign({
            addons: Dexie.addons, autoOpen: true,
            indexedDB: deps.indexedDB, IDBKeyRange: deps.IDBKeyRange }, options);
        this._deps = {
            indexedDB: options.indexedDB,
            IDBKeyRange: options.IDBKeyRange
        };
        var addons = options.addons;
        this._dbSchema = {};
        this._versions = [];
        this._storeNames = [];
        this._allTables = {};
        this.idbdb = null;
        var state = {
            dbOpenError: null,
            isBeingOpened: false,
            onReadyBeingFired: null,
            openComplete: false,
            dbReadyResolve: nop,
            dbReadyPromise: null,
            cancelOpen: nop,
            openCanceller: null,
            autoSchema: true
        };
        state.dbReadyPromise = new DexiePromise(function (resolve) {
            state.dbReadyResolve = resolve;
        });
        state.openCanceller = new DexiePromise(function (_, reject) {
            state.cancelOpen = reject;
        });
        this._state = state;
        this.name = name;
        this.on = Events(this, "populate", "blocked", "versionchange", { ready: [promisableChain, nop] });
        this.on.ready.subscribe = override(this.on.ready.subscribe, function (subscribe) {
            return function (subscriber, bSticky) {
                Dexie.vip(function () {
                    var state = _this._state;
                    if (state.openComplete) {
                        if (!state.dbOpenError)
                            DexiePromise.resolve().then(subscriber);
                        if (bSticky)
                            subscribe(subscriber);
                    }
                    else if (state.onReadyBeingFired) {
                        state.onReadyBeingFired.push(subscriber);
                        if (bSticky)
                            subscribe(subscriber);
                    }
                    else {
                        subscribe(subscriber);
                        var db_1 = _this;
                        if (!bSticky)
                            subscribe(function unsubscribe() {
                                db_1.on.ready.unsubscribe(subscriber);
                                db_1.on.ready.unsubscribe(unsubscribe);
                            });
                    }
                });
            };
        });
        this.Collection = createCollectionConstructor(this);
        this.Table = createTableConstructor(this);
        this.Transaction = createTransactionConstructor(this);
        this.Version = createVersionConstructor(this);
        this.WhereClause = createWhereClauseConstructor(this);
        this.on("versionchange", function (ev) {
            if (ev.newVersion > 0)
                console.warn("Another connection wants to upgrade database '" + _this.name + "'. Closing db now to resume the upgrade.");
            else
                console.warn("Another connection wants to delete database '" + _this.name + "'. Closing db now to resume the delete request.");
            _this.close();
        });
        this.on("blocked", function (ev) {
            if (!ev.newVersion || ev.newVersion < ev.oldVersion)
                console.warn("Dexie.delete('" + _this.name + "') was blocked");
            else
                console.warn("Upgrade '" + _this.name + "' blocked by other connection holding version " + ev.oldVersion / 10);
        });
        this._maxKey = getMaxKey(options.IDBKeyRange);
        this._createTransaction = function (mode, storeNames, dbschema, parentTransaction) { return new _this.Transaction(mode, storeNames, dbschema, parentTransaction); };
        this._fireOnBlocked = function (ev) {
            _this.on("blocked").fire(ev);
            connections
                .filter(function (c) { return c.name === _this.name && c !== _this && !c._state.vcFired; })
                .map(function (c) { return c.on("versionchange").fire(ev); });
        };
        this.use(virtualIndexMiddleware);
        this.use(hooksMiddleware);
        addons.forEach(function (addon) { return addon(_this); });
    }
    Dexie.prototype.version = function (versionNumber) {
        if (isNaN(versionNumber) || versionNumber < 0.1)
            throw new exceptions.Type("Given version is not a positive number");
        versionNumber = Math.round(versionNumber * 10) / 10;
        if (this.idbdb || this._state.isBeingOpened)
            throw new exceptions.Schema("Cannot add version when database is open");
        this.verno = Math.max(this.verno, versionNumber);
        var versions = this._versions;
        var versionInstance = versions.filter(function (v) { return v._cfg.version === versionNumber; })[0];
        if (versionInstance)
            return versionInstance;
        versionInstance = new this.Version(versionNumber);
        versions.push(versionInstance);
        versions.sort(lowerVersionFirst);
        versionInstance.stores({});
        this._state.autoSchema = false;
        return versionInstance;
    };
    Dexie.prototype._whenReady = function (fn) {
        var _this = this;
        return this._state.openComplete || PSD.letThrough ? fn() : new DexiePromise(function (resolve, reject) {
            if (!_this._state.isBeingOpened) {
                if (!_this._options.autoOpen) {
                    reject(new exceptions.DatabaseClosed());
                    return;
                }
                _this.open().catch(nop);
            }
            _this._state.dbReadyPromise.then(resolve, reject);
        }).then(fn);
    };
    Dexie.prototype.use = function (_a) {
        var stack = _a.stack, create = _a.create, level = _a.level, name = _a.name;
        if (name)
            this.unuse({ stack: stack, name: name });
        var middlewares = this._middlewares[stack] || (this._middlewares[stack] = []);
        middlewares.push({ stack: stack, create: create, level: level == null ? 10 : level, name: name });
        middlewares.sort(function (a, b) { return a.level - b.level; });
        return this;
    };
    Dexie.prototype.unuse = function (_a) {
        var stack = _a.stack, name = _a.name, create = _a.create;
        if (stack && this._middlewares[stack]) {
            this._middlewares[stack] = this._middlewares[stack].filter(function (mw) {
                return create ? mw.create !== create :
                    name ? mw.name !== name :
                        false;
            });
        }
        return this;
    };
    Dexie.prototype.open = function () {
        return dexieOpen(this);
    };
    Dexie.prototype.close = function () {
        var idx = connections.indexOf(this), state = this._state;
        if (idx >= 0)
            connections.splice(idx, 1);
        if (this.idbdb) {
            try {
                this.idbdb.close();
            }
            catch (e) { }
            this.idbdb = null;
        }
        this._options.autoOpen = false;
        state.dbOpenError = new exceptions.DatabaseClosed();
        if (state.isBeingOpened)
            state.cancelOpen(state.dbOpenError);
        state.dbReadyPromise = new DexiePromise(function (resolve) {
            state.dbReadyResolve = resolve;
        });
        state.openCanceller = new DexiePromise(function (_, reject) {
            state.cancelOpen = reject;
        });
    };
    Dexie.prototype.delete = function () {
        var _this = this;
        var hasArguments = arguments.length > 0;
        var state = this._state;
        return new DexiePromise(function (resolve, reject) {
            var doDelete = function () {
                _this.close();
                var req = _this._deps.indexedDB.deleteDatabase(_this.name);
                req.onsuccess = wrap(function () {
                    databaseEnumerator.remove(_this.name);
                    resolve();
                });
                req.onerror = eventRejectHandler(reject);
                req.onblocked = _this._fireOnBlocked;
            };
            if (hasArguments)
                throw new exceptions.InvalidArgument("Arguments not allowed in db.delete()");
            if (state.isBeingOpened) {
                state.dbReadyPromise.then(doDelete);
            }
            else {
                doDelete();
            }
        });
    };
    Dexie.prototype.backendDB = function () {
        return this.idbdb;
    };
    Dexie.prototype.isOpen = function () {
        return this.idbdb !== null;
    };
    Dexie.prototype.hasBeenClosed = function () {
        var dbOpenError = this._state.dbOpenError;
        return dbOpenError && (dbOpenError.name === 'DatabaseClosed');
    };
    Dexie.prototype.hasFailed = function () {
        return this._state.dbOpenError !== null;
    };
    Dexie.prototype.dynamicallyOpened = function () {
        return this._state.autoSchema;
    };
    Object.defineProperty(Dexie.prototype, "tables", {
        get: function () {
            var _this = this;
            return keys(this._allTables).map(function (name) { return _this._allTables[name]; });
        },
        enumerable: true,
        configurable: true
    });
    Dexie.prototype.transaction = function () {
        var args = extractTransactionArgs.apply(this, arguments);
        return this._transaction.apply(this, args);
    };
    Dexie.prototype._transaction = function (mode, tables, scopeFunc) {
        var _this = this;
        var parentTransaction = PSD.trans;
        if (!parentTransaction || parentTransaction.db !== this || mode.indexOf('!') !== -1)
            parentTransaction = null;
        var onlyIfCompatible = mode.indexOf('?') !== -1;
        mode = mode.replace('!', '').replace('?', '');
        var idbMode, storeNames;
        try {
            storeNames = tables.map(function (table) {
                var storeName = table instanceof _this.Table ? table.name : table;
                if (typeof storeName !== 'string')
                    throw new TypeError("Invalid table argument to Dexie.transaction(). Only Table or String are allowed");
                return storeName;
            });
            if (mode == "r" || mode === READONLY)
                idbMode = READONLY;
            else if (mode == "rw" || mode == READWRITE)
                idbMode = READWRITE;
            else
                throw new exceptions.InvalidArgument("Invalid transaction mode: " + mode);
            if (parentTransaction) {
                if (parentTransaction.mode === READONLY && idbMode === READWRITE) {
                    if (onlyIfCompatible) {
                        parentTransaction = null;
                    }
                    else
                        throw new exceptions.SubTransaction("Cannot enter a sub-transaction with READWRITE mode when parent transaction is READONLY");
                }
                if (parentTransaction) {
                    storeNames.forEach(function (storeName) {
                        if (parentTransaction && parentTransaction.storeNames.indexOf(storeName) === -1) {
                            if (onlyIfCompatible) {
                                parentTransaction = null;
                            }
                            else
                                throw new exceptions.SubTransaction("Table " + storeName +
                                    " not included in parent transaction.");
                        }
                    });
                }
                if (onlyIfCompatible && parentTransaction && !parentTransaction.active) {
                    parentTransaction = null;
                }
            }
        }
        catch (e) {
            return parentTransaction ?
                parentTransaction._promise(null, function (_, reject) { reject(e); }) :
                rejection(e);
        }
        var enterTransaction = enterTransactionScope.bind(null, this, idbMode, storeNames, parentTransaction, scopeFunc);
        return (parentTransaction ?
            parentTransaction._promise(idbMode, enterTransaction, "lock") :
            PSD.trans ?
                usePSD(PSD.transless, function () { return _this._whenReady(enterTransaction); }) :
                this._whenReady(enterTransaction));
    };
    Dexie.prototype.table = function (tableName) {
        if (!hasOwn(this._allTables, tableName)) {
            throw new exceptions.InvalidTable("Table " + tableName + " does not exist");
        }
        return this._allTables[tableName];
    };
    return Dexie;
}());

var Dexie$1 = Dexie;
props(Dexie$1, __assign(__assign({}, fullNameExceptions), {
    delete: function (databaseName) {
        var db = new Dexie$1(databaseName);
        return db.delete();
    },
    exists: function (name) {
        return new Dexie$1(name, { addons: [] }).open().then(function (db) {
            db.close();
            return true;
        }).catch('NoSuchDatabaseError', function () { return false; });
    },
    getDatabaseNames: function (cb) {
        return databaseEnumerator ?
            databaseEnumerator.getDatabaseNames().then(cb) :
            DexiePromise.resolve([]);
    },
    defineClass: function () {
        function Class(content) {
            extend(this, content);
        }
        return Class;
    },
    ignoreTransaction: function (scopeFunc) {
        return PSD.trans ?
            usePSD(PSD.transless, scopeFunc) :
            scopeFunc();
    },
    vip: vip, async: function (generatorFn) {
        return function () {
            try {
                var rv = awaitIterator(generatorFn.apply(this, arguments));
                if (!rv || typeof rv.then !== 'function')
                    return DexiePromise.resolve(rv);
                return rv;
            }
            catch (e) {
                return rejection(e);
            }
        };
    }, spawn: function (generatorFn, args, thiz) {
        try {
            var rv = awaitIterator(generatorFn.apply(thiz, args || []));
            if (!rv || typeof rv.then !== 'function')
                return DexiePromise.resolve(rv);
            return rv;
        }
        catch (e) {
            return rejection(e);
        }
    },
    currentTransaction: {
        get: function () { return PSD.trans || null; }
    }, waitFor: function (promiseOrFunction, optionalTimeout) {
        var promise = DexiePromise.resolve(typeof promiseOrFunction === 'function' ?
            Dexie$1.ignoreTransaction(promiseOrFunction) :
            promiseOrFunction)
            .timeout(optionalTimeout || 60000);
        return PSD.trans ?
            PSD.trans.waitFor(promise) :
            promise;
    },
    Promise: DexiePromise,
    debug: {
        get: function () { return debug; },
        set: function (value) {
            setDebug(value, value === 'dexie' ? function () { return true; } : dexieStackFrameFilter);
        }
    },
    derive: derive, extend: extend, props: props, override: override,
    Events: Events,
    getByKeyPath: getByKeyPath, setByKeyPath: setByKeyPath, delByKeyPath: delByKeyPath, shallowClone: shallowClone, deepClone: deepClone, getObjectDiff: getObjectDiff, asap: asap,
    minKey: minKey,
    addons: [],
    connections: connections,
    errnames: errnames,
    dependencies: (function () {
        try {
            return {
                indexedDB: _global.indexedDB || _global.mozIndexedDB || _global.webkitIndexedDB || _global.msIndexedDB,
                IDBKeyRange: _global.IDBKeyRange || _global.webkitIDBKeyRange
            };
        }
        catch (e) {
            return { indexedDB: null, IDBKeyRange: null };
        }
    })(),
    semVer: DEXIE_VERSION, version: DEXIE_VERSION.split('.')
        .map(function (n) { return parseInt(n); })
        .reduce(function (p, c, i) { return p + (c / Math.pow(10, i * 2)); }),
    default: Dexie$1,
    Dexie: Dexie$1 }));
Dexie$1.maxKey = getMaxKey(Dexie$1.dependencies.IDBKeyRange);

initDatabaseEnumerator(Dexie.dependencies.indexedDB);
DexiePromise.rejectionMapper = mapError;
setDebug(debug, dexieStackFrameFilter);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Dexie);
//# sourceMappingURL=dexie.mjs.map


/***/ }),

/***/ "./node_modules/fs.realpath/index.js":
/*!*******************************************!*\
  !*** ./node_modules/fs.realpath/index.js ***!
  \*******************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 1:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = realpath
realpath.realpath = realpath
realpath.sync = realpathSync
realpath.realpathSync = realpathSync
realpath.monkeypatch = monkeypatch
realpath.unmonkeypatch = unmonkeypatch

var fs = __webpack_require__(/*! fs */ "fs")
var origRealpath = fs.realpath
var origRealpathSync = fs.realpathSync

var version = process.version
var ok = /^v[0-5]\./.test(version)
var old = __webpack_require__(/*! ./old.js */ "./node_modules/fs.realpath/old.js")

function newError (er) {
  return er && er.syscall === 'realpath' && (
    er.code === 'ELOOP' ||
    er.code === 'ENOMEM' ||
    er.code === 'ENAMETOOLONG'
  )
}

function realpath (p, cache, cb) {
  if (ok) {
    return origRealpath(p, cache, cb)
  }

  if (typeof cache === 'function') {
    cb = cache
    cache = null
  }
  origRealpath(p, cache, function (er, result) {
    if (newError(er)) {
      old.realpath(p, cache, cb)
    } else {
      cb(er, result)
    }
  })
}

function realpathSync (p, cache) {
  if (ok) {
    return origRealpathSync(p, cache)
  }

  try {
    return origRealpathSync(p, cache)
  } catch (er) {
    if (newError(er)) {
      return old.realpathSync(p, cache)
    } else {
      throw er
    }
  }
}

function monkeypatch () {
  fs.realpath = realpath
  fs.realpathSync = realpathSync
}

function unmonkeypatch () {
  fs.realpath = origRealpath
  fs.realpathSync = origRealpathSync
}


/***/ }),

/***/ "./node_modules/fs.realpath/old.js":
/*!*****************************************!*\
  !*** ./node_modules/fs.realpath/old.js ***!
  \*****************************************/
/*! default exports */
/*! export realpath [provided] [no usage info] [missing usage info prevents renaming] */
/*! export realpathSync [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var pathModule = __webpack_require__(/*! path */ "path");
var isWindows = process.platform === 'win32';
var fs = __webpack_require__(/*! fs */ "fs");

// JavaScript implementation of realpath, ported from node pre-v6

var DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);

function rethrow() {
  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and
  // is fairly slow to generate.
  var callback;
  if (DEBUG) {
    var backtrace = new Error;
    callback = debugCallback;
  } else
    callback = missingCallback;

  return callback;

  function debugCallback(err) {
    if (err) {
      backtrace.message = err.message;
      err = backtrace;
      missingCallback(err);
    }
  }

  function missingCallback(err) {
    if (err) {
      if (process.throwDeprecation)
        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs
      else if (!process.noDeprecation) {
        var msg = 'fs: missing callback ' + (err.stack || err.message);
        if (process.traceDeprecation)
          console.trace(msg);
        else
          console.error(msg);
      }
    }
  }
}

function maybeCallback(cb) {
  return typeof cb === 'function' ? cb : rethrow();
}

var normalize = pathModule.normalize;

// Regexp that finds the next partion of a (partial) path
// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']
if (isWindows) {
  var nextPartRe = /(.*?)(?:[\/\\]+|$)/g;
} else {
  var nextPartRe = /(.*?)(?:[\/]+|$)/g;
}

// Regex to find the device root, including trailing slash. E.g. 'c:\\'.
if (isWindows) {
  var splitRootRe = /^(?:[a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/][^\\\/]+)?[\\\/]*/;
} else {
  var splitRootRe = /^[\/]*/;
}

exports.realpathSync = function realpathSync(p, cache) {
  // make p is absolute
  p = pathModule.resolve(p);

  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {
    return cache[p];
  }

  var original = p,
      seenLinks = {},
      knownHard = {};

  // current character position in p
  var pos;
  // the partial path so far, including a trailing slash if any
  var current;
  // the partial path without a trailing slash (except when pointing at a root)
  var base;
  // the partial path scanned in the previous round, with slash
  var previous;

  start();

  function start() {
    // Skip over roots
    var m = splitRootRe.exec(p);
    pos = m[0].length;
    current = m[0];
    base = m[0];
    previous = '';

    // On windows, check that the root exists. On unix there is no need.
    if (isWindows && !knownHard[base]) {
      fs.lstatSync(base);
      knownHard[base] = true;
    }
  }

  // walk down the path, swapping out linked pathparts for their real
  // values
  // NB: p.length changes.
  while (pos < p.length) {
    // find the next part
    nextPartRe.lastIndex = pos;
    var result = nextPartRe.exec(p);
    previous = current;
    current += result[0];
    base = previous + result[1];
    pos = nextPartRe.lastIndex;

    // continue if not a symlink
    if (knownHard[base] || (cache && cache[base] === base)) {
      continue;
    }

    var resolvedLink;
    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {
      // some known symbolic link.  no need to stat again.
      resolvedLink = cache[base];
    } else {
      var stat = fs.lstatSync(base);
      if (!stat.isSymbolicLink()) {
        knownHard[base] = true;
        if (cache) cache[base] = base;
        continue;
      }

      // read the link if it wasn't read before
      // dev/ino always return 0 on windows, so skip the check.
      var linkTarget = null;
      if (!isWindows) {
        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);
        if (seenLinks.hasOwnProperty(id)) {
          linkTarget = seenLinks[id];
        }
      }
      if (linkTarget === null) {
        fs.statSync(base);
        linkTarget = fs.readlinkSync(base);
      }
      resolvedLink = pathModule.resolve(previous, linkTarget);
      // track this, if given a cache.
      if (cache) cache[base] = resolvedLink;
      if (!isWindows) seenLinks[id] = linkTarget;
    }

    // resolve the link, then start over
    p = pathModule.resolve(resolvedLink, p.slice(pos));
    start();
  }

  if (cache) cache[original] = p;

  return p;
};


exports.realpath = function realpath(p, cache, cb) {
  if (typeof cb !== 'function') {
    cb = maybeCallback(cache);
    cache = null;
  }

  // make p is absolute
  p = pathModule.resolve(p);

  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {
    return process.nextTick(cb.bind(null, null, cache[p]));
  }

  var original = p,
      seenLinks = {},
      knownHard = {};

  // current character position in p
  var pos;
  // the partial path so far, including a trailing slash if any
  var current;
  // the partial path without a trailing slash (except when pointing at a root)
  var base;
  // the partial path scanned in the previous round, with slash
  var previous;

  start();

  function start() {
    // Skip over roots
    var m = splitRootRe.exec(p);
    pos = m[0].length;
    current = m[0];
    base = m[0];
    previous = '';

    // On windows, check that the root exists. On unix there is no need.
    if (isWindows && !knownHard[base]) {
      fs.lstat(base, function(err) {
        if (err) return cb(err);
        knownHard[base] = true;
        LOOP();
      });
    } else {
      process.nextTick(LOOP);
    }
  }

  // walk down the path, swapping out linked pathparts for their real
  // values
  function LOOP() {
    // stop if scanned past end of path
    if (pos >= p.length) {
      if (cache) cache[original] = p;
      return cb(null, p);
    }

    // find the next part
    nextPartRe.lastIndex = pos;
    var result = nextPartRe.exec(p);
    previous = current;
    current += result[0];
    base = previous + result[1];
    pos = nextPartRe.lastIndex;

    // continue if not a symlink
    if (knownHard[base] || (cache && cache[base] === base)) {
      return process.nextTick(LOOP);
    }

    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {
      // known symbolic link.  no need to stat again.
      return gotResolvedLink(cache[base]);
    }

    return fs.lstat(base, gotStat);
  }

  function gotStat(err, stat) {
    if (err) return cb(err);

    // if not a symlink, skip to the next path part
    if (!stat.isSymbolicLink()) {
      knownHard[base] = true;
      if (cache) cache[base] = base;
      return process.nextTick(LOOP);
    }

    // stat & read the link if not read before
    // call gotTarget as soon as the link target is known
    // dev/ino always return 0 on windows, so skip the check.
    if (!isWindows) {
      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);
      if (seenLinks.hasOwnProperty(id)) {
        return gotTarget(null, seenLinks[id], base);
      }
    }
    fs.stat(base, function(err) {
      if (err) return cb(err);

      fs.readlink(base, function(err, target) {
        if (!isWindows) seenLinks[id] = target;
        gotTarget(err, target);
      });
    });
  }

  function gotTarget(err, target, base) {
    if (err) return cb(err);

    var resolvedLink = pathModule.resolve(previous, target);
    if (cache) cache[base] = resolvedLink;
    gotResolvedLink(resolvedLink);
  }

  function gotResolvedLink(resolvedLink) {
    // resolve the link, then start over
    p = pathModule.resolve(resolvedLink, p.slice(pos));
    start();
  }
};


/***/ }),

/***/ "./node_modules/gauge/base-theme.js":
/*!******************************************!*\
  !*** ./node_modules/gauge/base-theme.js ***!
  \******************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 5:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var spin = __webpack_require__(/*! ./spin.js */ "./node_modules/gauge/spin.js")
var progressBar = __webpack_require__(/*! ./progress-bar.js */ "./node_modules/gauge/progress-bar.js")

module.exports = {
  activityIndicator: function (values, theme, width) {
    if (values.spun == null) return
    return spin(theme, values.spun)
  },
  progressbar: function (values, theme, width) {
    if (values.completed == null) return
    return progressBar(theme, width, values.completed)
  }
}


/***/ }),

/***/ "./node_modules/gauge/error.js":
/*!*************************************!*\
  !*** ./node_modules/gauge/error.js ***!
  \*************************************/
/*! default exports */
/*! export Internal [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MissingTemplateValue [provided] [no usage info] [missing usage info prevents renaming] */
/*! export User [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

var util = __webpack_require__(/*! util */ "util")

var User = exports.User = function User (msg) {
  var err = new Error(msg)
  Error.captureStackTrace(err, User)
  err.code = 'EGAUGE'
  return err
}

exports.MissingTemplateValue = function MissingTemplateValue (item, values) {
  var err = new User(util.format('Missing template value "%s"', item.type))
  Error.captureStackTrace(err, MissingTemplateValue)
  err.template = item
  err.values = values
  return err
}

exports.Internal = function Internal (msg) {
  var err = new Error(msg)
  Error.captureStackTrace(err, Internal)
  err.code = 'EGAUGEINTERNAL'
  return err
}


/***/ }),

/***/ "./node_modules/gauge/has-color.js":
/*!*****************************************!*\
  !*** ./node_modules/gauge/has-color.js ***!
  \*****************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 3:0-14 */
/***/ ((module) => {

"use strict";


module.exports = isWin32() || isColorTerm()

function isWin32 () {
  return process.platform === 'win32'
}

function isColorTerm () {
  var termHasColor = /^screen|^xterm|^vt100|color|ansi|cygwin|linux/i
  return !!process.env.COLORTERM || termHasColor.test(process.env.TERM)
}


/***/ }),

/***/ "./node_modules/gauge/index.js":
/*!*************************************!*\
  !*** ./node_modules/gauge/index.js ***!
  \*************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 11:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var Plumbing = __webpack_require__(/*! ./plumbing.js */ "./node_modules/gauge/plumbing.js")
var hasUnicode = __webpack_require__(/*! has-unicode */ "./node_modules/has-unicode/index.js")
var hasColor = __webpack_require__(/*! ./has-color.js */ "./node_modules/gauge/has-color.js")
var onExit = __webpack_require__(/*! signal-exit */ "./node_modules/signal-exit/index.js")
var defaultThemes = __webpack_require__(/*! ./themes */ "./node_modules/gauge/themes.js")
var setInterval = __webpack_require__(/*! ./set-interval.js */ "./node_modules/gauge/set-interval.js")
var process = __webpack_require__(/*! ./process.js */ "./node_modules/gauge/process.js")
var setImmediate = __webpack_require__(/*! ./set-immediate */ "./node_modules/gauge/set-immediate.js")

module.exports = Gauge

function callWith (obj, method) {
  return function () {
    return method.call(obj)
  }
}

function Gauge (arg1, arg2) {
  var options, writeTo
  if (arg1 && arg1.write) {
    writeTo = arg1
    options = arg2 || {}
  } else if (arg2 && arg2.write) {
    writeTo = arg2
    options = arg1 || {}
  } else {
    writeTo = process.stderr
    options = arg1 || arg2 || {}
  }

  this._status = {
    spun: 0,
    section: '',
    subsection: ''
  }
  this._paused = false // are we paused for back pressure?
  this._disabled = true // are all progress bar updates disabled?
  this._showing = false // do we WANT the progress bar on screen
  this._onScreen = false // IS the progress bar on screen
  this._needsRedraw = false // should we print something at next tick?
  this._hideCursor = options.hideCursor == null ? true : options.hideCursor
  this._fixedFramerate = options.fixedFramerate == null
    ? !(/^v0\.8\./.test(process.version))
    : options.fixedFramerate
  this._lastUpdateAt = null
  this._updateInterval = options.updateInterval == null ? 50 : options.updateInterval

  this._themes = options.themes || defaultThemes
  this._theme = options.theme
  var theme = this._computeTheme(options.theme)
  var template = options.template || [
    {type: 'progressbar', length: 20},
    {type: 'activityIndicator', kerning: 1, length: 1},
    {type: 'section', kerning: 1, default: ''},
    {type: 'subsection', kerning: 1, default: ''}
  ]
  this.setWriteTo(writeTo, options.tty)
  var PlumbingClass = options.Plumbing || Plumbing
  this._gauge = new PlumbingClass(theme, template, this.getWidth())

  this._$$doRedraw = callWith(this, this._doRedraw)
  this._$$handleSizeChange = callWith(this, this._handleSizeChange)

  this._cleanupOnExit = options.cleanupOnExit == null || options.cleanupOnExit
  this._removeOnExit = null

  if (options.enabled || (options.enabled == null && this._tty && this._tty.isTTY)) {
    this.enable()
  } else {
    this.disable()
  }
}
Gauge.prototype = {}

Gauge.prototype.isEnabled = function () {
  return !this._disabled
}

Gauge.prototype.setTemplate = function (template) {
  this._gauge.setTemplate(template)
  if (this._showing) this._requestRedraw()
}

Gauge.prototype._computeTheme = function (theme) {
  if (!theme) theme = {}
  if (typeof theme === 'string') {
    theme = this._themes.getTheme(theme)
  } else if (theme && (Object.keys(theme).length === 0 || theme.hasUnicode != null || theme.hasColor != null)) {
    var useUnicode = theme.hasUnicode == null ? hasUnicode() : theme.hasUnicode
    var useColor = theme.hasColor == null ? hasColor : theme.hasColor
    theme = this._themes.getDefault({hasUnicode: useUnicode, hasColor: useColor, platform: theme.platform})
  }
  return theme
}

Gauge.prototype.setThemeset = function (themes) {
  this._themes = themes
  this.setTheme(this._theme)
}

Gauge.prototype.setTheme = function (theme) {
  this._gauge.setTheme(this._computeTheme(theme))
  if (this._showing) this._requestRedraw()
  this._theme = theme
}

Gauge.prototype._requestRedraw = function () {
  this._needsRedraw = true
  if (!this._fixedFramerate) this._doRedraw()
}

Gauge.prototype.getWidth = function () {
  return ((this._tty && this._tty.columns) || 80) - 1
}

Gauge.prototype.setWriteTo = function (writeTo, tty) {
  var enabled = !this._disabled
  if (enabled) this.disable()
  this._writeTo = writeTo
  this._tty = tty ||
    (writeTo === process.stderr && process.stdout.isTTY && process.stdout) ||
    (writeTo.isTTY && writeTo) ||
    this._tty
  if (this._gauge) this._gauge.setWidth(this.getWidth())
  if (enabled) this.enable()
}

Gauge.prototype.enable = function () {
  if (!this._disabled) return
  this._disabled = false
  if (this._tty) this._enableEvents()
  if (this._showing) this.show()
}

Gauge.prototype.disable = function () {
  if (this._disabled) return
  if (this._showing) {
    this._lastUpdateAt = null
    this._showing = false
    this._doRedraw()
    this._showing = true
  }
  this._disabled = true
  if (this._tty) this._disableEvents()
}

Gauge.prototype._enableEvents = function () {
  if (this._cleanupOnExit) {
    this._removeOnExit = onExit(callWith(this, this.disable))
  }
  this._tty.on('resize', this._$$handleSizeChange)
  if (this._fixedFramerate) {
    this.redrawTracker = setInterval(this._$$doRedraw, this._updateInterval)
    if (this.redrawTracker.unref) this.redrawTracker.unref()
  }
}

Gauge.prototype._disableEvents = function () {
  this._tty.removeListener('resize', this._$$handleSizeChange)
  if (this._fixedFramerate) clearInterval(this.redrawTracker)
  if (this._removeOnExit) this._removeOnExit()
}

Gauge.prototype.hide = function (cb) {
  if (this._disabled) return cb && process.nextTick(cb)
  if (!this._showing) return cb && process.nextTick(cb)
  this._showing = false
  this._doRedraw()
  cb && setImmediate(cb)
}

Gauge.prototype.show = function (section, completed) {
  this._showing = true
  if (typeof section === 'string') {
    this._status.section = section
  } else if (typeof section === 'object') {
    var sectionKeys = Object.keys(section)
    for (var ii = 0; ii < sectionKeys.length; ++ii) {
      var key = sectionKeys[ii]
      this._status[key] = section[key]
    }
  }
  if (completed != null) this._status.completed = completed
  if (this._disabled) return
  this._requestRedraw()
}

Gauge.prototype.pulse = function (subsection) {
  this._status.subsection = subsection || ''
  this._status.spun ++
  if (this._disabled) return
  if (!this._showing) return
  this._requestRedraw()
}

Gauge.prototype._handleSizeChange = function () {
  this._gauge.setWidth(this._tty.columns - 1)
  this._requestRedraw()
}

Gauge.prototype._doRedraw = function () {
  if (this._disabled || this._paused) return
  if (!this._fixedFramerate) {
    var now = Date.now()
    if (this._lastUpdateAt && now - this._lastUpdateAt < this._updateInterval) return
    this._lastUpdateAt = now
  }
  if (!this._showing && this._onScreen) {
    this._onScreen = false
    var result = this._gauge.hide()
    if (this._hideCursor) {
      result += this._gauge.showCursor()
    }
    return this._writeTo.write(result)
  }
  if (!this._showing && !this._onScreen) return
  if (this._showing && !this._onScreen) {
    this._onScreen = true
    this._needsRedraw = true
    if (this._hideCursor) {
      this._writeTo.write(this._gauge.hideCursor())
    }
  }
  if (!this._needsRedraw) return
  if (!this._writeTo.write(this._gauge.show(this._status))) {
    this._paused = true
    this._writeTo.on('drain', callWith(this, function () {
      this._paused = false
      this._doRedraw()
    }))
  }
}


/***/ }),

/***/ "./node_modules/gauge/node_modules/ansi-regex/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/gauge/node_modules/ansi-regex/index.js ***!
  \*************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 2:0-14 */
/***/ ((module) => {

"use strict";

module.exports = function () {
	return /[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-PRZcf-nqry=><]/g;
};


/***/ }),

/***/ "./node_modules/gauge/node_modules/is-fullwidth-code-point/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/gauge/node_modules/is-fullwidth-code-point/index.js ***!
  \**************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 4:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var numberIsNan = __webpack_require__(/*! number-is-nan */ "./node_modules/number-is-nan/index.js");

module.exports = function (x) {
	if (numberIsNan(x)) {
		return false;
	}

	// https://github.com/nodejs/io.js/blob/cff7300a578be1b10001f2d967aaedc88aee6402/lib/readline.js#L1369

	// code points are derived from:
	// http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt
	if (x >= 0x1100 && (
		x <= 0x115f ||  // Hangul Jamo
		0x2329 === x || // LEFT-POINTING ANGLE BRACKET
		0x232a === x || // RIGHT-POINTING ANGLE BRACKET
		// CJK Radicals Supplement .. Enclosed CJK Letters and Months
		(0x2e80 <= x && x <= 0x3247 && x !== 0x303f) ||
		// Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A
		0x3250 <= x && x <= 0x4dbf ||
		// CJK Unified Ideographs .. Yi Radicals
		0x4e00 <= x && x <= 0xa4c6 ||
		// Hangul Jamo Extended-A
		0xa960 <= x && x <= 0xa97c ||
		// Hangul Syllables
		0xac00 <= x && x <= 0xd7a3 ||
		// CJK Compatibility Ideographs
		0xf900 <= x && x <= 0xfaff ||
		// Vertical Forms
		0xfe10 <= x && x <= 0xfe19 ||
		// CJK Compatibility Forms .. Small Form Variants
		0xfe30 <= x && x <= 0xfe6b ||
		// Halfwidth and Fullwidth Forms
		0xff01 <= x && x <= 0xff60 ||
		0xffe0 <= x && x <= 0xffe6 ||
		// Kana Supplement
		0x1b000 <= x && x <= 0x1b001 ||
		// Enclosed Ideographic Supplement
		0x1f200 <= x && x <= 0x1f251 ||
		// CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane
		0x20000 <= x && x <= 0x3fffd)) {
		return true;
	}

	return false;
}


/***/ }),

/***/ "./node_modules/gauge/node_modules/string-width/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/gauge/node_modules/string-width/index.js ***!
  \***************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 7:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var stripAnsi = __webpack_require__(/*! strip-ansi */ "./node_modules/gauge/node_modules/strip-ansi/index.js");
var codePointAt = __webpack_require__(/*! code-point-at */ "./node_modules/code-point-at/index.js");
var isFullwidthCodePoint = __webpack_require__(/*! is-fullwidth-code-point */ "./node_modules/gauge/node_modules/is-fullwidth-code-point/index.js");

// https://github.com/nodejs/io.js/blob/cff7300a578be1b10001f2d967aaedc88aee6402/lib/readline.js#L1345
module.exports = function (str) {
	if (typeof str !== 'string' || str.length === 0) {
		return 0;
	}

	var width = 0;

	str = stripAnsi(str);

	for (var i = 0; i < str.length; i++) {
		var code = codePointAt(str, i);

		// ignore control characters
		if (code <= 0x1f || (code >= 0x7f && code <= 0x9f)) {
			continue;
		}

		// surrogates
		if (code >= 0x10000) {
			i++;
		}

		if (isFullwidthCodePoint(code)) {
			width += 2;
		} else {
			width++;
		}
	}

	return width;
};


/***/ }),

/***/ "./node_modules/gauge/node_modules/strip-ansi/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/gauge/node_modules/strip-ansi/index.js ***!
  \*************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 4:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var ansiRegex = __webpack_require__(/*! ansi-regex */ "./node_modules/gauge/node_modules/ansi-regex/index.js")();

module.exports = function (str) {
	return typeof str === 'string' ? str.replace(ansiRegex, '') : str;
};


/***/ }),

/***/ "./node_modules/gauge/plumbing.js":
/*!****************************************!*\
  !*** ./node_modules/gauge/plumbing.js ***!
  \****************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 6:15-29 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var consoleControl = __webpack_require__(/*! console-control-strings */ "./node_modules/console-control-strings/index.js")
var renderTemplate = __webpack_require__(/*! ./render-template.js */ "./node_modules/gauge/render-template.js")
var validate = __webpack_require__(/*! aproba */ "./node_modules/aproba/index.js")

var Plumbing = module.exports = function (theme, template, width) {
  if (!width) width = 80
  validate('OAN', [theme, template, width])
  this.showing = false
  this.theme = theme
  this.width = width
  this.template = template
}
Plumbing.prototype = {}

Plumbing.prototype.setTheme = function (theme) {
  validate('O', [theme])
  this.theme = theme
}

Plumbing.prototype.setTemplate = function (template) {
  validate('A', [template])
  this.template = template
}

Plumbing.prototype.setWidth = function (width) {
  validate('N', [width])
  this.width = width
}

Plumbing.prototype.hide = function () {
  return consoleControl.gotoSOL() + consoleControl.eraseLine()
}

Plumbing.prototype.hideCursor = consoleControl.hideCursor

Plumbing.prototype.showCursor = consoleControl.showCursor

Plumbing.prototype.show = function (status) {
  var values = Object.create(this.theme)
  for (var key in status) {
    values[key] = status[key]
  }

  return renderTemplate(this.width, this.template, values).trim() +
         consoleControl.color('reset') +
         consoleControl.eraseLine() + consoleControl.gotoSOL()
}


/***/ }),

/***/ "./node_modules/gauge/process.js":
/*!***************************************!*\
  !*** ./node_modules/gauge/process.js ***!
  \***************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 3:0-14 */
/***/ ((module) => {

"use strict";

// this exists so we can replace it during testing
module.exports = process


/***/ }),

/***/ "./node_modules/gauge/progress-bar.js":
/*!********************************************!*\
  !*** ./node_modules/gauge/progress-bar.js ***!
  \********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 7:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var validate = __webpack_require__(/*! aproba */ "./node_modules/aproba/index.js")
var renderTemplate = __webpack_require__(/*! ./render-template.js */ "./node_modules/gauge/render-template.js")
var wideTruncate = __webpack_require__(/*! ./wide-truncate */ "./node_modules/gauge/wide-truncate.js")
var stringWidth = __webpack_require__(/*! string-width */ "./node_modules/gauge/node_modules/string-width/index.js")

module.exports = function (theme, width, completed) {
  validate('ONN', [theme, width, completed])
  if (completed < 0) completed = 0
  if (completed > 1) completed = 1
  if (width <= 0) return ''
  var sofar = Math.round(width * completed)
  var rest = width - sofar
  var template = [
    {type: 'complete', value: repeat(theme.complete, sofar), length: sofar},
    {type: 'remaining', value: repeat(theme.remaining, rest), length: rest}
  ]
  return renderTemplate(width, template, theme)
}

// lodash's way of repeating
function repeat (string, width) {
  var result = ''
  var n = width
  do {
    if (n % 2) {
      result += string
    }
    n = Math.floor(n / 2)
    /*eslint no-self-assign: 0*/
    string += string
  } while (n && stringWidth(result) < width)

  return wideTruncate(result, width)
}


/***/ }),

/***/ "./node_modules/gauge/render-template.js":
/*!***********************************************!*\
  !*** ./node_modules/gauge/render-template.js ***!
  \***********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 15:21-35 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var align = __webpack_require__(/*! wide-align */ "./node_modules/wide-align/align.js")
var validate = __webpack_require__(/*! aproba */ "./node_modules/aproba/index.js")
var objectAssign = __webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js")
var wideTruncate = __webpack_require__(/*! ./wide-truncate */ "./node_modules/gauge/wide-truncate.js")
var error = __webpack_require__(/*! ./error */ "./node_modules/gauge/error.js")
var TemplateItem = __webpack_require__(/*! ./template-item */ "./node_modules/gauge/template-item.js")

function renderValueWithValues (values) {
  return function (item) {
    return renderValue(item, values)
  }
}

var renderTemplate = module.exports = function (width, template, values) {
  var items = prepareItems(width, template, values)
  var rendered = items.map(renderValueWithValues(values)).join('')
  return align.left(wideTruncate(rendered, width), width)
}

function preType (item) {
  var cappedTypeName = item.type[0].toUpperCase() + item.type.slice(1)
  return 'pre' + cappedTypeName
}

function postType (item) {
  var cappedTypeName = item.type[0].toUpperCase() + item.type.slice(1)
  return 'post' + cappedTypeName
}

function hasPreOrPost (item, values) {
  if (!item.type) return
  return values[preType(item)] || values[postType(item)]
}

function generatePreAndPost (baseItem, parentValues) {
  var item = objectAssign({}, baseItem)
  var values = Object.create(parentValues)
  var template = []
  var pre = preType(item)
  var post = postType(item)
  if (values[pre]) {
    template.push({value: values[pre]})
    values[pre] = null
  }
  item.minLength = null
  item.length = null
  item.maxLength = null
  template.push(item)
  values[item.type] = values[item.type]
  if (values[post]) {
    template.push({value: values[post]})
    values[post] = null
  }
  return function ($1, $2, length) {
    return renderTemplate(length, template, values)
  }
}

function prepareItems (width, template, values) {
  function cloneAndObjectify (item, index, arr) {
    var cloned = new TemplateItem(item, width)
    var type = cloned.type
    if (cloned.value == null) {
      if (!(type in values)) {
        if (cloned.default == null) {
          throw new error.MissingTemplateValue(cloned, values)
        } else {
          cloned.value = cloned.default
        }
      } else {
        cloned.value = values[type]
      }
    }
    if (cloned.value == null || cloned.value === '') return null
    cloned.index = index
    cloned.first = index === 0
    cloned.last = index === arr.length - 1
    if (hasPreOrPost(cloned, values)) cloned.value = generatePreAndPost(cloned, values)
    return cloned
  }

  var output = template.map(cloneAndObjectify).filter(function (item) { return item != null })

  var outputLength = 0
  var remainingSpace = width
  var variableCount = output.length

  function consumeSpace (length) {
    if (length > remainingSpace) length = remainingSpace
    outputLength += length
    remainingSpace -= length
  }

  function finishSizing (item, length) {
    if (item.finished) throw new error.Internal('Tried to finish template item that was already finished')
    if (length === Infinity) throw new error.Internal('Length of template item cannot be infinity')
    if (length != null) item.length = length
    item.minLength = null
    item.maxLength = null
    --variableCount
    item.finished = true
    if (item.length == null) item.length = item.getBaseLength()
    if (item.length == null) throw new error.Internal('Finished template items must have a length')
    consumeSpace(item.getLength())
  }

  output.forEach(function (item) {
    if (!item.kerning) return
    var prevPadRight = item.first ? 0 : output[item.index - 1].padRight
    if (!item.first && prevPadRight < item.kerning) item.padLeft = item.kerning - prevPadRight
    if (!item.last) item.padRight = item.kerning
  })

  // Finish any that have a fixed (literal or intuited) length
  output.forEach(function (item) {
    if (item.getBaseLength() == null) return
    finishSizing(item)
  })

  var resized = 0
  var resizing
  var hunkSize
  do {
    resizing = false
    hunkSize = Math.round(remainingSpace / variableCount)
    output.forEach(function (item) {
      if (item.finished) return
      if (!item.maxLength) return
      if (item.getMaxLength() < hunkSize) {
        finishSizing(item, item.maxLength)
        resizing = true
      }
    })
  } while (resizing && resized++ < output.length)
  if (resizing) throw new error.Internal('Resize loop iterated too many times while determining maxLength')

  resized = 0
  do {
    resizing = false
    hunkSize = Math.round(remainingSpace / variableCount)
    output.forEach(function (item) {
      if (item.finished) return
      if (!item.minLength) return
      if (item.getMinLength() >= hunkSize) {
        finishSizing(item, item.minLength)
        resizing = true
      }
    })
  } while (resizing && resized++ < output.length)
  if (resizing) throw new error.Internal('Resize loop iterated too many times while determining minLength')

  hunkSize = Math.round(remainingSpace / variableCount)
  output.forEach(function (item) {
    if (item.finished) return
    finishSizing(item, hunkSize)
  })

  return output
}

function renderFunction (item, values, length) {
  validate('OON', arguments)
  if (item.type) {
    return item.value(values, values[item.type + 'Theme'] || {}, length)
  } else {
    return item.value(values, {}, length)
  }
}

function renderValue (item, values) {
  var length = item.getBaseLength()
  var value = typeof item.value === 'function' ? renderFunction(item, values, length) : item.value
  if (value == null || value === '') return ''
  var alignWith = align[item.align] || align.left
  var leftPadding = item.padLeft ? align.left('', item.padLeft) : ''
  var rightPadding = item.padRight ? align.right('', item.padRight) : ''
  var truncated = wideTruncate(String(value), length)
  var aligned = alignWith(truncated, length)
  return leftPadding + aligned + rightPadding
}


/***/ }),

/***/ "./node_modules/gauge/set-immediate.js":
/*!*********************************************!*\
  !*** ./node_modules/gauge/set-immediate.js ***!
  \*********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 4:2-16 */
/*! CommonJS bailout: module.exports is used directly at 6:2-16 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var process = __webpack_require__(/*! ./process */ "./node_modules/gauge/process.js")
try {
  module.exports = setImmediate
} catch (ex) {
  module.exports = process.nextTick
}


/***/ }),

/***/ "./node_modules/gauge/set-interval.js":
/*!********************************************!*\
  !*** ./node_modules/gauge/set-interval.js ***!
  \********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 3:0-14 */
/***/ ((module) => {

"use strict";

// this exists so we can replace it during testing
module.exports = setInterval


/***/ }),

/***/ "./node_modules/gauge/spin.js":
/*!************************************!*\
  !*** ./node_modules/gauge/spin.js ***!
  \************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 3:0-14 */
/***/ ((module) => {

"use strict";


module.exports = function spin (spinstr, spun) {
  return spinstr[spun % spinstr.length]
}


/***/ }),

/***/ "./node_modules/gauge/template-item.js":
/*!*********************************************!*\
  !*** ./node_modules/gauge/template-item.js ***!
  \*********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 4:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var stringWidth = __webpack_require__(/*! string-width */ "./node_modules/gauge/node_modules/string-width/index.js")

module.exports = TemplateItem

function isPercent (num) {
  if (typeof num !== 'string') return false
  return num.slice(-1) === '%'
}

function percent (num) {
  return Number(num.slice(0, -1)) / 100
}

function TemplateItem (values, outputLength) {
  this.overallOutputLength = outputLength
  this.finished = false
  this.type = null
  this.value = null
  this.length = null
  this.maxLength = null
  this.minLength = null
  this.kerning = null
  this.align = 'left'
  this.padLeft = 0
  this.padRight = 0
  this.index = null
  this.first = null
  this.last = null
  if (typeof values === 'string') {
    this.value = values
  } else {
    for (var prop in values) this[prop] = values[prop]
  }
  // Realize percents
  if (isPercent(this.length)) {
    this.length = Math.round(this.overallOutputLength * percent(this.length))
  }
  if (isPercent(this.minLength)) {
    this.minLength = Math.round(this.overallOutputLength * percent(this.minLength))
  }
  if (isPercent(this.maxLength)) {
    this.maxLength = Math.round(this.overallOutputLength * percent(this.maxLength))
  }
  return this
}

TemplateItem.prototype = {}

TemplateItem.prototype.getBaseLength = function () {
  var length = this.length
  if (length == null && typeof this.value === 'string' && this.maxLength == null && this.minLength == null) {
    length = stringWidth(this.value)
  }
  return length
}

TemplateItem.prototype.getLength = function () {
  var length = this.getBaseLength()
  if (length == null) return null
  return length + this.padLeft + this.padRight
}

TemplateItem.prototype.getMaxLength = function () {
  if (this.maxLength == null) return null
  return this.maxLength + this.padLeft + this.padRight
}

TemplateItem.prototype.getMinLength = function () {
  if (this.minLength == null) return null
  return this.minLength + this.padLeft + this.padRight
}



/***/ }),

/***/ "./node_modules/gauge/theme-set.js":
/*!*****************************************!*\
  !*** ./node_modules/gauge/theme-set.js ***!
  \*****************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 4:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var objectAssign = __webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js")

module.exports = function () {
  return ThemeSetProto.newThemeSet()
}

var ThemeSetProto = {}

ThemeSetProto.baseTheme = __webpack_require__(/*! ./base-theme.js */ "./node_modules/gauge/base-theme.js")

ThemeSetProto.newTheme = function (parent, theme) {
  if (!theme) {
    theme = parent
    parent = this.baseTheme
  }
  return objectAssign({}, parent, theme)
}

ThemeSetProto.getThemeNames = function () {
  return Object.keys(this.themes)
}

ThemeSetProto.addTheme = function (name, parent, theme) {
  this.themes[name] = this.newTheme(parent, theme)
}

ThemeSetProto.addToAllThemes = function (theme) {
  var themes = this.themes
  Object.keys(themes).forEach(function (name) {
    objectAssign(themes[name], theme)
  })
  objectAssign(this.baseTheme, theme)
}

ThemeSetProto.getTheme = function (name) {
  if (!this.themes[name]) throw this.newMissingThemeError(name)
  return this.themes[name]
}

ThemeSetProto.setDefault = function (opts, name) {
  if (name == null) {
    name = opts
    opts = {}
  }
  var platform = opts.platform == null ? 'fallback' : opts.platform
  var hasUnicode = !!opts.hasUnicode
  var hasColor = !!opts.hasColor
  if (!this.defaults[platform]) this.defaults[platform] = {true: {}, false: {}}
  this.defaults[platform][hasUnicode][hasColor] = name
}

ThemeSetProto.getDefault = function (opts) {
  if (!opts) opts = {}
  var platformName = opts.platform || process.platform
  var platform = this.defaults[platformName] || this.defaults.fallback
  var hasUnicode = !!opts.hasUnicode
  var hasColor = !!opts.hasColor
  if (!platform) throw this.newMissingDefaultThemeError(platformName, hasUnicode, hasColor)
  if (!platform[hasUnicode][hasColor]) {
    if (hasUnicode && hasColor && platform[!hasUnicode][hasColor]) {
      hasUnicode = false
    } else if (hasUnicode && hasColor && platform[hasUnicode][!hasColor]) {
      hasColor = false
    } else if (hasUnicode && hasColor && platform[!hasUnicode][!hasColor]) {
      hasUnicode = false
      hasColor = false
    } else if (hasUnicode && !hasColor && platform[!hasUnicode][hasColor]) {
      hasUnicode = false
    } else if (!hasUnicode && hasColor && platform[hasUnicode][!hasColor]) {
      hasColor = false
    } else if (platform === this.defaults.fallback) {
      throw this.newMissingDefaultThemeError(platformName, hasUnicode, hasColor)
    }
  }
  if (platform[hasUnicode][hasColor]) {
    return this.getTheme(platform[hasUnicode][hasColor])
  } else {
    return this.getDefault(objectAssign({}, opts, {platform: 'fallback'}))
  }
}

ThemeSetProto.newMissingThemeError = function newMissingThemeError (name) {
  var err = new Error('Could not find a gauge theme named "' + name + '"')
  Error.captureStackTrace.call(err, newMissingThemeError)
  err.theme = name
  err.code = 'EMISSINGTHEME'
  return err
}

ThemeSetProto.newMissingDefaultThemeError = function newMissingDefaultThemeError (platformName, hasUnicode, hasColor) {
  var err = new Error(
    'Could not find a gauge theme for your platform/unicode/color use combo:\n' +
    '    platform = ' + platformName + '\n' +
    '    hasUnicode = ' + hasUnicode + '\n' +
    '    hasColor = ' + hasColor)
  Error.captureStackTrace.call(err, newMissingDefaultThemeError)
  err.platform = platformName
  err.hasUnicode = hasUnicode
  err.hasColor = hasColor
  err.code = 'EMISSINGTHEME'
  return err
}

ThemeSetProto.newThemeSet = function () {
  var themeset = function (opts) {
    return themeset.getDefault(opts)
  }
  return objectAssign(themeset, ThemeSetProto, {
    themes: objectAssign({}, this.themes),
    baseTheme: objectAssign({}, this.baseTheme),
    defaults: JSON.parse(JSON.stringify(this.defaults || {}))
  })
}



/***/ }),

/***/ "./node_modules/gauge/themes.js":
/*!**************************************!*\
  !*** ./node_modules/gauge/themes.js ***!
  \**************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 5:13-27 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var consoleControl = __webpack_require__(/*! console-control-strings */ "./node_modules/console-control-strings/index.js")
var ThemeSet = __webpack_require__(/*! ./theme-set.js */ "./node_modules/gauge/theme-set.js")

var themes = module.exports = new ThemeSet()

themes.addTheme('ASCII', {
  preProgressbar: '[',
  postProgressbar: ']',
  progressbarTheme: {
    complete: '#',
    remaining: '.'
  },
  activityIndicatorTheme: '-\\|/',
  preSubsection: '>'
})

themes.addTheme('colorASCII', themes.getTheme('ASCII'), {
  progressbarTheme: {
    preComplete: consoleControl.color('inverse'),
    complete: ' ',
    postComplete: consoleControl.color('stopInverse'),
    preRemaining: consoleControl.color('brightBlack'),
    remaining: '.',
    postRemaining: consoleControl.color('reset')
  }
})

themes.addTheme('brailleSpinner', {
  preProgressbar: '⸨',
  postProgressbar: '⸩',
  progressbarTheme: {
    complete: '░',
    remaining: '⠂'
  },
  activityIndicatorTheme: '⠋⠙⠹⠸⠼⠴⠦⠧⠇⠏',
  preSubsection: '>'
})

themes.addTheme('colorBrailleSpinner', themes.getTheme('brailleSpinner'), {
  progressbarTheme: {
    preComplete: consoleControl.color('inverse'),
    complete: ' ',
    postComplete: consoleControl.color('stopInverse'),
    preRemaining: consoleControl.color('brightBlack'),
    remaining: '░',
    postRemaining: consoleControl.color('reset')
  }
})

themes.setDefault({}, 'ASCII')
themes.setDefault({hasColor: true}, 'colorASCII')
themes.setDefault({platform: 'darwin', hasUnicode: true}, 'brailleSpinner')
themes.setDefault({platform: 'darwin', hasUnicode: true, hasColor: true}, 'colorBrailleSpinner')


/***/ }),

/***/ "./node_modules/gauge/wide-truncate.js":
/*!*********************************************!*\
  !*** ./node_modules/gauge/wide-truncate.js ***!
  \*********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 5:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var stringWidth = __webpack_require__(/*! string-width */ "./node_modules/gauge/node_modules/string-width/index.js")
var stripAnsi = __webpack_require__(/*! strip-ansi */ "./node_modules/gauge/node_modules/strip-ansi/index.js")

module.exports = wideTruncate

function wideTruncate (str, target) {
  if (stringWidth(str) === 0) return str
  if (target <= 0) return ''
  if (stringWidth(str) <= target) return str

  // We compute the number of bytes of ansi sequences here and add
  // that to our initial truncation to ensure that we don't slice one
  // that we want to keep in half.
  var noAnsi = stripAnsi(str)
  var ansiSize = str.length + noAnsi.length
  var truncated = str.slice(0, target + ansiSize)

  // we have to shrink the result to account for our ansi sequence buffer
  // (if an ansi sequence was truncated) and double width characters.
  while (stringWidth(truncated) > target) {
    truncated = truncated.slice(0, -1)
  }
  return truncated
}


/***/ }),

/***/ "./node_modules/glob/common.js":
/*!*************************************!*\
  !*** ./node_modules/glob/common.js ***!
  \*************************************/
/*! default exports */
/*! export alphasort [provided] [no usage info] [missing usage info prevents renaming] */
/*! export alphasorti [provided] [no usage info] [missing usage info prevents renaming] */
/*! export childrenIgnored [provided] [no usage info] [missing usage info prevents renaming] */
/*! export finish [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isIgnored [provided] [no usage info] [missing usage info prevents renaming] */
/*! export makeAbs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export mark [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ownProp [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setopts [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

exports.alphasort = alphasort
exports.alphasorti = alphasorti
exports.setopts = setopts
exports.ownProp = ownProp
exports.makeAbs = makeAbs
exports.finish = finish
exports.mark = mark
exports.isIgnored = isIgnored
exports.childrenIgnored = childrenIgnored

function ownProp (obj, field) {
  return Object.prototype.hasOwnProperty.call(obj, field)
}

var path = __webpack_require__(/*! path */ "path")
var minimatch = __webpack_require__(/*! minimatch */ "./node_modules/minimatch/minimatch.js")
var isAbsolute = __webpack_require__(/*! path-is-absolute */ "./node_modules/path-is-absolute/index.js")
var Minimatch = minimatch.Minimatch

function alphasorti (a, b) {
  return a.toLowerCase().localeCompare(b.toLowerCase())
}

function alphasort (a, b) {
  return a.localeCompare(b)
}

function setupIgnores (self, options) {
  self.ignore = options.ignore || []

  if (!Array.isArray(self.ignore))
    self.ignore = [self.ignore]

  if (self.ignore.length) {
    self.ignore = self.ignore.map(ignoreMap)
  }
}

// ignore patterns are always in dot:true mode.
function ignoreMap (pattern) {
  var gmatcher = null
  if (pattern.slice(-3) === '/**') {
    var gpattern = pattern.replace(/(\/\*\*)+$/, '')
    gmatcher = new Minimatch(gpattern, { dot: true })
  }

  return {
    matcher: new Minimatch(pattern, { dot: true }),
    gmatcher: gmatcher
  }
}

function setopts (self, pattern, options) {
  if (!options)
    options = {}

  // base-matching: just use globstar for that.
  if (options.matchBase && -1 === pattern.indexOf("/")) {
    if (options.noglobstar) {
      throw new Error("base matching requires globstar")
    }
    pattern = "**/" + pattern
  }

  self.silent = !!options.silent
  self.pattern = pattern
  self.strict = options.strict !== false
  self.realpath = !!options.realpath
  self.realpathCache = options.realpathCache || Object.create(null)
  self.follow = !!options.follow
  self.dot = !!options.dot
  self.mark = !!options.mark
  self.nodir = !!options.nodir
  if (self.nodir)
    self.mark = true
  self.sync = !!options.sync
  self.nounique = !!options.nounique
  self.nonull = !!options.nonull
  self.nosort = !!options.nosort
  self.nocase = !!options.nocase
  self.stat = !!options.stat
  self.noprocess = !!options.noprocess
  self.absolute = !!options.absolute

  self.maxLength = options.maxLength || Infinity
  self.cache = options.cache || Object.create(null)
  self.statCache = options.statCache || Object.create(null)
  self.symlinks = options.symlinks || Object.create(null)

  setupIgnores(self, options)

  self.changedCwd = false
  var cwd = process.cwd()
  if (!ownProp(options, "cwd"))
    self.cwd = cwd
  else {
    self.cwd = path.resolve(options.cwd)
    self.changedCwd = self.cwd !== cwd
  }

  self.root = options.root || path.resolve(self.cwd, "/")
  self.root = path.resolve(self.root)
  if (process.platform === "win32")
    self.root = self.root.replace(/\\/g, "/")

  // TODO: is an absolute `cwd` supposed to be resolved against `root`?
  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')
  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)
  if (process.platform === "win32")
    self.cwdAbs = self.cwdAbs.replace(/\\/g, "/")
  self.nomount = !!options.nomount

  // disable comments and negation in Minimatch.
  // Note that they are not supported in Glob itself anyway.
  options.nonegate = true
  options.nocomment = true

  self.minimatch = new Minimatch(pattern, options)
  self.options = self.minimatch.options
}

function finish (self) {
  var nou = self.nounique
  var all = nou ? [] : Object.create(null)

  for (var i = 0, l = self.matches.length; i < l; i ++) {
    var matches = self.matches[i]
    if (!matches || Object.keys(matches).length === 0) {
      if (self.nonull) {
        // do like the shell, and spit out the literal glob
        var literal = self.minimatch.globSet[i]
        if (nou)
          all.push(literal)
        else
          all[literal] = true
      }
    } else {
      // had matches
      var m = Object.keys(matches)
      if (nou)
        all.push.apply(all, m)
      else
        m.forEach(function (m) {
          all[m] = true
        })
    }
  }

  if (!nou)
    all = Object.keys(all)

  if (!self.nosort)
    all = all.sort(self.nocase ? alphasorti : alphasort)

  // at *some* point we statted all of these
  if (self.mark) {
    for (var i = 0; i < all.length; i++) {
      all[i] = self._mark(all[i])
    }
    if (self.nodir) {
      all = all.filter(function (e) {
        var notDir = !(/\/$/.test(e))
        var c = self.cache[e] || self.cache[makeAbs(self, e)]
        if (notDir && c)
          notDir = c !== 'DIR' && !Array.isArray(c)
        return notDir
      })
    }
  }

  if (self.ignore.length)
    all = all.filter(function(m) {
      return !isIgnored(self, m)
    })

  self.found = all
}

function mark (self, p) {
  var abs = makeAbs(self, p)
  var c = self.cache[abs]
  var m = p
  if (c) {
    var isDir = c === 'DIR' || Array.isArray(c)
    var slash = p.slice(-1) === '/'

    if (isDir && !slash)
      m += '/'
    else if (!isDir && slash)
      m = m.slice(0, -1)

    if (m !== p) {
      var mabs = makeAbs(self, m)
      self.statCache[mabs] = self.statCache[abs]
      self.cache[mabs] = self.cache[abs]
    }
  }

  return m
}

// lotta situps...
function makeAbs (self, f) {
  var abs = f
  if (f.charAt(0) === '/') {
    abs = path.join(self.root, f)
  } else if (isAbsolute(f) || f === '') {
    abs = f
  } else if (self.changedCwd) {
    abs = path.resolve(self.cwd, f)
  } else {
    abs = path.resolve(f)
  }

  if (process.platform === 'win32')
    abs = abs.replace(/\\/g, '/')

  return abs
}


// Return true, if pattern ends with globstar '**', for the accompanying parent directory.
// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents
function isIgnored (self, path) {
  if (!self.ignore.length)
    return false

  return self.ignore.some(function(item) {
    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))
  })
}

function childrenIgnored (self, path) {
  if (!self.ignore.length)
    return false

  return self.ignore.some(function(item) {
    return !!(item.gmatcher && item.gmatcher.match(path))
  })
}


/***/ }),

/***/ "./node_modules/glob/glob.js":
/*!***********************************!*\
  !*** ./node_modules/glob/glob.js ***!
  \***********************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 41:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Approach:
//
// 1. Get the minimatch set
// 2. For each pattern in the set, PROCESS(pattern, false)
// 3. Store matches per-set, then uniq them
//
// PROCESS(pattern, inGlobStar)
// Get the first [n] items from pattern that are all strings
// Join these together.  This is PREFIX.
//   If there is no more remaining, then stat(PREFIX) and
//   add to matches if it succeeds.  END.
//
// If inGlobStar and PREFIX is symlink and points to dir
//   set ENTRIES = []
// else readdir(PREFIX) as ENTRIES
//   If fail, END
//
// with ENTRIES
//   If pattern[n] is GLOBSTAR
//     // handle the case where the globstar match is empty
//     // by pruning it out, and testing the resulting pattern
//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)
//     // handle other cases.
//     for ENTRY in ENTRIES (not dotfiles)
//       // attach globstar + tail onto the entry
//       // Mark that this entry is a globstar match
//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)
//
//   else // not globstar
//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)
//       Test ENTRY against pattern[n]
//       If fails, continue
//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])
//
// Caveat:
//   Cache all stats and readdirs results to minimize syscall.  Since all
//   we ever care about is existence and directory-ness, we can just keep
//   `true` for files, and [children,...] for directories, or `false` for
//   things that don't exist.

module.exports = glob

var fs = __webpack_require__(/*! fs */ "fs")
var rp = __webpack_require__(/*! fs.realpath */ "./node_modules/fs.realpath/index.js")
var minimatch = __webpack_require__(/*! minimatch */ "./node_modules/minimatch/minimatch.js")
var Minimatch = minimatch.Minimatch
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits.js")
var EE = __webpack_require__(/*! events */ "events").EventEmitter
var path = __webpack_require__(/*! path */ "path")
var assert = __webpack_require__(/*! assert */ "assert")
var isAbsolute = __webpack_require__(/*! path-is-absolute */ "./node_modules/path-is-absolute/index.js")
var globSync = __webpack_require__(/*! ./sync.js */ "./node_modules/glob/sync.js")
var common = __webpack_require__(/*! ./common.js */ "./node_modules/glob/common.js")
var alphasort = common.alphasort
var alphasorti = common.alphasorti
var setopts = common.setopts
var ownProp = common.ownProp
var inflight = __webpack_require__(/*! inflight */ "./node_modules/inflight/inflight.js")
var util = __webpack_require__(/*! util */ "util")
var childrenIgnored = common.childrenIgnored
var isIgnored = common.isIgnored

var once = __webpack_require__(/*! once */ "./node_modules/once/once.js")

function glob (pattern, options, cb) {
  if (typeof options === 'function') cb = options, options = {}
  if (!options) options = {}

  if (options.sync) {
    if (cb)
      throw new TypeError('callback provided to sync glob')
    return globSync(pattern, options)
  }

  return new Glob(pattern, options, cb)
}

glob.sync = globSync
var GlobSync = glob.GlobSync = globSync.GlobSync

// old api surface
glob.glob = glob

function extend (origin, add) {
  if (add === null || typeof add !== 'object') {
    return origin
  }

  var keys = Object.keys(add)
  var i = keys.length
  while (i--) {
    origin[keys[i]] = add[keys[i]]
  }
  return origin
}

glob.hasMagic = function (pattern, options_) {
  var options = extend({}, options_)
  options.noprocess = true

  var g = new Glob(pattern, options)
  var set = g.minimatch.set

  if (!pattern)
    return false

  if (set.length > 1)
    return true

  for (var j = 0; j < set[0].length; j++) {
    if (typeof set[0][j] !== 'string')
      return true
  }

  return false
}

glob.Glob = Glob
inherits(Glob, EE)
function Glob (pattern, options, cb) {
  if (typeof options === 'function') {
    cb = options
    options = null
  }

  if (options && options.sync) {
    if (cb)
      throw new TypeError('callback provided to sync glob')
    return new GlobSync(pattern, options)
  }

  if (!(this instanceof Glob))
    return new Glob(pattern, options, cb)

  setopts(this, pattern, options)
  this._didRealPath = false

  // process each pattern in the minimatch set
  var n = this.minimatch.set.length

  // The matches are stored as {<filename>: true,...} so that
  // duplicates are automagically pruned.
  // Later, we do an Object.keys() on these.
  // Keep them as a list so we can fill in when nonull is set.
  this.matches = new Array(n)

  if (typeof cb === 'function') {
    cb = once(cb)
    this.on('error', cb)
    this.on('end', function (matches) {
      cb(null, matches)
    })
  }

  var self = this
  this._processing = 0

  this._emitQueue = []
  this._processQueue = []
  this.paused = false

  if (this.noprocess)
    return this

  if (n === 0)
    return done()

  var sync = true
  for (var i = 0; i < n; i ++) {
    this._process(this.minimatch.set[i], i, false, done)
  }
  sync = false

  function done () {
    --self._processing
    if (self._processing <= 0) {
      if (sync) {
        process.nextTick(function () {
          self._finish()
        })
      } else {
        self._finish()
      }
    }
  }
}

Glob.prototype._finish = function () {
  assert(this instanceof Glob)
  if (this.aborted)
    return

  if (this.realpath && !this._didRealpath)
    return this._realpath()

  common.finish(this)
  this.emit('end', this.found)
}

Glob.prototype._realpath = function () {
  if (this._didRealpath)
    return

  this._didRealpath = true

  var n = this.matches.length
  if (n === 0)
    return this._finish()

  var self = this
  for (var i = 0; i < this.matches.length; i++)
    this._realpathSet(i, next)

  function next () {
    if (--n === 0)
      self._finish()
  }
}

Glob.prototype._realpathSet = function (index, cb) {
  var matchset = this.matches[index]
  if (!matchset)
    return cb()

  var found = Object.keys(matchset)
  var self = this
  var n = found.length

  if (n === 0)
    return cb()

  var set = this.matches[index] = Object.create(null)
  found.forEach(function (p, i) {
    // If there's a problem with the stat, then it means that
    // one or more of the links in the realpath couldn't be
    // resolved.  just return the abs value in that case.
    p = self._makeAbs(p)
    rp.realpath(p, self.realpathCache, function (er, real) {
      if (!er)
        set[real] = true
      else if (er.syscall === 'stat')
        set[p] = true
      else
        self.emit('error', er) // srsly wtf right here

      if (--n === 0) {
        self.matches[index] = set
        cb()
      }
    })
  })
}

Glob.prototype._mark = function (p) {
  return common.mark(this, p)
}

Glob.prototype._makeAbs = function (f) {
  return common.makeAbs(this, f)
}

Glob.prototype.abort = function () {
  this.aborted = true
  this.emit('abort')
}

Glob.prototype.pause = function () {
  if (!this.paused) {
    this.paused = true
    this.emit('pause')
  }
}

Glob.prototype.resume = function () {
  if (this.paused) {
    this.emit('resume')
    this.paused = false
    if (this._emitQueue.length) {
      var eq = this._emitQueue.slice(0)
      this._emitQueue.length = 0
      for (var i = 0; i < eq.length; i ++) {
        var e = eq[i]
        this._emitMatch(e[0], e[1])
      }
    }
    if (this._processQueue.length) {
      var pq = this._processQueue.slice(0)
      this._processQueue.length = 0
      for (var i = 0; i < pq.length; i ++) {
        var p = pq[i]
        this._processing--
        this._process(p[0], p[1], p[2], p[3])
      }
    }
  }
}

Glob.prototype._process = function (pattern, index, inGlobStar, cb) {
  assert(this instanceof Glob)
  assert(typeof cb === 'function')

  if (this.aborted)
    return

  this._processing++
  if (this.paused) {
    this._processQueue.push([pattern, index, inGlobStar, cb])
    return
  }

  //console.error('PROCESS %d', this._processing, pattern)

  // Get the first [n] parts of pattern that are all strings.
  var n = 0
  while (typeof pattern[n] === 'string') {
    n ++
  }
  // now n is the index of the first one that is *not* a string.

  // see if there's anything else
  var prefix
  switch (n) {
    // if not, then this is rather simple
    case pattern.length:
      this._processSimple(pattern.join('/'), index, cb)
      return

    case 0:
      // pattern *starts* with some non-trivial item.
      // going to readdir(cwd), but not include the prefix in matches.
      prefix = null
      break

    default:
      // pattern has some string bits in the front.
      // whatever it starts with, whether that's 'absolute' like /foo/bar,
      // or 'relative' like '../baz'
      prefix = pattern.slice(0, n).join('/')
      break
  }

  var remain = pattern.slice(n)

  // get the list of entries.
  var read
  if (prefix === null)
    read = '.'
  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {
    if (!prefix || !isAbsolute(prefix))
      prefix = '/' + prefix
    read = prefix
  } else
    read = prefix

  var abs = this._makeAbs(read)

  //if ignored, skip _processing
  if (childrenIgnored(this, read))
    return cb()

  var isGlobStar = remain[0] === minimatch.GLOBSTAR
  if (isGlobStar)
    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)
  else
    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)
}

Glob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {
  var self = this
  this._readdir(abs, inGlobStar, function (er, entries) {
    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)
  })
}

Glob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {

  // if the abs isn't a dir, then nothing can match!
  if (!entries)
    return cb()

  // It will only match dot entries if it starts with a dot, or if
  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.
  var pn = remain[0]
  var negate = !!this.minimatch.negate
  var rawGlob = pn._glob
  var dotOk = this.dot || rawGlob.charAt(0) === '.'

  var matchedEntries = []
  for (var i = 0; i < entries.length; i++) {
    var e = entries[i]
    if (e.charAt(0) !== '.' || dotOk) {
      var m
      if (negate && !prefix) {
        m = !e.match(pn)
      } else {
        m = e.match(pn)
      }
      if (m)
        matchedEntries.push(e)
    }
  }

  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)

  var len = matchedEntries.length
  // If there are no matched entries, then nothing matches.
  if (len === 0)
    return cb()

  // if this is the last remaining pattern bit, then no need for
  // an additional stat *unless* the user has specified mark or
  // stat explicitly.  We know they exist, since readdir returned
  // them.

  if (remain.length === 1 && !this.mark && !this.stat) {
    if (!this.matches[index])
      this.matches[index] = Object.create(null)

    for (var i = 0; i < len; i ++) {
      var e = matchedEntries[i]
      if (prefix) {
        if (prefix !== '/')
          e = prefix + '/' + e
        else
          e = prefix + e
      }

      if (e.charAt(0) === '/' && !this.nomount) {
        e = path.join(this.root, e)
      }
      this._emitMatch(index, e)
    }
    // This was the last one, and no stats were needed
    return cb()
  }

  // now test all matched entries as stand-ins for that part
  // of the pattern.
  remain.shift()
  for (var i = 0; i < len; i ++) {
    var e = matchedEntries[i]
    var newPattern
    if (prefix) {
      if (prefix !== '/')
        e = prefix + '/' + e
      else
        e = prefix + e
    }
    this._process([e].concat(remain), index, inGlobStar, cb)
  }
  cb()
}

Glob.prototype._emitMatch = function (index, e) {
  if (this.aborted)
    return

  if (isIgnored(this, e))
    return

  if (this.paused) {
    this._emitQueue.push([index, e])
    return
  }

  var abs = isAbsolute(e) ? e : this._makeAbs(e)

  if (this.mark)
    e = this._mark(e)

  if (this.absolute)
    e = abs

  if (this.matches[index][e])
    return

  if (this.nodir) {
    var c = this.cache[abs]
    if (c === 'DIR' || Array.isArray(c))
      return
  }

  this.matches[index][e] = true

  var st = this.statCache[abs]
  if (st)
    this.emit('stat', e, st)

  this.emit('match', e)
}

Glob.prototype._readdirInGlobStar = function (abs, cb) {
  if (this.aborted)
    return

  // follow all symlinked directories forever
  // just proceed as if this is a non-globstar situation
  if (this.follow)
    return this._readdir(abs, false, cb)

  var lstatkey = 'lstat\0' + abs
  var self = this
  var lstatcb = inflight(lstatkey, lstatcb_)

  if (lstatcb)
    fs.lstat(abs, lstatcb)

  function lstatcb_ (er, lstat) {
    if (er && er.code === 'ENOENT')
      return cb()

    var isSym = lstat && lstat.isSymbolicLink()
    self.symlinks[abs] = isSym

    // If it's not a symlink or a dir, then it's definitely a regular file.
    // don't bother doing a readdir in that case.
    if (!isSym && lstat && !lstat.isDirectory()) {
      self.cache[abs] = 'FILE'
      cb()
    } else
      self._readdir(abs, false, cb)
  }
}

Glob.prototype._readdir = function (abs, inGlobStar, cb) {
  if (this.aborted)
    return

  cb = inflight('readdir\0'+abs+'\0'+inGlobStar, cb)
  if (!cb)
    return

  //console.error('RD %j %j', +inGlobStar, abs)
  if (inGlobStar && !ownProp(this.symlinks, abs))
    return this._readdirInGlobStar(abs, cb)

  if (ownProp(this.cache, abs)) {
    var c = this.cache[abs]
    if (!c || c === 'FILE')
      return cb()

    if (Array.isArray(c))
      return cb(null, c)
  }

  var self = this
  fs.readdir(abs, readdirCb(this, abs, cb))
}

function readdirCb (self, abs, cb) {
  return function (er, entries) {
    if (er)
      self._readdirError(abs, er, cb)
    else
      self._readdirEntries(abs, entries, cb)
  }
}

Glob.prototype._readdirEntries = function (abs, entries, cb) {
  if (this.aborted)
    return

  // if we haven't asked to stat everything, then just
  // assume that everything in there exists, so we can avoid
  // having to stat it a second time.
  if (!this.mark && !this.stat) {
    for (var i = 0; i < entries.length; i ++) {
      var e = entries[i]
      if (abs === '/')
        e = abs + e
      else
        e = abs + '/' + e
      this.cache[e] = true
    }
  }

  this.cache[abs] = entries
  return cb(null, entries)
}

Glob.prototype._readdirError = function (f, er, cb) {
  if (this.aborted)
    return

  // handle errors, and cache the information
  switch (er.code) {
    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205
    case 'ENOTDIR': // totally normal. means it *does* exist.
      var abs = this._makeAbs(f)
      this.cache[abs] = 'FILE'
      if (abs === this.cwdAbs) {
        var error = new Error(er.code + ' invalid cwd ' + this.cwd)
        error.path = this.cwd
        error.code = er.code
        this.emit('error', error)
        this.abort()
      }
      break

    case 'ENOENT': // not terribly unusual
    case 'ELOOP':
    case 'ENAMETOOLONG':
    case 'UNKNOWN':
      this.cache[this._makeAbs(f)] = false
      break

    default: // some unusual error.  Treat as failure.
      this.cache[this._makeAbs(f)] = false
      if (this.strict) {
        this.emit('error', er)
        // If the error is handled, then we abort
        // if not, we threw out of here
        this.abort()
      }
      if (!this.silent)
        console.error('glob error', er)
      break
  }

  return cb()
}

Glob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {
  var self = this
  this._readdir(abs, inGlobStar, function (er, entries) {
    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)
  })
}


Glob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {
  //console.error('pgs2', prefix, remain[0], entries)

  // no entries means not a dir, so it can never have matches
  // foo.txt/** doesn't match foo.txt
  if (!entries)
    return cb()

  // test without the globstar, and with every child both below
  // and replacing the globstar.
  var remainWithoutGlobStar = remain.slice(1)
  var gspref = prefix ? [ prefix ] : []
  var noGlobStar = gspref.concat(remainWithoutGlobStar)

  // the noGlobStar pattern exits the inGlobStar state
  this._process(noGlobStar, index, false, cb)

  var isSym = this.symlinks[abs]
  var len = entries.length

  // If it's a symlink, and we're in a globstar, then stop
  if (isSym && inGlobStar)
    return cb()

  for (var i = 0; i < len; i++) {
    var e = entries[i]
    if (e.charAt(0) === '.' && !this.dot)
      continue

    // these two cases enter the inGlobStar state
    var instead = gspref.concat(entries[i], remainWithoutGlobStar)
    this._process(instead, index, true, cb)

    var below = gspref.concat(entries[i], remain)
    this._process(below, index, true, cb)
  }

  cb()
}

Glob.prototype._processSimple = function (prefix, index, cb) {
  // XXX review this.  Shouldn't it be doing the mounting etc
  // before doing stat?  kinda weird?
  var self = this
  this._stat(prefix, function (er, exists) {
    self._processSimple2(prefix, index, er, exists, cb)
  })
}
Glob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {

  //console.error('ps2', prefix, exists)

  if (!this.matches[index])
    this.matches[index] = Object.create(null)

  // If it doesn't exist, then just mark the lack of results
  if (!exists)
    return cb()

  if (prefix && isAbsolute(prefix) && !this.nomount) {
    var trail = /[\/\\]$/.test(prefix)
    if (prefix.charAt(0) === '/') {
      prefix = path.join(this.root, prefix)
    } else {
      prefix = path.resolve(this.root, prefix)
      if (trail)
        prefix += '/'
    }
  }

  if (process.platform === 'win32')
    prefix = prefix.replace(/\\/g, '/')

  // Mark this as a match
  this._emitMatch(index, prefix)
  cb()
}

// Returns either 'DIR', 'FILE', or false
Glob.prototype._stat = function (f, cb) {
  var abs = this._makeAbs(f)
  var needDir = f.slice(-1) === '/'

  if (f.length > this.maxLength)
    return cb()

  if (!this.stat && ownProp(this.cache, abs)) {
    var c = this.cache[abs]

    if (Array.isArray(c))
      c = 'DIR'

    // It exists, but maybe not how we need it
    if (!needDir || c === 'DIR')
      return cb(null, c)

    if (needDir && c === 'FILE')
      return cb()

    // otherwise we have to stat, because maybe c=true
    // if we know it exists, but not what it is.
  }

  var exists
  var stat = this.statCache[abs]
  if (stat !== undefined) {
    if (stat === false)
      return cb(null, stat)
    else {
      var type = stat.isDirectory() ? 'DIR' : 'FILE'
      if (needDir && type === 'FILE')
        return cb()
      else
        return cb(null, type, stat)
    }
  }

  var self = this
  var statcb = inflight('stat\0' + abs, lstatcb_)
  if (statcb)
    fs.lstat(abs, statcb)

  function lstatcb_ (er, lstat) {
    if (lstat && lstat.isSymbolicLink()) {
      // If it's a symlink, then treat it as the target, unless
      // the target does not exist, then treat it as a file.
      return fs.stat(abs, function (er, stat) {
        if (er)
          self._stat2(f, abs, null, lstat, cb)
        else
          self._stat2(f, abs, er, stat, cb)
      })
    } else {
      self._stat2(f, abs, er, lstat, cb)
    }
  }
}

Glob.prototype._stat2 = function (f, abs, er, stat, cb) {
  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {
    this.statCache[abs] = false
    return cb()
  }

  var needDir = f.slice(-1) === '/'
  this.statCache[abs] = stat

  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())
    return cb(null, false, stat)

  var c = true
  if (stat)
    c = stat.isDirectory() ? 'DIR' : 'FILE'
  this.cache[abs] = this.cache[abs] || c

  if (needDir && c === 'FILE')
    return cb()

  return cb(null, c, stat)
}


/***/ }),

/***/ "./node_modules/glob/sync.js":
/*!***********************************!*\
  !*** ./node_modules/glob/sync.js ***!
  \***********************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 1:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = globSync
globSync.GlobSync = GlobSync

var fs = __webpack_require__(/*! fs */ "fs")
var rp = __webpack_require__(/*! fs.realpath */ "./node_modules/fs.realpath/index.js")
var minimatch = __webpack_require__(/*! minimatch */ "./node_modules/minimatch/minimatch.js")
var Minimatch = minimatch.Minimatch
var Glob = __webpack_require__(/*! ./glob.js */ "./node_modules/glob/glob.js").Glob
var util = __webpack_require__(/*! util */ "util")
var path = __webpack_require__(/*! path */ "path")
var assert = __webpack_require__(/*! assert */ "assert")
var isAbsolute = __webpack_require__(/*! path-is-absolute */ "./node_modules/path-is-absolute/index.js")
var common = __webpack_require__(/*! ./common.js */ "./node_modules/glob/common.js")
var alphasort = common.alphasort
var alphasorti = common.alphasorti
var setopts = common.setopts
var ownProp = common.ownProp
var childrenIgnored = common.childrenIgnored
var isIgnored = common.isIgnored

function globSync (pattern, options) {
  if (typeof options === 'function' || arguments.length === 3)
    throw new TypeError('callback provided to sync glob\n'+
                        'See: https://github.com/isaacs/node-glob/issues/167')

  return new GlobSync(pattern, options).found
}

function GlobSync (pattern, options) {
  if (!pattern)
    throw new Error('must provide pattern')

  if (typeof options === 'function' || arguments.length === 3)
    throw new TypeError('callback provided to sync glob\n'+
                        'See: https://github.com/isaacs/node-glob/issues/167')

  if (!(this instanceof GlobSync))
    return new GlobSync(pattern, options)

  setopts(this, pattern, options)

  if (this.noprocess)
    return this

  var n = this.minimatch.set.length
  this.matches = new Array(n)
  for (var i = 0; i < n; i ++) {
    this._process(this.minimatch.set[i], i, false)
  }
  this._finish()
}

GlobSync.prototype._finish = function () {
  assert(this instanceof GlobSync)
  if (this.realpath) {
    var self = this
    this.matches.forEach(function (matchset, index) {
      var set = self.matches[index] = Object.create(null)
      for (var p in matchset) {
        try {
          p = self._makeAbs(p)
          var real = rp.realpathSync(p, self.realpathCache)
          set[real] = true
        } catch (er) {
          if (er.syscall === 'stat')
            set[self._makeAbs(p)] = true
          else
            throw er
        }
      }
    })
  }
  common.finish(this)
}


GlobSync.prototype._process = function (pattern, index, inGlobStar) {
  assert(this instanceof GlobSync)

  // Get the first [n] parts of pattern that are all strings.
  var n = 0
  while (typeof pattern[n] === 'string') {
    n ++
  }
  // now n is the index of the first one that is *not* a string.

  // See if there's anything else
  var prefix
  switch (n) {
    // if not, then this is rather simple
    case pattern.length:
      this._processSimple(pattern.join('/'), index)
      return

    case 0:
      // pattern *starts* with some non-trivial item.
      // going to readdir(cwd), but not include the prefix in matches.
      prefix = null
      break

    default:
      // pattern has some string bits in the front.
      // whatever it starts with, whether that's 'absolute' like /foo/bar,
      // or 'relative' like '../baz'
      prefix = pattern.slice(0, n).join('/')
      break
  }

  var remain = pattern.slice(n)

  // get the list of entries.
  var read
  if (prefix === null)
    read = '.'
  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {
    if (!prefix || !isAbsolute(prefix))
      prefix = '/' + prefix
    read = prefix
  } else
    read = prefix

  var abs = this._makeAbs(read)

  //if ignored, skip processing
  if (childrenIgnored(this, read))
    return

  var isGlobStar = remain[0] === minimatch.GLOBSTAR
  if (isGlobStar)
    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)
  else
    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)
}


GlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {
  var entries = this._readdir(abs, inGlobStar)

  // if the abs isn't a dir, then nothing can match!
  if (!entries)
    return

  // It will only match dot entries if it starts with a dot, or if
  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.
  var pn = remain[0]
  var negate = !!this.minimatch.negate
  var rawGlob = pn._glob
  var dotOk = this.dot || rawGlob.charAt(0) === '.'

  var matchedEntries = []
  for (var i = 0; i < entries.length; i++) {
    var e = entries[i]
    if (e.charAt(0) !== '.' || dotOk) {
      var m
      if (negate && !prefix) {
        m = !e.match(pn)
      } else {
        m = e.match(pn)
      }
      if (m)
        matchedEntries.push(e)
    }
  }

  var len = matchedEntries.length
  // If there are no matched entries, then nothing matches.
  if (len === 0)
    return

  // if this is the last remaining pattern bit, then no need for
  // an additional stat *unless* the user has specified mark or
  // stat explicitly.  We know they exist, since readdir returned
  // them.

  if (remain.length === 1 && !this.mark && !this.stat) {
    if (!this.matches[index])
      this.matches[index] = Object.create(null)

    for (var i = 0; i < len; i ++) {
      var e = matchedEntries[i]
      if (prefix) {
        if (prefix.slice(-1) !== '/')
          e = prefix + '/' + e
        else
          e = prefix + e
      }

      if (e.charAt(0) === '/' && !this.nomount) {
        e = path.join(this.root, e)
      }
      this._emitMatch(index, e)
    }
    // This was the last one, and no stats were needed
    return
  }

  // now test all matched entries as stand-ins for that part
  // of the pattern.
  remain.shift()
  for (var i = 0; i < len; i ++) {
    var e = matchedEntries[i]
    var newPattern
    if (prefix)
      newPattern = [prefix, e]
    else
      newPattern = [e]
    this._process(newPattern.concat(remain), index, inGlobStar)
  }
}


GlobSync.prototype._emitMatch = function (index, e) {
  if (isIgnored(this, e))
    return

  var abs = this._makeAbs(e)

  if (this.mark)
    e = this._mark(e)

  if (this.absolute) {
    e = abs
  }

  if (this.matches[index][e])
    return

  if (this.nodir) {
    var c = this.cache[abs]
    if (c === 'DIR' || Array.isArray(c))
      return
  }

  this.matches[index][e] = true

  if (this.stat)
    this._stat(e)
}


GlobSync.prototype._readdirInGlobStar = function (abs) {
  // follow all symlinked directories forever
  // just proceed as if this is a non-globstar situation
  if (this.follow)
    return this._readdir(abs, false)

  var entries
  var lstat
  var stat
  try {
    lstat = fs.lstatSync(abs)
  } catch (er) {
    if (er.code === 'ENOENT') {
      // lstat failed, doesn't exist
      return null
    }
  }

  var isSym = lstat && lstat.isSymbolicLink()
  this.symlinks[abs] = isSym

  // If it's not a symlink or a dir, then it's definitely a regular file.
  // don't bother doing a readdir in that case.
  if (!isSym && lstat && !lstat.isDirectory())
    this.cache[abs] = 'FILE'
  else
    entries = this._readdir(abs, false)

  return entries
}

GlobSync.prototype._readdir = function (abs, inGlobStar) {
  var entries

  if (inGlobStar && !ownProp(this.symlinks, abs))
    return this._readdirInGlobStar(abs)

  if (ownProp(this.cache, abs)) {
    var c = this.cache[abs]
    if (!c || c === 'FILE')
      return null

    if (Array.isArray(c))
      return c
  }

  try {
    return this._readdirEntries(abs, fs.readdirSync(abs))
  } catch (er) {
    this._readdirError(abs, er)
    return null
  }
}

GlobSync.prototype._readdirEntries = function (abs, entries) {
  // if we haven't asked to stat everything, then just
  // assume that everything in there exists, so we can avoid
  // having to stat it a second time.
  if (!this.mark && !this.stat) {
    for (var i = 0; i < entries.length; i ++) {
      var e = entries[i]
      if (abs === '/')
        e = abs + e
      else
        e = abs + '/' + e
      this.cache[e] = true
    }
  }

  this.cache[abs] = entries

  // mark and cache dir-ness
  return entries
}

GlobSync.prototype._readdirError = function (f, er) {
  // handle errors, and cache the information
  switch (er.code) {
    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205
    case 'ENOTDIR': // totally normal. means it *does* exist.
      var abs = this._makeAbs(f)
      this.cache[abs] = 'FILE'
      if (abs === this.cwdAbs) {
        var error = new Error(er.code + ' invalid cwd ' + this.cwd)
        error.path = this.cwd
        error.code = er.code
        throw error
      }
      break

    case 'ENOENT': // not terribly unusual
    case 'ELOOP':
    case 'ENAMETOOLONG':
    case 'UNKNOWN':
      this.cache[this._makeAbs(f)] = false
      break

    default: // some unusual error.  Treat as failure.
      this.cache[this._makeAbs(f)] = false
      if (this.strict)
        throw er
      if (!this.silent)
        console.error('glob error', er)
      break
  }
}

GlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {

  var entries = this._readdir(abs, inGlobStar)

  // no entries means not a dir, so it can never have matches
  // foo.txt/** doesn't match foo.txt
  if (!entries)
    return

  // test without the globstar, and with every child both below
  // and replacing the globstar.
  var remainWithoutGlobStar = remain.slice(1)
  var gspref = prefix ? [ prefix ] : []
  var noGlobStar = gspref.concat(remainWithoutGlobStar)

  // the noGlobStar pattern exits the inGlobStar state
  this._process(noGlobStar, index, false)

  var len = entries.length
  var isSym = this.symlinks[abs]

  // If it's a symlink, and we're in a globstar, then stop
  if (isSym && inGlobStar)
    return

  for (var i = 0; i < len; i++) {
    var e = entries[i]
    if (e.charAt(0) === '.' && !this.dot)
      continue

    // these two cases enter the inGlobStar state
    var instead = gspref.concat(entries[i], remainWithoutGlobStar)
    this._process(instead, index, true)

    var below = gspref.concat(entries[i], remain)
    this._process(below, index, true)
  }
}

GlobSync.prototype._processSimple = function (prefix, index) {
  // XXX review this.  Shouldn't it be doing the mounting etc
  // before doing stat?  kinda weird?
  var exists = this._stat(prefix)

  if (!this.matches[index])
    this.matches[index] = Object.create(null)

  // If it doesn't exist, then just mark the lack of results
  if (!exists)
    return

  if (prefix && isAbsolute(prefix) && !this.nomount) {
    var trail = /[\/\\]$/.test(prefix)
    if (prefix.charAt(0) === '/') {
      prefix = path.join(this.root, prefix)
    } else {
      prefix = path.resolve(this.root, prefix)
      if (trail)
        prefix += '/'
    }
  }

  if (process.platform === 'win32')
    prefix = prefix.replace(/\\/g, '/')

  // Mark this as a match
  this._emitMatch(index, prefix)
}

// Returns either 'DIR', 'FILE', or false
GlobSync.prototype._stat = function (f) {
  var abs = this._makeAbs(f)
  var needDir = f.slice(-1) === '/'

  if (f.length > this.maxLength)
    return false

  if (!this.stat && ownProp(this.cache, abs)) {
    var c = this.cache[abs]

    if (Array.isArray(c))
      c = 'DIR'

    // It exists, but maybe not how we need it
    if (!needDir || c === 'DIR')
      return c

    if (needDir && c === 'FILE')
      return false

    // otherwise we have to stat, because maybe c=true
    // if we know it exists, but not what it is.
  }

  var exists
  var stat = this.statCache[abs]
  if (!stat) {
    var lstat
    try {
      lstat = fs.lstatSync(abs)
    } catch (er) {
      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {
        this.statCache[abs] = false
        return false
      }
    }

    if (lstat && lstat.isSymbolicLink()) {
      try {
        stat = fs.statSync(abs)
      } catch (er) {
        stat = lstat
      }
    } else {
      stat = lstat
    }
  }

  this.statCache[abs] = stat

  var c = true
  if (stat)
    c = stat.isDirectory() ? 'DIR' : 'FILE'

  this.cache[abs] = this.cache[abs] || c

  if (needDir && c === 'FILE')
    return false

  return c
}

GlobSync.prototype._mark = function (p) {
  return common.mark(this, p)
}

GlobSync.prototype._makeAbs = function (f) {
  return common.makeAbs(this, f)
}


/***/ }),

/***/ "./node_modules/google-protobuf/google-protobuf.js":
/*!*********************************************************!*\
  !*** ./node_modules/google-protobuf/google-protobuf.js ***!
  \*********************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, __webpack_exports__ */
/*! CommonJS bailout: this is used directly at 2:342-346 */
/*! CommonJS bailout: this is used directly at 7:307-311 */
/***/ (function(__unused_webpack_module, exports) {

var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.findInternal=function(a,b,c){a instanceof String&&(a=String(a));for(var d=a.length,e=0;e<d;e++){var f=a[e];if(b.call(c,f,e,a))return{i:e,v:f}}return{i:-1,v:void 0}};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;
$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)};$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.polyfill=function(a,b,c,d){if(b){c=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];e in c||(c[e]={});c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&$jscomp.defineProperty(c,a,{configurable:!0,writable:!0,value:b})}};$jscomp.polyfill("Array.prototype.findIndex",function(a){return a?a:function(a,c){return $jscomp.findInternal(this,a,c).i}},"es6","es3");
$jscomp.checkStringArgs=function(a,b,c){if(null==a)throw new TypeError("The 'this' value for String.prototype."+c+" must not be null or undefined");if(b instanceof RegExp)throw new TypeError("First argument to String.prototype."+c+" must not be a regular expression");return a+""};
$jscomp.polyfill("String.prototype.endsWith",function(a){return a?a:function(a,c){var b=$jscomp.checkStringArgs(this,a,"endsWith");a+="";void 0===c&&(c=b.length);c=Math.max(0,Math.min(c|0,b.length));for(var e=a.length;0<e&&0<c;)if(b[--c]!=a[--e])return!1;return 0>=e}},"es6","es3");$jscomp.polyfill("Array.prototype.find",function(a){return a?a:function(a,c){return $jscomp.findInternal(this,a,c).v}},"es6","es3");
$jscomp.polyfill("String.prototype.startsWith",function(a){return a?a:function(a,c){var b=$jscomp.checkStringArgs(this,a,"startsWith");a+="";var e=b.length,f=a.length;c=Math.max(0,Math.min(c|0,b.length));for(var g=0;g<f&&c<e;)if(b[c++]!=a[g++])return!1;return g>=f}},"es6","es3");
$jscomp.polyfill("String.prototype.repeat",function(a){return a?a:function(a){var b=$jscomp.checkStringArgs(this,null,"repeat");if(0>a||1342177279<a)throw new RangeError("Invalid count value");a|=0;for(var d="";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return d}},"es6","es3");var COMPILED=!0,goog=goog||{};goog.global=this||self;goog.isDef=function(a){return void 0!==a};goog.isString=function(a){return"string"==typeof a};goog.isBoolean=function(a){return"boolean"==typeof a};
goog.isNumber=function(a){return"number"==typeof a};goog.exportPath_=function(a,b,c){a=a.split(".");c=c||goog.global;a[0]in c||"undefined"==typeof c.execScript||c.execScript("var "+a[0]);for(var d;a.length&&(d=a.shift());)!a.length&&goog.isDef(b)?c[d]=b:c=c[d]&&c[d]!==Object.prototype[d]?c[d]:c[d]={}};
goog.define=function(a,b){if(!COMPILED){var c=goog.global.CLOSURE_UNCOMPILED_DEFINES,d=goog.global.CLOSURE_DEFINES;c&&void 0===c.nodeType&&Object.prototype.hasOwnProperty.call(c,a)?b=c[a]:d&&void 0===d.nodeType&&Object.prototype.hasOwnProperty.call(d,a)&&(b=d[a])}return b};goog.FEATURESET_YEAR=2012;goog.DEBUG=!0;goog.LOCALE="en";goog.TRUSTED_SITE=!0;goog.STRICT_MODE_COMPATIBLE=!1;goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG;goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1;
goog.provide=function(a){if(goog.isInModuleLoader_())throw Error("goog.provide cannot be used within a module.");if(!COMPILED&&goog.isProvided_(a))throw Error('Namespace "'+a+'" already declared.');goog.constructNamespace_(a)};goog.constructNamespace_=function(a,b){if(!COMPILED){delete goog.implicitNamespaces_[a];for(var c=a;(c=c.substring(0,c.lastIndexOf(".")))&&!goog.getObjectByName(c);)goog.implicitNamespaces_[c]=!0}goog.exportPath_(a,b)};
goog.getScriptNonce=function(a){if(a&&a!=goog.global)return goog.getScriptNonce_(a.document);null===goog.cspNonce_&&(goog.cspNonce_=goog.getScriptNonce_(goog.global.document));return goog.cspNonce_};goog.NONCE_PATTERN_=/^[\w+/_-]+[=]{0,2}$/;goog.cspNonce_=null;goog.getScriptNonce_=function(a){return(a=a.querySelector&&a.querySelector("script[nonce]"))&&(a=a.nonce||a.getAttribute("nonce"))&&goog.NONCE_PATTERN_.test(a)?a:""};goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module=function(a){if(!goog.isString(a)||!a||-1==a.search(goog.VALID_MODULE_RE_))throw Error("Invalid module identifier");if(!goog.isInGoogModuleLoader_())throw Error("Module "+a+" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
if(goog.moduleLoaderState_.moduleName)throw Error("goog.module may only be called once per module.");goog.moduleLoaderState_.moduleName=a;if(!COMPILED){if(goog.isProvided_(a))throw Error('Namespace "'+a+'" already declared.');delete goog.implicitNamespaces_[a]}};goog.module.get=function(a){return goog.module.getInternal_(a)};
goog.module.getInternal_=function(a){if(!COMPILED){if(a in goog.loadedModules_)return goog.loadedModules_[a].exports;if(!goog.implicitNamespaces_[a])return a=goog.getObjectByName(a),null!=a?a:null}return null};goog.ModuleType={ES6:"es6",GOOG:"goog"};goog.moduleLoaderState_=null;goog.isInModuleLoader_=function(){return goog.isInGoogModuleLoader_()||goog.isInEs6ModuleLoader_()};goog.isInGoogModuleLoader_=function(){return!!goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.GOOG};
goog.isInEs6ModuleLoader_=function(){if(goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.ES6)return!0;var a=goog.global.$jscomp;return a?"function"!=typeof a.getCurrentModulePath?!1:!!a.getCurrentModulePath():!1};
goog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInGoogModuleLoader_())throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");goog.moduleLoaderState_.declareLegacyNamespace=!0};
goog.declareModuleId=function(a){if(!COMPILED){if(!goog.isInEs6ModuleLoader_())throw Error("goog.declareModuleId may only be called from within an ES6 module");if(goog.moduleLoaderState_&&goog.moduleLoaderState_.moduleName)throw Error("goog.declareModuleId may only be called once per module.");if(a in goog.loadedModules_)throw Error('Module with namespace "'+a+'" already exists.');}if(goog.moduleLoaderState_)goog.moduleLoaderState_.moduleName=a;else{var b=goog.global.$jscomp;if(!b||"function"!=typeof b.getCurrentModulePath)throw Error('Module with namespace "'+
a+'" has been loaded incorrectly.');b=b.require(b.getCurrentModulePath());goog.loadedModules_[a]={exports:b,type:goog.ModuleType.ES6,moduleId:a}}};goog.setTestOnly=function(a){if(goog.DISALLOW_TEST_ONLY_CODE)throw a=a||"",Error("Importing test-only code into non-debug environment"+(a?": "+a:"."));};goog.forwardDeclare=function(a){};
COMPILED||(goog.isProvided_=function(a){return a in goog.loadedModules_||!goog.implicitNamespaces_[a]&&goog.isDefAndNotNull(goog.getObjectByName(a))},goog.implicitNamespaces_={"goog.module":!0});goog.getObjectByName=function(a,b){a=a.split(".");b=b||goog.global;for(var c=0;c<a.length;c++)if(b=b[a[c]],!goog.isDefAndNotNull(b))return null;return b};goog.globalize=function(a,b){b=b||goog.global;for(var c in a)b[c]=a[c]};
goog.addDependency=function(a,b,c,d){!COMPILED&&goog.DEPENDENCIES_ENABLED&&goog.debugLoader_.addDependency(a,b,c,d)};goog.ENABLE_DEBUG_LOADER=!0;goog.logToConsole_=function(a){goog.global.console&&goog.global.console.error(a)};
goog.require=function(a){if(!COMPILED){goog.ENABLE_DEBUG_LOADER&&goog.debugLoader_.requested(a);if(goog.isProvided_(a)){if(goog.isInModuleLoader_())return goog.module.getInternal_(a)}else if(goog.ENABLE_DEBUG_LOADER){var b=goog.moduleLoaderState_;goog.moduleLoaderState_=null;try{goog.debugLoader_.load_(a)}finally{goog.moduleLoaderState_=b}}return null}};goog.requireType=function(a){return{}};goog.basePath="";goog.nullFunction=function(){};
goog.abstractMethod=function(){throw Error("unimplemented abstract method");};goog.addSingletonGetter=function(a){a.instance_=void 0;a.getInstance=function(){if(a.instance_)return a.instance_;goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=a);return a.instance_=new a}};goog.instantiatedSingletons_=[];goog.LOAD_MODULE_USING_EVAL=!0;goog.SEAL_MODULE_EXPORTS=goog.DEBUG;goog.loadedModules_={};goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER;goog.TRANSPILE="detect";
goog.ASSUME_ES_MODULES_TRANSPILED=!1;goog.TRANSPILE_TO_LANGUAGE="";goog.TRANSPILER="transpile.js";goog.hasBadLetScoping=null;goog.useSafari10Workaround=function(){if(null==goog.hasBadLetScoping){try{var a=!eval('"use strict";let x = 1; function f() { return typeof x; };f() == "number";')}catch(b){a=!1}goog.hasBadLetScoping=a}return goog.hasBadLetScoping};goog.workaroundSafari10EvalBug=function(a){return"(function(){"+a+"\n;})();\n"};
goog.loadModule=function(a){var b=goog.moduleLoaderState_;try{goog.moduleLoaderState_={moduleName:"",declareLegacyNamespace:!1,type:goog.ModuleType.GOOG};if(goog.isFunction(a))var c=a.call(void 0,{});else if(goog.isString(a))goog.useSafari10Workaround()&&(a=goog.workaroundSafari10EvalBug(a)),c=goog.loadModuleFromSource_.call(void 0,a);else throw Error("Invalid module definition");var d=goog.moduleLoaderState_.moduleName;if(goog.isString(d)&&d)goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(d,
c):goog.SEAL_MODULE_EXPORTS&&Object.seal&&"object"==typeof c&&null!=c&&Object.seal(c),goog.loadedModules_[d]={exports:c,type:goog.ModuleType.GOOG,moduleId:goog.moduleLoaderState_.moduleName};else throw Error('Invalid module name "'+d+'"');}finally{goog.moduleLoaderState_=b}};goog.loadModuleFromSource_=function(a){eval(a);return{}};goog.normalizePath_=function(a){a=a.split("/");for(var b=0;b<a.length;)"."==a[b]?a.splice(b,1):b&&".."==a[b]&&a[b-1]&&".."!=a[b-1]?a.splice(--b,2):b++;return a.join("/")};
goog.loadFileSync_=function(a){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(a);try{var b=new goog.global.XMLHttpRequest;b.open("get",a,!1);b.send();return 0==b.status||200==b.status?b.responseText:null}catch(c){return null}};
goog.transpile_=function(a,b,c){var d=goog.global.$jscomp;d||(goog.global.$jscomp=d={});var e=d.transpile;if(!e){var f=goog.basePath+goog.TRANSPILER,g=goog.loadFileSync_(f);if(g){(function(){(0,eval)(g+"\n//# sourceURL="+f)}).call(goog.global);if(goog.global.$gwtExport&&goog.global.$gwtExport.$jscomp&&!goog.global.$gwtExport.$jscomp.transpile)throw Error('The transpiler did not properly export the "transpile" method. $gwtExport: '+JSON.stringify(goog.global.$gwtExport));goog.global.$jscomp.transpile=
goog.global.$gwtExport.$jscomp.transpile;d=goog.global.$jscomp;e=d.transpile}}e||(e=d.transpile=function(a,b){goog.logToConsole_(b+" requires transpilation but no transpiler was found.");return a});return e(a,b,c)};
goog.typeOf=function(a){var b=typeof a;if("object"==b)if(a){if(a instanceof Array)return"array";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if("[object Window]"==c)return"object";if("[object Array]"==c||"number"==typeof a.length&&"undefined"!=typeof a.splice&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("splice"))return"array";if("[object Function]"==c||"undefined"!=typeof a.call&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("call"))return"function"}else return"null";
else if("function"==b&&"undefined"==typeof a.call)return"object";return b};goog.isNull=function(a){return null===a};goog.isDefAndNotNull=function(a){return null!=a};goog.isArray=function(a){return"array"==goog.typeOf(a)};goog.isArrayLike=function(a){var b=goog.typeOf(a);return"array"==b||"object"==b&&"number"==typeof a.length};goog.isDateLike=function(a){return goog.isObject(a)&&"function"==typeof a.getFullYear};goog.isFunction=function(a){return"function"==goog.typeOf(a)};
goog.isObject=function(a){var b=typeof a;return"object"==b&&null!=a||"function"==b};goog.getUid=function(a){return a[goog.UID_PROPERTY_]||(a[goog.UID_PROPERTY_]=++goog.uidCounter_)};goog.hasUid=function(a){return!!a[goog.UID_PROPERTY_]};goog.removeUid=function(a){null!==a&&"removeAttribute"in a&&a.removeAttribute(goog.UID_PROPERTY_);try{delete a[goog.UID_PROPERTY_]}catch(b){}};goog.UID_PROPERTY_="closure_uid_"+(1E9*Math.random()>>>0);goog.uidCounter_=0;goog.getHashCode=goog.getUid;
goog.removeHashCode=goog.removeUid;goog.cloneObject=function(a){var b=goog.typeOf(a);if("object"==b||"array"==b){if("function"===typeof a.clone)return a.clone();b="array"==b?[]:{};for(var c in a)b[c]=goog.cloneObject(a[c]);return b}return a};goog.bindNative_=function(a,b,c){return a.call.apply(a.bind,arguments)};
goog.bindJs_=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}};goog.bind=function(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_;return goog.bind.apply(null,arguments)};
goog.partial=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=c.slice();b.push.apply(b,arguments);return a.apply(this,b)}};goog.mixin=function(a,b){for(var c in b)a[c]=b[c]};goog.now=goog.TRUSTED_SITE&&Date.now||function(){return+new Date};
goog.globalEval=function(a){if(goog.global.execScript)goog.global.execScript(a,"JavaScript");else if(goog.global.eval){if(null==goog.evalWorksForGlobals_){try{goog.global.eval("var _evalTest_ = 1;")}catch(d){}if("undefined"!=typeof goog.global._evalTest_){try{delete goog.global._evalTest_}catch(d){}goog.evalWorksForGlobals_=!0}else goog.evalWorksForGlobals_=!1}if(goog.evalWorksForGlobals_)goog.global.eval(a);else{var b=goog.global.document,c=b.createElement("SCRIPT");c.type="text/javascript";c.defer=
!1;c.appendChild(b.createTextNode(a));b.head.appendChild(c);b.head.removeChild(c)}}else throw Error("goog.globalEval not available");};goog.evalWorksForGlobals_=null;
goog.getCssName=function(a,b){if("."==String(a).charAt(0))throw Error('className passed in goog.getCssName must not start with ".". You passed: '+a);var c=function(a){return goog.cssNameMapping_[a]||a},d=function(a){a=a.split("-");for(var b=[],d=0;d<a.length;d++)b.push(c(a[d]));return b.join("-")};d=goog.cssNameMapping_?"BY_WHOLE"==goog.cssNameMappingStyle_?c:d:function(a){return a};a=b?a+"-"+d(b):d(a);return goog.global.CLOSURE_CSS_NAME_MAP_FN?goog.global.CLOSURE_CSS_NAME_MAP_FN(a):a};
goog.setCssNameMapping=function(a,b){goog.cssNameMapping_=a;goog.cssNameMappingStyle_=b};!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING);goog.getMsg=function(a,b,c){c&&c.html&&(a=a.replace(/</g,"&lt;"));b&&(a=a.replace(/\{\$([^}]+)}/g,function(a,c){return null!=b&&c in b?b[c]:a}));return a};goog.getMsgWithFallback=function(a,b){return a};goog.exportSymbol=function(a,b,c){goog.exportPath_(a,b,c)};
goog.exportProperty=function(a,b,c){a[b]=c};goog.inherits=function(a,b){function c(){}c.prototype=b.prototype;a.superClass_=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.base=function(a,c,f){for(var d=Array(arguments.length-2),e=2;e<arguments.length;e++)d[e-2]=arguments[e];return b.prototype[c].apply(a,d)}};
goog.base=function(a,b,c){var d=arguments.callee.caller;if(goog.STRICT_MODE_COMPATIBLE||goog.DEBUG&&!d)throw Error("arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C");if("undefined"!==typeof d.superClass_){for(var e=Array(arguments.length-1),f=1;f<arguments.length;f++)e[f-1]=arguments[f];return d.superClass_.constructor.apply(a,e)}if("string"!=typeof b&&"symbol"!=typeof b)throw Error("method names provided to goog.base must be a string or a symbol");
e=Array(arguments.length-2);for(f=2;f<arguments.length;f++)e[f-2]=arguments[f];f=!1;for(var g=a.constructor.prototype;g;g=Object.getPrototypeOf(g))if(g[b]===d)f=!0;else if(f)return g[b].apply(a,e);if(a[b]===d)return a.constructor.prototype[b].apply(a,e);throw Error("goog.base called from a method of one name to a method of a different name");};goog.scope=function(a){if(goog.isInModuleLoader_())throw Error("goog.scope is not supported within a module.");a.call(goog.global)};
COMPILED||(goog.global.COMPILED=COMPILED);goog.defineClass=function(a,b){var c=b.constructor,d=b.statics;c&&c!=Object.prototype.constructor||(c=function(){throw Error("cannot instantiate an interface (no constructor defined).");});c=goog.defineClass.createSealingConstructor_(c,a);a&&goog.inherits(c,a);delete b.constructor;delete b.statics;goog.defineClass.applyProperties_(c.prototype,b);null!=d&&(d instanceof Function?d(c):goog.defineClass.applyProperties_(c,d));return c};
goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG;goog.defineClass.createSealingConstructor_=function(a,b){if(!goog.defineClass.SEAL_CLASS_INSTANCES)return a;var c=!goog.defineClass.isUnsealable_(b),d=function(){var b=a.apply(this,arguments)||this;b[goog.UID_PROPERTY_]=b[goog.UID_PROPERTY_];this.constructor===d&&c&&Object.seal instanceof Function&&Object.seal(b);return b};return d};goog.defineClass.isUnsealable_=function(a){return a&&a.prototype&&a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");goog.defineClass.applyProperties_=function(a,b){for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c]);for(var d=0;d<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;d++)c=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d],Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c])};
goog.tagUnsealableClass=function(a){!COMPILED&&goog.defineClass.SEAL_CLASS_INSTANCES&&(a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]=!0)};goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_="goog_defineClass_legacy_unsealable";
!COMPILED&&goog.DEPENDENCIES_ENABLED&&(goog.inHtmlDocument_=function(){var a=goog.global.document;return null!=a&&"write"in a},goog.isDocumentLoading_=function(){var a=goog.global.document;return a.attachEvent?"complete"!=a.readyState:"loading"==a.readyState},goog.findBasePath_=function(){if(goog.isDef(goog.global.CLOSURE_BASE_PATH)&&goog.isString(goog.global.CLOSURE_BASE_PATH))goog.basePath=goog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_()){var a=goog.global.document,b=a.currentScript;
a=b?[b]:a.getElementsByTagName("SCRIPT");for(b=a.length-1;0<=b;--b){var c=a[b].src,d=c.lastIndexOf("?");d=-1==d?c.length:d;if("base.js"==c.substr(d-7,7)){goog.basePath=c.substr(0,d-7);break}}}},goog.findBasePath_(),goog.Transpiler=function(){this.requiresTranspilation_=null;this.transpilationTarget_=goog.TRANSPILE_TO_LANGUAGE},goog.Transpiler.prototype.createRequiresTranspilation_=function(){function a(a,b){e?d[a]=!0:b()?(c=a,d[a]=!1):e=d[a]=!0}function b(a){try{return!!eval(a)}catch(h){return!1}}
var c="es3",d={es3:!1},e=!1,f=goog.global.navigator&&goog.global.navigator.userAgent?goog.global.navigator.userAgent:"";a("es5",function(){return b("[1,].length==1")});a("es6",function(){return f.match(/Edge\/(\d+)(\.\d)*/i)?!1:b('(()=>{"use strict";class X{constructor(){if(new.target!=String)throw 1;this.x=42}}let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof String))throw 1;for(const a of[2,3]){if(a==2)continue;function f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()==3}})()')});
a("es7",function(){return b("2 ** 2 == 4")});a("es8",function(){return b("async () => 1, true")});a("es9",function(){return b("({...rest} = {}), true")});a("es_next",function(){return!1});return{target:c,map:d}},goog.Transpiler.prototype.needsTranspile=function(a,b){if("always"==goog.TRANSPILE)return!0;if("never"==goog.TRANSPILE)return!1;if(!this.requiresTranspilation_){var c=this.createRequiresTranspilation_();this.requiresTranspilation_=c.map;this.transpilationTarget_=this.transpilationTarget_||
c.target}if(a in this.requiresTranspilation_)return this.requiresTranspilation_[a]?!0:!goog.inHtmlDocument_()||"es6"!=b||"noModule"in goog.global.document.createElement("script")?!1:!0;throw Error("Unknown language mode: "+a);},goog.Transpiler.prototype.transpile=function(a,b){return goog.transpile_(a,b,this.transpilationTarget_)},goog.transpiler_=new goog.Transpiler,goog.protectScriptTag_=function(a){return a.replace(/<\/(SCRIPT)/ig,"\\x3c/$1")},goog.DebugLoader_=function(){this.dependencies_={};
this.idToPath_={};this.written_={};this.loadingDeps_=[];this.depsToLoad_=[];this.paused_=!1;this.factory_=new goog.DependencyFactory(goog.transpiler_);this.deferredCallbacks_={};this.deferredQueue_=[]},goog.DebugLoader_.prototype.bootstrap=function(a,b){function c(){d&&(goog.global.setTimeout(d,0),d=null)}var d=b;if(a.length){b=[];for(var e=0;e<a.length;e++){var f=this.getPathFromDeps_(a[e]);if(!f)throw Error("Unregonized namespace: "+a[e]);b.push(this.dependencies_[f])}f=goog.require;var g=0;for(e=
0;e<a.length;e++)f(a[e]),b[e].onLoad(function(){++g==a.length&&c()})}else c()},goog.DebugLoader_.prototype.loadClosureDeps=function(){this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath+"deps.js"),"deps.js",[],[],{},!1));this.loadDeps_()},goog.DebugLoader_.prototype.requested=function(a,b){(a=this.getPathFromDeps_(a))&&(b||this.areDepsLoaded_(this.dependencies_[a].requires))&&(b=this.deferredCallbacks_[a])&&(delete this.deferredCallbacks_[a],b())},goog.DebugLoader_.prototype.setDependencyFactory=
function(a){this.factory_=a},goog.DebugLoader_.prototype.load_=function(a){if(this.getPathFromDeps_(a)){var b=this,c=[],d=function(a){var e=b.getPathFromDeps_(a);if(!e)throw Error("Bad dependency path or symbol: "+a);if(!b.written_[e]){b.written_[e]=!0;a=b.dependencies_[e];for(e=0;e<a.requires.length;e++)goog.isProvided_(a.requires[e])||d(a.requires[e]);c.push(a)}};d(a);a=!!this.depsToLoad_.length;this.depsToLoad_=this.depsToLoad_.concat(c);this.paused_||a||this.loadDeps_()}else throw a="goog.require could not find: "+
a,goog.logToConsole_(a),Error(a);},goog.DebugLoader_.prototype.loadDeps_=function(){for(var a=this,b=this.paused_;this.depsToLoad_.length&&!b;)(function(){var c=!1,d=a.depsToLoad_.shift(),e=!1;a.loading_(d);var f={pause:function(){if(c)throw Error("Cannot call pause after the call to load.");b=!0},resume:function(){c?a.resume_():b=!1},loaded:function(){if(e)throw Error("Double call to loaded.");e=!0;a.loaded_(d)},pending:function(){for(var b=[],c=0;c<a.loadingDeps_.length;c++)b.push(a.loadingDeps_[c]);
return b},setModuleState:function(a){goog.moduleLoaderState_={type:a,moduleName:"",declareLegacyNamespace:!1}},registerEs6ModuleExports:function(a,b,c){c&&(goog.loadedModules_[c]={exports:b,type:goog.ModuleType.ES6,moduleId:c||""})},registerGoogModuleExports:function(a,b){goog.loadedModules_[a]={exports:b,type:goog.ModuleType.GOOG,moduleId:a}},clearModuleState:function(){goog.moduleLoaderState_=null},defer:function(b){if(c)throw Error("Cannot register with defer after the call to load.");a.defer_(d,
b)},areDepsLoaded:function(){return a.areDepsLoaded_(d.requires)}};try{d.load(f)}finally{c=!0}})();b&&this.pause_()},goog.DebugLoader_.prototype.pause_=function(){this.paused_=!0},goog.DebugLoader_.prototype.resume_=function(){this.paused_&&(this.paused_=!1,this.loadDeps_())},goog.DebugLoader_.prototype.loading_=function(a){this.loadingDeps_.push(a)},goog.DebugLoader_.prototype.loaded_=function(a){for(var b=0;b<this.loadingDeps_.length;b++)if(this.loadingDeps_[b]==a){this.loadingDeps_.splice(b,1);
break}for(b=0;b<this.deferredQueue_.length;b++)if(this.deferredQueue_[b]==a.path){this.deferredQueue_.splice(b,1);break}if(this.loadingDeps_.length==this.deferredQueue_.length&&!this.depsToLoad_.length)for(;this.deferredQueue_.length;)this.requested(this.deferredQueue_.shift(),!0);a.loaded()},goog.DebugLoader_.prototype.areDepsLoaded_=function(a){for(var b=0;b<a.length;b++){var c=this.getPathFromDeps_(a[b]);if(!c||!(c in this.deferredCallbacks_||goog.isProvided_(a[b])))return!1}return!0},goog.DebugLoader_.prototype.getPathFromDeps_=
function(a){return a in this.idToPath_?this.idToPath_[a]:a in this.dependencies_?a:null},goog.DebugLoader_.prototype.defer_=function(a,b){this.deferredCallbacks_[a.path]=b;this.deferredQueue_.push(a.path)},goog.LoadController=function(){},goog.LoadController.prototype.pause=function(){},goog.LoadController.prototype.resume=function(){},goog.LoadController.prototype.loaded=function(){},goog.LoadController.prototype.pending=function(){},goog.LoadController.prototype.registerEs6ModuleExports=function(a,
b,c){},goog.LoadController.prototype.setModuleState=function(a){},goog.LoadController.prototype.clearModuleState=function(){},goog.LoadController.prototype.defer=function(a){},goog.LoadController.prototype.areDepsLoaded=function(){},goog.Dependency=function(a,b,c,d,e){this.path=a;this.relativePath=b;this.provides=c;this.requires=d;this.loadFlags=e;this.loaded_=!1;this.loadCallbacks_=[]},goog.Dependency.prototype.getPathName=function(){var a=this.path,b=a.indexOf("://");0<=b&&(a=a.substring(b+3),b=
a.indexOf("/"),0<=b&&(a=a.substring(b+1)));return a},goog.Dependency.prototype.onLoad=function(a){this.loaded_?a():this.loadCallbacks_.push(a)},goog.Dependency.prototype.loaded=function(){this.loaded_=!0;var a=this.loadCallbacks_;this.loadCallbacks_=[];for(var b=0;b<a.length;b++)a[b]()},goog.Dependency.defer_=!1,goog.Dependency.callbackMap_={},goog.Dependency.registerCallback_=function(a){var b=Math.random().toString(32);goog.Dependency.callbackMap_[b]=a;return b},goog.Dependency.unregisterCallback_=
function(a){delete goog.Dependency.callbackMap_[a]},goog.Dependency.callback_=function(a,b){if(a in goog.Dependency.callbackMap_){for(var c=goog.Dependency.callbackMap_[a],d=[],e=1;e<arguments.length;e++)d.push(arguments[e]);c.apply(void 0,d)}else throw Error("Callback key "+a+" does not exist (was base.js loaded more than once?).");},goog.Dependency.prototype.load=function(a){if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?a.loaded():a.pause();else if(goog.inHtmlDocument_()){var b=
goog.global.document;if("complete"==b.readyState&&!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING){if(/\bdeps.js$/.test(this.path)){a.loaded();return}throw Error('Cannot write "'+this.path+'" after document load');}if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&goog.isDocumentLoading_()){var c=goog.Dependency.registerCallback_(function(b){goog.DebugLoader_.IS_OLD_IE_&&"complete"!=b.readyState||(goog.Dependency.unregisterCallback_(c),a.loaded())}),d=!goog.DebugLoader_.IS_OLD_IE_&&goog.getScriptNonce()?
' nonce="'+goog.getScriptNonce()+'"':"";d='<script src="'+this.path+'" '+(goog.DebugLoader_.IS_OLD_IE_?"onreadystatechange":"onload")+"=\"goog.Dependency.callback_('"+c+'\', this)" type="text/javascript" '+(goog.Dependency.defer_?"defer":"")+d+">\x3c/script>";b.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(d):d)}else{var e=b.createElement("script");e.defer=goog.Dependency.defer_;e.async=!1;e.type="text/javascript";(d=goog.getScriptNonce())&&e.setAttribute("nonce",d);goog.DebugLoader_.IS_OLD_IE_?
(a.pause(),e.onreadystatechange=function(){if("loaded"==e.readyState||"complete"==e.readyState)a.loaded(),a.resume()}):e.onload=function(){e.onload=null;a.loaded()};e.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path):this.path;b.head.appendChild(e)}}else goog.logToConsole_("Cannot use default debug loader outside of HTML documents."),"deps.js"==this.relativePath?(goog.logToConsole_("Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, or setting CLOSURE_NO_DEPS to true."),
a.loaded()):a.pause()},goog.Es6ModuleDependency=function(a,b,c,d,e){goog.Dependency.call(this,a,b,c,d,e)},goog.inherits(goog.Es6ModuleDependency,goog.Dependency),goog.Es6ModuleDependency.prototype.load=function(a){function b(a,b){a=b?'<script type="module" crossorigin>'+b+"\x3c/script>":'<script type="module" crossorigin src="'+a+'">\x3c/script>';d.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(a):a)}function c(a,b){var c=d.createElement("script");c.defer=!0;c.async=!1;c.type=
"module";c.setAttribute("crossorigin",!0);var e=goog.getScriptNonce();e&&c.setAttribute("nonce",e);b?c.textContent=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScript(b):b:c.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(a):a;d.head.appendChild(c)}if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?a.loaded():a.pause();else if(goog.inHtmlDocument_()){var d=goog.global.document,e=this;if(goog.isDocumentLoading_()){var f=b;goog.Dependency.defer_=
!0}else f=c;var g=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(g);a.setModuleState(goog.ModuleType.ES6)});f(void 0,'goog.Dependency.callback_("'+g+'")');f(this.path,void 0);var h=goog.Dependency.registerCallback_(function(b){goog.Dependency.unregisterCallback_(h);a.registerEs6ModuleExports(e.path,b,goog.moduleLoaderState_.moduleName)});f(void 0,'import * as m from "'+this.path+'"; goog.Dependency.callback_("'+h+'", m)');var k=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(k);
a.clearModuleState();a.loaded()});f(void 0,'goog.Dependency.callback_("'+k+'")')}else goog.logToConsole_("Cannot use default debug loader outside of HTML documents."),a.pause()},goog.TransformedDependency=function(a,b,c,d,e){goog.Dependency.call(this,a,b,c,d,e);this.contents_=null;this.lazyFetch_=!goog.inHtmlDocument_()||!("noModule"in goog.global.document.createElement("script"))},goog.inherits(goog.TransformedDependency,goog.Dependency),goog.TransformedDependency.prototype.load=function(a){function b(){e.contents_=
goog.loadFileSync_(e.path);e.contents_&&(e.contents_=e.transform(e.contents_),e.contents_&&(e.contents_+="\n//# sourceURL="+e.path))}function c(){e.lazyFetch_&&b();if(e.contents_){f&&a.setModuleState(goog.ModuleType.ES6);try{var c=e.contents_;e.contents_=null;goog.globalEval(c);if(f)var d=goog.moduleLoaderState_.moduleName}finally{f&&a.clearModuleState()}f&&goog.global.$jscomp.require.ensure([e.getPathName()],function(){a.registerEs6ModuleExports(e.path,goog.global.$jscomp.require(e.getPathName()),
d)});a.loaded()}}function d(){var a=goog.global.document,b=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(b);c()}),d='<script type="text/javascript">'+goog.protectScriptTag_('goog.Dependency.callback_("'+b+'");')+"\x3c/script>";a.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(d):d)}var e=this;if(goog.global.CLOSURE_IMPORT_SCRIPT)b(),this.contents_&&goog.global.CLOSURE_IMPORT_SCRIPT("",this.contents_)?(this.contents_=null,a.loaded()):a.pause();
else{var f=this.loadFlags.module==goog.ModuleType.ES6;this.lazyFetch_||b();var g=1<a.pending().length,h=g&&goog.DebugLoader_.IS_OLD_IE_;g=goog.Dependency.defer_&&(g||goog.isDocumentLoading_());if(h||g)a.defer(function(){c()});else{var k=goog.global.document;h=goog.inHtmlDocument_()&&"ActiveXObject"in goog.global;if(f&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()&&!h){goog.Dependency.defer_=!0;a.pause();var l=k.onreadystatechange;k.onreadystatechange=function(){"interactive"==k.readyState&&(k.onreadystatechange=
l,c(),a.resume());goog.isFunction(l)&&l.apply(void 0,arguments)}}else!goog.DebugLoader_.IS_OLD_IE_&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()?d():c()}}},goog.TransformedDependency.prototype.transform=function(a){},goog.TranspiledDependency=function(a,b,c,d,e,f){goog.TransformedDependency.call(this,a,b,c,d,e);this.transpiler=f},goog.inherits(goog.TranspiledDependency,goog.TransformedDependency),goog.TranspiledDependency.prototype.transform=function(a){return this.transpiler.transpile(a,this.getPathName())},
goog.PreTranspiledEs6ModuleDependency=function(a,b,c,d,e){goog.TransformedDependency.call(this,a,b,c,d,e)},goog.inherits(goog.PreTranspiledEs6ModuleDependency,goog.TransformedDependency),goog.PreTranspiledEs6ModuleDependency.prototype.transform=function(a){return a},goog.GoogModuleDependency=function(a,b,c,d,e,f,g){goog.TransformedDependency.call(this,a,b,c,d,e);this.needsTranspile_=f;this.transpiler_=g},goog.inherits(goog.GoogModuleDependency,goog.TransformedDependency),goog.GoogModuleDependency.prototype.transform=
function(a){this.needsTranspile_&&(a=this.transpiler_.transpile(a,this.getPathName()));return goog.LOAD_MODULE_USING_EVAL&&goog.isDef(goog.global.JSON)?"goog.loadModule("+goog.global.JSON.stringify(a+"\n//# sourceURL="+this.path+"\n")+");":'goog.loadModule(function(exports) {"use strict";'+a+"\n;return exports});\n//# sourceURL="+this.path+"\n"},goog.DebugLoader_.IS_OLD_IE_=!(goog.global.atob||!goog.global.document||!goog.global.document.all),goog.DebugLoader_.prototype.addDependency=function(a,b,
c,d){b=b||[];a=a.replace(/\\/g,"/");var e=goog.normalizePath_(goog.basePath+a);d&&"boolean"!==typeof d||(d=d?{module:goog.ModuleType.GOOG}:{});c=this.factory_.createDependency(e,a,b,c,d,goog.transpiler_.needsTranspile(d.lang||"es3",d.module));this.dependencies_[e]=c;for(c=0;c<b.length;c++)this.idToPath_[b[c]]=e;this.idToPath_[a]=e},goog.DependencyFactory=function(a){this.transpiler=a},goog.DependencyFactory.prototype.createDependency=function(a,b,c,d,e,f){return e.module==goog.ModuleType.GOOG?new goog.GoogModuleDependency(a,
b,c,d,e,f,this.transpiler):f?new goog.TranspiledDependency(a,b,c,d,e,this.transpiler):e.module==goog.ModuleType.ES6?"never"==goog.TRANSPILE&&goog.ASSUME_ES_MODULES_TRANSPILED?new goog.PreTranspiledEs6ModuleDependency(a,b,c,d,e):new goog.Es6ModuleDependency(a,b,c,d,e):new goog.Dependency(a,b,c,d,e)},goog.debugLoader_=new goog.DebugLoader_,goog.loadClosureDeps=function(){goog.debugLoader_.loadClosureDeps()},goog.setDependencyFactory=function(a){goog.debugLoader_.setDependencyFactory(a)},goog.global.CLOSURE_NO_DEPS||
goog.debugLoader_.loadClosureDeps(),goog.bootstrap=function(a,b){goog.debugLoader_.bootstrap(a,b)});goog.TRUSTED_TYPES_POLICY_NAME="";goog.identity_=function(a){return a};goog.createTrustedTypesPolicy=function(a){var b=null;if("undefined"===typeof TrustedTypes||!TrustedTypes.createPolicy)return b;try{b=TrustedTypes.createPolicy(a,{createHTML:goog.identity_,createScript:goog.identity_,createScriptURL:goog.identity_,createURL:goog.identity_})}catch(c){goog.logToConsole_(c.message)}return b};
goog.TRUSTED_TYPES_POLICY_=goog.TRUSTED_TYPES_POLICY_NAME?goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME+"#base"):null;var jspb={BinaryConstants:{},ConstBinaryMessage:function(){},BinaryMessage:function(){}};jspb.BinaryConstants.FieldType={INVALID:-1,DOUBLE:1,FLOAT:2,INT64:3,UINT64:4,INT32:5,FIXED64:6,FIXED32:7,BOOL:8,STRING:9,GROUP:10,MESSAGE:11,BYTES:12,UINT32:13,ENUM:14,SFIXED32:15,SFIXED64:16,SINT32:17,SINT64:18,FHASH64:30,VHASH64:31};jspb.BinaryConstants.WireType={INVALID:-1,VARINT:0,FIXED64:1,DELIMITED:2,START_GROUP:3,END_GROUP:4,FIXED32:5};
jspb.BinaryConstants.FieldTypeToWireType=function(a){var b=jspb.BinaryConstants.FieldType,c=jspb.BinaryConstants.WireType;switch(a){case b.INT32:case b.INT64:case b.UINT32:case b.UINT64:case b.SINT32:case b.SINT64:case b.BOOL:case b.ENUM:case b.VHASH64:return c.VARINT;case b.DOUBLE:case b.FIXED64:case b.SFIXED64:case b.FHASH64:return c.FIXED64;case b.STRING:case b.MESSAGE:case b.BYTES:return c.DELIMITED;case b.FLOAT:case b.FIXED32:case b.SFIXED32:return c.FIXED32;default:return c.INVALID}};
jspb.BinaryConstants.INVALID_FIELD_NUMBER=-1;jspb.BinaryConstants.FLOAT32_EPS=1.401298464324817E-45;jspb.BinaryConstants.FLOAT32_MIN=1.1754943508222875E-38;jspb.BinaryConstants.FLOAT32_MAX=3.4028234663852886E38;jspb.BinaryConstants.FLOAT64_EPS=4.9E-324;jspb.BinaryConstants.FLOAT64_MIN=2.2250738585072014E-308;jspb.BinaryConstants.FLOAT64_MAX=1.7976931348623157E308;jspb.BinaryConstants.TWO_TO_20=1048576;jspb.BinaryConstants.TWO_TO_23=8388608;jspb.BinaryConstants.TWO_TO_31=2147483648;
jspb.BinaryConstants.TWO_TO_32=4294967296;jspb.BinaryConstants.TWO_TO_52=4503599627370496;jspb.BinaryConstants.TWO_TO_63=0x7fffffffffffffff;jspb.BinaryConstants.TWO_TO_64=1.8446744073709552E19;jspb.BinaryConstants.ZERO_HASH="\x00\x00\x00\x00\x00\x00\x00\x00";goog.dom={};goog.dom.NodeType={ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12};goog.debug={};goog.debug.Error=function(a){if(Error.captureStackTrace)Error.captureStackTrace(this,goog.debug.Error);else{var b=Error().stack;b&&(this.stack=b)}a&&(this.message=String(a));this.reportErrorToServer=!0};goog.inherits(goog.debug.Error,Error);goog.debug.Error.prototype.name="CustomError";goog.asserts={};goog.asserts.ENABLE_ASSERTS=goog.DEBUG;goog.asserts.AssertionError=function(a,b){goog.debug.Error.call(this,goog.asserts.subs_(a,b));this.messagePattern=a};goog.inherits(goog.asserts.AssertionError,goog.debug.Error);goog.asserts.AssertionError.prototype.name="AssertionError";goog.asserts.DEFAULT_ERROR_HANDLER=function(a){throw a;};goog.asserts.errorHandler_=goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.subs_=function(a,b){a=a.split("%s");for(var c="",d=a.length-1,e=0;e<d;e++)c+=a[e]+(e<b.length?b[e]:"%s");return c+a[d]};goog.asserts.doAssertFailure_=function(a,b,c,d){var e="Assertion failed";if(c){e+=": "+c;var f=d}else a&&(e+=": "+a,f=b);a=new goog.asserts.AssertionError(""+e,f||[]);goog.asserts.errorHandler_(a)};goog.asserts.setErrorHandler=function(a){goog.asserts.ENABLE_ASSERTS&&(goog.asserts.errorHandler_=a)};
goog.asserts.assert=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!a&&goog.asserts.doAssertFailure_("",null,b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertExists=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&null==a&&goog.asserts.doAssertFailure_("Expected to exist: %s.",[a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.fail=function(a,b){goog.asserts.ENABLE_ASSERTS&&goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure"+(a?": "+a:""),Array.prototype.slice.call(arguments,1)))};goog.asserts.assertNumber=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isNumber(a)&&goog.asserts.doAssertFailure_("Expected number but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertString=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isString(a)&&goog.asserts.doAssertFailure_("Expected string but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertFunction=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isFunction(a)&&goog.asserts.doAssertFailure_("Expected function but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertObject=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isObject(a)&&goog.asserts.doAssertFailure_("Expected object but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertArray=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isArray(a)&&goog.asserts.doAssertFailure_("Expected array but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertBoolean=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isBoolean(a)&&goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertElement=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||goog.isObject(a)&&a.nodeType==goog.dom.NodeType.ELEMENT||goog.asserts.doAssertFailure_("Expected Element but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertInstanceof=function(a,b,c,d){!goog.asserts.ENABLE_ASSERTS||a instanceof b||goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.",[goog.asserts.getType_(b),goog.asserts.getType_(a)],c,Array.prototype.slice.call(arguments,3));return a};goog.asserts.assertFinite=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||"number"==typeof a&&isFinite(a)||goog.asserts.doAssertFailure_("Expected %s to be a finite number but it is not.",[a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertObjectPrototypeIsIntact=function(){for(var a in Object.prototype)goog.asserts.fail(a+" should not be enumerable in Object.prototype.")};goog.asserts.getType_=function(a){return a instanceof Function?a.displayName||a.name||"unknown type name":a instanceof Object?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):null===a?"null":typeof a};goog.array={};goog.NATIVE_ARRAY_PROTOTYPES=goog.TRUSTED_SITE;goog.array.ASSUME_NATIVE_FUNCTIONS=2012<goog.FEATURESET_YEAR;goog.array.peek=function(a){return a[a.length-1]};goog.array.last=goog.array.peek;
goog.array.indexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.indexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.indexOf.call(a,b,c)}:function(a,b,c){c=null==c?0:0>c?Math.max(0,a.length+c):c;if(goog.isString(a))return goog.isString(b)&&1==b.length?a.indexOf(b,c):-1;for(;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1};
goog.array.lastIndexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.lastIndexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.lastIndexOf.call(a,b,null==c?a.length-1:c)}:function(a,b,c){c=null==c?a.length-1:c;0>c&&(c=Math.max(0,a.length+c));if(goog.isString(a))return goog.isString(b)&&1==b.length?a.lastIndexOf(b,c):-1;for(;0<=c;c--)if(c in a&&a[c]===b)return c;return-1};
goog.array.forEach=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.forEach)?function(a,b,c){goog.asserts.assert(null!=a.length);Array.prototype.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)};goog.array.forEachRight=function(a,b,c){var d=a.length,e=goog.isString(a)?a.split(""):a;for(--d;0<=d;--d)d in e&&b.call(c,e[d],d,a)};
goog.array.filter=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.filter)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.filter.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=[],f=0,g=goog.isString(a)?a.split(""):a,h=0;h<d;h++)if(h in g){var k=g[h];b.call(c,k,h,a)&&(e[f++]=k)}return e};
goog.array.map=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.map)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.map.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=Array(d),f=goog.isString(a)?a.split(""):a,g=0;g<d;g++)g in f&&(e[g]=b.call(c,f[g],g,a));return e};
goog.array.reduce=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduce)?function(a,b,c,d){goog.asserts.assert(null!=a.length);d&&(b=goog.bind(b,d));return Array.prototype.reduce.call(a,b,c)}:function(a,b,c,d){var e=c;goog.array.forEach(a,function(c,g){e=b.call(d,e,c,g,a)});return e};
goog.array.reduceRight=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduceRight)?function(a,b,c,d){goog.asserts.assert(null!=a.length);goog.asserts.assert(null!=b);d&&(b=goog.bind(b,d));return Array.prototype.reduceRight.call(a,b,c)}:function(a,b,c,d){var e=c;goog.array.forEachRight(a,function(c,g){e=b.call(d,e,c,g,a)});return e};
goog.array.some=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.some)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.some.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return!0;return!1};
goog.array.every=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.every)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.every.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&!b.call(c,e[f],f,a))return!1;return!0};goog.array.count=function(a,b,c){var d=0;goog.array.forEach(a,function(a,f,g){b.call(c,a,f,g)&&++d},c);return d};
goog.array.find=function(a,b,c){b=goog.array.findIndex(a,b,c);return 0>b?null:goog.isString(a)?a.charAt(b):a[b]};goog.array.findIndex=function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return f;return-1};goog.array.findRight=function(a,b,c){b=goog.array.findIndexRight(a,b,c);return 0>b?null:goog.isString(a)?a.charAt(b):a[b]};
goog.array.findIndexRight=function(a,b,c){var d=a.length,e=goog.isString(a)?a.split(""):a;for(--d;0<=d;d--)if(d in e&&b.call(c,e[d],d,a))return d;return-1};goog.array.contains=function(a,b){return 0<=goog.array.indexOf(a,b)};goog.array.isEmpty=function(a){return 0==a.length};goog.array.clear=function(a){if(!goog.isArray(a))for(var b=a.length-1;0<=b;b--)delete a[b];a.length=0};goog.array.insert=function(a,b){goog.array.contains(a,b)||a.push(b)};
goog.array.insertAt=function(a,b,c){goog.array.splice(a,c,0,b)};goog.array.insertArrayAt=function(a,b,c){goog.partial(goog.array.splice,a,c,0).apply(null,b)};goog.array.insertBefore=function(a,b,c){var d;2==arguments.length||0>(d=goog.array.indexOf(a,c))?a.push(b):goog.array.insertAt(a,b,d)};goog.array.remove=function(a,b){b=goog.array.indexOf(a,b);var c;(c=0<=b)&&goog.array.removeAt(a,b);return c};
goog.array.removeLast=function(a,b){b=goog.array.lastIndexOf(a,b);return 0<=b?(goog.array.removeAt(a,b),!0):!1};goog.array.removeAt=function(a,b){goog.asserts.assert(null!=a.length);return 1==Array.prototype.splice.call(a,b,1).length};goog.array.removeIf=function(a,b,c){b=goog.array.findIndex(a,b,c);return 0<=b?(goog.array.removeAt(a,b),!0):!1};goog.array.removeAllIf=function(a,b,c){var d=0;goog.array.forEachRight(a,function(e,f){b.call(c,e,f,a)&&goog.array.removeAt(a,f)&&d++});return d};
goog.array.concat=function(a){return Array.prototype.concat.apply([],arguments)};goog.array.join=function(a){return Array.prototype.concat.apply([],arguments)};goog.array.toArray=function(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]};goog.array.clone=goog.array.toArray;goog.array.extend=function(a,b){for(var c=1;c<arguments.length;c++){var d=arguments[c];if(goog.isArrayLike(d)){var e=a.length||0,f=d.length||0;a.length=e+f;for(var g=0;g<f;g++)a[e+g]=d[g]}else a.push(d)}};
goog.array.splice=function(a,b,c,d){goog.asserts.assert(null!=a.length);return Array.prototype.splice.apply(a,goog.array.slice(arguments,1))};goog.array.slice=function(a,b,c){goog.asserts.assert(null!=a.length);return 2>=arguments.length?Array.prototype.slice.call(a,b):Array.prototype.slice.call(a,b,c)};
goog.array.removeDuplicates=function(a,b,c){b=b||a;var d=function(a){return goog.isObject(a)?"o"+goog.getUid(a):(typeof a).charAt(0)+a};c=c||d;d={};for(var e=0,f=0;f<a.length;){var g=a[f++],h=c(g);Object.prototype.hasOwnProperty.call(d,h)||(d[h]=!0,b[e++]=g)}b.length=e};goog.array.binarySearch=function(a,b,c){return goog.array.binarySearch_(a,c||goog.array.defaultCompare,!1,b)};goog.array.binarySelect=function(a,b,c){return goog.array.binarySearch_(a,b,!0,void 0,c)};
goog.array.binarySearch_=function(a,b,c,d,e){for(var f=0,g=a.length,h;f<g;){var k=f+g>>1;var l=c?b.call(e,a[k],k,a):b(d,a[k]);0<l?f=k+1:(g=k,h=!l)}return h?f:~f};goog.array.sort=function(a,b){a.sort(b||goog.array.defaultCompare)};goog.array.stableSort=function(a,b){for(var c=Array(a.length),d=0;d<a.length;d++)c[d]={index:d,value:a[d]};var e=b||goog.array.defaultCompare;goog.array.sort(c,function(a,b){return e(a.value,b.value)||a.index-b.index});for(d=0;d<a.length;d++)a[d]=c[d].value};
goog.array.sortByKey=function(a,b,c){var d=c||goog.array.defaultCompare;goog.array.sort(a,function(a,c){return d(b(a),b(c))})};goog.array.sortObjectsByKey=function(a,b,c){goog.array.sortByKey(a,function(a){return a[b]},c)};goog.array.isSorted=function(a,b,c){b=b||goog.array.defaultCompare;for(var d=1;d<a.length;d++){var e=b(a[d-1],a[d]);if(0<e||0==e&&c)return!1}return!0};
goog.array.equals=function(a,b,c){if(!goog.isArrayLike(a)||!goog.isArrayLike(b)||a.length!=b.length)return!1;var d=a.length;c=c||goog.array.defaultCompareEquality;for(var e=0;e<d;e++)if(!c(a[e],b[e]))return!1;return!0};goog.array.compare3=function(a,b,c){c=c||goog.array.defaultCompare;for(var d=Math.min(a.length,b.length),e=0;e<d;e++){var f=c(a[e],b[e]);if(0!=f)return f}return goog.array.defaultCompare(a.length,b.length)};goog.array.defaultCompare=function(a,b){return a>b?1:a<b?-1:0};
goog.array.inverseDefaultCompare=function(a,b){return-goog.array.defaultCompare(a,b)};goog.array.defaultCompareEquality=function(a,b){return a===b};goog.array.binaryInsert=function(a,b,c){c=goog.array.binarySearch(a,b,c);return 0>c?(goog.array.insertAt(a,b,-(c+1)),!0):!1};goog.array.binaryRemove=function(a,b,c){b=goog.array.binarySearch(a,b,c);return 0<=b?goog.array.removeAt(a,b):!1};
goog.array.bucket=function(a,b,c){for(var d={},e=0;e<a.length;e++){var f=a[e],g=b.call(c,f,e,a);goog.isDef(g)&&(d[g]||(d[g]=[])).push(f)}return d};goog.array.toObject=function(a,b,c){var d={};goog.array.forEach(a,function(e,f){d[b.call(c,e,f,a)]=e});return d};goog.array.range=function(a,b,c){var d=[],e=0,f=a;c=c||1;void 0!==b&&(e=a,f=b);if(0>c*(f-e))return[];if(0<c)for(a=e;a<f;a+=c)d.push(a);else for(a=e;a>f;a+=c)d.push(a);return d};
goog.array.repeat=function(a,b){for(var c=[],d=0;d<b;d++)c[d]=a;return c};goog.array.flatten=function(a){for(var b=[],c=0;c<arguments.length;c++){var d=arguments[c];if(goog.isArray(d))for(var e=0;e<d.length;e+=8192){var f=goog.array.slice(d,e,e+8192);f=goog.array.flatten.apply(null,f);for(var g=0;g<f.length;g++)b.push(f[g])}else b.push(d)}return b};
goog.array.rotate=function(a,b){goog.asserts.assert(null!=a.length);a.length&&(b%=a.length,0<b?Array.prototype.unshift.apply(a,a.splice(-b,b)):0>b&&Array.prototype.push.apply(a,a.splice(0,-b)));return a};goog.array.moveItem=function(a,b,c){goog.asserts.assert(0<=b&&b<a.length);goog.asserts.assert(0<=c&&c<a.length);b=Array.prototype.splice.call(a,b,1);Array.prototype.splice.call(a,c,0,b[0])};
goog.array.zip=function(a){if(!arguments.length)return[];for(var b=[],c=arguments[0].length,d=1;d<arguments.length;d++)arguments[d].length<c&&(c=arguments[d].length);for(d=0;d<c;d++){for(var e=[],f=0;f<arguments.length;f++)e.push(arguments[f][d]);b.push(e)}return b};goog.array.shuffle=function(a,b){b=b||Math.random;for(var c=a.length-1;0<c;c--){var d=Math.floor(b()*(c+1)),e=a[c];a[c]=a[d];a[d]=e}};goog.array.copyByIndex=function(a,b){var c=[];goog.array.forEach(b,function(b){c.push(a[b])});return c};
goog.array.concatMap=function(a,b,c){return goog.array.concat.apply([],goog.array.map(a,b,c))};goog.crypt={};goog.crypt.stringToByteArray=function(a){for(var b=[],c=0,d=0;d<a.length;d++){var e=a.charCodeAt(d);255<e&&(b[c++]=e&255,e>>=8);b[c++]=e}return b};goog.crypt.byteArrayToString=function(a){if(8192>=a.length)return String.fromCharCode.apply(null,a);for(var b="",c=0;c<a.length;c+=8192){var d=goog.array.slice(a,c,c+8192);b+=String.fromCharCode.apply(null,d)}return b};
goog.crypt.byteArrayToHex=function(a,b){return goog.array.map(a,function(a){a=a.toString(16);return 1<a.length?a:"0"+a}).join(b||"")};goog.crypt.hexToByteArray=function(a){goog.asserts.assert(0==a.length%2,"Key string length must be multiple of 2");for(var b=[],c=0;c<a.length;c+=2)b.push(parseInt(a.substring(c,c+2),16));return b};
goog.crypt.stringToUtf8ByteArray=function(a){for(var b=[],c=0,d=0;d<a.length;d++){var e=a.charCodeAt(d);128>e?b[c++]=e:(2048>e?b[c++]=e>>6|192:(55296==(e&64512)&&d+1<a.length&&56320==(a.charCodeAt(d+1)&64512)?(e=65536+((e&1023)<<10)+(a.charCodeAt(++d)&1023),b[c++]=e>>18|240,b[c++]=e>>12&63|128):b[c++]=e>>12|224,b[c++]=e>>6&63|128),b[c++]=e&63|128)}return b};
goog.crypt.utf8ByteArrayToString=function(a){for(var b=[],c=0,d=0;c<a.length;){var e=a[c++];if(128>e)b[d++]=String.fromCharCode(e);else if(191<e&&224>e){var f=a[c++];b[d++]=String.fromCharCode((e&31)<<6|f&63)}else if(239<e&&365>e){f=a[c++];var g=a[c++],h=a[c++];e=((e&7)<<18|(f&63)<<12|(g&63)<<6|h&63)-65536;b[d++]=String.fromCharCode(55296+(e>>10));b[d++]=String.fromCharCode(56320+(e&1023))}else f=a[c++],g=a[c++],b[d++]=String.fromCharCode((e&15)<<12|(f&63)<<6|g&63)}return b.join("")};
goog.crypt.xorByteArray=function(a,b){goog.asserts.assert(a.length==b.length,"XOR array lengths must match");for(var c=[],d=0;d<a.length;d++)c.push(a[d]^b[d]);return c};goog.string={};goog.string.internal={};goog.string.internal.startsWith=function(a,b){return 0==a.lastIndexOf(b,0)};goog.string.internal.endsWith=function(a,b){var c=a.length-b.length;return 0<=c&&a.indexOf(b,c)==c};goog.string.internal.caseInsensitiveStartsWith=function(a,b){return 0==goog.string.internal.caseInsensitiveCompare(b,a.substr(0,b.length))};goog.string.internal.caseInsensitiveEndsWith=function(a,b){return 0==goog.string.internal.caseInsensitiveCompare(b,a.substr(a.length-b.length,b.length))};
goog.string.internal.caseInsensitiveEquals=function(a,b){return a.toLowerCase()==b.toLowerCase()};goog.string.internal.isEmptyOrWhitespace=function(a){return/^[\s\xa0]*$/.test(a)};goog.string.internal.trim=goog.TRUSTED_SITE&&String.prototype.trim?function(a){return a.trim()}:function(a){return/^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1]};goog.string.internal.caseInsensitiveCompare=function(a,b){a=String(a).toLowerCase();b=String(b).toLowerCase();return a<b?-1:a==b?0:1};
goog.string.internal.newLineToBr=function(a,b){return a.replace(/(\r\n|\r|\n)/g,b?"<br />":"<br>")};
goog.string.internal.htmlEscape=function(a,b){if(b)a=a.replace(goog.string.internal.AMP_RE_,"&amp;").replace(goog.string.internal.LT_RE_,"&lt;").replace(goog.string.internal.GT_RE_,"&gt;").replace(goog.string.internal.QUOT_RE_,"&quot;").replace(goog.string.internal.SINGLE_QUOTE_RE_,"&#39;").replace(goog.string.internal.NULL_RE_,"&#0;");else{if(!goog.string.internal.ALL_RE_.test(a))return a;-1!=a.indexOf("&")&&(a=a.replace(goog.string.internal.AMP_RE_,"&amp;"));-1!=a.indexOf("<")&&(a=a.replace(goog.string.internal.LT_RE_,
"&lt;"));-1!=a.indexOf(">")&&(a=a.replace(goog.string.internal.GT_RE_,"&gt;"));-1!=a.indexOf('"')&&(a=a.replace(goog.string.internal.QUOT_RE_,"&quot;"));-1!=a.indexOf("'")&&(a=a.replace(goog.string.internal.SINGLE_QUOTE_RE_,"&#39;"));-1!=a.indexOf("\x00")&&(a=a.replace(goog.string.internal.NULL_RE_,"&#0;"))}return a};goog.string.internal.AMP_RE_=/&/g;goog.string.internal.LT_RE_=/</g;goog.string.internal.GT_RE_=/>/g;goog.string.internal.QUOT_RE_=/"/g;goog.string.internal.SINGLE_QUOTE_RE_=/'/g;
goog.string.internal.NULL_RE_=/\x00/g;goog.string.internal.ALL_RE_=/[\x00&<>"']/;goog.string.internal.whitespaceEscape=function(a,b){return goog.string.internal.newLineToBr(a.replace(/  /g," &#160;"),b)};goog.string.internal.contains=function(a,b){return-1!=a.indexOf(b)};goog.string.internal.caseInsensitiveContains=function(a,b){return goog.string.internal.contains(a.toLowerCase(),b.toLowerCase())};
goog.string.internal.compareVersions=function(a,b){var c=0;a=goog.string.internal.trim(String(a)).split(".");b=goog.string.internal.trim(String(b)).split(".");for(var d=Math.max(a.length,b.length),e=0;0==c&&e<d;e++){var f=a[e]||"",g=b[e]||"";do{f=/(\d*)(\D*)(.*)/.exec(f)||["","","",""];g=/(\d*)(\D*)(.*)/.exec(g)||["","","",""];if(0==f[0].length&&0==g[0].length)break;c=0==f[1].length?0:parseInt(f[1],10);var h=0==g[1].length?0:parseInt(g[1],10);c=goog.string.internal.compareElements_(c,h)||goog.string.internal.compareElements_(0==
f[2].length,0==g[2].length)||goog.string.internal.compareElements_(f[2],g[2]);f=f[3];g=g[3]}while(0==c)}return c};goog.string.internal.compareElements_=function(a,b){return a<b?-1:a>b?1:0};goog.string.TypedString=function(){};goog.string.Const=function(a,b){this.stringConstValueWithSecurityContract__googStringSecurityPrivate_=a===goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_&&b||"";this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_=goog.string.Const.TYPE_MARKER_};goog.string.Const.prototype.implementsGoogStringTypedString=!0;goog.string.Const.prototype.getTypedStringValue=function(){return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_};
goog.string.Const.prototype.toString=function(){return"Const{"+this.stringConstValueWithSecurityContract__googStringSecurityPrivate_+"}"};goog.string.Const.unwrap=function(a){if(a instanceof goog.string.Const&&a.constructor===goog.string.Const&&a.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_===goog.string.Const.TYPE_MARKER_)return a.stringConstValueWithSecurityContract__googStringSecurityPrivate_;goog.asserts.fail("expected object of type Const, got '"+a+"'");return"type_error:Const"};
goog.string.Const.from=function(a){return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_,a)};goog.string.Const.TYPE_MARKER_={};goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_={};goog.string.Const.EMPTY=goog.string.Const.from("");goog.fs={};goog.fs.url={};goog.fs.url.createObjectUrl=function(a){return goog.fs.url.getUrlObject_().createObjectURL(a)};goog.fs.url.revokeObjectUrl=function(a){goog.fs.url.getUrlObject_().revokeObjectURL(a)};goog.fs.url.getUrlObject_=function(){var a=goog.fs.url.findUrlObject_();if(null!=a)return a;throw Error("This browser doesn't seem to support blob URLs");};
goog.fs.url.findUrlObject_=function(){return goog.isDef(goog.global.URL)&&goog.isDef(goog.global.URL.createObjectURL)?goog.global.URL:goog.isDef(goog.global.webkitURL)&&goog.isDef(goog.global.webkitURL.createObjectURL)?goog.global.webkitURL:goog.isDef(goog.global.createObjectURL)?goog.global:null};goog.fs.url.browserSupportsObjectUrls=function(){return null!=goog.fs.url.findUrlObject_()};goog.html={};goog.html.trustedtypes={};goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY=goog.TRUSTED_TYPES_POLICY_NAME?goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME+"#html"):null;goog.i18n={};goog.i18n.bidi={};goog.i18n.bidi.FORCE_RTL=!1;
goog.i18n.bidi.IS_RTL=goog.i18n.bidi.FORCE_RTL||("ar"==goog.LOCALE.substring(0,2).toLowerCase()||"fa"==goog.LOCALE.substring(0,2).toLowerCase()||"he"==goog.LOCALE.substring(0,2).toLowerCase()||"iw"==goog.LOCALE.substring(0,2).toLowerCase()||"ps"==goog.LOCALE.substring(0,2).toLowerCase()||"sd"==goog.LOCALE.substring(0,2).toLowerCase()||"ug"==goog.LOCALE.substring(0,2).toLowerCase()||"ur"==goog.LOCALE.substring(0,2).toLowerCase()||"yi"==goog.LOCALE.substring(0,2).toLowerCase())&&(2==goog.LOCALE.length||
"-"==goog.LOCALE.substring(2,3)||"_"==goog.LOCALE.substring(2,3))||3<=goog.LOCALE.length&&"ckb"==goog.LOCALE.substring(0,3).toLowerCase()&&(3==goog.LOCALE.length||"-"==goog.LOCALE.substring(3,4)||"_"==goog.LOCALE.substring(3,4))||7<=goog.LOCALE.length&&("-"==goog.LOCALE.substring(2,3)||"_"==goog.LOCALE.substring(2,3))&&("adlm"==goog.LOCALE.substring(3,7).toLowerCase()||"arab"==goog.LOCALE.substring(3,7).toLowerCase()||"hebr"==goog.LOCALE.substring(3,7).toLowerCase()||"nkoo"==goog.LOCALE.substring(3,
7).toLowerCase()||"rohg"==goog.LOCALE.substring(3,7).toLowerCase()||"thaa"==goog.LOCALE.substring(3,7).toLowerCase())||8<=goog.LOCALE.length&&("-"==goog.LOCALE.substring(3,4)||"_"==goog.LOCALE.substring(3,4))&&("adlm"==goog.LOCALE.substring(4,8).toLowerCase()||"arab"==goog.LOCALE.substring(4,8).toLowerCase()||"hebr"==goog.LOCALE.substring(4,8).toLowerCase()||"nkoo"==goog.LOCALE.substring(4,8).toLowerCase()||"rohg"==goog.LOCALE.substring(4,8).toLowerCase()||"thaa"==goog.LOCALE.substring(4,8).toLowerCase());
goog.i18n.bidi.Format={LRE:"\u202a",RLE:"\u202b",PDF:"\u202c",LRM:"\u200e",RLM:"\u200f"};goog.i18n.bidi.Dir={LTR:1,RTL:-1,NEUTRAL:0};goog.i18n.bidi.RIGHT="right";goog.i18n.bidi.LEFT="left";goog.i18n.bidi.I18N_RIGHT=goog.i18n.bidi.IS_RTL?goog.i18n.bidi.LEFT:goog.i18n.bidi.RIGHT;goog.i18n.bidi.I18N_LEFT=goog.i18n.bidi.IS_RTL?goog.i18n.bidi.RIGHT:goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir=function(a,b){return"number"==typeof a?0<a?goog.i18n.bidi.Dir.LTR:0>a?goog.i18n.bidi.Dir.RTL:b?null:goog.i18n.bidi.Dir.NEUTRAL:null==a?null:a?goog.i18n.bidi.Dir.RTL:goog.i18n.bidi.Dir.LTR};goog.i18n.bidi.ltrChars_="A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u0300-\u0590\u0900-\u1fff\u200e\u2c00-\ud801\ud804-\ud839\ud83c-\udbff\uf900-\ufb1c\ufe00-\ufe6f\ufefd-\uffff";goog.i18n.bidi.rtlChars_="\u0591-\u06ef\u06fa-\u08ff\u200f\ud802-\ud803\ud83a-\ud83b\ufb1d-\ufdff\ufe70-\ufefc";
goog.i18n.bidi.htmlSkipReg_=/<[^>]*>|&[^;]+;/g;goog.i18n.bidi.stripHtmlIfNeeded_=function(a,b){return b?a.replace(goog.i18n.bidi.htmlSkipReg_,""):a};goog.i18n.bidi.rtlCharReg_=new RegExp("["+goog.i18n.bidi.rtlChars_+"]");goog.i18n.bidi.ltrCharReg_=new RegExp("["+goog.i18n.bidi.ltrChars_+"]");goog.i18n.bidi.hasAnyRtl=function(a,b){return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.hasRtlChar=goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr=function(a,b){return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.ltrRe_=new RegExp("^["+goog.i18n.bidi.ltrChars_+"]");goog.i18n.bidi.rtlRe_=new RegExp("^["+goog.i18n.bidi.rtlChars_+"]");goog.i18n.bidi.isRtlChar=function(a){return goog.i18n.bidi.rtlRe_.test(a)};goog.i18n.bidi.isLtrChar=function(a){return goog.i18n.bidi.ltrRe_.test(a)};goog.i18n.bidi.isNeutralChar=function(a){return!goog.i18n.bidi.isLtrChar(a)&&!goog.i18n.bidi.isRtlChar(a)};
goog.i18n.bidi.ltrDirCheckRe_=new RegExp("^[^"+goog.i18n.bidi.rtlChars_+"]*["+goog.i18n.bidi.ltrChars_+"]");goog.i18n.bidi.rtlDirCheckRe_=new RegExp("^[^"+goog.i18n.bidi.ltrChars_+"]*["+goog.i18n.bidi.rtlChars_+"]");goog.i18n.bidi.startsWithRtl=function(a,b){return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.isRtlText=goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr=function(a,b){return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.isLtrText=goog.i18n.bidi.startsWithLtr;goog.i18n.bidi.isRequiredLtrRe_=/^http:\/\/.*/;goog.i18n.bidi.isNeutralText=function(a,b){a=goog.i18n.bidi.stripHtmlIfNeeded_(a,b);return goog.i18n.bidi.isRequiredLtrRe_.test(a)||!goog.i18n.bidi.hasAnyLtr(a)&&!goog.i18n.bidi.hasAnyRtl(a)};
goog.i18n.bidi.ltrExitDirCheckRe_=new RegExp("["+goog.i18n.bidi.ltrChars_+"][^"+goog.i18n.bidi.rtlChars_+"]*$");goog.i18n.bidi.rtlExitDirCheckRe_=new RegExp("["+goog.i18n.bidi.rtlChars_+"][^"+goog.i18n.bidi.ltrChars_+"]*$");goog.i18n.bidi.endsWithLtr=function(a,b){return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.isLtrExitText=goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl=function(a,b){return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.isRtlExitText=goog.i18n.bidi.endsWithRtl;goog.i18n.bidi.rtlLocalesRe_=/^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;goog.i18n.bidi.isRtlLanguage=function(a){return goog.i18n.bidi.rtlLocalesRe_.test(a)};goog.i18n.bidi.bracketGuardTextRe_=/(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInText=function(a,b){b=(void 0===b?goog.i18n.bidi.hasAnyRtl(a):b)?goog.i18n.bidi.Format.RLM:goog.i18n.bidi.Format.LRM;return a.replace(goog.i18n.bidi.bracketGuardTextRe_,b+"$&"+b)};goog.i18n.bidi.enforceRtlInHtml=function(a){return"<"==a.charAt(0)?a.replace(/<\w+/,"$& dir=rtl"):"\n<span dir=rtl>"+a+"</span>"};goog.i18n.bidi.enforceRtlInText=function(a){return goog.i18n.bidi.Format.RLE+a+goog.i18n.bidi.Format.PDF};
goog.i18n.bidi.enforceLtrInHtml=function(a){return"<"==a.charAt(0)?a.replace(/<\w+/,"$& dir=ltr"):"\n<span dir=ltr>"+a+"</span>"};goog.i18n.bidi.enforceLtrInText=function(a){return goog.i18n.bidi.Format.LRE+a+goog.i18n.bidi.Format.PDF};goog.i18n.bidi.dimensionsRe_=/:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;goog.i18n.bidi.leftRe_=/left/gi;goog.i18n.bidi.rightRe_=/right/gi;goog.i18n.bidi.tempRe_=/%%%%/g;
goog.i18n.bidi.mirrorCSS=function(a){return a.replace(goog.i18n.bidi.dimensionsRe_,":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_,"%%%%").replace(goog.i18n.bidi.rightRe_,goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_,goog.i18n.bidi.RIGHT)};goog.i18n.bidi.doubleQuoteSubstituteRe_=/([\u0591-\u05f2])"/g;goog.i18n.bidi.singleQuoteSubstituteRe_=/([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote=function(a){return a.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_,"$1\u05f4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_,"$1\u05f3")};goog.i18n.bidi.wordSeparatorRe_=/\s+/;goog.i18n.bidi.hasNumeralsRe_=/[\d\u06f0-\u06f9]/;goog.i18n.bidi.rtlDetectionThreshold_=.4;
goog.i18n.bidi.estimateDirection=function(a,b){var c=0,d=0,e=!1;a=goog.i18n.bidi.stripHtmlIfNeeded_(a,b).split(goog.i18n.bidi.wordSeparatorRe_);for(b=0;b<a.length;b++){var f=a[b];goog.i18n.bidi.startsWithRtl(f)?(c++,d++):goog.i18n.bidi.isRequiredLtrRe_.test(f)?e=!0:goog.i18n.bidi.hasAnyLtr(f)?d++:goog.i18n.bidi.hasNumeralsRe_.test(f)&&(e=!0)}return 0==d?e?goog.i18n.bidi.Dir.LTR:goog.i18n.bidi.Dir.NEUTRAL:c/d>goog.i18n.bidi.rtlDetectionThreshold_?goog.i18n.bidi.Dir.RTL:goog.i18n.bidi.Dir.LTR};
goog.i18n.bidi.detectRtlDirectionality=function(a,b){return goog.i18n.bidi.estimateDirection(a,b)==goog.i18n.bidi.Dir.RTL};goog.i18n.bidi.setElementDirAndAlign=function(a,b){a&&(b=goog.i18n.bidi.toDir(b))&&(a.style.textAlign=b==goog.i18n.bidi.Dir.RTL?goog.i18n.bidi.RIGHT:goog.i18n.bidi.LEFT,a.dir=b==goog.i18n.bidi.Dir.RTL?"rtl":"ltr")};
goog.i18n.bidi.setElementDirByTextDirectionality=function(a,b){switch(goog.i18n.bidi.estimateDirection(b)){case goog.i18n.bidi.Dir.LTR:a.dir="ltr";break;case goog.i18n.bidi.Dir.RTL:a.dir="rtl";break;default:a.removeAttribute("dir")}};goog.i18n.bidi.DirectionalString=function(){};goog.html.TrustedResourceUrl=function(){this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_="";this.trustedURL_=null;this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString=!0;goog.html.TrustedResourceUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString()};
goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString=!0;goog.html.TrustedResourceUrl.prototype.getDirection=function(){return goog.i18n.bidi.Dir.LTR};
goog.html.TrustedResourceUrl.prototype.cloneWithParams=function(a,b){var c=goog.html.TrustedResourceUrl.unwrap(this);c=goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(c);var d=c[3]||"";return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(c[1]+goog.html.TrustedResourceUrl.stringifyParams_("?",c[2]||"",a)+goog.html.TrustedResourceUrl.stringifyParams_("#",d,b))};
goog.DEBUG&&(goog.html.TrustedResourceUrl.prototype.toString=function(){return"TrustedResourceUrl{"+this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_+"}"});goog.html.TrustedResourceUrl.unwrap=function(a){return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(a).toString()};
goog.html.TrustedResourceUrl.unwrapTrustedScriptURL=function(a){if(a instanceof goog.html.TrustedResourceUrl&&a.constructor===goog.html.TrustedResourceUrl&&a.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;goog.asserts.fail("expected object of type TrustedResourceUrl, got '"+a+"' of type "+goog.typeOf(a));return"type_error:TrustedResourceUrl"};
goog.html.TrustedResourceUrl.unwrapTrustedURL=function(a){return a.trustedURL_?a.trustedURL_:goog.html.TrustedResourceUrl.unwrap(a)};
goog.html.TrustedResourceUrl.format=function(a,b){var c=goog.string.Const.unwrap(a);if(!goog.html.TrustedResourceUrl.BASE_URL_.test(c))throw Error("Invalid TrustedResourceUrl format: "+c);a=c.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_,function(a,e){if(!Object.prototype.hasOwnProperty.call(b,e))throw Error('Found marker, "'+e+'", in format string, "'+c+'", but no valid label mapping found in args: '+JSON.stringify(b));a=b[e];return a instanceof goog.string.Const?goog.string.Const.unwrap(a):
encodeURIComponent(String(a))});return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.TrustedResourceUrl.FORMAT_MARKER_=/%{(\w+)}/g;goog.html.TrustedResourceUrl.BASE_URL_=/^((https:)?\/\/[0-9a-z.:[\]-]+\/|\/[^/\\]|[^:/\\%]+\/|[^:/\\%]*[?#]|about:blank#)/i;goog.html.TrustedResourceUrl.URL_PARAM_PARSER_=/^([^?#]*)(\?[^#]*)?(#[\s\S]*)?/;
goog.html.TrustedResourceUrl.formatWithParams=function(a,b,c,d){return goog.html.TrustedResourceUrl.format(a,b).cloneWithParams(c,d)};goog.html.TrustedResourceUrl.fromConstant=function(a){return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a))};goog.html.TrustedResourceUrl.fromConstants=function(a){for(var b="",c=0;c<a.length;c++)b+=goog.string.Const.unwrap(a[c]);return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b)};
goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};
goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse=function(a){var b=new goog.html.TrustedResourceUrl;b.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY?goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScriptURL(a):a;goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY&&(b.trustedURL_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createURL(a));return b};
goog.html.TrustedResourceUrl.stringifyParams_=function(a,b,c){if(null==c)return b;if(goog.isString(c))return c?a+encodeURIComponent(c):"";for(var d in c){var e=c[d];e=goog.isArray(e)?e:[e];for(var f=0;f<e.length;f++){var g=e[f];null!=g&&(b||(b=a),b+=(b.length>a.length?"&":"")+encodeURIComponent(d)+"="+encodeURIComponent(String(g)))}}return b};goog.html.SafeUrl=function(){this.privateDoNotAccessOrElseSafeUrlWrappedValue_="";this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};goog.html.SafeUrl.INNOCUOUS_STRING="about:invalid#zClosurez";goog.html.SafeUrl.prototype.implementsGoogStringTypedString=!0;goog.html.SafeUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString()};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString=!0;goog.html.SafeUrl.prototype.getDirection=function(){return goog.i18n.bidi.Dir.LTR};goog.DEBUG&&(goog.html.SafeUrl.prototype.toString=function(){return"SafeUrl{"+this.privateDoNotAccessOrElseSafeUrlWrappedValue_+"}"});goog.html.SafeUrl.unwrap=function(a){return goog.html.SafeUrl.unwrapTrustedURL(a).toString()};
goog.html.SafeUrl.unwrapTrustedURL=function(a){if(a instanceof goog.html.SafeUrl&&a.constructor===goog.html.SafeUrl&&a.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseSafeUrlWrappedValue_;goog.asserts.fail("expected object of type SafeUrl, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeUrl"};goog.html.SafeUrl.fromConstant=function(a){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a))};
goog.html.SAFE_MIME_TYPE_PATTERN_=/^(?:audio\/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-wav|wav|webm)|image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|text\/csv|video\/(?:mpeg|mp4|ogg|webm|quicktime))(?:;\w+=(?:\w+|"[\w;=]+"))*$/i;goog.html.SafeUrl.isSafeMimeType=function(a){return goog.html.SAFE_MIME_TYPE_PATTERN_.test(a)};goog.html.SafeUrl.fromBlob=function(a){a=goog.html.SAFE_MIME_TYPE_PATTERN_.test(a.type)?goog.fs.url.createObjectUrl(a):goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.DATA_URL_PATTERN_=/^data:([^,]*);base64,[a-z0-9+\/]+=*$/i;goog.html.SafeUrl.fromDataUrl=function(a){a=a.replace(/(%0A|%0D)/g,"");var b=a.match(goog.html.DATA_URL_PATTERN_);b=b&&goog.html.SAFE_MIME_TYPE_PATTERN_.test(b[1]);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b?a:goog.html.SafeUrl.INNOCUOUS_STRING)};goog.html.SafeUrl.fromTelUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"tel:")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SIP_URL_PATTERN_=/^sip[s]?:[+a-z0-9_.!$%&'*\/=^`{|}~-]+@([a-z0-9-]+\.)+[a-z0-9]{2,63}$/i;goog.html.SafeUrl.fromSipUrl=function(a){goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(a))||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.fromFacebookMessengerUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"fb-messenger://share")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.fromWhatsAppUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"whatsapp://send")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.fromSmsUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"sms:")&&goog.html.SafeUrl.isSmsUrlBodyValid_(a)||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.isSmsUrlBodyValid_=function(a){var b=a.indexOf("#");0<b&&(a=a.substring(0,b));b=a.match(/[?&]body=/gi);if(!b)return!0;if(1<b.length)return!1;a=a.match(/[?&]body=([^&]*)/)[1];if(!a)return!0;try{decodeURIComponent(a)}catch(c){return!1}return/^(?:[a-z0-9\-_.~]|%[0-9a-f]{2})+$/i.test(a)};goog.html.SafeUrl.fromSshUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"ssh://")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.sanitizeChromeExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\/\/([^\/]+)\//,a,b)};goog.html.SafeUrl.sanitizeFirefoxExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\/\/([^\/]+)\//,a,b)};goog.html.SafeUrl.sanitizeEdgeExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\/\/([^\/]+)\//,a,b)};
goog.html.SafeUrl.sanitizeExtensionUrl_=function(a,b,c){(a=a.exec(b))?(a=a[1],-1==(c instanceof goog.string.Const?[goog.string.Const.unwrap(c)]:c.map(function(a){return goog.string.Const.unwrap(a)})).indexOf(a)&&(b=goog.html.SafeUrl.INNOCUOUS_STRING)):b=goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b)};goog.html.SafeUrl.fromTrustedResourceUrl=function(a){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(a))};
goog.html.SAFE_URL_PATTERN_=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;goog.html.SafeUrl.SAFE_URL_PATTERN=goog.html.SAFE_URL_PATTERN_;goog.html.SafeUrl.sanitize=function(a){if(a instanceof goog.html.SafeUrl)return a;a="object"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);goog.html.SAFE_URL_PATTERN_.test(a)||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.sanitizeAssertUnchanged=function(a,b){if(a instanceof goog.html.SafeUrl)return a;a="object"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);if(b&&/^data:/i.test(a)&&(b=goog.html.SafeUrl.fromDataUrl(a),b.getTypedStringValue()==a))return b;goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(a),"%s does not match the safe URL pattern",a)||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse=function(a){var b=new goog.html.SafeUrl;b.privateDoNotAccessOrElseSafeUrlWrappedValue_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY?goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createURL(a):a;return b};goog.html.SafeUrl.ABOUT_BLANK=goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");goog.html.SafeStyle=function(){this.privateDoNotAccessOrElseSafeStyleWrappedValue_="";this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};goog.html.SafeStyle.prototype.implementsGoogStringTypedString=!0;goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};
goog.html.SafeStyle.fromConstant=function(a){a=goog.string.Const.unwrap(a);if(0===a.length)return goog.html.SafeStyle.EMPTY;goog.asserts.assert(goog.string.internal.endsWith(a,";"),"Last character of style string is not ';': "+a);goog.asserts.assert(goog.string.internal.contains(a,":"),"Style string must contain at least one ':', to specify a \"name: value\" pair: "+a);return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeStyle.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_};goog.DEBUG&&(goog.html.SafeStyle.prototype.toString=function(){return"SafeStyle{"+this.privateDoNotAccessOrElseSafeStyleWrappedValue_+"}"});
goog.html.SafeStyle.unwrap=function(a){if(a instanceof goog.html.SafeStyle&&a.constructor===goog.html.SafeStyle&&a.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseSafeStyleWrappedValue_;goog.asserts.fail("expected object of type SafeStyle, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeStyle"};goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse=function(a){return(new goog.html.SafeStyle).initSecurityPrivateDoNotAccessOrElse_(a)};
goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_=function(a){this.privateDoNotAccessOrElseSafeStyleWrappedValue_=a;return this};goog.html.SafeStyle.EMPTY=goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");goog.html.SafeStyle.INNOCUOUS_STRING="zClosurez";
goog.html.SafeStyle.create=function(a){var b="",c;for(c in a){if(!/^[-_a-zA-Z0-9]+$/.test(c))throw Error("Name allows only [-_a-zA-Z0-9], got: "+c);var d=a[c];null!=d&&(d=goog.isArray(d)?goog.array.map(d,goog.html.SafeStyle.sanitizePropertyValue_).join(" "):goog.html.SafeStyle.sanitizePropertyValue_(d),b+=c+":"+d+";")}return b?goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b):goog.html.SafeStyle.EMPTY};
goog.html.SafeStyle.sanitizePropertyValue_=function(a){if(a instanceof goog.html.SafeUrl)return'url("'+goog.html.SafeUrl.unwrap(a).replace(/</g,"%3c").replace(/[\\"]/g,"\\$&")+'")';a=a instanceof goog.string.Const?goog.string.Const.unwrap(a):goog.html.SafeStyle.sanitizePropertyValueString_(String(a));if(/[{;}]/.test(a))throw new goog.asserts.AssertionError("Value does not allow [{;}], got: %s.",[a]);return a};
goog.html.SafeStyle.sanitizePropertyValueString_=function(a){var b=a.replace(goog.html.SafeStyle.FUNCTIONS_RE_,"$1").replace(goog.html.SafeStyle.FUNCTIONS_RE_,"$1").replace(goog.html.SafeStyle.URL_RE_,"url");if(goog.html.SafeStyle.VALUE_RE_.test(b)){if(goog.html.SafeStyle.COMMENT_RE_.test(a))return goog.asserts.fail("String value disallows comments, got: "+a),goog.html.SafeStyle.INNOCUOUS_STRING;if(!goog.html.SafeStyle.hasBalancedQuotes_(a))return goog.asserts.fail("String value requires balanced quotes, got: "+
a),goog.html.SafeStyle.INNOCUOUS_STRING;if(!goog.html.SafeStyle.hasBalancedSquareBrackets_(a))return goog.asserts.fail("String value requires balanced square brackets and one identifier per pair of brackets, got: "+a),goog.html.SafeStyle.INNOCUOUS_STRING}else return goog.asserts.fail("String value allows only "+goog.html.SafeStyle.VALUE_ALLOWED_CHARS_+" and simple functions, got: "+a),goog.html.SafeStyle.INNOCUOUS_STRING;return goog.html.SafeStyle.sanitizeUrl_(a)};
goog.html.SafeStyle.hasBalancedQuotes_=function(a){for(var b=!0,c=!0,d=0;d<a.length;d++){var e=a.charAt(d);"'"==e&&c?b=!b:'"'==e&&b&&(c=!c)}return b&&c};goog.html.SafeStyle.hasBalancedSquareBrackets_=function(a){for(var b=!0,c=/^[-_a-zA-Z0-9]$/,d=0;d<a.length;d++){var e=a.charAt(d);if("]"==e){if(b)return!1;b=!0}else if("["==e){if(!b)return!1;b=!1}else if(!b&&!c.test(e))return!1}return b};goog.html.SafeStyle.VALUE_ALLOWED_CHARS_="[-,.\"'%_!# a-zA-Z0-9\\[\\]]";
goog.html.SafeStyle.VALUE_RE_=new RegExp("^"+goog.html.SafeStyle.VALUE_ALLOWED_CHARS_+"+$");goog.html.SafeStyle.URL_RE_=/\b(url\([ \t\n]*)('[ -&(-\[\]-~]*'|"[ !#-\[\]-~]*"|[!#-&*-\[\]-~]*)([ \t\n]*\))/g;goog.html.SafeStyle.FUNCTIONS_RE_=/\b(hsl|hsla|rgb|rgba|matrix|calc|minmax|fit-content|repeat|(rotate|scale|translate)(X|Y|Z|3d)?)\([-+*/0-9a-z.%\[\], ]+\)/g;goog.html.SafeStyle.COMMENT_RE_=/\/\*/;
goog.html.SafeStyle.sanitizeUrl_=function(a){return a.replace(goog.html.SafeStyle.URL_RE_,function(a,c,d,e){var b="";d=d.replace(/^(['"])(.*)\1$/,function(a,c,d){b=c;return d});a=goog.html.SafeUrl.sanitize(d).getTypedStringValue();return c+b+a+b+e})};goog.html.SafeStyle.concat=function(a){var b="",c=function(a){goog.isArray(a)?goog.array.forEach(a,c):b+=goog.html.SafeStyle.unwrap(a)};goog.array.forEach(arguments,c);return b?goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b):goog.html.SafeStyle.EMPTY};goog.html.SafeScript=function(){this.privateDoNotAccessOrElseSafeScriptWrappedValue_="";this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};goog.html.SafeScript.prototype.implementsGoogStringTypedString=!0;goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};goog.html.SafeScript.fromConstant=function(a){a=goog.string.Const.unwrap(a);return 0===a.length?goog.html.SafeScript.EMPTY:goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeScript.fromConstantAndArgs=function(a,b){for(var c=[],d=1;d<arguments.length;d++)c.push(goog.html.SafeScript.stringify_(arguments[d]));return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("("+goog.string.Const.unwrap(a)+")("+c.join(", ")+");")};goog.html.SafeScript.fromJson=function(a){return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(goog.html.SafeScript.stringify_(a))};goog.html.SafeScript.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString()};
goog.DEBUG&&(goog.html.SafeScript.prototype.toString=function(){return"SafeScript{"+this.privateDoNotAccessOrElseSafeScriptWrappedValue_+"}"});goog.html.SafeScript.unwrap=function(a){return goog.html.SafeScript.unwrapTrustedScript(a).toString()};
goog.html.SafeScript.unwrapTrustedScript=function(a){if(a instanceof goog.html.SafeScript&&a.constructor===goog.html.SafeScript&&a.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseSafeScriptWrappedValue_;goog.asserts.fail("expected object of type SafeScript, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeScript"};
goog.html.SafeScript.stringify_=function(a){return JSON.stringify(a).replace(/</g,"\\x3c")};goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse=function(a){return(new goog.html.SafeScript).initSecurityPrivateDoNotAccessOrElse_(a)};
goog.html.SafeScript.prototype.initSecurityPrivateDoNotAccessOrElse_=function(a){this.privateDoNotAccessOrElseSafeScriptWrappedValue_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY?goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScript(a):a;return this};goog.html.SafeScript.EMPTY=goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("");goog.object={};goog.object.is=function(a,b){return a===b?0!==a||1/a===1/b:a!==a&&b!==b};goog.object.forEach=function(a,b,c){for(var d in a)b.call(c,a[d],d,a)};goog.object.filter=function(a,b,c){var d={},e;for(e in a)b.call(c,a[e],e,a)&&(d[e]=a[e]);return d};goog.object.map=function(a,b,c){var d={},e;for(e in a)d[e]=b.call(c,a[e],e,a);return d};goog.object.some=function(a,b,c){for(var d in a)if(b.call(c,a[d],d,a))return!0;return!1};
goog.object.every=function(a,b,c){for(var d in a)if(!b.call(c,a[d],d,a))return!1;return!0};goog.object.getCount=function(a){var b=0,c;for(c in a)b++;return b};goog.object.getAnyKey=function(a){for(var b in a)return b};goog.object.getAnyValue=function(a){for(var b in a)return a[b]};goog.object.contains=function(a,b){return goog.object.containsValue(a,b)};goog.object.getValues=function(a){var b=[],c=0,d;for(d in a)b[c++]=a[d];return b};
goog.object.getKeys=function(a){var b=[],c=0,d;for(d in a)b[c++]=d;return b};goog.object.getValueByKeys=function(a,b){var c=goog.isArrayLike(b),d=c?b:arguments;for(c=c?0:1;c<d.length;c++){if(null==a)return;a=a[d[c]]}return a};goog.object.containsKey=function(a,b){return null!==a&&b in a};goog.object.containsValue=function(a,b){for(var c in a)if(a[c]==b)return!0;return!1};goog.object.findKey=function(a,b,c){for(var d in a)if(b.call(c,a[d],d,a))return d};
goog.object.findValue=function(a,b,c){return(b=goog.object.findKey(a,b,c))&&a[b]};goog.object.isEmpty=function(a){for(var b in a)return!1;return!0};goog.object.clear=function(a){for(var b in a)delete a[b]};goog.object.remove=function(a,b){var c;(c=b in a)&&delete a[b];return c};goog.object.add=function(a,b,c){if(null!==a&&b in a)throw Error('The object already contains the key "'+b+'"');goog.object.set(a,b,c)};goog.object.get=function(a,b,c){return null!==a&&b in a?a[b]:c};
goog.object.set=function(a,b,c){a[b]=c};goog.object.setIfUndefined=function(a,b,c){return b in a?a[b]:a[b]=c};goog.object.setWithReturnValueIfNotSet=function(a,b,c){if(b in a)return a[b];c=c();return a[b]=c};goog.object.equals=function(a,b){for(var c in a)if(!(c in b)||a[c]!==b[c])return!1;for(var d in b)if(!(d in a))return!1;return!0};goog.object.clone=function(a){var b={},c;for(c in a)b[c]=a[c];return b};
goog.object.unsafeClone=function(a){var b=goog.typeOf(a);if("object"==b||"array"==b){if(goog.isFunction(a.clone))return a.clone();b="array"==b?[]:{};for(var c in a)b[c]=goog.object.unsafeClone(a[c]);return b}return a};goog.object.transpose=function(a){var b={},c;for(c in a)b[a[c]]=c;return b};goog.object.PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.object.extend=function(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<goog.object.PROTOTYPE_FIELDS_.length;f++)c=goog.object.PROTOTYPE_FIELDS_[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};
goog.object.create=function(a){var b=arguments.length;if(1==b&&goog.isArray(arguments[0]))return goog.object.create.apply(null,arguments[0]);if(b%2)throw Error("Uneven number of arguments");for(var c={},d=0;d<b;d+=2)c[arguments[d]]=arguments[d+1];return c};goog.object.createSet=function(a){var b=arguments.length;if(1==b&&goog.isArray(arguments[0]))return goog.object.createSet.apply(null,arguments[0]);for(var c={},d=0;d<b;d++)c[arguments[d]]=!0;return c};
goog.object.createImmutableView=function(a){var b=a;Object.isFrozen&&!Object.isFrozen(a)&&(b=Object.create(a),Object.freeze(b));return b};goog.object.isImmutableView=function(a){return!!Object.isFrozen&&Object.isFrozen(a)};
goog.object.getAllPropertyNames=function(a,b,c){if(!a)return[];if(!Object.getOwnPropertyNames||!Object.getPrototypeOf)return goog.object.getKeys(a);for(var d={};a&&(a!==Object.prototype||b)&&(a!==Function.prototype||c);){for(var e=Object.getOwnPropertyNames(a),f=0;f<e.length;f++)d[e[f]]=!0;a=Object.getPrototypeOf(a)}return goog.object.getKeys(d)};goog.object.getSuperClass=function(a){return(a=Object.getPrototypeOf(a.prototype))&&a.constructor};goog.html.SafeStyleSheet=function(){this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_="";this.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString=!0;goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};
goog.html.SafeStyleSheet.createRule=function(a,b){if(goog.string.internal.contains(a,"<"))throw Error("Selector does not allow '<', got: "+a);var c=a.replace(/('|")((?!\1)[^\r\n\f\\]|\\[\s\S])*\1/g,"");if(!/^[-_a-zA-Z0-9#.:* ,>+~[\]()=^$|]+$/.test(c))throw Error("Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\]()=^$|] and strings, got: "+a);if(!goog.html.SafeStyleSheet.hasBalancedBrackets_(c))throw Error("() and [] in selector must be balanced, got: "+a);b instanceof goog.html.SafeStyle||(b=goog.html.SafeStyle.create(b));
a=a+"{"+goog.html.SafeStyle.unwrap(b).replace(/</g,"\\3C ")+"}";return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeStyleSheet.hasBalancedBrackets_=function(a){for(var b={"(":")","[":"]"},c=[],d=0;d<a.length;d++){var e=a[d];if(b[e])c.push(b[e]);else if(goog.object.contains(b,e)&&c.pop()!=e)return!1}return 0==c.length};
goog.html.SafeStyleSheet.concat=function(a){var b="",c=function(a){goog.isArray(a)?goog.array.forEach(a,c):b+=goog.html.SafeStyleSheet.unwrap(a)};goog.array.forEach(arguments,c);return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b)};
goog.html.SafeStyleSheet.fromConstant=function(a){a=goog.string.Const.unwrap(a);if(0===a.length)return goog.html.SafeStyleSheet.EMPTY;goog.asserts.assert(!goog.string.internal.contains(a,"<"),"Forbidden '<' character in style sheet string: "+a);return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeStyleSheet.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_};
goog.DEBUG&&(goog.html.SafeStyleSheet.prototype.toString=function(){return"SafeStyleSheet{"+this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_+"}"});
goog.html.SafeStyleSheet.unwrap=function(a){if(a instanceof goog.html.SafeStyleSheet&&a.constructor===goog.html.SafeStyleSheet&&a.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;goog.asserts.fail("expected object of type SafeStyleSheet, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeStyleSheet"};
goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse=function(a){return(new goog.html.SafeStyleSheet).initSecurityPrivateDoNotAccessOrElse_(a)};goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_=function(a){this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_=a;return this};goog.html.SafeStyleSheet.EMPTY=goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");goog.dom.tags={};goog.dom.tags.VOID_TAGS_={area:!0,base:!0,br:!0,col:!0,command:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0};goog.dom.tags.isVoidTag=function(a){return!0===goog.dom.tags.VOID_TAGS_[a]};goog.dom.HtmlElement=function(){};goog.dom.TagName=function(a){this.tagName_=a};goog.dom.TagName.prototype.toString=function(){return this.tagName_};goog.dom.TagName.A=new goog.dom.TagName("A");goog.dom.TagName.ABBR=new goog.dom.TagName("ABBR");goog.dom.TagName.ACRONYM=new goog.dom.TagName("ACRONYM");goog.dom.TagName.ADDRESS=new goog.dom.TagName("ADDRESS");goog.dom.TagName.APPLET=new goog.dom.TagName("APPLET");goog.dom.TagName.AREA=new goog.dom.TagName("AREA");goog.dom.TagName.ARTICLE=new goog.dom.TagName("ARTICLE");
goog.dom.TagName.ASIDE=new goog.dom.TagName("ASIDE");goog.dom.TagName.AUDIO=new goog.dom.TagName("AUDIO");goog.dom.TagName.B=new goog.dom.TagName("B");goog.dom.TagName.BASE=new goog.dom.TagName("BASE");goog.dom.TagName.BASEFONT=new goog.dom.TagName("BASEFONT");goog.dom.TagName.BDI=new goog.dom.TagName("BDI");goog.dom.TagName.BDO=new goog.dom.TagName("BDO");goog.dom.TagName.BIG=new goog.dom.TagName("BIG");goog.dom.TagName.BLOCKQUOTE=new goog.dom.TagName("BLOCKQUOTE");goog.dom.TagName.BODY=new goog.dom.TagName("BODY");
goog.dom.TagName.BR=new goog.dom.TagName("BR");goog.dom.TagName.BUTTON=new goog.dom.TagName("BUTTON");goog.dom.TagName.CANVAS=new goog.dom.TagName("CANVAS");goog.dom.TagName.CAPTION=new goog.dom.TagName("CAPTION");goog.dom.TagName.CENTER=new goog.dom.TagName("CENTER");goog.dom.TagName.CITE=new goog.dom.TagName("CITE");goog.dom.TagName.CODE=new goog.dom.TagName("CODE");goog.dom.TagName.COL=new goog.dom.TagName("COL");goog.dom.TagName.COLGROUP=new goog.dom.TagName("COLGROUP");
goog.dom.TagName.COMMAND=new goog.dom.TagName("COMMAND");goog.dom.TagName.DATA=new goog.dom.TagName("DATA");goog.dom.TagName.DATALIST=new goog.dom.TagName("DATALIST");goog.dom.TagName.DD=new goog.dom.TagName("DD");goog.dom.TagName.DEL=new goog.dom.TagName("DEL");goog.dom.TagName.DETAILS=new goog.dom.TagName("DETAILS");goog.dom.TagName.DFN=new goog.dom.TagName("DFN");goog.dom.TagName.DIALOG=new goog.dom.TagName("DIALOG");goog.dom.TagName.DIR=new goog.dom.TagName("DIR");goog.dom.TagName.DIV=new goog.dom.TagName("DIV");
goog.dom.TagName.DL=new goog.dom.TagName("DL");goog.dom.TagName.DT=new goog.dom.TagName("DT");goog.dom.TagName.EM=new goog.dom.TagName("EM");goog.dom.TagName.EMBED=new goog.dom.TagName("EMBED");goog.dom.TagName.FIELDSET=new goog.dom.TagName("FIELDSET");goog.dom.TagName.FIGCAPTION=new goog.dom.TagName("FIGCAPTION");goog.dom.TagName.FIGURE=new goog.dom.TagName("FIGURE");goog.dom.TagName.FONT=new goog.dom.TagName("FONT");goog.dom.TagName.FOOTER=new goog.dom.TagName("FOOTER");goog.dom.TagName.FORM=new goog.dom.TagName("FORM");
goog.dom.TagName.FRAME=new goog.dom.TagName("FRAME");goog.dom.TagName.FRAMESET=new goog.dom.TagName("FRAMESET");goog.dom.TagName.H1=new goog.dom.TagName("H1");goog.dom.TagName.H2=new goog.dom.TagName("H2");goog.dom.TagName.H3=new goog.dom.TagName("H3");goog.dom.TagName.H4=new goog.dom.TagName("H4");goog.dom.TagName.H5=new goog.dom.TagName("H5");goog.dom.TagName.H6=new goog.dom.TagName("H6");goog.dom.TagName.HEAD=new goog.dom.TagName("HEAD");goog.dom.TagName.HEADER=new goog.dom.TagName("HEADER");
goog.dom.TagName.HGROUP=new goog.dom.TagName("HGROUP");goog.dom.TagName.HR=new goog.dom.TagName("HR");goog.dom.TagName.HTML=new goog.dom.TagName("HTML");goog.dom.TagName.I=new goog.dom.TagName("I");goog.dom.TagName.IFRAME=new goog.dom.TagName("IFRAME");goog.dom.TagName.IMG=new goog.dom.TagName("IMG");goog.dom.TagName.INPUT=new goog.dom.TagName("INPUT");goog.dom.TagName.INS=new goog.dom.TagName("INS");goog.dom.TagName.ISINDEX=new goog.dom.TagName("ISINDEX");goog.dom.TagName.KBD=new goog.dom.TagName("KBD");
goog.dom.TagName.KEYGEN=new goog.dom.TagName("KEYGEN");goog.dom.TagName.LABEL=new goog.dom.TagName("LABEL");goog.dom.TagName.LEGEND=new goog.dom.TagName("LEGEND");goog.dom.TagName.LI=new goog.dom.TagName("LI");goog.dom.TagName.LINK=new goog.dom.TagName("LINK");goog.dom.TagName.MAIN=new goog.dom.TagName("MAIN");goog.dom.TagName.MAP=new goog.dom.TagName("MAP");goog.dom.TagName.MARK=new goog.dom.TagName("MARK");goog.dom.TagName.MATH=new goog.dom.TagName("MATH");goog.dom.TagName.MENU=new goog.dom.TagName("MENU");
goog.dom.TagName.MENUITEM=new goog.dom.TagName("MENUITEM");goog.dom.TagName.META=new goog.dom.TagName("META");goog.dom.TagName.METER=new goog.dom.TagName("METER");goog.dom.TagName.NAV=new goog.dom.TagName("NAV");goog.dom.TagName.NOFRAMES=new goog.dom.TagName("NOFRAMES");goog.dom.TagName.NOSCRIPT=new goog.dom.TagName("NOSCRIPT");goog.dom.TagName.OBJECT=new goog.dom.TagName("OBJECT");goog.dom.TagName.OL=new goog.dom.TagName("OL");goog.dom.TagName.OPTGROUP=new goog.dom.TagName("OPTGROUP");
goog.dom.TagName.OPTION=new goog.dom.TagName("OPTION");goog.dom.TagName.OUTPUT=new goog.dom.TagName("OUTPUT");goog.dom.TagName.P=new goog.dom.TagName("P");goog.dom.TagName.PARAM=new goog.dom.TagName("PARAM");goog.dom.TagName.PICTURE=new goog.dom.TagName("PICTURE");goog.dom.TagName.PRE=new goog.dom.TagName("PRE");goog.dom.TagName.PROGRESS=new goog.dom.TagName("PROGRESS");goog.dom.TagName.Q=new goog.dom.TagName("Q");goog.dom.TagName.RP=new goog.dom.TagName("RP");goog.dom.TagName.RT=new goog.dom.TagName("RT");
goog.dom.TagName.RTC=new goog.dom.TagName("RTC");goog.dom.TagName.RUBY=new goog.dom.TagName("RUBY");goog.dom.TagName.S=new goog.dom.TagName("S");goog.dom.TagName.SAMP=new goog.dom.TagName("SAMP");goog.dom.TagName.SCRIPT=new goog.dom.TagName("SCRIPT");goog.dom.TagName.SECTION=new goog.dom.TagName("SECTION");goog.dom.TagName.SELECT=new goog.dom.TagName("SELECT");goog.dom.TagName.SMALL=new goog.dom.TagName("SMALL");goog.dom.TagName.SOURCE=new goog.dom.TagName("SOURCE");goog.dom.TagName.SPAN=new goog.dom.TagName("SPAN");
goog.dom.TagName.STRIKE=new goog.dom.TagName("STRIKE");goog.dom.TagName.STRONG=new goog.dom.TagName("STRONG");goog.dom.TagName.STYLE=new goog.dom.TagName("STYLE");goog.dom.TagName.SUB=new goog.dom.TagName("SUB");goog.dom.TagName.SUMMARY=new goog.dom.TagName("SUMMARY");goog.dom.TagName.SUP=new goog.dom.TagName("SUP");goog.dom.TagName.SVG=new goog.dom.TagName("SVG");goog.dom.TagName.TABLE=new goog.dom.TagName("TABLE");goog.dom.TagName.TBODY=new goog.dom.TagName("TBODY");goog.dom.TagName.TD=new goog.dom.TagName("TD");
goog.dom.TagName.TEMPLATE=new goog.dom.TagName("TEMPLATE");goog.dom.TagName.TEXTAREA=new goog.dom.TagName("TEXTAREA");goog.dom.TagName.TFOOT=new goog.dom.TagName("TFOOT");goog.dom.TagName.TH=new goog.dom.TagName("TH");goog.dom.TagName.THEAD=new goog.dom.TagName("THEAD");goog.dom.TagName.TIME=new goog.dom.TagName("TIME");goog.dom.TagName.TITLE=new goog.dom.TagName("TITLE");goog.dom.TagName.TR=new goog.dom.TagName("TR");goog.dom.TagName.TRACK=new goog.dom.TagName("TRACK");goog.dom.TagName.TT=new goog.dom.TagName("TT");
goog.dom.TagName.U=new goog.dom.TagName("U");goog.dom.TagName.UL=new goog.dom.TagName("UL");goog.dom.TagName.VAR=new goog.dom.TagName("VAR");goog.dom.TagName.VIDEO=new goog.dom.TagName("VIDEO");goog.dom.TagName.WBR=new goog.dom.TagName("WBR");goog.labs={};goog.labs.userAgent={};goog.labs.userAgent.util={};goog.labs.userAgent.util.getNativeUserAgentString_=function(){var a=goog.labs.userAgent.util.getNavigator_();return a&&(a=a.userAgent)?a:""};goog.labs.userAgent.util.getNavigator_=function(){return goog.global.navigator};goog.labs.userAgent.util.userAgent_=goog.labs.userAgent.util.getNativeUserAgentString_();goog.labs.userAgent.util.setUserAgent=function(a){goog.labs.userAgent.util.userAgent_=a||goog.labs.userAgent.util.getNativeUserAgentString_()};
goog.labs.userAgent.util.getUserAgent=function(){return goog.labs.userAgent.util.userAgent_};goog.labs.userAgent.util.matchUserAgent=function(a){var b=goog.labs.userAgent.util.getUserAgent();return goog.string.internal.contains(b,a)};goog.labs.userAgent.util.matchUserAgentIgnoreCase=function(a){var b=goog.labs.userAgent.util.getUserAgent();return goog.string.internal.caseInsensitiveContains(b,a)};
goog.labs.userAgent.util.extractVersionTuples=function(a){for(var b=/(\w[\w ]+)\/([^\s]+)\s*(?:\((.*?)\))?/g,c=[],d;d=b.exec(a);)c.push([d[1],d[2],d[3]||void 0]);return c};goog.labs.userAgent.browser={};goog.labs.userAgent.browser.matchOpera_=function(){return goog.labs.userAgent.util.matchUserAgent("Opera")};goog.labs.userAgent.browser.matchIE_=function(){return goog.labs.userAgent.util.matchUserAgent("Trident")||goog.labs.userAgent.util.matchUserAgent("MSIE")};goog.labs.userAgent.browser.matchEdgeHtml_=function(){return goog.labs.userAgent.util.matchUserAgent("Edge")};goog.labs.userAgent.browser.matchEdgeChromium_=function(){return goog.labs.userAgent.util.matchUserAgent("Edg/")};
goog.labs.userAgent.browser.matchOperaChromium_=function(){return goog.labs.userAgent.util.matchUserAgent("OPR")};goog.labs.userAgent.browser.matchFirefox_=function(){return goog.labs.userAgent.util.matchUserAgent("Firefox")||goog.labs.userAgent.util.matchUserAgent("FxiOS")};
goog.labs.userAgent.browser.matchSafari_=function(){return goog.labs.userAgent.util.matchUserAgent("Safari")&&!(goog.labs.userAgent.browser.matchChrome_()||goog.labs.userAgent.browser.matchCoast_()||goog.labs.userAgent.browser.matchOpera_()||goog.labs.userAgent.browser.matchEdgeHtml_()||goog.labs.userAgent.browser.matchEdgeChromium_()||goog.labs.userAgent.browser.matchOperaChromium_()||goog.labs.userAgent.browser.matchFirefox_()||goog.labs.userAgent.browser.isSilk()||goog.labs.userAgent.util.matchUserAgent("Android"))};
goog.labs.userAgent.browser.matchCoast_=function(){return goog.labs.userAgent.util.matchUserAgent("Coast")};goog.labs.userAgent.browser.matchIosWebview_=function(){return(goog.labs.userAgent.util.matchUserAgent("iPad")||goog.labs.userAgent.util.matchUserAgent("iPhone"))&&!goog.labs.userAgent.browser.matchSafari_()&&!goog.labs.userAgent.browser.matchChrome_()&&!goog.labs.userAgent.browser.matchCoast_()&&!goog.labs.userAgent.browser.matchFirefox_()&&goog.labs.userAgent.util.matchUserAgent("AppleWebKit")};
goog.labs.userAgent.browser.matchChrome_=function(){return(goog.labs.userAgent.util.matchUserAgent("Chrome")||goog.labs.userAgent.util.matchUserAgent("CriOS"))&&!goog.labs.userAgent.browser.matchEdgeHtml_()};goog.labs.userAgent.browser.matchAndroidBrowser_=function(){return goog.labs.userAgent.util.matchUserAgent("Android")&&!(goog.labs.userAgent.browser.isChrome()||goog.labs.userAgent.browser.isFirefox()||goog.labs.userAgent.browser.isOpera()||goog.labs.userAgent.browser.isSilk())};
goog.labs.userAgent.browser.isOpera=goog.labs.userAgent.browser.matchOpera_;goog.labs.userAgent.browser.isIE=goog.labs.userAgent.browser.matchIE_;goog.labs.userAgent.browser.isEdge=goog.labs.userAgent.browser.matchEdgeHtml_;goog.labs.userAgent.browser.isEdgeChromium=goog.labs.userAgent.browser.matchEdgeChromium_;goog.labs.userAgent.browser.isOperaChromium=goog.labs.userAgent.browser.matchOperaChromium_;goog.labs.userAgent.browser.isFirefox=goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari=goog.labs.userAgent.browser.matchSafari_;goog.labs.userAgent.browser.isCoast=goog.labs.userAgent.browser.matchCoast_;goog.labs.userAgent.browser.isIosWebview=goog.labs.userAgent.browser.matchIosWebview_;goog.labs.userAgent.browser.isChrome=goog.labs.userAgent.browser.matchChrome_;goog.labs.userAgent.browser.isAndroidBrowser=goog.labs.userAgent.browser.matchAndroidBrowser_;goog.labs.userAgent.browser.isSilk=function(){return goog.labs.userAgent.util.matchUserAgent("Silk")};
goog.labs.userAgent.browser.getVersion=function(){function a(a){a=goog.array.find(a,d);return c[a]||""}var b=goog.labs.userAgent.util.getUserAgent();if(goog.labs.userAgent.browser.isIE())return goog.labs.userAgent.browser.getIEVersion_(b);b=goog.labs.userAgent.util.extractVersionTuples(b);var c={};goog.array.forEach(b,function(a){c[a[0]]=a[1]});var d=goog.partial(goog.object.containsKey,c);return goog.labs.userAgent.browser.isOpera()?a(["Version","Opera"]):goog.labs.userAgent.browser.isEdge()?a(["Edge"]):
goog.labs.userAgent.browser.isEdgeChromium()?a(["Edg"]):goog.labs.userAgent.browser.isChrome()?a(["Chrome","CriOS"]):(b=b[2])&&b[1]||""};goog.labs.userAgent.browser.isVersionOrHigher=function(a){return 0<=goog.string.internal.compareVersions(goog.labs.userAgent.browser.getVersion(),a)};
goog.labs.userAgent.browser.getIEVersion_=function(a){var b=/rv: *([\d\.]*)/.exec(a);if(b&&b[1])return b[1];b="";var c=/MSIE +([\d\.]+)/.exec(a);if(c&&c[1])if(a=/Trident\/(\d.\d)/.exec(a),"7.0"==c[1])if(a&&a[1])switch(a[1]){case "4.0":b="8.0";break;case "5.0":b="9.0";break;case "6.0":b="10.0";break;case "7.0":b="11.0"}else b="7.0";else b=c[1];return b};goog.html.SafeHtml=function(){this.privateDoNotAccessOrElseSafeHtmlWrappedValue_="";this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;this.dir_=null};goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString=!0;goog.html.SafeHtml.prototype.getDirection=function(){return this.dir_};goog.html.SafeHtml.prototype.implementsGoogStringTypedString=!0;goog.html.SafeHtml.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString()};
goog.DEBUG&&(goog.html.SafeHtml.prototype.toString=function(){return"SafeHtml{"+this.privateDoNotAccessOrElseSafeHtmlWrappedValue_+"}"});goog.html.SafeHtml.unwrap=function(a){return goog.html.SafeHtml.unwrapTrustedHTML(a).toString()};
goog.html.SafeHtml.unwrapTrustedHTML=function(a){if(a instanceof goog.html.SafeHtml&&a.constructor===goog.html.SafeHtml&&a.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseSafeHtmlWrappedValue_;goog.asserts.fail("expected object of type SafeHtml, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeHtml"};
goog.html.SafeHtml.htmlEscape=function(a){if(a instanceof goog.html.SafeHtml)return a;var b="object"==typeof a,c=null;b&&a.implementsGoogI18nBidiDirectionalString&&(c=a.getDirection());a=b&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(a),c)};
goog.html.SafeHtml.htmlEscapePreservingNewlines=function(a){if(a instanceof goog.html.SafeHtml)return a;a=goog.html.SafeHtml.htmlEscape(a);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(goog.html.SafeHtml.unwrap(a)),a.getDirection())};
goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces=function(a){if(a instanceof goog.html.SafeHtml)return a;a=goog.html.SafeHtml.htmlEscape(a);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(goog.html.SafeHtml.unwrap(a)),a.getDirection())};goog.html.SafeHtml.from=goog.html.SafeHtml.htmlEscape;goog.html.SafeHtml.VALID_NAMES_IN_TAG_=/^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_={action:!0,cite:!0,data:!0,formaction:!0,href:!0,manifest:!0,poster:!0,src:!0};goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_={APPLET:!0,BASE:!0,EMBED:!0,IFRAME:!0,LINK:!0,MATH:!0,META:!0,OBJECT:!0,SCRIPT:!0,STYLE:!0,SVG:!0,TEMPLATE:!0};goog.html.SafeHtml.create=function(a,b,c){goog.html.SafeHtml.verifyTagName(String(a));return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(a),b,c)};
goog.html.SafeHtml.verifyTagName=function(a){if(!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(a))throw Error("Invalid tag name <"+a+">.");if(a.toUpperCase()in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_)throw Error("Tag name <"+a+"> is not allowed for SafeHtml.");};
goog.html.SafeHtml.createIframe=function(a,b,c,d){a&&goog.html.TrustedResourceUrl.unwrap(a);var e={};e.src=a||null;e.srcdoc=b&&goog.html.SafeHtml.unwrap(b);a=goog.html.SafeHtml.combineAttributes(e,{sandbox:""},c);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe",a,d)};
goog.html.SafeHtml.createSandboxIframe=function(a,b,c,d){if(!goog.html.SafeHtml.canUseSandboxIframe())throw Error("The browser does not support sandboxed iframes.");var e={};e.src=a?goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a)):null;e.srcdoc=b||null;e.sandbox="";a=goog.html.SafeHtml.combineAttributes(e,{},c);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe",a,d)};
goog.html.SafeHtml.canUseSandboxIframe=function(){return goog.global.HTMLIFrameElement&&"sandbox"in goog.global.HTMLIFrameElement.prototype};goog.html.SafeHtml.createScriptSrc=function(a,b){goog.html.TrustedResourceUrl.unwrap(a);a=goog.html.SafeHtml.combineAttributes({src:a},{},b);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script",a)};
goog.html.SafeHtml.createScript=function(a,b){for(var c in b){var d=c.toLowerCase();if("language"==d||"src"==d||"text"==d||"type"==d)throw Error('Cannot set "'+d+'" attribute');}c="";a=goog.array.concat(a);for(d=0;d<a.length;d++)c+=goog.html.SafeScript.unwrap(a[d]);a=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c,goog.i18n.bidi.Dir.NEUTRAL);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script",b,a)};
goog.html.SafeHtml.createStyle=function(a,b){b=goog.html.SafeHtml.combineAttributes({type:"text/css"},{},b);var c="";a=goog.array.concat(a);for(var d=0;d<a.length;d++)c+=goog.html.SafeStyleSheet.unwrap(a[d]);a=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c,goog.i18n.bidi.Dir.NEUTRAL);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style",b,a)};
goog.html.SafeHtml.createMetaRefresh=function(a,b){a=goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a));(goog.labs.userAgent.browser.isIE()||goog.labs.userAgent.browser.isEdge())&&goog.string.internal.contains(a,";")&&(a="'"+a.replace(/'/g,"%27")+"'");return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta",{"http-equiv":"refresh",content:(b||0)+"; url="+a})};
goog.html.SafeHtml.getAttrNameAndValue_=function(a,b,c){if(c instanceof goog.string.Const)c=goog.string.Const.unwrap(c);else if("style"==b.toLowerCase())c=goog.html.SafeHtml.getStyleValue_(c);else{if(/^on/i.test(b))throw Error('Attribute "'+b+'" requires goog.string.Const value, "'+c+'" given.');if(b.toLowerCase()in goog.html.SafeHtml.URL_ATTRIBUTES_)if(c instanceof goog.html.TrustedResourceUrl)c=goog.html.TrustedResourceUrl.unwrap(c);else if(c instanceof goog.html.SafeUrl)c=goog.html.SafeUrl.unwrap(c);
else if(goog.isString(c))c=goog.html.SafeUrl.sanitize(c).getTypedStringValue();else throw Error('Attribute "'+b+'" on tag "'+a+'" requires goog.html.SafeUrl, goog.string.Const, or string, value "'+c+'" given.');}c.implementsGoogStringTypedString&&(c=c.getTypedStringValue());goog.asserts.assert(goog.isString(c)||goog.isNumber(c),"String or number value expected, got "+typeof c+" with value: "+c);return b+'="'+goog.string.internal.htmlEscape(String(c))+'"'};
goog.html.SafeHtml.getStyleValue_=function(a){if(!goog.isObject(a))throw Error('The "style" attribute requires goog.html.SafeStyle or map of style properties, '+typeof a+" given: "+a);a instanceof goog.html.SafeStyle||(a=goog.html.SafeStyle.create(a));return goog.html.SafeStyle.unwrap(a)};goog.html.SafeHtml.createWithDir=function(a,b,c,d){b=goog.html.SafeHtml.create(b,c,d);b.dir_=a;return b};
goog.html.SafeHtml.join=function(a,b){a=goog.html.SafeHtml.htmlEscape(a);var c=a.getDirection(),d=[],e=function(a){goog.isArray(a)?goog.array.forEach(a,e):(a=goog.html.SafeHtml.htmlEscape(a),d.push(goog.html.SafeHtml.unwrap(a)),a=a.getDirection(),c==goog.i18n.bidi.Dir.NEUTRAL?c=a:a!=goog.i18n.bidi.Dir.NEUTRAL&&c!=a&&(c=null))};goog.array.forEach(b,e);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(d.join(goog.html.SafeHtml.unwrap(a)),c)};
goog.html.SafeHtml.concat=function(a){return goog.html.SafeHtml.join(goog.html.SafeHtml.EMPTY,Array.prototype.slice.call(arguments))};goog.html.SafeHtml.concatWithDir=function(a,b){var c=goog.html.SafeHtml.concat(goog.array.slice(arguments,1));c.dir_=a;return c};goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse=function(a,b){return(new goog.html.SafeHtml).initSecurityPrivateDoNotAccessOrElse_(a,b)};
goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_=function(a,b){this.privateDoNotAccessOrElseSafeHtmlWrappedValue_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY?goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createHTML(a):a;this.dir_=b;return this};
goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse=function(a,b,c){var d=null;var e="<"+a+goog.html.SafeHtml.stringifyAttributes(a,b);goog.isDefAndNotNull(c)?goog.isArray(c)||(c=[c]):c=[];goog.dom.tags.isVoidTag(a.toLowerCase())?(goog.asserts.assert(!c.length,"Void tag <"+a+"> does not allow content."),e+=">"):(d=goog.html.SafeHtml.concat(c),e+=">"+goog.html.SafeHtml.unwrap(d)+"</"+a+">",d=d.getDirection());(a=b&&b.dir)&&(d=/^(ltr|rtl|auto)$/i.test(a)?goog.i18n.bidi.Dir.NEUTRAL:
null);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(e,d)};goog.html.SafeHtml.stringifyAttributes=function(a,b){var c="";if(b)for(var d in b){if(!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(d))throw Error('Invalid attribute name "'+d+'".');var e=b[d];goog.isDefAndNotNull(e)&&(c+=" "+goog.html.SafeHtml.getAttrNameAndValue_(a,d,e))}return c};
goog.html.SafeHtml.combineAttributes=function(a,b,c){var d={},e;for(e in a)goog.asserts.assert(e.toLowerCase()==e,"Must be lower case"),d[e]=a[e];for(e in b)goog.asserts.assert(e.toLowerCase()==e,"Must be lower case"),d[e]=b[e];for(e in c){var f=e.toLowerCase();if(f in a)throw Error('Cannot override "'+f+'" attribute, got "'+e+'" with value "'+c[e]+'"');f in b&&delete d[f];d[e]=c[e]}return d};
goog.html.SafeHtml.DOCTYPE_HTML=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<!DOCTYPE html>",goog.i18n.bidi.Dir.NEUTRAL);goog.html.SafeHtml.EMPTY=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("",goog.i18n.bidi.Dir.NEUTRAL);goog.html.SafeHtml.BR=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<br>",goog.i18n.bidi.Dir.NEUTRAL);goog.html.uncheckedconversions={};goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract=function(a,b,c){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(b,c||null)};
goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b)};goog.dom.asserts={};goog.dom.asserts.assertIsLocation=function(a){if(goog.asserts.ENABLE_ASSERTS){var b=goog.dom.asserts.getWindow_(a);b&&(!a||!(a instanceof b.Location)&&a instanceof b.Element)&&goog.asserts.fail("Argument is not a Location (or a non-Element mock); got: %s",goog.dom.asserts.debugStringForType_(a))}return a};
goog.dom.asserts.assertIsElementType_=function(a,b){if(goog.asserts.ENABLE_ASSERTS){var c=goog.dom.asserts.getWindow_(a);c&&"undefined"!=typeof c[b]&&(a&&(a instanceof c[b]||!(a instanceof c.Location||a instanceof c.Element))||goog.asserts.fail("Argument is not a %s (or a non-Element, non-Location mock); got: %s",b,goog.dom.asserts.debugStringForType_(a)))}return a};goog.dom.asserts.assertIsHTMLAnchorElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLAnchorElement")};
goog.dom.asserts.assertIsHTMLButtonElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLButtonElement")};goog.dom.asserts.assertIsHTMLLinkElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLLinkElement")};goog.dom.asserts.assertIsHTMLImageElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLImageElement")};goog.dom.asserts.assertIsHTMLAudioElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLAudioElement")};
goog.dom.asserts.assertIsHTMLVideoElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLVideoElement")};goog.dom.asserts.assertIsHTMLInputElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLInputElement")};goog.dom.asserts.assertIsHTMLTextAreaElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLTextAreaElement")};goog.dom.asserts.assertIsHTMLCanvasElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLCanvasElement")};
goog.dom.asserts.assertIsHTMLEmbedElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLEmbedElement")};goog.dom.asserts.assertIsHTMLFormElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLFormElement")};goog.dom.asserts.assertIsHTMLFrameElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLFrameElement")};goog.dom.asserts.assertIsHTMLIFrameElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLIFrameElement")};
goog.dom.asserts.assertIsHTMLObjectElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLObjectElement")};goog.dom.asserts.assertIsHTMLScriptElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLScriptElement")};
goog.dom.asserts.debugStringForType_=function(a){if(goog.isObject(a))try{return a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a)}catch(b){return"<object could not be stringified>"}else return void 0===a?"undefined":null===a?"null":typeof a};goog.dom.asserts.getWindow_=function(a){try{var b=a&&a.ownerDocument,c=b&&(b.defaultView||b.parentWindow);c=c||goog.global;if(c.Element&&c.Location)return c}catch(d){}return null};goog.functions={};goog.functions.constant=function(a){return function(){return a}};goog.functions.FALSE=function(){return!1};goog.functions.TRUE=function(){return!0};goog.functions.NULL=function(){return null};goog.functions.identity=function(a,b){return a};goog.functions.error=function(a){return function(){throw Error(a);}};goog.functions.fail=function(a){return function(){throw a;}};
goog.functions.lock=function(a,b){b=b||0;return function(){return a.apply(this,Array.prototype.slice.call(arguments,0,b))}};goog.functions.nth=function(a){return function(){return arguments[a]}};goog.functions.partialRight=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=Array.prototype.slice.call(arguments);b.push.apply(b,c);return a.apply(this,b)}};goog.functions.withReturnValue=function(a,b){return goog.functions.sequence(a,goog.functions.constant(b))};
goog.functions.equalTo=function(a,b){return function(c){return b?a==c:a===c}};goog.functions.compose=function(a,b){var c=arguments,d=c.length;return function(){var a;d&&(a=c[d-1].apply(this,arguments));for(var b=d-2;0<=b;b--)a=c[b].call(this,a);return a}};goog.functions.sequence=function(a){var b=arguments,c=b.length;return function(){for(var a,e=0;e<c;e++)a=b[e].apply(this,arguments);return a}};
goog.functions.and=function(a){var b=arguments,c=b.length;return function(){for(var a=0;a<c;a++)if(!b[a].apply(this,arguments))return!1;return!0}};goog.functions.or=function(a){var b=arguments,c=b.length;return function(){for(var a=0;a<c;a++)if(b[a].apply(this,arguments))return!0;return!1}};goog.functions.not=function(a){return function(){return!a.apply(this,arguments)}};
goog.functions.create=function(a,b){var c=function(){};c.prototype=a.prototype;c=new c;a.apply(c,Array.prototype.slice.call(arguments,1));return c};goog.functions.CACHE_RETURN_VALUE=!0;goog.functions.cacheReturnValue=function(a){var b=!1,c;return function(){if(!goog.functions.CACHE_RETURN_VALUE)return a();b||(c=a(),b=!0);return c}};goog.functions.once=function(a){var b=a;return function(){if(b){var a=b;b=null;a()}}};
goog.functions.debounce=function(a,b,c){var d=0;return function(e){goog.global.clearTimeout(d);var f=arguments;d=goog.global.setTimeout(function(){a.apply(c,f)},b)}};goog.functions.throttle=function(a,b,c){var d=0,e=!1,f=[],g=function(){d=0;e&&(e=!1,h())},h=function(){d=goog.global.setTimeout(g,b);a.apply(c,f)};return function(a){f=arguments;d?e=!0:h()}};goog.functions.rateLimit=function(a,b,c){var d=0,e=function(){d=0};return function(f){d||(d=goog.global.setTimeout(e,b),a.apply(c,arguments))}};goog.dom.safe={};goog.dom.safe.InsertAdjacentHtmlPosition={AFTERBEGIN:"afterbegin",AFTEREND:"afterend",BEFOREBEGIN:"beforebegin",BEFOREEND:"beforeend"};goog.dom.safe.insertAdjacentHtml=function(a,b,c){a.insertAdjacentHTML(b,goog.html.SafeHtml.unwrapTrustedHTML(c))};goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_={MATH:!0,SCRIPT:!0,STYLE:!0,SVG:!0,TEMPLATE:!0};
goog.dom.safe.isInnerHtmlCleanupRecursive_=goog.functions.cacheReturnValue(function(){if(goog.DEBUG&&"undefined"===typeof document)return!1;var a=document.createElement("div"),b=document.createElement("div");b.appendChild(document.createElement("div"));a.appendChild(b);if(goog.DEBUG&&!a.firstChild)return!1;b=a.firstChild.firstChild;a.innerHTML=goog.html.SafeHtml.unwrapTrustedHTML(goog.html.SafeHtml.EMPTY);return!b.parentElement});
goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse=function(a,b){if(goog.dom.safe.isInnerHtmlCleanupRecursive_())for(;a.lastChild;)a.removeChild(a.lastChild);a.innerHTML=goog.html.SafeHtml.unwrapTrustedHTML(b)};
goog.dom.safe.setInnerHtml=function(a,b){if(goog.asserts.ENABLE_ASSERTS){var c=a.tagName.toUpperCase();if(goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[c])throw Error("goog.dom.safe.setInnerHtml cannot be used to set content of "+a.tagName+".");}goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(a,b)};goog.dom.safe.setOuterHtml=function(a,b){a.outerHTML=goog.html.SafeHtml.unwrapTrustedHTML(b)};
goog.dom.safe.setFormElementAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLFormElement(a).action=goog.html.SafeUrl.unwrapTrustedURL(b)};goog.dom.safe.setButtonFormAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLButtonElement(a).formAction=goog.html.SafeUrl.unwrapTrustedURL(b)};
goog.dom.safe.setInputFormAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLInputElement(a).formAction=goog.html.SafeUrl.unwrapTrustedURL(b)};goog.dom.safe.setStyle=function(a,b){a.style.cssText=goog.html.SafeStyle.unwrap(b)};goog.dom.safe.documentWrite=function(a,b){a.write(goog.html.SafeHtml.unwrapTrustedHTML(b))};
goog.dom.safe.setAnchorHref=function(a,b){goog.dom.asserts.assertIsHTMLAnchorElement(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.href=goog.html.SafeUrl.unwrapTrustedURL(b)};goog.dom.safe.setImageSrc=function(a,b){goog.dom.asserts.assertIsHTMLImageElement(a);if(!(b instanceof goog.html.SafeUrl)){var c=/^data:image\//i.test(b);b=goog.html.SafeUrl.sanitizeAssertUnchanged(b,c)}a.src=goog.html.SafeUrl.unwrapTrustedURL(b)};
goog.dom.safe.setAudioSrc=function(a,b){goog.dom.asserts.assertIsHTMLAudioElement(a);if(!(b instanceof goog.html.SafeUrl)){var c=/^data:audio\//i.test(b);b=goog.html.SafeUrl.sanitizeAssertUnchanged(b,c)}a.src=goog.html.SafeUrl.unwrapTrustedURL(b)};goog.dom.safe.setVideoSrc=function(a,b){goog.dom.asserts.assertIsHTMLVideoElement(a);if(!(b instanceof goog.html.SafeUrl)){var c=/^data:video\//i.test(b);b=goog.html.SafeUrl.sanitizeAssertUnchanged(b,c)}a.src=goog.html.SafeUrl.unwrapTrustedURL(b)};
goog.dom.safe.setEmbedSrc=function(a,b){goog.dom.asserts.assertIsHTMLEmbedElement(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b)};goog.dom.safe.setFrameSrc=function(a,b){goog.dom.asserts.assertIsHTMLFrameElement(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedURL(b)};goog.dom.safe.setIframeSrc=function(a,b){goog.dom.asserts.assertIsHTMLIFrameElement(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedURL(b)};
goog.dom.safe.setIframeSrcdoc=function(a,b){goog.dom.asserts.assertIsHTMLIFrameElement(a);a.srcdoc=goog.html.SafeHtml.unwrapTrustedHTML(b)};
goog.dom.safe.setLinkHrefAndRel=function(a,b,c){goog.dom.asserts.assertIsHTMLLinkElement(a);a.rel=c;goog.string.internal.caseInsensitiveContains(c,"stylesheet")?(goog.asserts.assert(b instanceof goog.html.TrustedResourceUrl,'URL must be TrustedResourceUrl because "rel" contains "stylesheet"'),a.href=goog.html.TrustedResourceUrl.unwrapTrustedURL(b)):a.href=b instanceof goog.html.TrustedResourceUrl?goog.html.TrustedResourceUrl.unwrapTrustedURL(b):b instanceof goog.html.SafeUrl?goog.html.SafeUrl.unwrapTrustedURL(b):
goog.html.SafeUrl.unwrapTrustedURL(goog.html.SafeUrl.sanitizeAssertUnchanged(b))};goog.dom.safe.setObjectData=function(a,b){goog.dom.asserts.assertIsHTMLObjectElement(a);a.data=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b)};goog.dom.safe.setScriptSrc=function(a,b){goog.dom.asserts.assertIsHTMLScriptElement(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b);(b=goog.getScriptNonce())&&a.setAttribute("nonce",b)};
goog.dom.safe.setScriptContent=function(a,b){goog.dom.asserts.assertIsHTMLScriptElement(a);a.text=goog.html.SafeScript.unwrapTrustedScript(b);(b=goog.getScriptNonce())&&a.setAttribute("nonce",b)};goog.dom.safe.setLocationHref=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.href=goog.html.SafeUrl.unwrapTrustedURL(b)};
goog.dom.safe.assignLocation=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.assign(goog.html.SafeUrl.unwrapTrustedURL(b))};goog.dom.safe.replaceLocation=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.replace(goog.html.SafeUrl.unwrapTrustedURL(b))};
goog.dom.safe.openInWindow=function(a,b,c,d,e){a=a instanceof goog.html.SafeUrl?a:goog.html.SafeUrl.sanitizeAssertUnchanged(a);return(b||goog.global).open(goog.html.SafeUrl.unwrapTrustedURL(a),c?goog.string.Const.unwrap(c):"",d,e)};goog.dom.safe.parseFromStringHtml=function(a,b){return goog.dom.safe.parseFromString(a,b,"text/html")};goog.dom.safe.parseFromString=function(a,b,c){return a.parseFromString(goog.html.SafeHtml.unwrapTrustedHTML(b),c)};
goog.dom.safe.createImageFromBlob=function(a){if(!/^image\/.*/g.test(a.type))throw Error("goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.");var b=goog.global.URL.createObjectURL(a);a=new goog.global.Image;a.onload=function(){goog.global.URL.revokeObjectURL(b)};goog.dom.safe.setImageSrc(a,goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Image blob URL."),b));return a};goog.string.DETECT_DOUBLE_ESCAPING=!1;goog.string.FORCE_NON_DOM_HTML_UNESCAPING=!1;goog.string.Unicode={NBSP:"\u00a0"};goog.string.startsWith=goog.string.internal.startsWith;goog.string.endsWith=goog.string.internal.endsWith;goog.string.caseInsensitiveStartsWith=goog.string.internal.caseInsensitiveStartsWith;goog.string.caseInsensitiveEndsWith=goog.string.internal.caseInsensitiveEndsWith;goog.string.caseInsensitiveEquals=goog.string.internal.caseInsensitiveEquals;
goog.string.subs=function(a,b){for(var c=a.split("%s"),d="",e=Array.prototype.slice.call(arguments,1);e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join("%s")};goog.string.collapseWhitespace=function(a){return a.replace(/[\s\xa0]+/g," ").replace(/^\s+|\s+$/g,"")};goog.string.isEmptyOrWhitespace=goog.string.internal.isEmptyOrWhitespace;goog.string.isEmptyString=function(a){return 0==a.length};goog.string.isEmpty=goog.string.isEmptyOrWhitespace;goog.string.isEmptyOrWhitespaceSafe=function(a){return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a))};
goog.string.isEmptySafe=goog.string.isEmptyOrWhitespaceSafe;goog.string.isBreakingWhitespace=function(a){return!/[^\t\n\r ]/.test(a)};goog.string.isAlpha=function(a){return!/[^a-zA-Z]/.test(a)};goog.string.isNumeric=function(a){return!/[^0-9]/.test(a)};goog.string.isAlphaNumeric=function(a){return!/[^a-zA-Z0-9]/.test(a)};goog.string.isSpace=function(a){return" "==a};goog.string.isUnicodeChar=function(a){return 1==a.length&&" "<=a&&"~">=a||"\u0080"<=a&&"\ufffd">=a};
goog.string.stripNewlines=function(a){return a.replace(/(\r\n|\r|\n)+/g," ")};goog.string.canonicalizeNewlines=function(a){return a.replace(/(\r\n|\r|\n)/g,"\n")};goog.string.normalizeWhitespace=function(a){return a.replace(/\xa0|\s/g," ")};goog.string.normalizeSpaces=function(a){return a.replace(/\xa0|[ \t]+/g," ")};goog.string.collapseBreakingSpaces=function(a){return a.replace(/[\t\r\n ]+/g," ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g,"")};goog.string.trim=goog.string.internal.trim;
goog.string.trimLeft=function(a){return a.replace(/^[\s\xa0]+/,"")};goog.string.trimRight=function(a){return a.replace(/[\s\xa0]+$/,"")};goog.string.caseInsensitiveCompare=goog.string.internal.caseInsensitiveCompare;
goog.string.numberAwareCompare_=function(a,b,c){if(a==b)return 0;if(!a)return-1;if(!b)return 1;for(var d=a.toLowerCase().match(c),e=b.toLowerCase().match(c),f=Math.min(d.length,e.length),g=0;g<f;g++){c=d[g];var h=e[g];if(c!=h)return a=parseInt(c,10),!isNaN(a)&&(b=parseInt(h,10),!isNaN(b)&&a-b)?a-b:c<h?-1:1}return d.length!=e.length?d.length-e.length:a<b?-1:1};goog.string.intAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\d+|\D+/g)};
goog.string.floatAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\d+|\.\d+|\D+/g)};goog.string.numerateCompare=goog.string.floatAwareCompare;goog.string.urlEncode=function(a){return encodeURIComponent(String(a))};goog.string.urlDecode=function(a){return decodeURIComponent(a.replace(/\+/g," "))};goog.string.newLineToBr=goog.string.internal.newLineToBr;
goog.string.htmlEscape=function(a,b){a=goog.string.internal.htmlEscape(a,b);goog.string.DETECT_DOUBLE_ESCAPING&&(a=a.replace(goog.string.E_RE_,"&#101;"));return a};goog.string.E_RE_=/e/g;goog.string.unescapeEntities=function(a){return goog.string.contains(a,"&")?!goog.string.FORCE_NON_DOM_HTML_UNESCAPING&&"document"in goog.global?goog.string.unescapeEntitiesUsingDom_(a):goog.string.unescapePureXmlEntities_(a):a};
goog.string.unescapeEntitiesWithDocument=function(a,b){return goog.string.contains(a,"&")?goog.string.unescapeEntitiesUsingDom_(a,b):a};
goog.string.unescapeEntitiesUsingDom_=function(a,b){var c={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"'};var d=b?b.createElement("div"):goog.global.document.createElement("div");return a.replace(goog.string.HTML_ENTITY_PATTERN_,function(a,b){var e=c[a];if(e)return e;"#"==b.charAt(0)&&(b=Number("0"+b.substr(1)),isNaN(b)||(e=String.fromCharCode(b)));e||(goog.dom.safe.setInnerHtml(d,goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Single HTML entity."),
a+" ")),e=d.firstChild.nodeValue.slice(0,-1));return c[a]=e})};goog.string.unescapePureXmlEntities_=function(a){return a.replace(/&([^;]+);/g,function(a,c){switch(c){case "amp":return"&";case "lt":return"<";case "gt":return">";case "quot":return'"';default:return"#"!=c.charAt(0)||(c=Number("0"+c.substr(1)),isNaN(c))?a:String.fromCharCode(c)}})};goog.string.HTML_ENTITY_PATTERN_=/&([^;\s<&]+);?/g;goog.string.whitespaceEscape=function(a,b){return goog.string.newLineToBr(a.replace(/  /g," &#160;"),b)};
goog.string.preserveSpaces=function(a){return a.replace(/(^|[\n ]) /g,"$1"+goog.string.Unicode.NBSP)};goog.string.stripQuotes=function(a,b){for(var c=b.length,d=0;d<c;d++){var e=1==c?b:b.charAt(d);if(a.charAt(0)==e&&a.charAt(a.length-1)==e)return a.substring(1,a.length-1)}return a};goog.string.truncate=function(a,b,c){c&&(a=goog.string.unescapeEntities(a));a.length>b&&(a=a.substring(0,b-3)+"...");c&&(a=goog.string.htmlEscape(a));return a};
goog.string.truncateMiddle=function(a,b,c,d){c&&(a=goog.string.unescapeEntities(a));if(d&&a.length>b){d>b&&(d=b);var e=a.length-d;a=a.substring(0,b-d)+"..."+a.substring(e)}else a.length>b&&(d=Math.floor(b/2),e=a.length-d,a=a.substring(0,d+b%2)+"..."+a.substring(e));c&&(a=goog.string.htmlEscape(a));return a};goog.string.specialEscapeChars_={"\x00":"\\0","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\x0B":"\\x0B",'"':'\\"',"\\":"\\\\","<":"\\u003C"};goog.string.jsEscapeCache_={"'":"\\'"};
goog.string.quote=function(a){a=String(a);for(var b=['"'],c=0;c<a.length;c++){var d=a.charAt(c),e=d.charCodeAt(0);b[c+1]=goog.string.specialEscapeChars_[d]||(31<e&&127>e?d:goog.string.escapeChar(d))}b.push('"');return b.join("")};goog.string.escapeString=function(a){for(var b=[],c=0;c<a.length;c++)b[c]=goog.string.escapeChar(a.charAt(c));return b.join("")};
goog.string.escapeChar=function(a){if(a in goog.string.jsEscapeCache_)return goog.string.jsEscapeCache_[a];if(a in goog.string.specialEscapeChars_)return goog.string.jsEscapeCache_[a]=goog.string.specialEscapeChars_[a];var b=a.charCodeAt(0);if(31<b&&127>b)var c=a;else{if(256>b){if(c="\\x",16>b||256<b)c+="0"}else c="\\u",4096>b&&(c+="0");c+=b.toString(16).toUpperCase()}return goog.string.jsEscapeCache_[a]=c};goog.string.contains=goog.string.internal.contains;goog.string.caseInsensitiveContains=goog.string.internal.caseInsensitiveContains;
goog.string.countOf=function(a,b){return a&&b?a.split(b).length-1:0};goog.string.removeAt=function(a,b,c){var d=a;0<=b&&b<a.length&&0<c&&(d=a.substr(0,b)+a.substr(b+c,a.length-b-c));return d};goog.string.remove=function(a,b){return a.replace(b,"")};goog.string.removeAll=function(a,b){b=new RegExp(goog.string.regExpEscape(b),"g");return a.replace(b,"")};goog.string.replaceAll=function(a,b,c){b=new RegExp(goog.string.regExpEscape(b),"g");return a.replace(b,c.replace(/\$/g,"$$$$"))};
goog.string.regExpEscape=function(a){return String(a).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")};goog.string.repeat=String.prototype.repeat?function(a,b){return a.repeat(b)}:function(a,b){return Array(b+1).join(a)};goog.string.padNumber=function(a,b,c){a=goog.isDef(c)?a.toFixed(c):String(a);c=a.indexOf(".");-1==c&&(c=a.length);return goog.string.repeat("0",Math.max(0,b-c))+a};goog.string.makeSafe=function(a){return null==a?"":String(a)};
goog.string.buildString=function(a){return Array.prototype.join.call(arguments,"")};goog.string.getRandomString=function(){return Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^goog.now()).toString(36)};goog.string.compareVersions=goog.string.internal.compareVersions;goog.string.hashCode=function(a){for(var b=0,c=0;c<a.length;++c)b=31*b+a.charCodeAt(c)>>>0;return b};goog.string.uniqueStringCounter_=2147483648*Math.random()|0;
goog.string.createUniqueString=function(){return"goog_"+goog.string.uniqueStringCounter_++};goog.string.toNumber=function(a){var b=Number(a);return 0==b&&goog.string.isEmptyOrWhitespace(a)?NaN:b};goog.string.isLowerCamelCase=function(a){return/^[a-z]+([A-Z][a-z]*)*$/.test(a)};goog.string.isUpperCamelCase=function(a){return/^([A-Z][a-z]*)+$/.test(a)};goog.string.toCamelCase=function(a){return String(a).replace(/\-([a-z])/g,function(a,c){return c.toUpperCase()})};
goog.string.toSelectorCase=function(a){return String(a).replace(/([A-Z])/g,"-$1").toLowerCase()};goog.string.toTitleCase=function(a,b){b=goog.isString(b)?goog.string.regExpEscape(b):"\\s";return a.replace(new RegExp("(^"+(b?"|["+b+"]+":"")+")([a-z])","g"),function(a,b,e){return b+e.toUpperCase()})};goog.string.capitalize=function(a){return String(a.charAt(0)).toUpperCase()+String(a.substr(1)).toLowerCase()};
goog.string.parseInt=function(a){isFinite(a)&&(a=String(a));return goog.isString(a)?/^\s*-?0x/i.test(a)?parseInt(a,16):parseInt(a,10):NaN};goog.string.splitLimit=function(a,b,c){a=a.split(b);for(var d=[];0<c&&a.length;)d.push(a.shift()),c--;a.length&&d.push(a.join(b));return d};goog.string.lastComponent=function(a,b){if(b)"string"==typeof b&&(b=[b]);else return a;for(var c=-1,d=0;d<b.length;d++)if(""!=b[d]){var e=a.lastIndexOf(b[d]);e>c&&(c=e)}return-1==c?a:a.slice(c+1)};
goog.string.editDistance=function(a,b){var c=[],d=[];if(a==b)return 0;if(!a.length||!b.length)return Math.max(a.length,b.length);for(var e=0;e<b.length+1;e++)c[e]=e;for(e=0;e<a.length;e++){d[0]=e+1;for(var f=0;f<b.length;f++)d[f+1]=Math.min(d[f]+1,c[f+1]+1,c[f]+Number(a[e]!=b[f]));for(f=0;f<c.length;f++)c[f]=d[f]}return d[b.length]};goog.labs.userAgent.platform={};goog.labs.userAgent.platform.isAndroid=function(){return goog.labs.userAgent.util.matchUserAgent("Android")};goog.labs.userAgent.platform.isIpod=function(){return goog.labs.userAgent.util.matchUserAgent("iPod")};goog.labs.userAgent.platform.isIphone=function(){return goog.labs.userAgent.util.matchUserAgent("iPhone")&&!goog.labs.userAgent.util.matchUserAgent("iPod")&&!goog.labs.userAgent.util.matchUserAgent("iPad")};goog.labs.userAgent.platform.isIpad=function(){return goog.labs.userAgent.util.matchUserAgent("iPad")};
goog.labs.userAgent.platform.isIos=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpad()||goog.labs.userAgent.platform.isIpod()};goog.labs.userAgent.platform.isMacintosh=function(){return goog.labs.userAgent.util.matchUserAgent("Macintosh")};goog.labs.userAgent.platform.isLinux=function(){return goog.labs.userAgent.util.matchUserAgent("Linux")};goog.labs.userAgent.platform.isWindows=function(){return goog.labs.userAgent.util.matchUserAgent("Windows")};
goog.labs.userAgent.platform.isChromeOS=function(){return goog.labs.userAgent.util.matchUserAgent("CrOS")};goog.labs.userAgent.platform.isChromecast=function(){return goog.labs.userAgent.util.matchUserAgent("CrKey")};goog.labs.userAgent.platform.isKaiOS=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase("KaiOS")};goog.labs.userAgent.platform.isGo2Phone=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase("GAFP")};
goog.labs.userAgent.platform.getVersion=function(){var a=goog.labs.userAgent.util.getUserAgent(),b="";goog.labs.userAgent.platform.isWindows()?(b=/Windows (?:NT|Phone) ([0-9.]+)/,b=(a=b.exec(a))?a[1]:"0.0"):goog.labs.userAgent.platform.isIos()?(b=/(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/,b=(a=b.exec(a))&&a[1].replace(/_/g,".")):goog.labs.userAgent.platform.isMacintosh()?(b=/Mac OS X ([0-9_.]+)/,b=(a=b.exec(a))?a[1].replace(/_/g,"."):"10"):goog.labs.userAgent.platform.isKaiOS()?(b=/(?:KaiOS)\/(\S+)/i,
b=(a=b.exec(a))&&a[1]):goog.labs.userAgent.platform.isAndroid()?(b=/Android\s+([^\);]+)(\)|;)/,b=(a=b.exec(a))&&a[1]):goog.labs.userAgent.platform.isChromeOS()&&(b=/(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/,b=(a=b.exec(a))&&a[1]);return b||""};goog.labs.userAgent.platform.isVersionOrHigher=function(a){return 0<=goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(),a)};goog.reflect={};goog.reflect.object=function(a,b){return b};goog.reflect.objectProperty=function(a,b){return a};goog.reflect.sinkValue=function(a){goog.reflect.sinkValue[" "](a);return a};goog.reflect.sinkValue[" "]=goog.nullFunction;goog.reflect.canAccessProperty=function(a,b){try{return goog.reflect.sinkValue(a[b]),!0}catch(c){}return!1};goog.reflect.cache=function(a,b,c,d){d=d?d(b):b;return Object.prototype.hasOwnProperty.call(a,d)?a[d]:a[d]=c(b)};goog.labs.userAgent.engine={};goog.labs.userAgent.engine.isPresto=function(){return goog.labs.userAgent.util.matchUserAgent("Presto")};goog.labs.userAgent.engine.isTrident=function(){return goog.labs.userAgent.util.matchUserAgent("Trident")||goog.labs.userAgent.util.matchUserAgent("MSIE")};goog.labs.userAgent.engine.isEdge=function(){return goog.labs.userAgent.util.matchUserAgent("Edge")};
goog.labs.userAgent.engine.isWebKit=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit")&&!goog.labs.userAgent.engine.isEdge()};goog.labs.userAgent.engine.isGecko=function(){return goog.labs.userAgent.util.matchUserAgent("Gecko")&&!goog.labs.userAgent.engine.isWebKit()&&!goog.labs.userAgent.engine.isTrident()&&!goog.labs.userAgent.engine.isEdge()};
goog.labs.userAgent.engine.getVersion=function(){var a=goog.labs.userAgent.util.getUserAgent();if(a){a=goog.labs.userAgent.util.extractVersionTuples(a);var b=goog.labs.userAgent.engine.getEngineTuple_(a);if(b)return"Gecko"==b[0]?goog.labs.userAgent.engine.getVersionForKey_(a,"Firefox"):b[1];a=a[0];var c;if(a&&(c=a[2])&&(c=/Trident\/([^\s;]+)/.exec(c)))return c[1]}return""};
goog.labs.userAgent.engine.getEngineTuple_=function(a){if(!goog.labs.userAgent.engine.isEdge())return a[1];for(var b=0;b<a.length;b++){var c=a[b];if("Edge"==c[0])return c}};goog.labs.userAgent.engine.isVersionOrHigher=function(a){return 0<=goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(),a)};goog.labs.userAgent.engine.getVersionForKey_=function(a,b){return(a=goog.array.find(a,function(a){return b==a[0]}))&&a[1]||""};goog.userAgent={};goog.userAgent.ASSUME_IE=!1;goog.userAgent.ASSUME_EDGE=!1;goog.userAgent.ASSUME_GECKO=!1;goog.userAgent.ASSUME_WEBKIT=!1;goog.userAgent.ASSUME_MOBILE_WEBKIT=!1;goog.userAgent.ASSUME_OPERA=!1;goog.userAgent.ASSUME_ANY_VERSION=!1;goog.userAgent.BROWSER_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_GECKO||goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_OPERA;goog.userAgent.getUserAgentString=function(){return goog.labs.userAgent.util.getUserAgent()};
goog.userAgent.getNavigatorTyped=function(){return goog.global.navigator||null};goog.userAgent.getNavigator=function(){return goog.userAgent.getNavigatorTyped()};goog.userAgent.OPERA=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_OPERA:goog.labs.userAgent.browser.isOpera();goog.userAgent.IE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_IE:goog.labs.userAgent.browser.isIE();goog.userAgent.EDGE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_EDGE:goog.labs.userAgent.engine.isEdge();
goog.userAgent.EDGE_OR_IE=goog.userAgent.EDGE||goog.userAgent.IE;goog.userAgent.GECKO=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_GECKO:goog.labs.userAgent.engine.isGecko();goog.userAgent.WEBKIT=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_MOBILE_WEBKIT:goog.labs.userAgent.engine.isWebKit();goog.userAgent.isMobile_=function(){return goog.userAgent.WEBKIT&&goog.labs.userAgent.util.matchUserAgent("Mobile")};
goog.userAgent.MOBILE=goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.isMobile_();goog.userAgent.SAFARI=goog.userAgent.WEBKIT;goog.userAgent.determinePlatform_=function(){var a=goog.userAgent.getNavigatorTyped();return a&&a.platform||""};goog.userAgent.PLATFORM=goog.userAgent.determinePlatform_();goog.userAgent.ASSUME_MAC=!1;goog.userAgent.ASSUME_WINDOWS=!1;goog.userAgent.ASSUME_LINUX=!1;goog.userAgent.ASSUME_X11=!1;goog.userAgent.ASSUME_ANDROID=!1;goog.userAgent.ASSUME_IPHONE=!1;
goog.userAgent.ASSUME_IPAD=!1;goog.userAgent.ASSUME_IPOD=!1;goog.userAgent.ASSUME_KAIOS=!1;goog.userAgent.ASSUME_GO2PHONE=!1;goog.userAgent.PLATFORM_KNOWN_=goog.userAgent.ASSUME_MAC||goog.userAgent.ASSUME_WINDOWS||goog.userAgent.ASSUME_LINUX||goog.userAgent.ASSUME_X11||goog.userAgent.ASSUME_ANDROID||goog.userAgent.ASSUME_IPHONE||goog.userAgent.ASSUME_IPAD||goog.userAgent.ASSUME_IPOD;goog.userAgent.MAC=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_MAC:goog.labs.userAgent.platform.isMacintosh();
goog.userAgent.WINDOWS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_WINDOWS:goog.labs.userAgent.platform.isWindows();goog.userAgent.isLegacyLinux_=function(){return goog.labs.userAgent.platform.isLinux()||goog.labs.userAgent.platform.isChromeOS()};goog.userAgent.LINUX=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_LINUX:goog.userAgent.isLegacyLinux_();goog.userAgent.isX11_=function(){var a=goog.userAgent.getNavigatorTyped();return!!a&&goog.string.contains(a.appVersion||"","X11")};
goog.userAgent.X11=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_X11:goog.userAgent.isX11_();goog.userAgent.ANDROID=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_ANDROID:goog.labs.userAgent.platform.isAndroid();goog.userAgent.IPHONE=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPHONE:goog.labs.userAgent.platform.isIphone();goog.userAgent.IPAD=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad();
goog.userAgent.IPOD=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPOD:goog.labs.userAgent.platform.isIpod();goog.userAgent.IOS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPHONE||goog.userAgent.ASSUME_IPAD||goog.userAgent.ASSUME_IPOD:goog.labs.userAgent.platform.isIos();goog.userAgent.KAIOS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_KAIOS:goog.labs.userAgent.platform.isKaiOS();goog.userAgent.GO2PHONE=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_GO2PHONE:goog.labs.userAgent.platform.isGo2Phone();
goog.userAgent.determineVersion_=function(){var a="",b=goog.userAgent.getVersionRegexResult_();b&&(a=b?b[1]:"");return goog.userAgent.IE&&(b=goog.userAgent.getDocumentMode_(),null!=b&&b>parseFloat(a))?String(b):a};
goog.userAgent.getVersionRegexResult_=function(){var a=goog.userAgent.getUserAgentString();if(goog.userAgent.GECKO)return/rv:([^\);]+)(\)|;)/.exec(a);if(goog.userAgent.EDGE)return/Edge\/([\d\.]+)/.exec(a);if(goog.userAgent.IE)return/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);if(goog.userAgent.WEBKIT)return/WebKit\/(\S+)/.exec(a);if(goog.userAgent.OPERA)return/(?:Version)[ \/]?(\S+)/.exec(a)};goog.userAgent.getDocumentMode_=function(){var a=goog.global.document;return a?a.documentMode:void 0};
goog.userAgent.VERSION=goog.userAgent.determineVersion_();goog.userAgent.compare=function(a,b){return goog.string.compareVersions(a,b)};goog.userAgent.isVersionOrHigherCache_={};goog.userAgent.isVersionOrHigher=function(a){return goog.userAgent.ASSUME_ANY_VERSION||goog.reflect.cache(goog.userAgent.isVersionOrHigherCache_,a,function(){return 0<=goog.string.compareVersions(goog.userAgent.VERSION,a)})};goog.userAgent.isVersion=goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher=function(a){return Number(goog.userAgent.DOCUMENT_MODE)>=a};goog.userAgent.isDocumentMode=goog.userAgent.isDocumentModeOrHigher;goog.userAgent.DOCUMENT_MODE=function(){if(goog.global.document&&goog.userAgent.IE)return goog.userAgent.getDocumentMode_()}();goog.userAgent.product={};goog.userAgent.product.ASSUME_FIREFOX=!1;goog.userAgent.product.ASSUME_IPHONE=!1;goog.userAgent.product.ASSUME_IPAD=!1;goog.userAgent.product.ASSUME_ANDROID=!1;goog.userAgent.product.ASSUME_CHROME=!1;goog.userAgent.product.ASSUME_SAFARI=!1;
goog.userAgent.product.PRODUCT_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_OPERA||goog.userAgent.product.ASSUME_FIREFOX||goog.userAgent.product.ASSUME_IPHONE||goog.userAgent.product.ASSUME_IPAD||goog.userAgent.product.ASSUME_ANDROID||goog.userAgent.product.ASSUME_CHROME||goog.userAgent.product.ASSUME_SAFARI;goog.userAgent.product.OPERA=goog.userAgent.OPERA;goog.userAgent.product.IE=goog.userAgent.IE;goog.userAgent.product.EDGE=goog.userAgent.EDGE;
goog.userAgent.product.FIREFOX=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_FIREFOX:goog.labs.userAgent.browser.isFirefox();goog.userAgent.product.isIphoneOrIpod_=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpod()};goog.userAgent.product.IPHONE=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPHONE:goog.userAgent.product.isIphoneOrIpod_();
goog.userAgent.product.IPAD=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad();goog.userAgent.product.ANDROID=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_ANDROID:goog.labs.userAgent.browser.isAndroidBrowser();goog.userAgent.product.CHROME=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_CHROME:goog.labs.userAgent.browser.isChrome();
goog.userAgent.product.isSafariDesktop_=function(){return goog.labs.userAgent.browser.isSafari()&&!goog.labs.userAgent.platform.isIos()};goog.userAgent.product.SAFARI=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_SAFARI:goog.userAgent.product.isSafariDesktop_();goog.crypt.base64={};goog.crypt.base64.DEFAULT_ALPHABET_COMMON_="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";goog.crypt.base64.ENCODED_VALS=goog.crypt.base64.DEFAULT_ALPHABET_COMMON_+"+/=";goog.crypt.base64.ENCODED_VALS_WEBSAFE=goog.crypt.base64.DEFAULT_ALPHABET_COMMON_+"-_.";goog.crypt.base64.Alphabet={DEFAULT:0,NO_PADDING:1,WEBSAFE:2,WEBSAFE_DOT_PADDING:3,WEBSAFE_NO_PADDING:4};goog.crypt.base64.paddingChars_="=.";
goog.crypt.base64.isPadding_=function(a){return goog.string.contains(goog.crypt.base64.paddingChars_,a)};goog.crypt.base64.byteToCharMaps_={};goog.crypt.base64.charToByteMap_=null;goog.crypt.base64.ASSUME_NATIVE_SUPPORT_=goog.userAgent.GECKO||goog.userAgent.WEBKIT&&!goog.userAgent.product.SAFARI||goog.userAgent.OPERA;goog.crypt.base64.HAS_NATIVE_ENCODE_=goog.crypt.base64.ASSUME_NATIVE_SUPPORT_||"function"==typeof goog.global.btoa;
goog.crypt.base64.HAS_NATIVE_DECODE_=goog.crypt.base64.ASSUME_NATIVE_SUPPORT_||!goog.userAgent.product.SAFARI&&!goog.userAgent.IE&&"function"==typeof goog.global.atob;
goog.crypt.base64.encodeByteArray=function(a,b){goog.asserts.assert(goog.isArrayLike(a),"encodeByteArray takes an array as a parameter");void 0===b&&(b=goog.crypt.base64.Alphabet.DEFAULT);goog.crypt.base64.init_();b=goog.crypt.base64.byteToCharMaps_[b];for(var c=[],d=0;d<a.length;d+=3){var e=a[d],f=d+1<a.length,g=f?a[d+1]:0,h=d+2<a.length,k=h?a[d+2]:0,l=e>>2;e=(e&3)<<4|g>>4;g=(g&15)<<2|k>>6;k&=63;h||(k=64,f||(g=64));c.push(b[l],b[e],b[g]||"",b[k]||"")}return c.join("")};
goog.crypt.base64.encodeString=function(a,b){return goog.crypt.base64.HAS_NATIVE_ENCODE_&&!b?goog.global.btoa(a):goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(a),b)};goog.crypt.base64.decodeString=function(a,b){if(goog.crypt.base64.HAS_NATIVE_DECODE_&&!b)return goog.global.atob(a);var c="";goog.crypt.base64.decodeStringInternal_(a,function(a){c+=String.fromCharCode(a)});return c};
goog.crypt.base64.decodeStringToByteArray=function(a,b){var c=[];goog.crypt.base64.decodeStringInternal_(a,function(a){c.push(a)});return c};
goog.crypt.base64.decodeStringToUint8Array=function(a){goog.asserts.assert(!goog.userAgent.IE||goog.userAgent.isVersionOrHigher("10"),"Browser does not support typed arrays");var b=a.length,c=3*b/4;c%3?c=Math.floor(c):goog.crypt.base64.isPadding_(a[b-1])&&(c=goog.crypt.base64.isPadding_(a[b-2])?c-2:c-1);var d=new Uint8Array(c),e=0;goog.crypt.base64.decodeStringInternal_(a,function(a){d[e++]=a});return d.subarray(0,e)};
goog.crypt.base64.decodeStringInternal_=function(a,b){function c(b){for(;d<a.length;){var c=a.charAt(d++),e=goog.crypt.base64.charToByteMap_[c];if(null!=e)return e;if(!goog.string.isEmptyOrWhitespace(c))throw Error("Unknown base64 encoding at char: "+c);}return b}goog.crypt.base64.init_();for(var d=0;;){var e=c(-1),f=c(0),g=c(64),h=c(64);if(64===h&&-1===e)break;b(e<<2|f>>4);64!=g&&(b(f<<4&240|g>>2),64!=h&&b(g<<6&192|h))}};
goog.crypt.base64.init_=function(){if(!goog.crypt.base64.charToByteMap_){goog.crypt.base64.charToByteMap_={};for(var a=goog.crypt.base64.DEFAULT_ALPHABET_COMMON_.split(""),b=["+/=","+/","-_=","-_.","-_"],c=0;5>c;c++){var d=a.concat(b[c].split(""));goog.crypt.base64.byteToCharMaps_[c]=d;for(var e=0;e<d.length;e++){var f=d[e],g=goog.crypt.base64.charToByteMap_[f];void 0===g?goog.crypt.base64.charToByteMap_[f]=e:goog.asserts.assert(g===e)}}}};jspb.utils={};jspb.utils.split64Low=0;jspb.utils.split64High=0;jspb.utils.splitUint64=function(a){var b=a>>>0;a=Math.floor((a-b)/jspb.BinaryConstants.TWO_TO_32)>>>0;jspb.utils.split64Low=b;jspb.utils.split64High=a};jspb.utils.splitInt64=function(a){var b=0>a;a=Math.abs(a);var c=a>>>0;a=Math.floor((a-c)/jspb.BinaryConstants.TWO_TO_32);a>>>=0;b&&(a=~a>>>0,c=(~c>>>0)+1,4294967295<c&&(c=0,a++,4294967295<a&&(a=0)));jspb.utils.split64Low=c;jspb.utils.split64High=a};
jspb.utils.splitZigzag64=function(a){var b=0>a;a=2*Math.abs(a);jspb.utils.splitUint64(a);a=jspb.utils.split64Low;var c=jspb.utils.split64High;b&&(0==a?0==c?c=a=4294967295:(c--,a=4294967295):a--);jspb.utils.split64Low=a;jspb.utils.split64High=c};
jspb.utils.splitFloat32=function(a){var b=0>a?1:0;a=b?-a:a;if(0===a)0<1/a?(jspb.utils.split64High=0,jspb.utils.split64Low=0):(jspb.utils.split64High=0,jspb.utils.split64Low=2147483648);else if(isNaN(a))jspb.utils.split64High=0,jspb.utils.split64Low=2147483647;else if(a>jspb.BinaryConstants.FLOAT32_MAX)jspb.utils.split64High=0,jspb.utils.split64Low=(b<<31|2139095040)>>>0;else if(a<jspb.BinaryConstants.FLOAT32_MIN)a=Math.round(a/Math.pow(2,-149)),jspb.utils.split64High=0,jspb.utils.split64Low=(b<<31|
a)>>>0;else{var c=Math.floor(Math.log(a)/Math.LN2);a*=Math.pow(2,-c);a=Math.round(a*jspb.BinaryConstants.TWO_TO_23)&8388607;jspb.utils.split64High=0;jspb.utils.split64Low=(b<<31|c+127<<23|a)>>>0}};
jspb.utils.splitFloat64=function(a){var b=0>a?1:0;a=b?-a:a;if(0===a)jspb.utils.split64High=0<1/a?0:2147483648,jspb.utils.split64Low=0;else if(isNaN(a))jspb.utils.split64High=2147483647,jspb.utils.split64Low=4294967295;else if(a>jspb.BinaryConstants.FLOAT64_MAX)jspb.utils.split64High=(b<<31|2146435072)>>>0,jspb.utils.split64Low=0;else if(a<jspb.BinaryConstants.FLOAT64_MIN){var c=a/Math.pow(2,-1074);a=c/jspb.BinaryConstants.TWO_TO_32;jspb.utils.split64High=(b<<31|a)>>>0;jspb.utils.split64Low=c>>>0}else{c=
a;var d=0;if(2<=c)for(;2<=c&&1023>d;)d++,c/=2;else for(;1>c&&-1022<d;)c*=2,d--;c=a*Math.pow(2,-d);a=c*jspb.BinaryConstants.TWO_TO_20&1048575;c=c*jspb.BinaryConstants.TWO_TO_52>>>0;jspb.utils.split64High=(b<<31|d+1023<<20|a)>>>0;jspb.utils.split64Low=c}};
jspb.utils.splitHash64=function(a){var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=a.charCodeAt(4),g=a.charCodeAt(5),h=a.charCodeAt(6);a=a.charCodeAt(7);jspb.utils.split64Low=b+(c<<8)+(d<<16)+(e<<24)>>>0;jspb.utils.split64High=f+(g<<8)+(h<<16)+(a<<24)>>>0};jspb.utils.joinUint64=function(a,b){return b*jspb.BinaryConstants.TWO_TO_32+(a>>>0)};
jspb.utils.joinInt64=function(a,b){var c=b&2147483648;c&&(a=~a+1>>>0,b=~b>>>0,0==a&&(b=b+1>>>0));a=jspb.utils.joinUint64(a,b);return c?-a:a};jspb.utils.toZigzag64=function(a,b,c){var d=b>>31;return c(a<<1^d,(b<<1|a>>>31)^d)};jspb.utils.joinZigzag64=function(a,b){return jspb.utils.fromZigzag64(a,b,jspb.utils.joinInt64)};jspb.utils.fromZigzag64=function(a,b,c){var d=-(a&1);return c((a>>>1|b<<31)^d,b>>>1^d)};
jspb.utils.joinFloat32=function(a,b){b=2*(a>>31)+1;var c=a>>>23&255;a&=8388607;return 255==c?a?NaN:Infinity*b:0==c?b*Math.pow(2,-149)*a:b*Math.pow(2,c-150)*(a+Math.pow(2,23))};jspb.utils.joinFloat64=function(a,b){var c=2*(b>>31)+1,d=b>>>20&2047;a=jspb.BinaryConstants.TWO_TO_32*(b&1048575)+a;return 2047==d?a?NaN:Infinity*c:0==d?c*Math.pow(2,-1074)*a:c*Math.pow(2,d-1075)*(a+jspb.BinaryConstants.TWO_TO_52)};
jspb.utils.joinHash64=function(a,b){return String.fromCharCode(a>>>0&255,a>>>8&255,a>>>16&255,a>>>24&255,b>>>0&255,b>>>8&255,b>>>16&255,b>>>24&255)};jspb.utils.DIGITS="0123456789abcdef".split("");jspb.utils.ZERO_CHAR_CODE_=48;jspb.utils.A_CHAR_CODE_=97;
jspb.utils.joinUnsignedDecimalString=function(a,b){function c(a,b){a=a?String(a):"";return b?"0000000".slice(a.length)+a:a}if(2097151>=b)return""+(jspb.BinaryConstants.TWO_TO_32*b+a);var d=(a>>>24|b<<8)>>>0&16777215;b=b>>16&65535;a=(a&16777215)+6777216*d+6710656*b;d+=8147497*b;b*=2;1E7<=a&&(d+=Math.floor(a/1E7),a%=1E7);1E7<=d&&(b+=Math.floor(d/1E7),d%=1E7);return c(b,0)+c(d,b)+c(a,1)};
jspb.utils.joinSignedDecimalString=function(a,b){var c=b&2147483648;c&&(a=~a+1>>>0,b=~b+(0==a?1:0)>>>0);a=jspb.utils.joinUnsignedDecimalString(a,b);return c?"-"+a:a};jspb.utils.hash64ToDecimalString=function(a,b){jspb.utils.splitHash64(a);a=jspb.utils.split64Low;var c=jspb.utils.split64High;return b?jspb.utils.joinSignedDecimalString(a,c):jspb.utils.joinUnsignedDecimalString(a,c)};
jspb.utils.hash64ArrayToDecimalStrings=function(a,b){for(var c=Array(a.length),d=0;d<a.length;d++)c[d]=jspb.utils.hash64ToDecimalString(a[d],b);return c};
jspb.utils.decimalStringToHash64=function(a){function b(a,b){for(var c=0;8>c&&(1!==a||0<b);c++)b=a*e[c]+b,e[c]=b&255,b>>>=8}function c(){for(var a=0;8>a;a++)e[a]=~e[a]&255}goog.asserts.assert(0<a.length);var d=!1;"-"===a[0]&&(d=!0,a=a.slice(1));for(var e=[0,0,0,0,0,0,0,0],f=0;f<a.length;f++)b(10,a.charCodeAt(f)-jspb.utils.ZERO_CHAR_CODE_);d&&(c(),b(1,1));return goog.crypt.byteArrayToString(e)};jspb.utils.splitDecimalString=function(a){jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(a))};
jspb.utils.toHexDigit_=function(a){return String.fromCharCode(10>a?jspb.utils.ZERO_CHAR_CODE_+a:jspb.utils.A_CHAR_CODE_-10+a)};jspb.utils.fromHexCharCode_=function(a){return a>=jspb.utils.A_CHAR_CODE_?a-jspb.utils.A_CHAR_CODE_+10:a-jspb.utils.ZERO_CHAR_CODE_};jspb.utils.hash64ToHexString=function(a){var b=Array(18);b[0]="0";b[1]="x";for(var c=0;8>c;c++){var d=a.charCodeAt(7-c);b[2*c+2]=jspb.utils.toHexDigit_(d>>4);b[2*c+3]=jspb.utils.toHexDigit_(d&15)}return b.join("")};
jspb.utils.hexStringToHash64=function(a){a=a.toLowerCase();goog.asserts.assert(18==a.length);goog.asserts.assert("0"==a[0]);goog.asserts.assert("x"==a[1]);for(var b="",c=0;8>c;c++){var d=jspb.utils.fromHexCharCode_(a.charCodeAt(2*c+2)),e=jspb.utils.fromHexCharCode_(a.charCodeAt(2*c+3));b=String.fromCharCode(16*d+e)+b}return b};
jspb.utils.hash64ToNumber=function(a,b){jspb.utils.splitHash64(a);a=jspb.utils.split64Low;var c=jspb.utils.split64High;return b?jspb.utils.joinInt64(a,c):jspb.utils.joinUint64(a,c)};jspb.utils.numberToHash64=function(a){jspb.utils.splitInt64(a);return jspb.utils.joinHash64(jspb.utils.split64Low,jspb.utils.split64High)};jspb.utils.countVarints=function(a,b,c){for(var d=0,e=b;e<c;e++)d+=a[e]>>7;return c-b-d};
jspb.utils.countVarintFields=function(a,b,c,d){var e=0;d=8*d+jspb.BinaryConstants.WireType.VARINT;if(128>d)for(;b<c&&a[b++]==d;)for(e++;;){var f=a[b++];if(0==(f&128))break}else for(;b<c;){for(f=d;128<f;){if(a[b]!=(f&127|128))return e;b++;f>>=7}if(a[b++]!=f)break;for(e++;f=a[b++],0!=(f&128););}return e};jspb.utils.countFixedFields_=function(a,b,c,d,e){var f=0;if(128>d)for(;b<c&&a[b++]==d;)f++,b+=e;else for(;b<c;){for(var g=d;128<g;){if(a[b++]!=(g&127|128))return f;g>>=7}if(a[b++]!=g)break;f++;b+=e}return f};
jspb.utils.countFixed32Fields=function(a,b,c,d){return jspb.utils.countFixedFields_(a,b,c,8*d+jspb.BinaryConstants.WireType.FIXED32,4)};jspb.utils.countFixed64Fields=function(a,b,c,d){return jspb.utils.countFixedFields_(a,b,c,8*d+jspb.BinaryConstants.WireType.FIXED64,8)};
jspb.utils.countDelimitedFields=function(a,b,c,d){var e=0;for(d=8*d+jspb.BinaryConstants.WireType.DELIMITED;b<c;){for(var f=d;128<f;){if(a[b++]!=(f&127|128))return e;f>>=7}if(a[b++]!=f)break;e++;for(var g=0,h=1;f=a[b++],g+=(f&127)*h,h*=128,0!=(f&128););b+=g}return e};jspb.utils.debugBytesToTextFormat=function(a){var b='"';if(a){a=jspb.utils.byteSourceToUint8Array(a);for(var c=0;c<a.length;c++)b+="\\x",16>a[c]&&(b+="0"),b+=a[c].toString(16)}return b+'"'};
jspb.utils.debugScalarToTextFormat=function(a){return"string"===typeof a?goog.string.quote(a):a.toString()};jspb.utils.stringToByteArray=function(a){for(var b=new Uint8Array(a.length),c=0;c<a.length;c++){var d=a.charCodeAt(c);if(255<d)throw Error("Conversion error: string contains codepoint outside of byte range");b[c]=d}return b};
jspb.utils.byteSourceToUint8Array=function(a){if(a.constructor===Uint8Array)return a;if(a.constructor===ArrayBuffer||"undefined"!=typeof Buffer&&a.constructor===Buffer||a.constructor===Array)return new Uint8Array(a);if(a.constructor===String)return goog.crypt.base64.decodeStringToUint8Array(a);goog.asserts.fail("Type not convertible to Uint8Array.");return new Uint8Array(0)};jspb.BinaryDecoder=function(a,b,c){this.bytes_=null;this.cursor_=this.end_=this.start_=0;this.error_=!1;a&&this.setBlock(a,b,c)};jspb.BinaryDecoder.instanceCache_=[];jspb.BinaryDecoder.alloc=function(a,b,c){if(jspb.BinaryDecoder.instanceCache_.length){var d=jspb.BinaryDecoder.instanceCache_.pop();a&&d.setBlock(a,b,c);return d}return new jspb.BinaryDecoder(a,b,c)};jspb.BinaryDecoder.prototype.free=function(){this.clear();100>jspb.BinaryDecoder.instanceCache_.length&&jspb.BinaryDecoder.instanceCache_.push(this)};
jspb.BinaryDecoder.prototype.clone=function(){return jspb.BinaryDecoder.alloc(this.bytes_,this.start_,this.end_-this.start_)};jspb.BinaryDecoder.prototype.clear=function(){this.bytes_=null;this.cursor_=this.end_=this.start_=0;this.error_=!1};jspb.BinaryDecoder.prototype.getBuffer=function(){return this.bytes_};
jspb.BinaryDecoder.prototype.setBlock=function(a,b,c){this.bytes_=jspb.utils.byteSourceToUint8Array(a);this.start_=void 0!==b?b:0;this.end_=void 0!==c?this.start_+c:this.bytes_.length;this.cursor_=this.start_};jspb.BinaryDecoder.prototype.getEnd=function(){return this.end_};jspb.BinaryDecoder.prototype.setEnd=function(a){this.end_=a};jspb.BinaryDecoder.prototype.reset=function(){this.cursor_=this.start_};jspb.BinaryDecoder.prototype.getCursor=function(){return this.cursor_};
jspb.BinaryDecoder.prototype.setCursor=function(a){this.cursor_=a};jspb.BinaryDecoder.prototype.advance=function(a){this.cursor_+=a;goog.asserts.assert(this.cursor_<=this.end_)};jspb.BinaryDecoder.prototype.atEnd=function(){return this.cursor_==this.end_};jspb.BinaryDecoder.prototype.pastEnd=function(){return this.cursor_>this.end_};jspb.BinaryDecoder.prototype.getError=function(){return this.error_||0>this.cursor_||this.cursor_>this.end_};
jspb.BinaryDecoder.prototype.readSplitVarint64=function(a){for(var b=128,c=0,d=0,e=0;4>e&&128<=b;e++)b=this.bytes_[this.cursor_++],c|=(b&127)<<7*e;128<=b&&(b=this.bytes_[this.cursor_++],c|=(b&127)<<28,d|=(b&127)>>4);if(128<=b)for(e=0;5>e&&128<=b;e++)b=this.bytes_[this.cursor_++],d|=(b&127)<<7*e+3;if(128>b)return a(c>>>0,d>>>0);goog.asserts.fail("Failed to read varint, encoding is invalid.");this.error_=!0};
jspb.BinaryDecoder.prototype.readSplitZigzagVarint64=function(a){return this.readSplitVarint64(function(b,c){return jspb.utils.fromZigzag64(b,c,a)})};jspb.BinaryDecoder.prototype.readSplitFixed64=function(a){var b=this.bytes_,c=this.cursor_;this.cursor_+=8;for(var d=0,e=0,f=c+7;f>=c;f--)d=d<<8|b[f],e=e<<8|b[f+4];return a(d,e)};jspb.BinaryDecoder.prototype.skipVarint=function(){for(;this.bytes_[this.cursor_]&128;)this.cursor_++;this.cursor_++};
jspb.BinaryDecoder.prototype.unskipVarint=function(a){for(;128<a;)this.cursor_--,a>>>=7;this.cursor_--};
jspb.BinaryDecoder.prototype.readUnsignedVarint32=function(){var a=this.bytes_;var b=a[this.cursor_+0];var c=b&127;if(128>b)return this.cursor_+=1,goog.asserts.assert(this.cursor_<=this.end_),c;b=a[this.cursor_+1];c|=(b&127)<<7;if(128>b)return this.cursor_+=2,goog.asserts.assert(this.cursor_<=this.end_),c;b=a[this.cursor_+2];c|=(b&127)<<14;if(128>b)return this.cursor_+=3,goog.asserts.assert(this.cursor_<=this.end_),c;b=a[this.cursor_+3];c|=(b&127)<<21;if(128>b)return this.cursor_+=4,goog.asserts.assert(this.cursor_<=
this.end_),c;b=a[this.cursor_+4];c|=(b&15)<<28;if(128>b)return this.cursor_+=5,goog.asserts.assert(this.cursor_<=this.end_),c>>>0;this.cursor_+=5;128<=a[this.cursor_++]&&128<=a[this.cursor_++]&&128<=a[this.cursor_++]&&128<=a[this.cursor_++]&&128<=a[this.cursor_++]&&goog.asserts.assert(!1);goog.asserts.assert(this.cursor_<=this.end_);return c};jspb.BinaryDecoder.prototype.readSignedVarint32=jspb.BinaryDecoder.prototype.readUnsignedVarint32;jspb.BinaryDecoder.prototype.readUnsignedVarint32String=function(){return this.readUnsignedVarint32().toString()};
jspb.BinaryDecoder.prototype.readSignedVarint32String=function(){return this.readSignedVarint32().toString()};jspb.BinaryDecoder.prototype.readZigzagVarint32=function(){var a=this.readUnsignedVarint32();return a>>>1^-(a&1)};jspb.BinaryDecoder.prototype.readUnsignedVarint64=function(){return this.readSplitVarint64(jspb.utils.joinUint64)};jspb.BinaryDecoder.prototype.readUnsignedVarint64String=function(){return this.readSplitVarint64(jspb.utils.joinUnsignedDecimalString)};
jspb.BinaryDecoder.prototype.readSignedVarint64=function(){return this.readSplitVarint64(jspb.utils.joinInt64)};jspb.BinaryDecoder.prototype.readSignedVarint64String=function(){return this.readSplitVarint64(jspb.utils.joinSignedDecimalString)};jspb.BinaryDecoder.prototype.readZigzagVarint64=function(){return this.readSplitVarint64(jspb.utils.joinZigzag64)};jspb.BinaryDecoder.prototype.readZigzagVarintHash64=function(){return this.readSplitZigzagVarint64(jspb.utils.joinHash64)};
jspb.BinaryDecoder.prototype.readZigzagVarint64String=function(){return this.readSplitZigzagVarint64(jspb.utils.joinSignedDecimalString)};jspb.BinaryDecoder.prototype.readUint8=function(){var a=this.bytes_[this.cursor_+0];this.cursor_+=1;goog.asserts.assert(this.cursor_<=this.end_);return a};jspb.BinaryDecoder.prototype.readUint16=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1];this.cursor_+=2;goog.asserts.assert(this.cursor_<=this.end_);return a<<0|b<<8};
jspb.BinaryDecoder.prototype.readUint32=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1],c=this.bytes_[this.cursor_+2],d=this.bytes_[this.cursor_+3];this.cursor_+=4;goog.asserts.assert(this.cursor_<=this.end_);return(a<<0|b<<8|c<<16|d<<24)>>>0};jspb.BinaryDecoder.prototype.readUint64=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinUint64(a,b)};
jspb.BinaryDecoder.prototype.readUint64String=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinUnsignedDecimalString(a,b)};jspb.BinaryDecoder.prototype.readInt8=function(){var a=this.bytes_[this.cursor_+0];this.cursor_+=1;goog.asserts.assert(this.cursor_<=this.end_);return a<<24>>24};
jspb.BinaryDecoder.prototype.readInt16=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1];this.cursor_+=2;goog.asserts.assert(this.cursor_<=this.end_);return(a<<0|b<<8)<<16>>16};jspb.BinaryDecoder.prototype.readInt32=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1],c=this.bytes_[this.cursor_+2],d=this.bytes_[this.cursor_+3];this.cursor_+=4;goog.asserts.assert(this.cursor_<=this.end_);return a<<0|b<<8|c<<16|d<<24};
jspb.BinaryDecoder.prototype.readInt64=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinInt64(a,b)};jspb.BinaryDecoder.prototype.readInt64String=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinSignedDecimalString(a,b)};jspb.BinaryDecoder.prototype.readFloat=function(){var a=this.readUint32();return jspb.utils.joinFloat32(a,0)};
jspb.BinaryDecoder.prototype.readDouble=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinFloat64(a,b)};jspb.BinaryDecoder.prototype.readBool=function(){return!!this.bytes_[this.cursor_++]};jspb.BinaryDecoder.prototype.readEnum=function(){return this.readSignedVarint32()};
jspb.BinaryDecoder.prototype.readString=function(a){var b=this.bytes_,c=this.cursor_;a=c+a;for(var d=[],e="";c<a;){var f=b[c++];if(128>f)d.push(f);else if(192>f)continue;else if(224>f){var g=b[c++];d.push((f&31)<<6|g&63)}else if(240>f){g=b[c++];var h=b[c++];d.push((f&15)<<12|(g&63)<<6|h&63)}else if(248>f){g=b[c++];h=b[c++];var k=b[c++];f=(f&7)<<18|(g&63)<<12|(h&63)<<6|k&63;f-=65536;d.push((f>>10&1023)+55296,(f&1023)+56320)}8192<=d.length&&(e+=String.fromCharCode.apply(null,d),d.length=0)}e+=goog.crypt.byteArrayToString(d);
this.cursor_=c;return e};jspb.BinaryDecoder.prototype.readStringWithLength=function(){var a=this.readUnsignedVarint32();return this.readString(a)};jspb.BinaryDecoder.prototype.readBytes=function(a){if(0>a||this.cursor_+a>this.bytes_.length)return this.error_=!0,goog.asserts.fail("Invalid byte length!"),new Uint8Array(0);var b=this.bytes_.subarray(this.cursor_,this.cursor_+a);this.cursor_+=a;goog.asserts.assert(this.cursor_<=this.end_);return b};jspb.BinaryDecoder.prototype.readVarintHash64=function(){return this.readSplitVarint64(jspb.utils.joinHash64)};
jspb.BinaryDecoder.prototype.readFixedHash64=function(){var a=this.bytes_,b=this.cursor_,c=a[b+0],d=a[b+1],e=a[b+2],f=a[b+3],g=a[b+4],h=a[b+5],k=a[b+6];a=a[b+7];this.cursor_+=8;return String.fromCharCode(c,d,e,f,g,h,k,a)};jspb.BinaryReader=function(a,b,c){this.decoder_=jspb.BinaryDecoder.alloc(a,b,c);this.fieldCursor_=this.decoder_.getCursor();this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID;this.error_=!1;this.readCallbacks_=null};jspb.BinaryReader.instanceCache_=[];
jspb.BinaryReader.alloc=function(a,b,c){if(jspb.BinaryReader.instanceCache_.length){var d=jspb.BinaryReader.instanceCache_.pop();a&&d.decoder_.setBlock(a,b,c);return d}return new jspb.BinaryReader(a,b,c)};jspb.BinaryReader.prototype.alloc=jspb.BinaryReader.alloc;
jspb.BinaryReader.prototype.free=function(){this.decoder_.clear();this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID;this.error_=!1;this.readCallbacks_=null;100>jspb.BinaryReader.instanceCache_.length&&jspb.BinaryReader.instanceCache_.push(this)};jspb.BinaryReader.prototype.getFieldCursor=function(){return this.fieldCursor_};jspb.BinaryReader.prototype.getCursor=function(){return this.decoder_.getCursor()};
jspb.BinaryReader.prototype.getBuffer=function(){return this.decoder_.getBuffer()};jspb.BinaryReader.prototype.getFieldNumber=function(){return this.nextField_};jspb.BinaryReader.prototype.getWireType=function(){return this.nextWireType_};jspb.BinaryReader.prototype.isEndGroup=function(){return this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP};jspb.BinaryReader.prototype.getError=function(){return this.error_||this.decoder_.getError()};
jspb.BinaryReader.prototype.setBlock=function(a,b,c){this.decoder_.setBlock(a,b,c);this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID};jspb.BinaryReader.prototype.reset=function(){this.decoder_.reset();this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID};jspb.BinaryReader.prototype.advance=function(a){this.decoder_.advance(a)};
jspb.BinaryReader.prototype.nextField=function(){if(this.decoder_.atEnd())return!1;if(this.getError())return goog.asserts.fail("Decoder hit an error"),!1;this.fieldCursor_=this.decoder_.getCursor();var a=this.decoder_.readUnsignedVarint32(),b=a>>>3;a&=7;if(a!=jspb.BinaryConstants.WireType.VARINT&&a!=jspb.BinaryConstants.WireType.FIXED32&&a!=jspb.BinaryConstants.WireType.FIXED64&&a!=jspb.BinaryConstants.WireType.DELIMITED&&a!=jspb.BinaryConstants.WireType.START_GROUP&&a!=jspb.BinaryConstants.WireType.END_GROUP)return goog.asserts.fail("Invalid wire type: %s (at position %s)",
a,this.fieldCursor_),this.error_=!0,!1;this.nextField_=b;this.nextWireType_=a;return!0};jspb.BinaryReader.prototype.unskipHeader=function(){this.decoder_.unskipVarint(this.nextField_<<3|this.nextWireType_)};jspb.BinaryReader.prototype.skipMatchingFields=function(){var a=this.nextField_;for(this.unskipHeader();this.nextField()&&this.getFieldNumber()==a;)this.skipField();this.decoder_.atEnd()||this.unskipHeader()};
jspb.BinaryReader.prototype.skipVarintField=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.VARINT?(goog.asserts.fail("Invalid wire type for skipVarintField"),this.skipField()):this.decoder_.skipVarint()};jspb.BinaryReader.prototype.skipDelimitedField=function(){if(this.nextWireType_!=jspb.BinaryConstants.WireType.DELIMITED)goog.asserts.fail("Invalid wire type for skipDelimitedField"),this.skipField();else{var a=this.decoder_.readUnsignedVarint32();this.decoder_.advance(a)}};
jspb.BinaryReader.prototype.skipFixed32Field=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.FIXED32?(goog.asserts.fail("Invalid wire type for skipFixed32Field"),this.skipField()):this.decoder_.advance(4)};jspb.BinaryReader.prototype.skipFixed64Field=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.FIXED64?(goog.asserts.fail("Invalid wire type for skipFixed64Field"),this.skipField()):this.decoder_.advance(8)};
jspb.BinaryReader.prototype.skipGroup=function(){var a=this.nextField_;do{if(!this.nextField()){goog.asserts.fail("Unmatched start-group tag: stream EOF");this.error_=!0;break}if(this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP){this.nextField_!=a&&(goog.asserts.fail("Unmatched end-group tag"),this.error_=!0);break}this.skipField()}while(1)};
jspb.BinaryReader.prototype.skipField=function(){switch(this.nextWireType_){case jspb.BinaryConstants.WireType.VARINT:this.skipVarintField();break;case jspb.BinaryConstants.WireType.FIXED64:this.skipFixed64Field();break;case jspb.BinaryConstants.WireType.DELIMITED:this.skipDelimitedField();break;case jspb.BinaryConstants.WireType.FIXED32:this.skipFixed32Field();break;case jspb.BinaryConstants.WireType.START_GROUP:this.skipGroup();break;default:goog.asserts.fail("Invalid wire encoding for field.")}};
jspb.BinaryReader.prototype.registerReadCallback=function(a,b){null===this.readCallbacks_&&(this.readCallbacks_={});goog.asserts.assert(!this.readCallbacks_[a]);this.readCallbacks_[a]=b};jspb.BinaryReader.prototype.runReadCallback=function(a){goog.asserts.assert(null!==this.readCallbacks_);a=this.readCallbacks_[a];goog.asserts.assert(a);return a(this)};
jspb.BinaryReader.prototype.readAny=function(a){this.nextWireType_=jspb.BinaryConstants.FieldTypeToWireType(a);var b=jspb.BinaryConstants.FieldType;switch(a){case b.DOUBLE:return this.readDouble();case b.FLOAT:return this.readFloat();case b.INT64:return this.readInt64();case b.UINT64:return this.readUint64();case b.INT32:return this.readInt32();case b.FIXED64:return this.readFixed64();case b.FIXED32:return this.readFixed32();case b.BOOL:return this.readBool();case b.STRING:return this.readString();
case b.GROUP:goog.asserts.fail("Group field type not supported in readAny()");case b.MESSAGE:goog.asserts.fail("Message field type not supported in readAny()");case b.BYTES:return this.readBytes();case b.UINT32:return this.readUint32();case b.ENUM:return this.readEnum();case b.SFIXED32:return this.readSfixed32();case b.SFIXED64:return this.readSfixed64();case b.SINT32:return this.readSint32();case b.SINT64:return this.readSint64();case b.FHASH64:return this.readFixedHash64();case b.VHASH64:return this.readVarintHash64();
default:goog.asserts.fail("Invalid field type in readAny()")}return 0};jspb.BinaryReader.prototype.readMessage=function(a,b){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var c=this.decoder_.getEnd(),d=this.decoder_.readUnsignedVarint32();d=this.decoder_.getCursor()+d;this.decoder_.setEnd(d);b(a,this);this.decoder_.setCursor(d);this.decoder_.setEnd(c)};
jspb.BinaryReader.prototype.readGroup=function(a,b,c){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.START_GROUP);goog.asserts.assert(this.nextField_==a);c(b,this);this.error_||this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP||(goog.asserts.fail("Group submessage did not end with an END_GROUP tag"),this.error_=!0)};
jspb.BinaryReader.prototype.getFieldDecoder=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var a=this.decoder_.readUnsignedVarint32(),b=this.decoder_.getCursor(),c=b+a;a=jspb.BinaryDecoder.alloc(this.decoder_.getBuffer(),b,a);this.decoder_.setCursor(c);return a};jspb.BinaryReader.prototype.readInt32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint32()};
jspb.BinaryReader.prototype.readInt32String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint32String()};jspb.BinaryReader.prototype.readInt64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint64()};jspb.BinaryReader.prototype.readInt64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint64String()};
jspb.BinaryReader.prototype.readUint32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint32()};jspb.BinaryReader.prototype.readUint32String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint32String()};jspb.BinaryReader.prototype.readUint64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint64()};
jspb.BinaryReader.prototype.readUint64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint64String()};jspb.BinaryReader.prototype.readSint32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readZigzagVarint32()};jspb.BinaryReader.prototype.readSint64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readZigzagVarint64()};
jspb.BinaryReader.prototype.readSint64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readZigzagVarint64String()};jspb.BinaryReader.prototype.readFixed32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readUint32()};jspb.BinaryReader.prototype.readFixed64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readUint64()};
jspb.BinaryReader.prototype.readFixed64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readUint64String()};jspb.BinaryReader.prototype.readSfixed32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readInt32()};jspb.BinaryReader.prototype.readSfixed32String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readInt32().toString()};
jspb.BinaryReader.prototype.readSfixed64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readInt64()};jspb.BinaryReader.prototype.readSfixed64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readInt64String()};jspb.BinaryReader.prototype.readFloat=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readFloat()};
jspb.BinaryReader.prototype.readDouble=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readDouble()};jspb.BinaryReader.prototype.readBool=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return!!this.decoder_.readUnsignedVarint32()};jspb.BinaryReader.prototype.readEnum=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint64()};
jspb.BinaryReader.prototype.readString=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var a=this.decoder_.readUnsignedVarint32();return this.decoder_.readString(a)};jspb.BinaryReader.prototype.readBytes=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var a=this.decoder_.readUnsignedVarint32();return this.decoder_.readBytes(a)};
jspb.BinaryReader.prototype.readVarintHash64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readVarintHash64()};jspb.BinaryReader.prototype.readSintHash64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readZigzagVarintHash64()};jspb.BinaryReader.prototype.readSplitVarint64=function(a){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSplitVarint64(a)};
jspb.BinaryReader.prototype.readSplitZigzagVarint64=function(a){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSplitVarint64(function(b,c){return jspb.utils.fromZigzag64(b,c,a)})};jspb.BinaryReader.prototype.readFixedHash64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readFixedHash64()};
jspb.BinaryReader.prototype.readSplitFixed64=function(a){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readSplitFixed64(a)};jspb.BinaryReader.prototype.readPackedField_=function(a){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var b=this.decoder_.readUnsignedVarint32();b=this.decoder_.getCursor()+b;for(var c=[];this.decoder_.getCursor()<b;)c.push(a.call(this.decoder_));return c};
jspb.BinaryReader.prototype.readPackedInt32=function(){return this.readPackedField_(this.decoder_.readSignedVarint32)};jspb.BinaryReader.prototype.readPackedInt32String=function(){return this.readPackedField_(this.decoder_.readSignedVarint32String)};jspb.BinaryReader.prototype.readPackedInt64=function(){return this.readPackedField_(this.decoder_.readSignedVarint64)};jspb.BinaryReader.prototype.readPackedInt64String=function(){return this.readPackedField_(this.decoder_.readSignedVarint64String)};
jspb.BinaryReader.prototype.readPackedUint32=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint32)};jspb.BinaryReader.prototype.readPackedUint32String=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint32String)};jspb.BinaryReader.prototype.readPackedUint64=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint64)};jspb.BinaryReader.prototype.readPackedUint64String=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint64String)};
jspb.BinaryReader.prototype.readPackedSint32=function(){return this.readPackedField_(this.decoder_.readZigzagVarint32)};jspb.BinaryReader.prototype.readPackedSint64=function(){return this.readPackedField_(this.decoder_.readZigzagVarint64)};jspb.BinaryReader.prototype.readPackedSint64String=function(){return this.readPackedField_(this.decoder_.readZigzagVarint64String)};jspb.BinaryReader.prototype.readPackedFixed32=function(){return this.readPackedField_(this.decoder_.readUint32)};
jspb.BinaryReader.prototype.readPackedFixed64=function(){return this.readPackedField_(this.decoder_.readUint64)};jspb.BinaryReader.prototype.readPackedFixed64String=function(){return this.readPackedField_(this.decoder_.readUint64String)};jspb.BinaryReader.prototype.readPackedSfixed32=function(){return this.readPackedField_(this.decoder_.readInt32)};jspb.BinaryReader.prototype.readPackedSfixed64=function(){return this.readPackedField_(this.decoder_.readInt64)};
jspb.BinaryReader.prototype.readPackedSfixed64String=function(){return this.readPackedField_(this.decoder_.readInt64String)};jspb.BinaryReader.prototype.readPackedFloat=function(){return this.readPackedField_(this.decoder_.readFloat)};jspb.BinaryReader.prototype.readPackedDouble=function(){return this.readPackedField_(this.decoder_.readDouble)};jspb.BinaryReader.prototype.readPackedBool=function(){return this.readPackedField_(this.decoder_.readBool)};jspb.BinaryReader.prototype.readPackedEnum=function(){return this.readPackedField_(this.decoder_.readEnum)};
jspb.BinaryReader.prototype.readPackedVarintHash64=function(){return this.readPackedField_(this.decoder_.readVarintHash64)};jspb.BinaryReader.prototype.readPackedFixedHash64=function(){return this.readPackedField_(this.decoder_.readFixedHash64)};jspb.Map=function(a,b){this.arr_=a;this.valueCtor_=b;this.map_={};this.arrClean=!0;0<this.arr_.length&&this.loadFromArray_()};jspb.Map.prototype.loadFromArray_=function(){for(var a=0;a<this.arr_.length;a++){var b=this.arr_[a],c=b[0];this.map_[c.toString()]=new jspb.Map.Entry_(c,b[1])}this.arrClean=!0};
jspb.Map.prototype.toArray=function(){if(this.arrClean){if(this.valueCtor_){var a=this.map_,b;for(b in a)if(Object.prototype.hasOwnProperty.call(a,b)){var c=a[b].valueWrapper;c&&c.toArray()}}}else{this.arr_.length=0;a=this.stringKeys_();a.sort();for(b=0;b<a.length;b++){var d=this.map_[a[b]];(c=d.valueWrapper)&&c.toArray();this.arr_.push([d.key,d.value])}this.arrClean=!0}return this.arr_};
jspb.Map.prototype.toObject=function(a,b){for(var c=this.toArray(),d=[],e=0;e<c.length;e++){var f=this.map_[c[e][0].toString()];this.wrapEntry_(f);var g=f.valueWrapper;g?(goog.asserts.assert(b),d.push([f.key,b(a,g)])):d.push([f.key,f.value])}return d};jspb.Map.fromObject=function(a,b,c){b=new jspb.Map([],b);for(var d=0;d<a.length;d++){var e=a[d][0],f=c(a[d][1]);b.set(e,f)}return b};jspb.Map.ArrayIteratorIterable_=function(a){this.idx_=0;this.arr_=a};
jspb.Map.ArrayIteratorIterable_.prototype.next=function(){return this.idx_<this.arr_.length?{done:!1,value:this.arr_[this.idx_++]}:{done:!0,value:void 0}};"undefined"!=typeof Symbol&&(jspb.Map.ArrayIteratorIterable_.prototype[Symbol.iterator]=function(){return this});jspb.Map.prototype.getLength=function(){return this.stringKeys_().length};jspb.Map.prototype.clear=function(){this.map_={};this.arrClean=!1};
jspb.Map.prototype.del=function(a){a=a.toString();var b=this.map_.hasOwnProperty(a);delete this.map_[a];this.arrClean=!1;return b};jspb.Map.prototype.getEntryList=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++){var d=this.map_[b[c]];a.push([d.key,d.value])}return a};jspb.Map.prototype.entries=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++){var d=this.map_[b[c]];a.push([d.key,this.wrapEntry_(d)])}return new jspb.Map.ArrayIteratorIterable_(a)};
jspb.Map.prototype.keys=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++)a.push(this.map_[b[c]].key);return new jspb.Map.ArrayIteratorIterable_(a)};jspb.Map.prototype.values=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++)a.push(this.wrapEntry_(this.map_[b[c]]));return new jspb.Map.ArrayIteratorIterable_(a)};
jspb.Map.prototype.forEach=function(a,b){var c=this.stringKeys_();c.sort();for(var d=0;d<c.length;d++){var e=this.map_[c[d]];a.call(b,this.wrapEntry_(e),e.key,this)}};jspb.Map.prototype.set=function(a,b){var c=new jspb.Map.Entry_(a);this.valueCtor_?(c.valueWrapper=b,c.value=b.toArray()):c.value=b;this.map_[a.toString()]=c;this.arrClean=!1;return this};jspb.Map.prototype.wrapEntry_=function(a){return this.valueCtor_?(a.valueWrapper||(a.valueWrapper=new this.valueCtor_(a.value)),a.valueWrapper):a.value};
jspb.Map.prototype.get=function(a){if(a=this.map_[a.toString()])return this.wrapEntry_(a)};jspb.Map.prototype.has=function(a){return a.toString()in this.map_};jspb.Map.prototype.serializeBinary=function(a,b,c,d,e){var f=this.stringKeys_();f.sort();for(var g=0;g<f.length;g++){var h=this.map_[f[g]];b.beginSubMessage(a);c.call(b,1,h.key);this.valueCtor_?d.call(b,2,this.wrapEntry_(h),e):d.call(b,2,h.value);b.endSubMessage()}};
jspb.Map.deserializeBinary=function(a,b,c,d,e,f,g){for(;b.nextField()&&!b.isEndGroup();){var h=b.getFieldNumber();1==h?f=c.call(b):2==h&&(a.valueCtor_?(goog.asserts.assert(e),g||(g=new a.valueCtor_),d.call(b,g,e)):g=d.call(b))}goog.asserts.assert(void 0!=f);goog.asserts.assert(void 0!=g);a.set(f,g)};jspb.Map.prototype.stringKeys_=function(){var a=this.map_,b=[],c;for(c in a)Object.prototype.hasOwnProperty.call(a,c)&&b.push(c);return b};
jspb.Map.Entry_=function(a,b){this.key=a;this.value=b;this.valueWrapper=void 0};jspb.ExtensionFieldInfo=function(a,b,c,d,e){this.fieldIndex=a;this.fieldName=b;this.ctor=c;this.toObjectFn=d;this.isRepeated=e};jspb.ExtensionFieldBinaryInfo=function(a,b,c,d,e,f){this.fieldInfo=a;this.binaryReaderFn=b;this.binaryWriterFn=c;this.binaryMessageSerializeFn=d;this.binaryMessageDeserializeFn=e;this.isPacked=f};jspb.ExtensionFieldInfo.prototype.isMessageType=function(){return!!this.ctor};jspb.Message=function(){};jspb.Message.GENERATE_TO_OBJECT=!0;jspb.Message.GENERATE_FROM_OBJECT=!goog.DISALLOW_TEST_ONLY_CODE;
jspb.Message.GENERATE_TO_STRING=!0;jspb.Message.ASSUME_LOCAL_ARRAYS=!1;jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS=!0;jspb.Message.SUPPORTS_UINT8ARRAY_="function"==typeof Uint8Array;jspb.Message.prototype.getJsPbMessageId=function(){return this.messageId_};jspb.Message.getIndex_=function(a,b){return b+a.arrayIndexOffset_};jspb.Message.hiddenES6Property_=function(){};jspb.Message.getFieldNumber_=function(a,b){return b-a.arrayIndexOffset_};
jspb.Message.initialize=function(a,b,c,d,e,f){a.wrappers_=null;b||(b=c?[c]:[]);a.messageId_=c?String(c):void 0;a.arrayIndexOffset_=0===c?-1:0;a.array=b;jspb.Message.initPivotAndExtensionObject_(a,d);a.convertedPrimitiveFields_={};jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS||(a.repeatedFields=e);if(e)for(b=0;b<e.length;b++)c=e[b],c<a.pivot_?(c=jspb.Message.getIndex_(a,c),a.array[c]=a.array[c]||jspb.Message.EMPTY_LIST_SENTINEL_):(jspb.Message.maybeInitEmptyExtensionObject_(a),a.extensionObject_[c]=
a.extensionObject_[c]||jspb.Message.EMPTY_LIST_SENTINEL_);if(f&&f.length)for(b=0;b<f.length;b++)jspb.Message.computeOneofCase(a,f[b])};jspb.Message.EMPTY_LIST_SENTINEL_=goog.DEBUG&&Object.freeze?Object.freeze([]):[];jspb.Message.isArray_=function(a){return jspb.Message.ASSUME_LOCAL_ARRAYS?a instanceof Array:Array.isArray(a)};jspb.Message.isExtensionObject_=function(a){return null!==a&&"object"==typeof a&&!jspb.Message.isArray_(a)&&!(jspb.Message.SUPPORTS_UINT8ARRAY_&&a instanceof Uint8Array)};
jspb.Message.initPivotAndExtensionObject_=function(a,b){var c=a.array.length,d=-1;if(c&&(d=c-1,c=a.array[d],jspb.Message.isExtensionObject_(c))){a.pivot_=jspb.Message.getFieldNumber_(a,d);a.extensionObject_=c;return}-1<b?(a.pivot_=Math.max(b,jspb.Message.getFieldNumber_(a,d+1)),a.extensionObject_=null):a.pivot_=Number.MAX_VALUE};jspb.Message.maybeInitEmptyExtensionObject_=function(a){var b=jspb.Message.getIndex_(a,a.pivot_);a.array[b]||(a.extensionObject_=a.array[b]={})};
jspb.Message.toObjectList=function(a,b,c){for(var d=[],e=0;e<a.length;e++)d[e]=b.call(a[e],c,a[e]);return d};jspb.Message.toObjectExtension=function(a,b,c,d,e){for(var f in c){var g=c[f],h=d.call(a,g);if(null!=h){for(var k in g.fieldName)if(g.fieldName.hasOwnProperty(k))break;b[k]=g.toObjectFn?g.isRepeated?jspb.Message.toObjectList(h,g.toObjectFn,e):g.toObjectFn(e,h):h}}};
jspb.Message.serializeBinaryExtensions=function(a,b,c,d){for(var e in c){var f=c[e],g=f.fieldInfo;if(!f.binaryWriterFn)throw Error("Message extension present that was generated without binary serialization support");var h=d.call(a,g);if(null!=h)if(g.isMessageType())if(f.binaryMessageSerializeFn)f.binaryWriterFn.call(b,g.fieldIndex,h,f.binaryMessageSerializeFn);else throw Error("Message extension present holding submessage without binary support enabled, and message is being serialized to binary format");
else f.binaryWriterFn.call(b,g.fieldIndex,h)}};jspb.Message.readBinaryExtension=function(a,b,c,d,e){var f=c[b.getFieldNumber()];if(f){c=f.fieldInfo;if(!f.binaryReaderFn)throw Error("Deserializing extension whose generated code does not support binary format");if(c.isMessageType()){var g=new c.ctor;f.binaryReaderFn.call(b,g,f.binaryMessageDeserializeFn)}else g=f.binaryReaderFn.call(b);c.isRepeated&&!f.isPacked?(b=d.call(a,c))?b.push(g):e.call(a,c,[g]):e.call(a,c,g)}else b.skipField()};
jspb.Message.getField=function(a,b){if(b<a.pivot_){b=jspb.Message.getIndex_(a,b);var c=a.array[b];return c===jspb.Message.EMPTY_LIST_SENTINEL_?a.array[b]=[]:c}if(a.extensionObject_)return c=a.extensionObject_[b],c===jspb.Message.EMPTY_LIST_SENTINEL_?a.extensionObject_[b]=[]:c};jspb.Message.getRepeatedField=function(a,b){return jspb.Message.getField(a,b)};jspb.Message.getOptionalFloatingPointField=function(a,b){a=jspb.Message.getField(a,b);return null==a?a:+a};
jspb.Message.getBooleanField=function(a,b){a=jspb.Message.getField(a,b);return null==a?a:!!a};jspb.Message.getRepeatedFloatingPointField=function(a,b){var c=jspb.Message.getRepeatedField(a,b);a.convertedPrimitiveFields_||(a.convertedPrimitiveFields_={});if(!a.convertedPrimitiveFields_[b]){for(var d=0;d<c.length;d++)c[d]=+c[d];a.convertedPrimitiveFields_[b]=!0}return c};
jspb.Message.getRepeatedBooleanField=function(a,b){var c=jspb.Message.getRepeatedField(a,b);a.convertedPrimitiveFields_||(a.convertedPrimitiveFields_={});if(!a.convertedPrimitiveFields_[b]){for(var d=0;d<c.length;d++)c[d]=!!c[d];a.convertedPrimitiveFields_[b]=!0}return c};
jspb.Message.bytesAsB64=function(a){if(null==a||"string"===typeof a)return a;if(jspb.Message.SUPPORTS_UINT8ARRAY_&&a instanceof Uint8Array)return goog.crypt.base64.encodeByteArray(a);goog.asserts.fail("Cannot coerce to b64 string: "+goog.typeOf(a));return null};jspb.Message.bytesAsU8=function(a){if(null==a||a instanceof Uint8Array)return a;if("string"===typeof a)return goog.crypt.base64.decodeStringToUint8Array(a);goog.asserts.fail("Cannot coerce to Uint8Array: "+goog.typeOf(a));return null};
jspb.Message.bytesListAsB64=function(a){jspb.Message.assertConsistentTypes_(a);return a.length&&"string"!==typeof a[0]?goog.array.map(a,jspb.Message.bytesAsB64):a};jspb.Message.bytesListAsU8=function(a){jspb.Message.assertConsistentTypes_(a);return!a.length||a[0]instanceof Uint8Array?a:goog.array.map(a,jspb.Message.bytesAsU8)};
jspb.Message.assertConsistentTypes_=function(a){if(goog.DEBUG&&a&&1<a.length){var b=goog.typeOf(a[0]);goog.array.forEach(a,function(a){goog.typeOf(a)!=b&&goog.asserts.fail("Inconsistent type in JSPB repeated field array. Got "+goog.typeOf(a)+" expected "+b)})}};jspb.Message.getFieldWithDefault=function(a,b,c){a=jspb.Message.getField(a,b);return null==a?c:a};jspb.Message.getBooleanFieldWithDefault=function(a,b,c){a=jspb.Message.getBooleanField(a,b);return null==a?c:a};
jspb.Message.getFloatingPointFieldWithDefault=function(a,b,c){a=jspb.Message.getOptionalFloatingPointField(a,b);return null==a?c:a};jspb.Message.getFieldProto3=jspb.Message.getFieldWithDefault;jspb.Message.getMapField=function(a,b,c,d){a.wrappers_||(a.wrappers_={});if(b in a.wrappers_)return a.wrappers_[b];var e=jspb.Message.getField(a,b);if(!e){if(c)return;e=[];jspb.Message.setField(a,b,e)}return a.wrappers_[b]=new jspb.Map(e,d)};
jspb.Message.setField=function(a,b,c){goog.asserts.assertInstanceof(a,jspb.Message);b<a.pivot_?a.array[jspb.Message.getIndex_(a,b)]=c:(jspb.Message.maybeInitEmptyExtensionObject_(a),a.extensionObject_[b]=c);return a};jspb.Message.setProto3IntField=function(a,b,c){return jspb.Message.setFieldIgnoringDefault_(a,b,c,0)};jspb.Message.setProto3FloatField=function(a,b,c){return jspb.Message.setFieldIgnoringDefault_(a,b,c,0)};
jspb.Message.setProto3BooleanField=function(a,b,c){return jspb.Message.setFieldIgnoringDefault_(a,b,c,!1)};jspb.Message.setProto3StringField=function(a,b,c){return jspb.Message.setFieldIgnoringDefault_(a,b,c,"")};jspb.Message.setProto3BytesField=function(a,b,c){return jspb.Message.setFieldIgnoringDefault_(a,b,c,"")};jspb.Message.setProto3EnumField=function(a,b,c){return jspb.Message.setFieldIgnoringDefault_(a,b,c,0)};
jspb.Message.setProto3StringIntField=function(a,b,c){return jspb.Message.setFieldIgnoringDefault_(a,b,c,"0")};jspb.Message.setFieldIgnoringDefault_=function(a,b,c,d){goog.asserts.assertInstanceof(a,jspb.Message);c!==d?jspb.Message.setField(a,b,c):b<a.pivot_?a.array[jspb.Message.getIndex_(a,b)]=null:(jspb.Message.maybeInitEmptyExtensionObject_(a),delete a.extensionObject_[b]);return a};
jspb.Message.addToRepeatedField=function(a,b,c,d){goog.asserts.assertInstanceof(a,jspb.Message);b=jspb.Message.getRepeatedField(a,b);void 0!=d?b.splice(d,0,c):b.push(c);return a};jspb.Message.setOneofField=function(a,b,c,d){goog.asserts.assertInstanceof(a,jspb.Message);(c=jspb.Message.computeOneofCase(a,c))&&c!==b&&void 0!==d&&(a.wrappers_&&c in a.wrappers_&&(a.wrappers_[c]=void 0),jspb.Message.setField(a,c,void 0));return jspb.Message.setField(a,b,d)};
jspb.Message.computeOneofCase=function(a,b){for(var c,d,e=0;e<b.length;e++){var f=b[e],g=jspb.Message.getField(a,f);null!=g&&(c=f,d=g,jspb.Message.setField(a,f,void 0))}return c?(jspb.Message.setField(a,c,d),c):0};jspb.Message.getWrapperField=function(a,b,c,d){a.wrappers_||(a.wrappers_={});if(!a.wrappers_[c]){var e=jspb.Message.getField(a,c);if(d||e)a.wrappers_[c]=new b(e)}return a.wrappers_[c]};
jspb.Message.getRepeatedWrapperField=function(a,b,c){jspb.Message.wrapRepeatedField_(a,b,c);b=a.wrappers_[c];b==jspb.Message.EMPTY_LIST_SENTINEL_&&(b=a.wrappers_[c]=[]);return b};jspb.Message.wrapRepeatedField_=function(a,b,c){a.wrappers_||(a.wrappers_={});if(!a.wrappers_[c]){for(var d=jspb.Message.getRepeatedField(a,c),e=[],f=0;f<d.length;f++)e[f]=new b(d[f]);a.wrappers_[c]=e}};
jspb.Message.setWrapperField=function(a,b,c){goog.asserts.assertInstanceof(a,jspb.Message);a.wrappers_||(a.wrappers_={});var d=c?c.toArray():c;a.wrappers_[b]=c;return jspb.Message.setField(a,b,d)};jspb.Message.setOneofWrapperField=function(a,b,c,d){goog.asserts.assertInstanceof(a,jspb.Message);a.wrappers_||(a.wrappers_={});var e=d?d.toArray():d;a.wrappers_[b]=d;return jspb.Message.setOneofField(a,b,c,e)};
jspb.Message.setRepeatedWrapperField=function(a,b,c){goog.asserts.assertInstanceof(a,jspb.Message);a.wrappers_||(a.wrappers_={});c=c||[];for(var d=[],e=0;e<c.length;e++)d[e]=c[e].toArray();a.wrappers_[b]=c;return jspb.Message.setField(a,b,d)};
jspb.Message.addToRepeatedWrapperField=function(a,b,c,d,e){jspb.Message.wrapRepeatedField_(a,d,b);var f=a.wrappers_[b];f||(f=a.wrappers_[b]=[]);c=c?c:new d;a=jspb.Message.getRepeatedField(a,b);void 0!=e?(f.splice(e,0,c),a.splice(e,0,c.toArray())):(f.push(c),a.push(c.toArray()));return c};jspb.Message.toMap=function(a,b,c,d){for(var e={},f=0;f<a.length;f++)e[b.call(a[f])]=c?c.call(a[f],d,a[f]):a[f];return e};
jspb.Message.prototype.syncMapFields_=function(){if(this.wrappers_)for(var a in this.wrappers_){var b=this.wrappers_[a];if(Array.isArray(b))for(var c=0;c<b.length;c++)b[c]&&b[c].toArray();else b&&b.toArray()}};jspb.Message.prototype.toArray=function(){this.syncMapFields_();return this.array};jspb.Message.GENERATE_TO_STRING&&(jspb.Message.prototype.toString=function(){this.syncMapFields_();return this.array.toString()});
jspb.Message.prototype.getExtension=function(a){if(this.extensionObject_){this.wrappers_||(this.wrappers_={});var b=a.fieldIndex;if(a.isRepeated){if(a.isMessageType())return this.wrappers_[b]||(this.wrappers_[b]=goog.array.map(this.extensionObject_[b]||[],function(b){return new a.ctor(b)})),this.wrappers_[b]}else if(a.isMessageType())return!this.wrappers_[b]&&this.extensionObject_[b]&&(this.wrappers_[b]=new a.ctor(this.extensionObject_[b])),this.wrappers_[b];return this.extensionObject_[b]}};
jspb.Message.prototype.setExtension=function(a,b){this.wrappers_||(this.wrappers_={});jspb.Message.maybeInitEmptyExtensionObject_(this);var c=a.fieldIndex;a.isRepeated?(b=b||[],a.isMessageType()?(this.wrappers_[c]=b,this.extensionObject_[c]=goog.array.map(b,function(a){return a.toArray()})):this.extensionObject_[c]=b):a.isMessageType()?(this.wrappers_[c]=b,this.extensionObject_[c]=b?b.toArray():b):this.extensionObject_[c]=b;return this};
jspb.Message.difference=function(a,b){if(!(a instanceof b.constructor))throw Error("Messages have different types.");var c=a.toArray();b=b.toArray();var d=[],e=0,f=c.length>b.length?c.length:b.length;a.getJsPbMessageId()&&(d[0]=a.getJsPbMessageId(),e=1);for(;e<f;e++)jspb.Message.compareFields(c[e],b[e])||(d[e]=b[e]);return new a.constructor(d)};jspb.Message.equals=function(a,b){return a==b||!(!a||!b)&&a instanceof b.constructor&&jspb.Message.compareFields(a.toArray(),b.toArray())};
jspb.Message.compareExtensions=function(a,b){a=a||{};b=b||{};var c={},d;for(d in a)c[d]=0;for(d in b)c[d]=0;for(d in c)if(!jspb.Message.compareFields(a[d],b[d]))return!1;return!0};
jspb.Message.compareFields=function(a,b){if(a==b)return!0;if(!goog.isObject(a)||!goog.isObject(b))return"number"===typeof a&&isNaN(a)||"number"===typeof b&&isNaN(b)?String(a)==String(b):!1;if(a.constructor!=b.constructor)return!1;if(jspb.Message.SUPPORTS_UINT8ARRAY_&&a.constructor===Uint8Array){if(a.length!=b.length)return!1;for(var c=0;c<a.length;c++)if(a[c]!=b[c])return!1;return!0}if(a.constructor===Array){var d=void 0,e=void 0,f=Math.max(a.length,b.length);for(c=0;c<f;c++){var g=a[c],h=b[c];g&&
g.constructor==Object&&(goog.asserts.assert(void 0===d),goog.asserts.assert(c===a.length-1),d=g,g=void 0);h&&h.constructor==Object&&(goog.asserts.assert(void 0===e),goog.asserts.assert(c===b.length-1),e=h,h=void 0);if(!jspb.Message.compareFields(g,h))return!1}return d||e?(d=d||{},e=e||{},jspb.Message.compareExtensions(d,e)):!0}if(a.constructor===Object)return jspb.Message.compareExtensions(a,b);throw Error("Invalid type in JSPB array");};jspb.Message.prototype.cloneMessage=function(){return jspb.Message.cloneMessage(this)};
jspb.Message.prototype.clone=function(){return jspb.Message.cloneMessage(this)};jspb.Message.clone=function(a){return jspb.Message.cloneMessage(a)};jspb.Message.cloneMessage=function(a){return new a.constructor(jspb.Message.clone_(a.toArray()))};
jspb.Message.copyInto=function(a,b){goog.asserts.assertInstanceof(a,jspb.Message);goog.asserts.assertInstanceof(b,jspb.Message);goog.asserts.assert(a.constructor==b.constructor,"Copy source and target message should have the same type.");a=jspb.Message.clone(a);for(var c=b.toArray(),d=a.toArray(),e=c.length=0;e<d.length;e++)c[e]=d[e];b.wrappers_=a.wrappers_;b.extensionObject_=a.extensionObject_};
jspb.Message.clone_=function(a){if(Array.isArray(a)){for(var b=Array(a.length),c=0;c<a.length;c++){var d=a[c];null!=d&&(b[c]="object"==typeof d?jspb.Message.clone_(goog.asserts.assert(d)):d)}return b}if(jspb.Message.SUPPORTS_UINT8ARRAY_&&a instanceof Uint8Array)return new Uint8Array(a);b={};for(c in a)d=a[c],null!=d&&(b[c]="object"==typeof d?jspb.Message.clone_(goog.asserts.assert(d)):d);return b};jspb.Message.registerMessageType=function(a,b){b.messageId=a};jspb.Message.messageSetExtensions={};
jspb.Message.messageSetExtensionsBinary={};jspb.arith={};jspb.arith.UInt64=function(a,b){this.lo=a;this.hi=b};jspb.arith.UInt64.prototype.cmp=function(a){return this.hi<a.hi||this.hi==a.hi&&this.lo<a.lo?-1:this.hi==a.hi&&this.lo==a.lo?0:1};jspb.arith.UInt64.prototype.rightShift=function(){return new jspb.arith.UInt64((this.lo>>>1|(this.hi&1)<<31)>>>0,this.hi>>>1>>>0)};jspb.arith.UInt64.prototype.leftShift=function(){return new jspb.arith.UInt64(this.lo<<1>>>0,(this.hi<<1|this.lo>>>31)>>>0)};
jspb.arith.UInt64.prototype.msb=function(){return!!(this.hi&2147483648)};jspb.arith.UInt64.prototype.lsb=function(){return!!(this.lo&1)};jspb.arith.UInt64.prototype.zero=function(){return 0==this.lo&&0==this.hi};jspb.arith.UInt64.prototype.add=function(a){return new jspb.arith.UInt64((this.lo+a.lo&4294967295)>>>0>>>0,((this.hi+a.hi&4294967295)>>>0)+(4294967296<=this.lo+a.lo?1:0)>>>0)};
jspb.arith.UInt64.prototype.sub=function(a){return new jspb.arith.UInt64((this.lo-a.lo&4294967295)>>>0>>>0,((this.hi-a.hi&4294967295)>>>0)-(0>this.lo-a.lo?1:0)>>>0)};jspb.arith.UInt64.mul32x32=function(a,b){var c=a&65535;a>>>=16;var d=b&65535,e=b>>>16;b=c*d+65536*(c*e&65535)+65536*(a*d&65535);for(c=a*e+(c*e>>>16)+(a*d>>>16);4294967296<=b;)b-=4294967296,c+=1;return new jspb.arith.UInt64(b>>>0,c>>>0)};
jspb.arith.UInt64.prototype.mul=function(a){var b=jspb.arith.UInt64.mul32x32(this.lo,a);a=jspb.arith.UInt64.mul32x32(this.hi,a);a.hi=a.lo;a.lo=0;return b.add(a)};
jspb.arith.UInt64.prototype.div=function(a){if(0==a)return[];var b=new jspb.arith.UInt64(0,0),c=new jspb.arith.UInt64(this.lo,this.hi);a=new jspb.arith.UInt64(a,0);for(var d=new jspb.arith.UInt64(1,0);!a.msb();)a=a.leftShift(),d=d.leftShift();for(;!d.zero();)0>=a.cmp(c)&&(b=b.add(d),c=c.sub(a)),a=a.rightShift(),d=d.rightShift();return[b,c]};jspb.arith.UInt64.prototype.toString=function(){for(var a="",b=this;!b.zero();){b=b.div(10);var c=b[0];a=b[1].lo+a;b=c}""==a&&(a="0");return a};
jspb.arith.UInt64.fromString=function(a){for(var b=new jspb.arith.UInt64(0,0),c=new jspb.arith.UInt64(0,0),d=0;d<a.length;d++){if("0">a[d]||"9"<a[d])return null;var e=parseInt(a[d],10);c.lo=e;b=b.mul(10).add(c)}return b};jspb.arith.UInt64.prototype.clone=function(){return new jspb.arith.UInt64(this.lo,this.hi)};jspb.arith.Int64=function(a,b){this.lo=a;this.hi=b};
jspb.arith.Int64.prototype.add=function(a){return new jspb.arith.Int64((this.lo+a.lo&4294967295)>>>0>>>0,((this.hi+a.hi&4294967295)>>>0)+(4294967296<=this.lo+a.lo?1:0)>>>0)};jspb.arith.Int64.prototype.sub=function(a){return new jspb.arith.Int64((this.lo-a.lo&4294967295)>>>0>>>0,((this.hi-a.hi&4294967295)>>>0)-(0>this.lo-a.lo?1:0)>>>0)};jspb.arith.Int64.prototype.clone=function(){return new jspb.arith.Int64(this.lo,this.hi)};
jspb.arith.Int64.prototype.toString=function(){var a=0!=(this.hi&2147483648),b=new jspb.arith.UInt64(this.lo,this.hi);a&&(b=(new jspb.arith.UInt64(0,0)).sub(b));return(a?"-":"")+b.toString()};jspb.arith.Int64.fromString=function(a){var b=0<a.length&&"-"==a[0];b&&(a=a.substring(1));a=jspb.arith.UInt64.fromString(a);if(null===a)return null;b&&(a=(new jspb.arith.UInt64(0,0)).sub(a));return new jspb.arith.Int64(a.lo,a.hi)};jspb.BinaryEncoder=function(){this.buffer_=[]};jspb.BinaryEncoder.prototype.length=function(){return this.buffer_.length};jspb.BinaryEncoder.prototype.end=function(){var a=this.buffer_;this.buffer_=[];return a};
jspb.BinaryEncoder.prototype.writeSplitVarint64=function(a,b){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(b==Math.floor(b));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);for(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32);0<b||127<a;)this.buffer_.push(a&127|128),a=(a>>>7|b<<25)>>>0,b>>>=7;this.buffer_.push(a)};
jspb.BinaryEncoder.prototype.writeSplitFixed64=function(a,b){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(b==Math.floor(b));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32);this.writeUint32(a);this.writeUint32(b)};
jspb.BinaryEncoder.prototype.writeUnsignedVarint32=function(a){goog.asserts.assert(a==Math.floor(a));for(goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);127<a;)this.buffer_.push(a&127|128),a>>>=7;this.buffer_.push(a)};
jspb.BinaryEncoder.prototype.writeSignedVarint32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);if(0<=a)this.writeUnsignedVarint32(a);else{for(var b=0;9>b;b++)this.buffer_.push(a&127|128),a>>=7;this.buffer_.push(1)}};
jspb.BinaryEncoder.prototype.writeUnsignedVarint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_64);jspb.utils.splitInt64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};
jspb.BinaryEncoder.prototype.writeSignedVarint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_63&&a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitInt64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};
jspb.BinaryEncoder.prototype.writeZigzagVarint32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);this.writeUnsignedVarint32((a<<1^a>>31)>>>0)};jspb.BinaryEncoder.prototype.writeZigzagVarint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_63&&a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitZigzag64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};
jspb.BinaryEncoder.prototype.writeZigzagVarint64String=function(a){this.writeZigzagVarintHash64(jspb.utils.decimalStringToHash64(a))};jspb.BinaryEncoder.prototype.writeZigzagVarintHash64=function(a){var b=this;jspb.utils.splitHash64(a);jspb.utils.toZigzag64(jspb.utils.split64Low,jspb.utils.split64High,function(a,d){b.writeSplitVarint64(a>>>0,d>>>0)})};
jspb.BinaryEncoder.prototype.writeUint8=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&256>a);this.buffer_.push(a>>>0&255)};jspb.BinaryEncoder.prototype.writeUint16=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&65536>a);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255)};
jspb.BinaryEncoder.prototype.writeUint32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255);this.buffer_.push(a>>>16&255);this.buffer_.push(a>>>24&255)};jspb.BinaryEncoder.prototype.writeUint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_64);jspb.utils.splitUint64(a);this.writeUint32(jspb.utils.split64Low);this.writeUint32(jspb.utils.split64High)};
jspb.BinaryEncoder.prototype.writeInt8=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(-128<=a&&128>a);this.buffer_.push(a>>>0&255)};jspb.BinaryEncoder.prototype.writeInt16=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(-32768<=a&&32768>a);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255)};
jspb.BinaryEncoder.prototype.writeInt32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255);this.buffer_.push(a>>>16&255);this.buffer_.push(a>>>24&255)};
jspb.BinaryEncoder.prototype.writeInt64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_63&&a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitInt64(a);this.writeSplitFixed64(jspb.utils.split64Low,jspb.utils.split64High)};
jspb.BinaryEncoder.prototype.writeInt64String=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(+a>=-jspb.BinaryConstants.TWO_TO_63&&+a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(a));this.writeSplitFixed64(jspb.utils.split64Low,jspb.utils.split64High)};
jspb.BinaryEncoder.prototype.writeFloat=function(a){goog.asserts.assert(Infinity===a||-Infinity===a||isNaN(a)||a>=-jspb.BinaryConstants.FLOAT32_MAX&&a<=jspb.BinaryConstants.FLOAT32_MAX);jspb.utils.splitFloat32(a);this.writeUint32(jspb.utils.split64Low)};
jspb.BinaryEncoder.prototype.writeDouble=function(a){goog.asserts.assert(Infinity===a||-Infinity===a||isNaN(a)||a>=-jspb.BinaryConstants.FLOAT64_MAX&&a<=jspb.BinaryConstants.FLOAT64_MAX);jspb.utils.splitFloat64(a);this.writeUint32(jspb.utils.split64Low);this.writeUint32(jspb.utils.split64High)};jspb.BinaryEncoder.prototype.writeBool=function(a){goog.asserts.assert("boolean"===typeof a||"number"===typeof a);this.buffer_.push(a?1:0)};
jspb.BinaryEncoder.prototype.writeEnum=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);this.writeSignedVarint32(a)};jspb.BinaryEncoder.prototype.writeBytes=function(a){this.buffer_.push.apply(this.buffer_,a)};jspb.BinaryEncoder.prototype.writeVarintHash64=function(a){jspb.utils.splitHash64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};
jspb.BinaryEncoder.prototype.writeFixedHash64=function(a){jspb.utils.splitHash64(a);this.writeUint32(jspb.utils.split64Low);this.writeUint32(jspb.utils.split64High)};
jspb.BinaryEncoder.prototype.writeString=function(a){for(var b=this.buffer_.length,c=0;c<a.length;c++){var d=a.charCodeAt(c);if(128>d)this.buffer_.push(d);else if(2048>d)this.buffer_.push(d>>6|192),this.buffer_.push(d&63|128);else if(65536>d)if(55296<=d&&56319>=d&&c+1<a.length){var e=a.charCodeAt(c+1);56320<=e&&57343>=e&&(d=1024*(d-55296)+e-56320+65536,this.buffer_.push(d>>18|240),this.buffer_.push(d>>12&63|128),this.buffer_.push(d>>6&63|128),this.buffer_.push(d&63|128),c++)}else this.buffer_.push(d>>
12|224),this.buffer_.push(d>>6&63|128),this.buffer_.push(d&63|128)}return this.buffer_.length-b};jspb.BinaryWriter=function(){this.blocks_=[];this.totalLength_=0;this.encoder_=new jspb.BinaryEncoder;this.bookmarks_=[]};jspb.BinaryWriter.prototype.appendUint8Array_=function(a){var b=this.encoder_.end();this.blocks_.push(b);this.blocks_.push(a);this.totalLength_+=b.length+a.length};
jspb.BinaryWriter.prototype.beginDelimited_=function(a){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);a=this.encoder_.end();this.blocks_.push(a);this.totalLength_+=a.length;a.push(this.totalLength_);return a};jspb.BinaryWriter.prototype.endDelimited_=function(a){var b=a.pop();b=this.totalLength_+this.encoder_.length()-b;for(goog.asserts.assert(0<=b);127<b;)a.push(b&127|128),b>>>=7,this.totalLength_++;a.push(b);this.totalLength_++};
jspb.BinaryWriter.prototype.writeSerializedMessage=function(a,b,c){this.appendUint8Array_(a.subarray(b,c))};jspb.BinaryWriter.prototype.maybeWriteSerializedMessage=function(a,b,c){null!=a&&null!=b&&null!=c&&this.writeSerializedMessage(a,b,c)};jspb.BinaryWriter.prototype.reset=function(){this.blocks_=[];this.encoder_.end();this.totalLength_=0;this.bookmarks_=[]};
jspb.BinaryWriter.prototype.getResultBuffer=function(){goog.asserts.assert(0==this.bookmarks_.length);for(var a=new Uint8Array(this.totalLength_+this.encoder_.length()),b=this.blocks_,c=b.length,d=0,e=0;e<c;e++){var f=b[e];a.set(f,d);d+=f.length}b=this.encoder_.end();a.set(b,d);d+=b.length;goog.asserts.assert(d==a.length);this.blocks_=[a];return a};jspb.BinaryWriter.prototype.getResultBase64String=function(a){return goog.crypt.base64.encodeByteArray(this.getResultBuffer(),a)};
jspb.BinaryWriter.prototype.beginSubMessage=function(a){this.bookmarks_.push(this.beginDelimited_(a))};jspb.BinaryWriter.prototype.endSubMessage=function(){goog.asserts.assert(0<=this.bookmarks_.length);this.endDelimited_(this.bookmarks_.pop())};jspb.BinaryWriter.prototype.writeFieldHeader_=function(a,b){goog.asserts.assert(1<=a&&a==Math.floor(a));this.encoder_.writeUnsignedVarint32(8*a+b)};
jspb.BinaryWriter.prototype.writeAny=function(a,b,c){var d=jspb.BinaryConstants.FieldType;switch(a){case d.DOUBLE:this.writeDouble(b,c);break;case d.FLOAT:this.writeFloat(b,c);break;case d.INT64:this.writeInt64(b,c);break;case d.UINT64:this.writeUint64(b,c);break;case d.INT32:this.writeInt32(b,c);break;case d.FIXED64:this.writeFixed64(b,c);break;case d.FIXED32:this.writeFixed32(b,c);break;case d.BOOL:this.writeBool(b,c);break;case d.STRING:this.writeString(b,c);break;case d.GROUP:goog.asserts.fail("Group field type not supported in writeAny()");
break;case d.MESSAGE:goog.asserts.fail("Message field type not supported in writeAny()");break;case d.BYTES:this.writeBytes(b,c);break;case d.UINT32:this.writeUint32(b,c);break;case d.ENUM:this.writeEnum(b,c);break;case d.SFIXED32:this.writeSfixed32(b,c);break;case d.SFIXED64:this.writeSfixed64(b,c);break;case d.SINT32:this.writeSint32(b,c);break;case d.SINT64:this.writeSint64(b,c);break;case d.FHASH64:this.writeFixedHash64(b,c);break;case d.VHASH64:this.writeVarintHash64(b,c);break;default:goog.asserts.fail("Invalid field type in writeAny()")}};
jspb.BinaryWriter.prototype.writeUnsignedVarint32_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeUnsignedVarint32(b))};jspb.BinaryWriter.prototype.writeSignedVarint32_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(b))};jspb.BinaryWriter.prototype.writeUnsignedVarint64_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeUnsignedVarint64(b))};
jspb.BinaryWriter.prototype.writeSignedVarint64_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint64(b))};jspb.BinaryWriter.prototype.writeZigzagVarint32_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint32(b))};jspb.BinaryWriter.prototype.writeZigzagVarint64_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint64(b))};
jspb.BinaryWriter.prototype.writeZigzagVarint64String_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint64String(b))};jspb.BinaryWriter.prototype.writeZigzagVarintHash64_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarintHash64(b))};
jspb.BinaryWriter.prototype.writeInt32=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeSignedVarint32_(a,b))};jspb.BinaryWriter.prototype.writeInt32String=function(a,b){null!=b&&(b=parseInt(b,10),goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeSignedVarint32_(a,b))};
jspb.BinaryWriter.prototype.writeInt64=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_63&&b<jspb.BinaryConstants.TWO_TO_63),this.writeSignedVarint64_(a,b))};jspb.BinaryWriter.prototype.writeInt64String=function(a,b){null!=b&&(b=jspb.arith.Int64.fromString(b),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSplitVarint64(b.lo,b.hi))};
jspb.BinaryWriter.prototype.writeUint32=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32),this.writeUnsignedVarint32_(a,b))};jspb.BinaryWriter.prototype.writeUint32String=function(a,b){null!=b&&(b=parseInt(b,10),goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32),this.writeUnsignedVarint32_(a,b))};jspb.BinaryWriter.prototype.writeUint64=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_64),this.writeUnsignedVarint64_(a,b))};
jspb.BinaryWriter.prototype.writeUint64String=function(a,b){null!=b&&(b=jspb.arith.UInt64.fromString(b),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSplitVarint64(b.lo,b.hi))};jspb.BinaryWriter.prototype.writeSint32=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeZigzagVarint32_(a,b))};
jspb.BinaryWriter.prototype.writeSint64=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_63&&b<jspb.BinaryConstants.TWO_TO_63),this.writeZigzagVarint64_(a,b))};jspb.BinaryWriter.prototype.writeSintHash64=function(a,b){null!=b&&this.writeZigzagVarintHash64_(a,b)};jspb.BinaryWriter.prototype.writeSint64String=function(a,b){null!=b&&this.writeZigzagVarint64String_(a,b)};
jspb.BinaryWriter.prototype.writeFixed32=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeUint32(b))};jspb.BinaryWriter.prototype.writeFixed64=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_64),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeUint64(b))};
jspb.BinaryWriter.prototype.writeFixed64String=function(a,b){null!=b&&(b=jspb.arith.UInt64.fromString(b),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeSplitFixed64(b.lo,b.hi))};jspb.BinaryWriter.prototype.writeSfixed32=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeInt32(b))};
jspb.BinaryWriter.prototype.writeSfixed64=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_63&&b<jspb.BinaryConstants.TWO_TO_63),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeInt64(b))};jspb.BinaryWriter.prototype.writeSfixed64String=function(a,b){null!=b&&(b=jspb.arith.Int64.fromString(b),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeSplitFixed64(b.lo,b.hi))};
jspb.BinaryWriter.prototype.writeFloat=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeFloat(b))};jspb.BinaryWriter.prototype.writeDouble=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeDouble(b))};
jspb.BinaryWriter.prototype.writeBool=function(a,b){null!=b&&(goog.asserts.assert("boolean"===typeof b||"number"===typeof b),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeBool(b))};jspb.BinaryWriter.prototype.writeEnum=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(b))};
jspb.BinaryWriter.prototype.writeString=function(a,b){null!=b&&(a=this.beginDelimited_(a),this.encoder_.writeString(b),this.endDelimited_(a))};jspb.BinaryWriter.prototype.writeBytes=function(a,b){null!=b&&(b=jspb.utils.byteSourceToUint8Array(b),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(b.length),this.appendUint8Array_(b))};jspb.BinaryWriter.prototype.writeMessage=function(a,b,c){null!=b&&(a=this.beginDelimited_(a),c(b,this),this.endDelimited_(a))};
jspb.BinaryWriter.prototype.writeMessageSet=function(a,b,c){null!=b&&(this.writeFieldHeader_(1,jspb.BinaryConstants.WireType.START_GROUP),this.writeFieldHeader_(2,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(a),a=this.beginDelimited_(3),c(b,this),this.endDelimited_(a),this.writeFieldHeader_(1,jspb.BinaryConstants.WireType.END_GROUP))};
jspb.BinaryWriter.prototype.writeGroup=function(a,b,c){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.START_GROUP),c(b,this),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.END_GROUP))};jspb.BinaryWriter.prototype.writeFixedHash64=function(a,b){null!=b&&(goog.asserts.assert(8==b.length),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeFixedHash64(b))};
jspb.BinaryWriter.prototype.writeVarintHash64=function(a,b){null!=b&&(goog.asserts.assert(8==b.length),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeVarintHash64(b))};jspb.BinaryWriter.prototype.writeSplitFixed64=function(a,b,c){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64);this.encoder_.writeSplitFixed64(b,c)};
jspb.BinaryWriter.prototype.writeSplitVarint64=function(a,b,c){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT);this.encoder_.writeSplitVarint64(b,c)};jspb.BinaryWriter.prototype.writeSplitZigzagVarint64=function(a,b,c){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT);var d=this.encoder_;jspb.utils.toZigzag64(b,c,function(a,b){d.writeSplitVarint64(a>>>0,b>>>0)})};
jspb.BinaryWriter.prototype.writeRepeatedInt32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSignedVarint32_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedInt32String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeInt32String(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedInt64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSignedVarint64_(a,b[c])};
jspb.BinaryWriter.prototype.writeRepeatedSplitFixed64=function(a,b,c,d){if(null!=b)for(var e=0;e<b.length;e++)this.writeSplitFixed64(a,c(b[e]),d(b[e]))};jspb.BinaryWriter.prototype.writeRepeatedSplitVarint64=function(a,b,c,d){if(null!=b)for(var e=0;e<b.length;e++)this.writeSplitVarint64(a,c(b[e]),d(b[e]))};jspb.BinaryWriter.prototype.writeRepeatedSplitZigzagVarint64=function(a,b,c,d){if(null!=b)for(var e=0;e<b.length;e++)this.writeSplitZigzagVarint64(a,c(b[e]),d(b[e]))};
jspb.BinaryWriter.prototype.writeRepeatedInt64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeInt64String(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedUint32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUnsignedVarint32_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedUint32String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUint32String(a,b[c])};
jspb.BinaryWriter.prototype.writeRepeatedUint64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUnsignedVarint64_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedUint64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUint64String(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSint32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeZigzagVarint32_(a,b[c])};
jspb.BinaryWriter.prototype.writeRepeatedSint64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeZigzagVarint64_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSint64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeZigzagVarint64String_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSintHash64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeZigzagVarintHash64_(a,b[c])};
jspb.BinaryWriter.prototype.writeRepeatedFixed32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixed32(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedFixed64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixed64(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedFixed64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixed64String(a,b[c])};
jspb.BinaryWriter.prototype.writeRepeatedSfixed32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSfixed32(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSfixed64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSfixed64(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSfixed64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSfixed64String(a,b[c])};
jspb.BinaryWriter.prototype.writeRepeatedFloat=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFloat(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedDouble=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeDouble(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedBool=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeBool(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedEnum=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeEnum(a,b[c])};
jspb.BinaryWriter.prototype.writeRepeatedString=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeString(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedBytes=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeBytes(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedMessage=function(a,b,c){if(null!=b)for(var d=0;d<b.length;d++){var e=this.beginDelimited_(a);c(b[d],this);this.endDelimited_(e)}};
jspb.BinaryWriter.prototype.writeRepeatedGroup=function(a,b,c){if(null!=b)for(var d=0;d<b.length;d++)this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.START_GROUP),c(b[d],this),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.END_GROUP)};jspb.BinaryWriter.prototype.writeRepeatedFixedHash64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixedHash64(a,b[c])};
jspb.BinaryWriter.prototype.writeRepeatedVarintHash64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeVarintHash64(a,b[c])};jspb.BinaryWriter.prototype.writePackedInt32=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeSignedVarint32(b[c]);this.endDelimited_(a)}};
jspb.BinaryWriter.prototype.writePackedInt32String=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeSignedVarint32(parseInt(b[c],10));this.endDelimited_(a)}};jspb.BinaryWriter.prototype.writePackedInt64=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeSignedVarint64(b[c]);this.endDelimited_(a)}};
jspb.BinaryWriter.prototype.writePackedSplitFixed64=function(a,b,c,d){if(null!=b){a=this.beginDelimited_(a);for(var e=0;e<b.length;e++)this.encoder_.writeSplitFixed64(c(b[e]),d(b[e]));this.endDelimited_(a)}};jspb.BinaryWriter.prototype.writePackedSplitVarint64=function(a,b,c,d){if(null!=b){a=this.beginDelimited_(a);for(var e=0;e<b.length;e++)this.encoder_.writeSplitVarint64(c(b[e]),d(b[e]));this.endDelimited_(a)}};
jspb.BinaryWriter.prototype.writePackedSplitZigzagVarint64=function(a,b,c,d){if(null!=b){a=this.beginDelimited_(a);for(var e=this.encoder_,f=0;f<b.length;f++)jspb.utils.toZigzag64(c(b[f]),d(b[f]),function(a,b){e.writeSplitVarint64(a>>>0,b>>>0)});this.endDelimited_(a)}};jspb.BinaryWriter.prototype.writePackedInt64String=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++){var d=jspb.arith.Int64.fromString(b[c]);this.encoder_.writeSplitVarint64(d.lo,d.hi)}this.endDelimited_(a)}};
jspb.BinaryWriter.prototype.writePackedUint32=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeUnsignedVarint32(b[c]);this.endDelimited_(a)}};jspb.BinaryWriter.prototype.writePackedUint32String=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeUnsignedVarint32(parseInt(b[c],10));this.endDelimited_(a)}};
jspb.BinaryWriter.prototype.writePackedUint64=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeUnsignedVarint64(b[c]);this.endDelimited_(a)}};jspb.BinaryWriter.prototype.writePackedUint64String=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++){var d=jspb.arith.UInt64.fromString(b[c]);this.encoder_.writeSplitVarint64(d.lo,d.hi)}this.endDelimited_(a)}};
jspb.BinaryWriter.prototype.writePackedSint32=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeZigzagVarint32(b[c]);this.endDelimited_(a)}};jspb.BinaryWriter.prototype.writePackedSint64=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeZigzagVarint64(b[c]);this.endDelimited_(a)}};
jspb.BinaryWriter.prototype.writePackedSint64String=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeZigzagVarintHash64(jspb.utils.decimalStringToHash64(b[c]));this.endDelimited_(a)}};jspb.BinaryWriter.prototype.writePackedSintHash64=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeZigzagVarintHash64(b[c]);this.endDelimited_(a)}};
jspb.BinaryWriter.prototype.writePackedFixed32=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(4*b.length),a=0;a<b.length;a++)this.encoder_.writeUint32(b[a])};jspb.BinaryWriter.prototype.writePackedFixed64=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*b.length),a=0;a<b.length;a++)this.encoder_.writeUint64(b[a])};
jspb.BinaryWriter.prototype.writePackedFixed64String=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*b.length),a=0;a<b.length;a++){var c=jspb.arith.UInt64.fromString(b[a]);this.encoder_.writeSplitFixed64(c.lo,c.hi)}};
jspb.BinaryWriter.prototype.writePackedSfixed32=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(4*b.length),a=0;a<b.length;a++)this.encoder_.writeInt32(b[a])};jspb.BinaryWriter.prototype.writePackedSfixed64=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*b.length),a=0;a<b.length;a++)this.encoder_.writeInt64(b[a])};
jspb.BinaryWriter.prototype.writePackedSfixed64String=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*b.length),a=0;a<b.length;a++)this.encoder_.writeInt64String(b[a])};jspb.BinaryWriter.prototype.writePackedFloat=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(4*b.length),a=0;a<b.length;a++)this.encoder_.writeFloat(b[a])};
jspb.BinaryWriter.prototype.writePackedDouble=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*b.length),a=0;a<b.length;a++)this.encoder_.writeDouble(b[a])};jspb.BinaryWriter.prototype.writePackedBool=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(b.length),a=0;a<b.length;a++)this.encoder_.writeBool(b[a])};
jspb.BinaryWriter.prototype.writePackedEnum=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeEnum(b[c]);this.endDelimited_(a)}};jspb.BinaryWriter.prototype.writePackedFixedHash64=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*b.length),a=0;a<b.length;a++)this.encoder_.writeFixedHash64(b[a])};
jspb.BinaryWriter.prototype.writePackedVarintHash64=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeVarintHash64(b[c]);this.endDelimited_(a)}};jspb.Export={};exports.Map=jspb.Map;exports.Message=jspb.Message;exports.BinaryReader=jspb.BinaryReader;exports.BinaryWriter=jspb.BinaryWriter;exports.ExtensionFieldInfo=jspb.ExtensionFieldInfo;exports.ExtensionFieldBinaryInfo=jspb.ExtensionFieldBinaryInfo;exports.exportSymbol=goog.exportSymbol;exports.inherits=goog.inherits;exports.object={extend:goog.object.extend};exports.typeOf=goog.typeOf;


/***/ }),

/***/ "./node_modules/grpc-bchrpc-node/dist/client.js":
/*!******************************************************!*\
  !*** ./node_modules/grpc-bchrpc-node/dist/client.js ***!
  \******************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, __webpack_exports__, __webpack_require__ */
/*! CommonJS bailout: this is used directly at 2:20-24 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var fs = __importStar(__webpack_require__(/*! fs */ "fs"));
var grpc = __importStar(__webpack_require__(/*! grpc */ "./node_modules/grpc/index.js"));
var bchrpc_grpc = __importStar(__webpack_require__(/*! ../pb/bchrpc_grpc_pb */ "./node_modules/grpc-bchrpc-node/pb/bchrpc_grpc_pb.js"));
var bchrpc = __importStar(__webpack_require__(/*! ../pb/bchrpc_pb */ "./node_modules/grpc-bchrpc-node/pb/bchrpc_pb.js"));
var GrpcClient = /** @class */ (function () {
    function GrpcClient(_a) {
        var _b = _a === void 0 ? {} : _a, url = _b.url, rootCertPath = _b.rootCertPath, testnet = _b.testnet, options = _b.options;
        var creds = grpc.credentials.createSsl();
        if (rootCertPath) {
            var rootCert = fs.readFileSync(rootCertPath);
            creds = grpc.credentials.createSsl(rootCert);
        }
        if (!url && !testnet) {
            url = "bchd.greyh.at:8335";
        }
        else if (!url) {
            url = "bchd-testnet.greyh.at:18335";
        }
        if (!options) {
            options = {
                "grpc.max_receive_message_length": -1,
            };
        }
        this.client = new bchrpc_grpc.bchrpcClient(url, creds, options);
    }
    GrpcClient.prototype.getMempoolInfo = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.client.getMempoolInfo(new bchrpc.GetMempoolInfoRequest(), function (err, data) {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(data);
                }
            });
        });
    };
    GrpcClient.prototype.getRawMempool = function (_a) {
        var _this = this;
        var _b = _a.fullTransactions, fullTransactions = _b === void 0 ? false : _b;
        var req = new bchrpc.GetMempoolRequest();
        if (fullTransactions) {
            req.setFullTransactions(true);
        }
        else {
            req.setFullTransactions(false);
        }
        return new Promise(function (resolve, reject) {
            _this.client.getMempool(req, function (err, data) {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(data);
                }
            });
        });
    };
    GrpcClient.prototype.getRawTransaction = function (_a) {
        var _this = this;
        var hash = _a.hash, reversedHashOrder = _a.reversedHashOrder;
        var req = new bchrpc.GetRawTransactionRequest();
        if (reversedHashOrder) {
            req.setHash(new Uint8Array(hash.match(/.{1,2}/g).map(function (byte) { return parseInt(byte, 16); })).reverse());
        }
        else {
            req.setHash(new Uint8Array(hash.match(/.{1,2}/g).map(function (byte) { return parseInt(byte, 16); })));
        }
        return new Promise(function (resolve, reject) {
            _this.client.getRawTransaction(req, function (err, data) {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(data);
                }
            });
        });
    };
    GrpcClient.prototype.getTransaction = function (_a) {
        var _this = this;
        var hash = _a.hash, reversedHashOrder = _a.reversedHashOrder;
        var req = new bchrpc.GetTransactionRequest();
        if (reversedHashOrder) {
            req.setHash(new Uint8Array(hash.match(/.{1,2}/g).map(function (byte) { return parseInt(byte, 16); })).reverse());
        }
        else {
            req.setHash(new Uint8Array(hash.match(/.{1,2}/g).map(function (byte) { return parseInt(byte, 16); })));
        }
        return new Promise(function (resolve, reject) {
            _this.client.getTransaction(req, function (err, data) {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(data);
                }
            });
        });
    };
    GrpcClient.prototype.getAddressTransactions = function (_a) {
        var _this = this;
        var address = _a.address, nbSkip = _a.nbSkip, nbFetch = _a.nbFetch, height = _a.height, hash = _a.hash, reversedHashOrder = _a.reversedHashOrder;
        var req = new bchrpc.GetAddressTransactionsRequest();
        if (nbSkip) {
            req.setNbSkip(nbSkip);
        }
        if (nbFetch) {
            req.setNbFetch(nbFetch);
        }
        if (height) {
            req.setHeight(height);
        }
        if (hash) {
            if (reversedHashOrder) {
                req.setHash(new Uint8Array(hash.match(/.{1,2}/g).map(function (byte) { return parseInt(byte, 16); })).reverse());
            }
            else {
                req.setHash(new Uint8Array(hash.match(/.{1,2}/g).map(function (byte) { return parseInt(byte, 16); })));
            }
        }
        req.setAddress(address);
        return new Promise(function (resolve, reject) {
            _this.client.getAddressTransactions(req, function (err, data) {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(data);
                }
            });
        });
    };
    GrpcClient.prototype.getUnspentOutput = function (_a) {
        var _this = this;
        var hash = _a.hash, vout = _a.vout, reversedHashOrder = _a.reversedHashOrder, includeMempool = _a.includeMempool;
        var req = new bchrpc.GetUnspentOutputRequest();
        if (includeMempool) {
            req.setIncludeMempool(true);
        }
        if (reversedHashOrder) {
            req.setHash(new Uint8Array(hash.match(/.{1,2}/g).map(function (byte) { return parseInt(byte, 16); })).reverse());
        }
        else {
            req.setHash(new Uint8Array(hash.match(/.{1,2}/g).map(function (byte) { return parseInt(byte, 16); })));
        }
        req.setIndex(vout);
        return new Promise(function (resolve, reject) {
            _this.client.getUnspentOutput(req, function (err, data) {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(data);
                }
            });
        });
    };
    GrpcClient.prototype.getAddressUtxos = function (_a) {
        var _this = this;
        var address = _a.address, includeMempool = _a.includeMempool;
        var req = new bchrpc.GetAddressUnspentOutputsRequest();
        req.setAddress(address);
        if (includeMempool) {
            req.setIncludeMempool(true);
        }
        return new Promise(function (resolve, reject) {
            _this.client.getAddressUnspentOutputs(req, function (err, data) {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(data);
                }
            });
        });
    };
    GrpcClient.prototype.getRawBlock = function (_a) {
        var _this = this;
        var index = _a.index, hash = _a.hash, reversedHashOrder = _a.reversedHashOrder;
        var req = new bchrpc.GetRawBlockRequest();
        if (index !== null && index !== undefined) {
            req.setHeight(index);
        }
        else if (hash) {
            if (reversedHashOrder) {
                req.setHash(new Uint8Array(hash.match(/.{1,2}/g).map(function (byte) { return parseInt(byte, 16); })).reverse());
            }
            else {
                req.setHash(new Uint8Array(hash.match(/.{1,2}/g).map(function (byte) { return parseInt(byte, 16); })));
            }
        }
        else {
            throw Error("No index or hash provided for block");
        }
        return new Promise(function (resolve, reject) {
            _this.client.getRawBlock(req, function (err, data) {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(data);
                }
            });
        });
    };
    GrpcClient.prototype.getBlock = function (_a) {
        var _this = this;
        var index = _a.index, hash = _a.hash, reversedHashOrder = _a.reversedHashOrder, fullTransactions = _a.fullTransactions;
        var req = new bchrpc.GetBlockRequest();
        if (index !== null && index !== undefined) {
            req.setHeight(index);
        }
        else if (hash) {
            if (reversedHashOrder) {
                req.setHash(new Uint8Array(hash.match(/.{1,2}/g).map(function (byte) { return parseInt(byte, 16); })).reverse());
            }
            else {
                req.setHash(new Uint8Array(hash.match(/.{1,2}/g).map(function (byte) { return parseInt(byte, 16); })));
            }
        }
        else {
            throw Error("No index or hash provided for block");
        }
        if (fullTransactions) {
            req.setFullTransactions(true);
        }
        return new Promise(function (resolve, reject) {
            _this.client.getBlock(req, function (err, data) {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(data);
                }
            });
        });
    };
    GrpcClient.prototype.getBlockInfo = function (_a) {
        var _this = this;
        var index = _a.index, hash = _a.hash, reversedHashOrder = _a.reversedHashOrder;
        var req = new bchrpc.GetBlockInfoRequest();
        if (index !== null && index !== undefined) {
            req.setHeight(index);
        }
        else if (hash) {
            if (reversedHashOrder) {
                req.setHash(new Uint8Array(hash.match(/.{1,2}/g).map(function (byte) { return parseInt(byte, 16); })).reverse());
            }
            else {
                req.setHash(new Uint8Array(hash.match(/.{1,2}/g).map(function (byte) { return parseInt(byte, 16); })));
            }
        }
        else {
            throw Error("No index or hash provided for block");
        }
        return new Promise(function (resolve, reject) {
            _this.client.getBlockInfo(req, function (err, data) {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(data);
                }
            });
        });
    };
    GrpcClient.prototype.getBlockchainInfo = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.client.getBlockchainInfo(new bchrpc.GetBlockchainInfoRequest(), function (err, data) {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(data);
                }
            });
        });
    };
    GrpcClient.prototype.getBlockHeaders = function (stopHash) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var req = new bchrpc.GetHeadersRequest();
            req.setStopHash(new Uint8Array(stopHash.match(/.{1,2}/g).map(function (byte) { return parseInt(byte, 16); })).reverse());
            _this.client.getHeaders(req, function (err, data) {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(data);
                }
            });
        });
    };
    GrpcClient.prototype.subscribeTransactions = function (_a) {
        var _this = this;
        var includeMempoolAcceptance = _a.includeMempoolAcceptance, includeBlockAcceptance = _a.includeBlockAcceptance, includeSerializedTxn = _a.includeSerializedTxn, addresses = _a.addresses, outpoints = _a.outpoints;
        return new Promise(function (resolve, reject) {
            var req = new bchrpc.SubscribeTransactionsRequest();
            includeMempoolAcceptance ? req.setIncludeMempool(true) : req.setIncludeMempool(false);
            includeBlockAcceptance ? req.setIncludeInBlock(true) : req.setIncludeInBlock(false);
            includeSerializedTxn ? req.setSerializeTx(true) : req.setSerializeTx(false);
            var filter = new bchrpc.TransactionFilter();
            if (addresses) {
                for (var _i = 0, addresses_1 = addresses; _i < addresses_1.length; _i++) {
                    var addr = addresses_1[_i];
                    // TODO check for cashAddr format, auto convert slpAddr format to cashAddr
                    filter.addAddresses(addr);
                }
                if (addresses.length === 0) {
                    addresses = undefined;
                }
            }
            if (outpoints) {
                for (var _a = 0, outpoints_1 = outpoints; _a < outpoints_1.length; _a++) {
                    var outpoint = outpoints_1[_a];
                    var o = new bchrpc.Transaction.Input.Outpoint();
                    o.setHash(outpoint.txid.reverse());
                    o.setIndex(outpoint.vout);
                    filter.addOutpoints(o);
                }
                if (outpoints.length === 0) {
                    outpoints = undefined;
                }
            }
            if (!addresses && !outpoints) {
                filter.setAllTransactions(true);
            }
            req.setSubscribe(filter);
            try {
                resolve(_this.client.subscribeTransactions(req));
            }
            catch (err) {
                reject(err);
            }
        });
    };
    GrpcClient.prototype.subscribeBlocks = function (_a) {
        var _this = this;
        var includeSerializedBlock = _a.includeSerializedBlock, includeTxnHashes = _a.includeTxnHashes, includeTxnData = _a.includeTxnData;
        return new Promise(function (resolve, reject) {
            var req = new bchrpc.SubscribeBlocksRequest();
            includeTxnHashes ? req.setFullBlock(true) : req.setFullBlock(false);
            includeTxnData ? req.setFullTransactions(true) : req.setFullTransactions(false);
            includeSerializedBlock ? req.setSerializeBlock(true) : req.setSerializeBlock(false);
            try {
                resolve(_this.client.subscribeBlocks(req));
            }
            catch (err) {
                reject(err);
            }
        });
    };
    GrpcClient.prototype.submitTransaction = function (_a) {
        var _this = this;
        var txnBuf = _a.txnBuf, txnHex = _a.txnHex, txn = _a.txn;
        var tx;
        var req = new bchrpc.SubmitTransactionRequest();
        if (txnBuf) {
            tx = txnBuf.toString("base64");
        }
        else if (txnHex) {
            tx = Buffer.from(txnHex, "hex").toString("base64");
        }
        else if (txn) {
            tx = txn;
        }
        else {
            throw Error("Most provide either Hex string, Buffer, or Uint8Array");
        }
        req.setTransaction(tx);
        return new Promise(function (resolve, reject) {
            _this.client.submitTransaction(req, function (err, data) {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(data);
                }
            });
        });
    };
    return GrpcClient;
}());
exports.GrpcClient = GrpcClient;
//# sourceMappingURL=client.js.map

/***/ }),

/***/ "./node_modules/grpc-bchrpc-node/dist/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/grpc-bchrpc-node/dist/index.js ***!
  \*****************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/*! CommonJS bailout: exports.hasOwnProperty(...) prevents optimization as exports is passed as call context as 3:26-48 */
/*! CommonJS bailout: exports is used directly at 3:53-60 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", ({ value: true }));
__export(__webpack_require__(/*! ../pb/bchrpc_grpc_pb */ "./node_modules/grpc-bchrpc-node/pb/bchrpc_grpc_pb.js"));
__export(__webpack_require__(/*! ../pb/bchrpc_pb */ "./node_modules/grpc-bchrpc-node/pb/bchrpc_pb.js"));
__export(__webpack_require__(/*! ./client */ "./node_modules/grpc-bchrpc-node/dist/client.js"));
__export(__webpack_require__(/*! grpc */ "./node_modules/grpc/index.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/grpc-bchrpc-node/pb/bchrpc_grpc_pb.js":
/*!************************************************************!*\
  !*** ./node_modules/grpc-bchrpc-node/pb/bchrpc_grpc_pb.js ***!
  \************************************************************/
/*! default exports */
/*! export bchrpcClient [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bchrpcService [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
// GENERATED CODE -- DO NOT EDIT!


var grpc = __webpack_require__(/*! grpc */ "./node_modules/grpc/index.js");
var pb_bchrpc_pb = __webpack_require__(/*! ../pb/bchrpc_pb.js */ "./node_modules/grpc-bchrpc-node/pb/bchrpc_pb.js");

function serialize_pb_BlockNotification(arg) {
  if (!(arg instanceof pb_bchrpc_pb.BlockNotification)) {
    throw new Error('Expected argument of type pb.BlockNotification');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_BlockNotification(buffer_arg) {
  return pb_bchrpc_pb.BlockNotification.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetAddressTransactionsRequest(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetAddressTransactionsRequest)) {
    throw new Error('Expected argument of type pb.GetAddressTransactionsRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetAddressTransactionsRequest(buffer_arg) {
  return pb_bchrpc_pb.GetAddressTransactionsRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetAddressTransactionsResponse(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetAddressTransactionsResponse)) {
    throw new Error('Expected argument of type pb.GetAddressTransactionsResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetAddressTransactionsResponse(buffer_arg) {
  return pb_bchrpc_pb.GetAddressTransactionsResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetAddressUnspentOutputsRequest(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetAddressUnspentOutputsRequest)) {
    throw new Error('Expected argument of type pb.GetAddressUnspentOutputsRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetAddressUnspentOutputsRequest(buffer_arg) {
  return pb_bchrpc_pb.GetAddressUnspentOutputsRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetAddressUnspentOutputsResponse(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetAddressUnspentOutputsResponse)) {
    throw new Error('Expected argument of type pb.GetAddressUnspentOutputsResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetAddressUnspentOutputsResponse(buffer_arg) {
  return pb_bchrpc_pb.GetAddressUnspentOutputsResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetBlockFilterRequest(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetBlockFilterRequest)) {
    throw new Error('Expected argument of type pb.GetBlockFilterRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetBlockFilterRequest(buffer_arg) {
  return pb_bchrpc_pb.GetBlockFilterRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetBlockFilterResponse(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetBlockFilterResponse)) {
    throw new Error('Expected argument of type pb.GetBlockFilterResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetBlockFilterResponse(buffer_arg) {
  return pb_bchrpc_pb.GetBlockFilterResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetBlockInfoRequest(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetBlockInfoRequest)) {
    throw new Error('Expected argument of type pb.GetBlockInfoRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetBlockInfoRequest(buffer_arg) {
  return pb_bchrpc_pb.GetBlockInfoRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetBlockInfoResponse(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetBlockInfoResponse)) {
    throw new Error('Expected argument of type pb.GetBlockInfoResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetBlockInfoResponse(buffer_arg) {
  return pb_bchrpc_pb.GetBlockInfoResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetBlockRequest(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetBlockRequest)) {
    throw new Error('Expected argument of type pb.GetBlockRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetBlockRequest(buffer_arg) {
  return pb_bchrpc_pb.GetBlockRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetBlockResponse(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetBlockResponse)) {
    throw new Error('Expected argument of type pb.GetBlockResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetBlockResponse(buffer_arg) {
  return pb_bchrpc_pb.GetBlockResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetBlockchainInfoRequest(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetBlockchainInfoRequest)) {
    throw new Error('Expected argument of type pb.GetBlockchainInfoRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetBlockchainInfoRequest(buffer_arg) {
  return pb_bchrpc_pb.GetBlockchainInfoRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetBlockchainInfoResponse(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetBlockchainInfoResponse)) {
    throw new Error('Expected argument of type pb.GetBlockchainInfoResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetBlockchainInfoResponse(buffer_arg) {
  return pb_bchrpc_pb.GetBlockchainInfoResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetHeadersRequest(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetHeadersRequest)) {
    throw new Error('Expected argument of type pb.GetHeadersRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetHeadersRequest(buffer_arg) {
  return pb_bchrpc_pb.GetHeadersRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetHeadersResponse(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetHeadersResponse)) {
    throw new Error('Expected argument of type pb.GetHeadersResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetHeadersResponse(buffer_arg) {
  return pb_bchrpc_pb.GetHeadersResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetMempoolInfoRequest(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetMempoolInfoRequest)) {
    throw new Error('Expected argument of type pb.GetMempoolInfoRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetMempoolInfoRequest(buffer_arg) {
  return pb_bchrpc_pb.GetMempoolInfoRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetMempoolInfoResponse(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetMempoolInfoResponse)) {
    throw new Error('Expected argument of type pb.GetMempoolInfoResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetMempoolInfoResponse(buffer_arg) {
  return pb_bchrpc_pb.GetMempoolInfoResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetMempoolRequest(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetMempoolRequest)) {
    throw new Error('Expected argument of type pb.GetMempoolRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetMempoolRequest(buffer_arg) {
  return pb_bchrpc_pb.GetMempoolRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetMempoolResponse(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetMempoolResponse)) {
    throw new Error('Expected argument of type pb.GetMempoolResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetMempoolResponse(buffer_arg) {
  return pb_bchrpc_pb.GetMempoolResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetMerkleProofRequest(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetMerkleProofRequest)) {
    throw new Error('Expected argument of type pb.GetMerkleProofRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetMerkleProofRequest(buffer_arg) {
  return pb_bchrpc_pb.GetMerkleProofRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetMerkleProofResponse(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetMerkleProofResponse)) {
    throw new Error('Expected argument of type pb.GetMerkleProofResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetMerkleProofResponse(buffer_arg) {
  return pb_bchrpc_pb.GetMerkleProofResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetRawAddressTransactionsRequest(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetRawAddressTransactionsRequest)) {
    throw new Error('Expected argument of type pb.GetRawAddressTransactionsRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetRawAddressTransactionsRequest(buffer_arg) {
  return pb_bchrpc_pb.GetRawAddressTransactionsRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetRawAddressTransactionsResponse(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetRawAddressTransactionsResponse)) {
    throw new Error('Expected argument of type pb.GetRawAddressTransactionsResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetRawAddressTransactionsResponse(buffer_arg) {
  return pb_bchrpc_pb.GetRawAddressTransactionsResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetRawBlockRequest(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetRawBlockRequest)) {
    throw new Error('Expected argument of type pb.GetRawBlockRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetRawBlockRequest(buffer_arg) {
  return pb_bchrpc_pb.GetRawBlockRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetRawBlockResponse(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetRawBlockResponse)) {
    throw new Error('Expected argument of type pb.GetRawBlockResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetRawBlockResponse(buffer_arg) {
  return pb_bchrpc_pb.GetRawBlockResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetRawTransactionRequest(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetRawTransactionRequest)) {
    throw new Error('Expected argument of type pb.GetRawTransactionRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetRawTransactionRequest(buffer_arg) {
  return pb_bchrpc_pb.GetRawTransactionRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetRawTransactionResponse(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetRawTransactionResponse)) {
    throw new Error('Expected argument of type pb.GetRawTransactionResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetRawTransactionResponse(buffer_arg) {
  return pb_bchrpc_pb.GetRawTransactionResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetTransactionRequest(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetTransactionRequest)) {
    throw new Error('Expected argument of type pb.GetTransactionRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetTransactionRequest(buffer_arg) {
  return pb_bchrpc_pb.GetTransactionRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetTransactionResponse(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetTransactionResponse)) {
    throw new Error('Expected argument of type pb.GetTransactionResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetTransactionResponse(buffer_arg) {
  return pb_bchrpc_pb.GetTransactionResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetUnspentOutputRequest(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetUnspentOutputRequest)) {
    throw new Error('Expected argument of type pb.GetUnspentOutputRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetUnspentOutputRequest(buffer_arg) {
  return pb_bchrpc_pb.GetUnspentOutputRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_GetUnspentOutputResponse(arg) {
  if (!(arg instanceof pb_bchrpc_pb.GetUnspentOutputResponse)) {
    throw new Error('Expected argument of type pb.GetUnspentOutputResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_GetUnspentOutputResponse(buffer_arg) {
  return pb_bchrpc_pb.GetUnspentOutputResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_SubmitTransactionRequest(arg) {
  if (!(arg instanceof pb_bchrpc_pb.SubmitTransactionRequest)) {
    throw new Error('Expected argument of type pb.SubmitTransactionRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_SubmitTransactionRequest(buffer_arg) {
  return pb_bchrpc_pb.SubmitTransactionRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_SubmitTransactionResponse(arg) {
  if (!(arg instanceof pb_bchrpc_pb.SubmitTransactionResponse)) {
    throw new Error('Expected argument of type pb.SubmitTransactionResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_SubmitTransactionResponse(buffer_arg) {
  return pb_bchrpc_pb.SubmitTransactionResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_SubscribeBlocksRequest(arg) {
  if (!(arg instanceof pb_bchrpc_pb.SubscribeBlocksRequest)) {
    throw new Error('Expected argument of type pb.SubscribeBlocksRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_SubscribeBlocksRequest(buffer_arg) {
  return pb_bchrpc_pb.SubscribeBlocksRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_SubscribeTransactionsRequest(arg) {
  if (!(arg instanceof pb_bchrpc_pb.SubscribeTransactionsRequest)) {
    throw new Error('Expected argument of type pb.SubscribeTransactionsRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_SubscribeTransactionsRequest(buffer_arg) {
  return pb_bchrpc_pb.SubscribeTransactionsRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_pb_TransactionNotification(arg) {
  if (!(arg instanceof pb_bchrpc_pb.TransactionNotification)) {
    throw new Error('Expected argument of type pb.TransactionNotification');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_pb_TransactionNotification(buffer_arg) {
  return pb_bchrpc_pb.TransactionNotification.deserializeBinary(new Uint8Array(buffer_arg));
}


// bchrpc contains a set of RPCs that can be exposed publicly via
// the command line options. This service could be authenticated or
// unauthenticated.
var bchrpcService = exports.bchrpcService = {
  // Get info about the mempool.
  getMempoolInfo: {
    path: '/pb.bchrpc/GetMempoolInfo',
    requestStream: false,
    responseStream: false,
    requestType: pb_bchrpc_pb.GetMempoolInfoRequest,
    responseType: pb_bchrpc_pb.GetMempoolInfoResponse,
    requestSerialize: serialize_pb_GetMempoolInfoRequest,
    requestDeserialize: deserialize_pb_GetMempoolInfoRequest,
    responseSerialize: serialize_pb_GetMempoolInfoResponse,
    responseDeserialize: deserialize_pb_GetMempoolInfoResponse,
  },
  // Returns information about all of the transactions currently in the memory pool.
  // Offers an option to return full transactions or just transactions hashes.
  getMempool: {
    path: '/pb.bchrpc/GetMempool',
    requestStream: false,
    responseStream: false,
    requestType: pb_bchrpc_pb.GetMempoolRequest,
    responseType: pb_bchrpc_pb.GetMempoolResponse,
    requestSerialize: serialize_pb_GetMempoolRequest,
    requestDeserialize: deserialize_pb_GetMempoolRequest,
    responseSerialize: serialize_pb_GetMempoolResponse,
    responseDeserialize: deserialize_pb_GetMempoolResponse,
  },
  // GetBlockchainInfo info about the blockchain including the most recent
  // block hash and height.
  getBlockchainInfo: {
    path: '/pb.bchrpc/GetBlockchainInfo',
    requestStream: false,
    responseStream: false,
    requestType: pb_bchrpc_pb.GetBlockchainInfoRequest,
    responseType: pb_bchrpc_pb.GetBlockchainInfoResponse,
    requestSerialize: serialize_pb_GetBlockchainInfoRequest,
    requestDeserialize: deserialize_pb_GetBlockchainInfoRequest,
    responseSerialize: serialize_pb_GetBlockchainInfoResponse,
    responseDeserialize: deserialize_pb_GetBlockchainInfoResponse,
  },
  // Get info about the given block.
  getBlockInfo: {
    path: '/pb.bchrpc/GetBlockInfo',
    requestStream: false,
    responseStream: false,
    requestType: pb_bchrpc_pb.GetBlockInfoRequest,
    responseType: pb_bchrpc_pb.GetBlockInfoResponse,
    requestSerialize: serialize_pb_GetBlockInfoRequest,
    requestDeserialize: deserialize_pb_GetBlockInfoRequest,
    responseSerialize: serialize_pb_GetBlockInfoResponse,
    responseDeserialize: deserialize_pb_GetBlockInfoResponse,
  },
  // Get a block.
  getBlock: {
    path: '/pb.bchrpc/GetBlock',
    requestStream: false,
    responseStream: false,
    requestType: pb_bchrpc_pb.GetBlockRequest,
    responseType: pb_bchrpc_pb.GetBlockResponse,
    requestSerialize: serialize_pb_GetBlockRequest,
    requestDeserialize: deserialize_pb_GetBlockRequest,
    responseSerialize: serialize_pb_GetBlockResponse,
    responseDeserialize: deserialize_pb_GetBlockResponse,
  },
  // Get a serialized block.
  getRawBlock: {
    path: '/pb.bchrpc/GetRawBlock',
    requestStream: false,
    responseStream: false,
    requestType: pb_bchrpc_pb.GetRawBlockRequest,
    responseType: pb_bchrpc_pb.GetRawBlockResponse,
    requestSerialize: serialize_pb_GetRawBlockRequest,
    requestDeserialize: deserialize_pb_GetRawBlockRequest,
    responseSerialize: serialize_pb_GetRawBlockResponse,
    responseDeserialize: deserialize_pb_GetRawBlockResponse,
  },
  // Get a block filter.
  //
  // **Requires CfIndex**
  getBlockFilter: {
    path: '/pb.bchrpc/GetBlockFilter',
    requestStream: false,
    responseStream: false,
    requestType: pb_bchrpc_pb.GetBlockFilterRequest,
    responseType: pb_bchrpc_pb.GetBlockFilterResponse,
    requestSerialize: serialize_pb_GetBlockFilterRequest,
    requestDeserialize: deserialize_pb_GetBlockFilterRequest,
    responseSerialize: serialize_pb_GetBlockFilterResponse,
    responseDeserialize: deserialize_pb_GetBlockFilterResponse,
  },
  // This RPC sends a block locator object to the server and the server responds with
  // a batch of no more than 2000 headers. Upon parsing the block locator, if the server
  // concludes there has been a fork, it will send headers starting at the fork point,
  // or genesis if no blocks in the locator are in the best chain. If the locator is
  // already at the tip no headers will be returned.
  getHeaders: {
    path: '/pb.bchrpc/GetHeaders',
    requestStream: false,
    responseStream: false,
    requestType: pb_bchrpc_pb.GetHeadersRequest,
    responseType: pb_bchrpc_pb.GetHeadersResponse,
    requestSerialize: serialize_pb_GetHeadersRequest,
    requestDeserialize: deserialize_pb_GetHeadersRequest,
    responseSerialize: serialize_pb_GetHeadersResponse,
    responseDeserialize: deserialize_pb_GetHeadersResponse,
  },
  // Get a transaction given its hash.
  //
  // **Requires TxIndex**
  getTransaction: {
    path: '/pb.bchrpc/GetTransaction',
    requestStream: false,
    responseStream: false,
    requestType: pb_bchrpc_pb.GetTransactionRequest,
    responseType: pb_bchrpc_pb.GetTransactionResponse,
    requestSerialize: serialize_pb_GetTransactionRequest,
    requestDeserialize: deserialize_pb_GetTransactionRequest,
    responseSerialize: serialize_pb_GetTransactionResponse,
    responseDeserialize: deserialize_pb_GetTransactionResponse,
  },
  // Get a serialized transaction given its hash.
  //
  // **Requires TxIndex**
  getRawTransaction: {
    path: '/pb.bchrpc/GetRawTransaction',
    requestStream: false,
    responseStream: false,
    requestType: pb_bchrpc_pb.GetRawTransactionRequest,
    responseType: pb_bchrpc_pb.GetRawTransactionResponse,
    requestSerialize: serialize_pb_GetRawTransactionRequest,
    requestDeserialize: deserialize_pb_GetRawTransactionRequest,
    responseSerialize: serialize_pb_GetRawTransactionResponse,
    responseDeserialize: deserialize_pb_GetRawTransactionResponse,
  },
  // Returns the transactions for the given address. Offers offset,
  // limit, and from block options.
  //
  // **Requires AddressIndex**
  getAddressTransactions: {
    path: '/pb.bchrpc/GetAddressTransactions',
    requestStream: false,
    responseStream: false,
    requestType: pb_bchrpc_pb.GetAddressTransactionsRequest,
    responseType: pb_bchrpc_pb.GetAddressTransactionsResponse,
    requestSerialize: serialize_pb_GetAddressTransactionsRequest,
    requestDeserialize: deserialize_pb_GetAddressTransactionsRequest,
    responseSerialize: serialize_pb_GetAddressTransactionsResponse,
    responseDeserialize: deserialize_pb_GetAddressTransactionsResponse,
  },
  // Returns the raw transactions for the given address. Offers offset,
  // limit, and from block options.
  //
  // **Requires AddressIndex**
  getRawAddressTransactions: {
    path: '/pb.bchrpc/GetRawAddressTransactions',
    requestStream: false,
    responseStream: false,
    requestType: pb_bchrpc_pb.GetRawAddressTransactionsRequest,
    responseType: pb_bchrpc_pb.GetRawAddressTransactionsResponse,
    requestSerialize: serialize_pb_GetRawAddressTransactionsRequest,
    requestDeserialize: deserialize_pb_GetRawAddressTransactionsRequest,
    responseSerialize: serialize_pb_GetRawAddressTransactionsResponse,
    responseDeserialize: deserialize_pb_GetRawAddressTransactionsResponse,
  },
  // Returns all the unspent transaction outputs for the given address.
  //
  // **Requires AddressIndex**
  getAddressUnspentOutputs: {
    path: '/pb.bchrpc/GetAddressUnspentOutputs',
    requestStream: false,
    responseStream: false,
    requestType: pb_bchrpc_pb.GetAddressUnspentOutputsRequest,
    responseType: pb_bchrpc_pb.GetAddressUnspentOutputsResponse,
    requestSerialize: serialize_pb_GetAddressUnspentOutputsRequest,
    requestDeserialize: deserialize_pb_GetAddressUnspentOutputsRequest,
    responseSerialize: serialize_pb_GetAddressUnspentOutputsResponse,
    responseDeserialize: deserialize_pb_GetAddressUnspentOutputsResponse,
  },
  // Looks up the unspent output in the utxo set and returns the utxo metadata or not found.
  getUnspentOutput: {
    path: '/pb.bchrpc/GetUnspentOutput',
    requestStream: false,
    responseStream: false,
    requestType: pb_bchrpc_pb.GetUnspentOutputRequest,
    responseType: pb_bchrpc_pb.GetUnspentOutputResponse,
    requestSerialize: serialize_pb_GetUnspentOutputRequest,
    requestDeserialize: deserialize_pb_GetUnspentOutputRequest,
    responseSerialize: serialize_pb_GetUnspentOutputResponse,
    responseDeserialize: deserialize_pb_GetUnspentOutputResponse,
  },
  // Returns a merkle (SPV) proof that the given transaction is in the provided block.
  //
  // **Requires TxIndex***
  getMerkleProof: {
    path: '/pb.bchrpc/GetMerkleProof',
    requestStream: false,
    responseStream: false,
    requestType: pb_bchrpc_pb.GetMerkleProofRequest,
    responseType: pb_bchrpc_pb.GetMerkleProofResponse,
    requestSerialize: serialize_pb_GetMerkleProofRequest,
    requestDeserialize: deserialize_pb_GetMerkleProofRequest,
    responseSerialize: serialize_pb_GetMerkleProofResponse,
    responseDeserialize: deserialize_pb_GetMerkleProofResponse,
  },
  // Submit a transaction to all connected peers.
  submitTransaction: {
    path: '/pb.bchrpc/SubmitTransaction',
    requestStream: false,
    responseStream: false,
    requestType: pb_bchrpc_pb.SubmitTransactionRequest,
    responseType: pb_bchrpc_pb.SubmitTransactionResponse,
    requestSerialize: serialize_pb_SubmitTransactionRequest,
    requestDeserialize: deserialize_pb_SubmitTransactionRequest,
    responseSerialize: serialize_pb_SubmitTransactionResponse,
    responseDeserialize: deserialize_pb_SubmitTransactionResponse,
  },
  // Subscribe to relevant transactions based on the subscription requests.
  //
  // This RPC does not use bi-directional streams and therefore can be used
  // with grpc-web. You will need to close and re-open the stream whenever
  // you want to update the addresses. If you are not using grpc-web
  // then SubscribeTransactionStream is more appropriate.
  //
  // **Requires TxIndex to receive input metadata**
  subscribeTransactions: {
    path: '/pb.bchrpc/SubscribeTransactions',
    requestStream: false,
    responseStream: true,
    requestType: pb_bchrpc_pb.SubscribeTransactionsRequest,
    responseType: pb_bchrpc_pb.TransactionNotification,
    requestSerialize: serialize_pb_SubscribeTransactionsRequest,
    requestDeserialize: deserialize_pb_SubscribeTransactionsRequest,
    responseSerialize: serialize_pb_TransactionNotification,
    responseDeserialize: deserialize_pb_TransactionNotification,
  },
  // Subscribe to relevant transactions based on the subscription requests.
  // The parameters to filter transactions on can be updated by sending new
  // SubscribeTransactionsRequest objects on the stream.
  //
  // Because this RPC using bi-directional streaming it cannot be used with
  // grpc-web.
  //
  // **Requires TxIndex to receive input metadata**
  subscribeTransactionStream: {
    path: '/pb.bchrpc/SubscribeTransactionStream',
    requestStream: true,
    responseStream: true,
    requestType: pb_bchrpc_pb.SubscribeTransactionsRequest,
    responseType: pb_bchrpc_pb.TransactionNotification,
    requestSerialize: serialize_pb_SubscribeTransactionsRequest,
    requestDeserialize: deserialize_pb_SubscribeTransactionsRequest,
    responseSerialize: serialize_pb_TransactionNotification,
    responseDeserialize: deserialize_pb_TransactionNotification,
  },
  // Subscribe to notifications of new blocks being connected to the blockchain
  // or blocks being disconnected.
  subscribeBlocks: {
    path: '/pb.bchrpc/SubscribeBlocks',
    requestStream: false,
    responseStream: true,
    requestType: pb_bchrpc_pb.SubscribeBlocksRequest,
    responseType: pb_bchrpc_pb.BlockNotification,
    requestSerialize: serialize_pb_SubscribeBlocksRequest,
    requestDeserialize: deserialize_pb_SubscribeBlocksRequest,
    responseSerialize: serialize_pb_BlockNotification,
    responseDeserialize: deserialize_pb_BlockNotification,
  },
};

exports.bchrpcClient = grpc.makeGenericClientConstructor(bchrpcService);


/***/ }),

/***/ "./node_modules/grpc-bchrpc-node/pb/bchrpc_pb.js":
/*!*******************************************************!*\
  !*** ./node_modules/grpc-bchrpc-node/pb/bchrpc_pb.js ***!
  \*******************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/*! CommonJS bailout: exports is used directly at 11262:19-26 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = __webpack_require__(/*! google-protobuf */ "./node_modules/google-protobuf/google-protobuf.js");
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.pb.Block', null, global);
goog.exportSymbol('proto.pb.Block.TransactionData', null, global);
goog.exportSymbol('proto.pb.BlockInfo', null, global);
goog.exportSymbol('proto.pb.BlockNotification', null, global);
goog.exportSymbol('proto.pb.BlockNotification.Type', null, global);
goog.exportSymbol('proto.pb.GetAddressTransactionsRequest', null, global);
goog.exportSymbol('proto.pb.GetAddressTransactionsResponse', null, global);
goog.exportSymbol('proto.pb.GetAddressUnspentOutputsRequest', null, global);
goog.exportSymbol('proto.pb.GetAddressUnspentOutputsResponse', null, global);
goog.exportSymbol('proto.pb.GetBlockFilterRequest', null, global);
goog.exportSymbol('proto.pb.GetBlockFilterResponse', null, global);
goog.exportSymbol('proto.pb.GetBlockInfoRequest', null, global);
goog.exportSymbol('proto.pb.GetBlockInfoResponse', null, global);
goog.exportSymbol('proto.pb.GetBlockRequest', null, global);
goog.exportSymbol('proto.pb.GetBlockResponse', null, global);
goog.exportSymbol('proto.pb.GetBlockchainInfoRequest', null, global);
goog.exportSymbol('proto.pb.GetBlockchainInfoResponse', null, global);
goog.exportSymbol('proto.pb.GetBlockchainInfoResponse.BitcoinNet', null, global);
goog.exportSymbol('proto.pb.GetHeadersRequest', null, global);
goog.exportSymbol('proto.pb.GetHeadersResponse', null, global);
goog.exportSymbol('proto.pb.GetMempoolInfoRequest', null, global);
goog.exportSymbol('proto.pb.GetMempoolInfoResponse', null, global);
goog.exportSymbol('proto.pb.GetMempoolRequest', null, global);
goog.exportSymbol('proto.pb.GetMempoolResponse', null, global);
goog.exportSymbol('proto.pb.GetMempoolResponse.TransactionData', null, global);
goog.exportSymbol('proto.pb.GetMerkleProofRequest', null, global);
goog.exportSymbol('proto.pb.GetMerkleProofResponse', null, global);
goog.exportSymbol('proto.pb.GetRawAddressTransactionsRequest', null, global);
goog.exportSymbol('proto.pb.GetRawAddressTransactionsResponse', null, global);
goog.exportSymbol('proto.pb.GetRawBlockRequest', null, global);
goog.exportSymbol('proto.pb.GetRawBlockResponse', null, global);
goog.exportSymbol('proto.pb.GetRawTransactionRequest', null, global);
goog.exportSymbol('proto.pb.GetRawTransactionResponse', null, global);
goog.exportSymbol('proto.pb.GetTransactionRequest', null, global);
goog.exportSymbol('proto.pb.GetTransactionResponse', null, global);
goog.exportSymbol('proto.pb.GetUnspentOutputRequest', null, global);
goog.exportSymbol('proto.pb.GetUnspentOutputResponse', null, global);
goog.exportSymbol('proto.pb.MempoolTransaction', null, global);
goog.exportSymbol('proto.pb.SubmitTransactionRequest', null, global);
goog.exportSymbol('proto.pb.SubmitTransactionResponse', null, global);
goog.exportSymbol('proto.pb.SubscribeBlocksRequest', null, global);
goog.exportSymbol('proto.pb.SubscribeTransactionsRequest', null, global);
goog.exportSymbol('proto.pb.Transaction', null, global);
goog.exportSymbol('proto.pb.Transaction.Input', null, global);
goog.exportSymbol('proto.pb.Transaction.Input.Outpoint', null, global);
goog.exportSymbol('proto.pb.Transaction.Output', null, global);
goog.exportSymbol('proto.pb.TransactionFilter', null, global);
goog.exportSymbol('proto.pb.TransactionNotification', null, global);
goog.exportSymbol('proto.pb.TransactionNotification.Type', null, global);
goog.exportSymbol('proto.pb.UnspentOutput', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetMempoolInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetMempoolInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetMempoolInfoRequest.displayName = 'proto.pb.GetMempoolInfoRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetMempoolInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetMempoolInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetMempoolInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMempoolInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetMempoolInfoRequest}
 */
proto.pb.GetMempoolInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetMempoolInfoRequest;
  return proto.pb.GetMempoolInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetMempoolInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetMempoolInfoRequest}
 */
proto.pb.GetMempoolInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetMempoolInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetMempoolInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetMempoolInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMempoolInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetMempoolInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetMempoolInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetMempoolInfoResponse.displayName = 'proto.pb.GetMempoolInfoResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetMempoolInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetMempoolInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetMempoolInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMempoolInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    size: jspb.Message.getFieldWithDefault(msg, 1, 0),
    bytes: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetMempoolInfoResponse}
 */
proto.pb.GetMempoolInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetMempoolInfoResponse;
  return proto.pb.GetMempoolInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetMempoolInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetMempoolInfoResponse}
 */
proto.pb.GetMempoolInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSize(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetMempoolInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetMempoolInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetMempoolInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMempoolInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getBytes();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 size = 1;
 * @return {number}
 */
proto.pb.GetMempoolInfoResponse.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.pb.GetMempoolInfoResponse.prototype.setSize = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 bytes = 2;
 * @return {number}
 */
proto.pb.GetMempoolInfoResponse.prototype.getBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.pb.GetMempoolInfoResponse.prototype.setBytes = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetMempoolRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetMempoolRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetMempoolRequest.displayName = 'proto.pb.GetMempoolRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetMempoolRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetMempoolRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetMempoolRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMempoolRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    fullTransactions: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetMempoolRequest}
 */
proto.pb.GetMempoolRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetMempoolRequest;
  return proto.pb.GetMempoolRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetMempoolRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetMempoolRequest}
 */
proto.pb.GetMempoolRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFullTransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetMempoolRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetMempoolRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetMempoolRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMempoolRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFullTransactions();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool full_transactions = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.pb.GetMempoolRequest.prototype.getFullTransactions = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.pb.GetMempoolRequest.prototype.setFullTransactions = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetMempoolResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.GetMempoolResponse.repeatedFields_, null);
};
goog.inherits(proto.pb.GetMempoolResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetMempoolResponse.displayName = 'proto.pb.GetMempoolResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.GetMempoolResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetMempoolResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetMempoolResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetMempoolResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMempoolResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionDataList: jspb.Message.toObjectList(msg.getTransactionDataList(),
    proto.pb.GetMempoolResponse.TransactionData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetMempoolResponse}
 */
proto.pb.GetMempoolResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetMempoolResponse;
  return proto.pb.GetMempoolResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetMempoolResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetMempoolResponse}
 */
proto.pb.GetMempoolResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.GetMempoolResponse.TransactionData;
      reader.readMessage(value,proto.pb.GetMempoolResponse.TransactionData.deserializeBinaryFromReader);
      msg.addTransactionData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetMempoolResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetMempoolResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetMempoolResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMempoolResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pb.GetMempoolResponse.TransactionData.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetMempoolResponse.TransactionData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pb.GetMempoolResponse.TransactionData.oneofGroups_);
};
goog.inherits(proto.pb.GetMempoolResponse.TransactionData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetMempoolResponse.TransactionData.displayName = 'proto.pb.GetMempoolResponse.TransactionData';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pb.GetMempoolResponse.TransactionData.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.pb.GetMempoolResponse.TransactionData.TxidsOrTxsCase = {
  TXIDS_OR_TXS_NOT_SET: 0,
  TRANSACTION_HASH: 1,
  TRANSACTION: 2
};

/**
 * @return {proto.pb.GetMempoolResponse.TransactionData.TxidsOrTxsCase}
 */
proto.pb.GetMempoolResponse.TransactionData.prototype.getTxidsOrTxsCase = function() {
  return /** @type {proto.pb.GetMempoolResponse.TransactionData.TxidsOrTxsCase} */(jspb.Message.computeOneofCase(this, proto.pb.GetMempoolResponse.TransactionData.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetMempoolResponse.TransactionData.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetMempoolResponse.TransactionData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetMempoolResponse.TransactionData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMempoolResponse.TransactionData.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionHash: msg.getTransactionHash_asB64(),
    transaction: (f = msg.getTransaction()) && proto.pb.Transaction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetMempoolResponse.TransactionData}
 */
proto.pb.GetMempoolResponse.TransactionData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetMempoolResponse.TransactionData;
  return proto.pb.GetMempoolResponse.TransactionData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetMempoolResponse.TransactionData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetMempoolResponse.TransactionData}
 */
proto.pb.GetMempoolResponse.TransactionData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTransactionHash(value);
      break;
    case 2:
      var value = new proto.pb.Transaction;
      reader.readMessage(value,proto.pb.Transaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetMempoolResponse.TransactionData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetMempoolResponse.TransactionData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetMempoolResponse.TransactionData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMempoolResponse.TransactionData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pb.Transaction.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes transaction_hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetMempoolResponse.TransactionData.prototype.getTransactionHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes transaction_hash = 1;
 * This is a type-conversion wrapper around `getTransactionHash()`
 * @return {string}
 */
proto.pb.GetMempoolResponse.TransactionData.prototype.getTransactionHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTransactionHash()));
};


/**
 * optional bytes transaction_hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTransactionHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetMempoolResponse.TransactionData.prototype.getTransactionHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTransactionHash()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.GetMempoolResponse.TransactionData.prototype.setTransactionHash = function(value) {
  jspb.Message.setOneofField(this, 1, proto.pb.GetMempoolResponse.TransactionData.oneofGroups_[0], value);
};


proto.pb.GetMempoolResponse.TransactionData.prototype.clearTransactionHash = function() {
  jspb.Message.setOneofField(this, 1, proto.pb.GetMempoolResponse.TransactionData.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetMempoolResponse.TransactionData.prototype.hasTransactionHash = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Transaction transaction = 2;
 * @return {?proto.pb.Transaction}
 */
proto.pb.GetMempoolResponse.TransactionData.prototype.getTransaction = function() {
  return /** @type{?proto.pb.Transaction} */ (
    jspb.Message.getWrapperField(this, proto.pb.Transaction, 2));
};


/** @param {?proto.pb.Transaction|undefined} value */
proto.pb.GetMempoolResponse.TransactionData.prototype.setTransaction = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.pb.GetMempoolResponse.TransactionData.oneofGroups_[0], value);
};


proto.pb.GetMempoolResponse.TransactionData.prototype.clearTransaction = function() {
  this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetMempoolResponse.TransactionData.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated TransactionData transaction_data = 1;
 * @return {!Array<!proto.pb.GetMempoolResponse.TransactionData>}
 */
proto.pb.GetMempoolResponse.prototype.getTransactionDataList = function() {
  return /** @type{!Array<!proto.pb.GetMempoolResponse.TransactionData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.GetMempoolResponse.TransactionData, 1));
};


/** @param {!Array<!proto.pb.GetMempoolResponse.TransactionData>} value */
proto.pb.GetMempoolResponse.prototype.setTransactionDataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pb.GetMempoolResponse.TransactionData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.GetMempoolResponse.TransactionData}
 */
proto.pb.GetMempoolResponse.prototype.addTransactionData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pb.GetMempoolResponse.TransactionData, opt_index);
};


proto.pb.GetMempoolResponse.prototype.clearTransactionDataList = function() {
  this.setTransactionDataList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetBlockchainInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetBlockchainInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetBlockchainInfoRequest.displayName = 'proto.pb.GetBlockchainInfoRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetBlockchainInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetBlockchainInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetBlockchainInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockchainInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetBlockchainInfoRequest}
 */
proto.pb.GetBlockchainInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetBlockchainInfoRequest;
  return proto.pb.GetBlockchainInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetBlockchainInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetBlockchainInfoRequest}
 */
proto.pb.GetBlockchainInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetBlockchainInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetBlockchainInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetBlockchainInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockchainInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetBlockchainInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetBlockchainInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetBlockchainInfoResponse.displayName = 'proto.pb.GetBlockchainInfoResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetBlockchainInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetBlockchainInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetBlockchainInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockchainInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    bitcoinNet: jspb.Message.getFieldWithDefault(msg, 1, 0),
    bestHeight: jspb.Message.getFieldWithDefault(msg, 2, 0),
    bestBlockHash: msg.getBestBlockHash_asB64(),
    difficulty: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    medianTime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    txIndex: jspb.Message.getFieldWithDefault(msg, 6, false),
    addrIndex: jspb.Message.getFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetBlockchainInfoResponse}
 */
proto.pb.GetBlockchainInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetBlockchainInfoResponse;
  return proto.pb.GetBlockchainInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetBlockchainInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetBlockchainInfoResponse}
 */
proto.pb.GetBlockchainInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.pb.GetBlockchainInfoResponse.BitcoinNet} */ (reader.readEnum());
      msg.setBitcoinNet(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBestHeight(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBestBlockHash(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDifficulty(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMedianTime(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTxIndex(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAddrIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetBlockchainInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetBlockchainInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetBlockchainInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockchainInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBitcoinNet();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getBestHeight();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getBestBlockHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getDifficulty();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getMedianTime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getTxIndex();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getAddrIndex();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.pb.GetBlockchainInfoResponse.BitcoinNet = {
  MAINNET: 0,
  REGTEST: 1,
  TESTNET3: 2,
  SIMNET: 3
};

/**
 * optional BitcoinNet bitcoin_net = 1;
 * @return {!proto.pb.GetBlockchainInfoResponse.BitcoinNet}
 */
proto.pb.GetBlockchainInfoResponse.prototype.getBitcoinNet = function() {
  return /** @type {!proto.pb.GetBlockchainInfoResponse.BitcoinNet} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.pb.GetBlockchainInfoResponse.BitcoinNet} value */
proto.pb.GetBlockchainInfoResponse.prototype.setBitcoinNet = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 best_height = 2;
 * @return {number}
 */
proto.pb.GetBlockchainInfoResponse.prototype.getBestHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.pb.GetBlockchainInfoResponse.prototype.setBestHeight = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bytes best_block_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetBlockchainInfoResponse.prototype.getBestBlockHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes best_block_hash = 3;
 * This is a type-conversion wrapper around `getBestBlockHash()`
 * @return {string}
 */
proto.pb.GetBlockchainInfoResponse.prototype.getBestBlockHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBestBlockHash()));
};


/**
 * optional bytes best_block_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBestBlockHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetBlockchainInfoResponse.prototype.getBestBlockHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBestBlockHash()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.GetBlockchainInfoResponse.prototype.setBestBlockHash = function(value) {
  jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional double difficulty = 4;
 * @return {number}
 */
proto.pb.GetBlockchainInfoResponse.prototype.getDifficulty = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.pb.GetBlockchainInfoResponse.prototype.setDifficulty = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional int64 median_time = 5;
 * @return {number}
 */
proto.pb.GetBlockchainInfoResponse.prototype.getMedianTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.pb.GetBlockchainInfoResponse.prototype.setMedianTime = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool tx_index = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.pb.GetBlockchainInfoResponse.prototype.getTxIndex = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.pb.GetBlockchainInfoResponse.prototype.setTxIndex = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool addr_index = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.pb.GetBlockchainInfoResponse.prototype.getAddrIndex = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.pb.GetBlockchainInfoResponse.prototype.setAddrIndex = function(value) {
  jspb.Message.setProto3BooleanField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetBlockInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pb.GetBlockInfoRequest.oneofGroups_);
};
goog.inherits(proto.pb.GetBlockInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetBlockInfoRequest.displayName = 'proto.pb.GetBlockInfoRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pb.GetBlockInfoRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.pb.GetBlockInfoRequest.HashOrHeightCase = {
  HASH_OR_HEIGHT_NOT_SET: 0,
  HASH: 1,
  HEIGHT: 2
};

/**
 * @return {proto.pb.GetBlockInfoRequest.HashOrHeightCase}
 */
proto.pb.GetBlockInfoRequest.prototype.getHashOrHeightCase = function() {
  return /** @type {proto.pb.GetBlockInfoRequest.HashOrHeightCase} */(jspb.Message.computeOneofCase(this, proto.pb.GetBlockInfoRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetBlockInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetBlockInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetBlockInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    height: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetBlockInfoRequest}
 */
proto.pb.GetBlockInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetBlockInfoRequest;
  return proto.pb.GetBlockInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetBlockInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetBlockInfoRequest}
 */
proto.pb.GetBlockInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetBlockInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetBlockInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetBlockInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetBlockInfoRequest.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.GetBlockInfoRequest.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetBlockInfoRequest.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.GetBlockInfoRequest.prototype.setHash = function(value) {
  jspb.Message.setOneofField(this, 1, proto.pb.GetBlockInfoRequest.oneofGroups_[0], value);
};


proto.pb.GetBlockInfoRequest.prototype.clearHash = function() {
  jspb.Message.setOneofField(this, 1, proto.pb.GetBlockInfoRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetBlockInfoRequest.prototype.hasHash = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 height = 2;
 * @return {number}
 */
proto.pb.GetBlockInfoRequest.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.pb.GetBlockInfoRequest.prototype.setHeight = function(value) {
  jspb.Message.setOneofField(this, 2, proto.pb.GetBlockInfoRequest.oneofGroups_[0], value);
};


proto.pb.GetBlockInfoRequest.prototype.clearHeight = function() {
  jspb.Message.setOneofField(this, 2, proto.pb.GetBlockInfoRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetBlockInfoRequest.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetBlockInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetBlockInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetBlockInfoResponse.displayName = 'proto.pb.GetBlockInfoResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetBlockInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetBlockInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetBlockInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.pb.BlockInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetBlockInfoResponse}
 */
proto.pb.GetBlockInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetBlockInfoResponse;
  return proto.pb.GetBlockInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetBlockInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetBlockInfoResponse}
 */
proto.pb.GetBlockInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.BlockInfo;
      reader.readMessage(value,proto.pb.BlockInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetBlockInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetBlockInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetBlockInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pb.BlockInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional BlockInfo info = 1;
 * @return {?proto.pb.BlockInfo}
 */
proto.pb.GetBlockInfoResponse.prototype.getInfo = function() {
  return /** @type{?proto.pb.BlockInfo} */ (
    jspb.Message.getWrapperField(this, proto.pb.BlockInfo, 1));
};


/** @param {?proto.pb.BlockInfo|undefined} value */
proto.pb.GetBlockInfoResponse.prototype.setInfo = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.pb.GetBlockInfoResponse.prototype.clearInfo = function() {
  this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetBlockInfoResponse.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetBlockRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pb.GetBlockRequest.oneofGroups_);
};
goog.inherits(proto.pb.GetBlockRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetBlockRequest.displayName = 'proto.pb.GetBlockRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pb.GetBlockRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.pb.GetBlockRequest.HashOrHeightCase = {
  HASH_OR_HEIGHT_NOT_SET: 0,
  HASH: 1,
  HEIGHT: 2
};

/**
 * @return {proto.pb.GetBlockRequest.HashOrHeightCase}
 */
proto.pb.GetBlockRequest.prototype.getHashOrHeightCase = function() {
  return /** @type {proto.pb.GetBlockRequest.HashOrHeightCase} */(jspb.Message.computeOneofCase(this, proto.pb.GetBlockRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetBlockRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetBlockRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetBlockRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    height: jspb.Message.getFieldWithDefault(msg, 2, 0),
    fullTransactions: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetBlockRequest}
 */
proto.pb.GetBlockRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetBlockRequest;
  return proto.pb.GetBlockRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetBlockRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetBlockRequest}
 */
proto.pb.GetBlockRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFullTransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetBlockRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetBlockRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetBlockRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getFullTransactions();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetBlockRequest.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.GetBlockRequest.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetBlockRequest.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.GetBlockRequest.prototype.setHash = function(value) {
  jspb.Message.setOneofField(this, 1, proto.pb.GetBlockRequest.oneofGroups_[0], value);
};


proto.pb.GetBlockRequest.prototype.clearHash = function() {
  jspb.Message.setOneofField(this, 1, proto.pb.GetBlockRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetBlockRequest.prototype.hasHash = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 height = 2;
 * @return {number}
 */
proto.pb.GetBlockRequest.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.pb.GetBlockRequest.prototype.setHeight = function(value) {
  jspb.Message.setOneofField(this, 2, proto.pb.GetBlockRequest.oneofGroups_[0], value);
};


proto.pb.GetBlockRequest.prototype.clearHeight = function() {
  jspb.Message.setOneofField(this, 2, proto.pb.GetBlockRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetBlockRequest.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool full_transactions = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.pb.GetBlockRequest.prototype.getFullTransactions = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.pb.GetBlockRequest.prototype.setFullTransactions = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetBlockResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetBlockResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetBlockResponse.displayName = 'proto.pb.GetBlockResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetBlockResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetBlockResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetBlockResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    block: (f = msg.getBlock()) && proto.pb.Block.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetBlockResponse}
 */
proto.pb.GetBlockResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetBlockResponse;
  return proto.pb.GetBlockResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetBlockResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetBlockResponse}
 */
proto.pb.GetBlockResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.Block;
      reader.readMessage(value,proto.pb.Block.deserializeBinaryFromReader);
      msg.setBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetBlockResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetBlockResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetBlockResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlock();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pb.Block.serializeBinaryToWriter
    );
  }
};


/**
 * optional Block block = 1;
 * @return {?proto.pb.Block}
 */
proto.pb.GetBlockResponse.prototype.getBlock = function() {
  return /** @type{?proto.pb.Block} */ (
    jspb.Message.getWrapperField(this, proto.pb.Block, 1));
};


/** @param {?proto.pb.Block|undefined} value */
proto.pb.GetBlockResponse.prototype.setBlock = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.pb.GetBlockResponse.prototype.clearBlock = function() {
  this.setBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetBlockResponse.prototype.hasBlock = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetRawBlockRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pb.GetRawBlockRequest.oneofGroups_);
};
goog.inherits(proto.pb.GetRawBlockRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetRawBlockRequest.displayName = 'proto.pb.GetRawBlockRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pb.GetRawBlockRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.pb.GetRawBlockRequest.HashOrHeightCase = {
  HASH_OR_HEIGHT_NOT_SET: 0,
  HASH: 1,
  HEIGHT: 2
};

/**
 * @return {proto.pb.GetRawBlockRequest.HashOrHeightCase}
 */
proto.pb.GetRawBlockRequest.prototype.getHashOrHeightCase = function() {
  return /** @type {proto.pb.GetRawBlockRequest.HashOrHeightCase} */(jspb.Message.computeOneofCase(this, proto.pb.GetRawBlockRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetRawBlockRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetRawBlockRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetRawBlockRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawBlockRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    height: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetRawBlockRequest}
 */
proto.pb.GetRawBlockRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetRawBlockRequest;
  return proto.pb.GetRawBlockRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetRawBlockRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetRawBlockRequest}
 */
proto.pb.GetRawBlockRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetRawBlockRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetRawBlockRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetRawBlockRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawBlockRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetRawBlockRequest.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.GetRawBlockRequest.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetRawBlockRequest.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.GetRawBlockRequest.prototype.setHash = function(value) {
  jspb.Message.setOneofField(this, 1, proto.pb.GetRawBlockRequest.oneofGroups_[0], value);
};


proto.pb.GetRawBlockRequest.prototype.clearHash = function() {
  jspb.Message.setOneofField(this, 1, proto.pb.GetRawBlockRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetRawBlockRequest.prototype.hasHash = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 height = 2;
 * @return {number}
 */
proto.pb.GetRawBlockRequest.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.pb.GetRawBlockRequest.prototype.setHeight = function(value) {
  jspb.Message.setOneofField(this, 2, proto.pb.GetRawBlockRequest.oneofGroups_[0], value);
};


proto.pb.GetRawBlockRequest.prototype.clearHeight = function() {
  jspb.Message.setOneofField(this, 2, proto.pb.GetRawBlockRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetRawBlockRequest.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetRawBlockResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetRawBlockResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetRawBlockResponse.displayName = 'proto.pb.GetRawBlockResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetRawBlockResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetRawBlockResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetRawBlockResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawBlockResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    block: msg.getBlock_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetRawBlockResponse}
 */
proto.pb.GetRawBlockResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetRawBlockResponse;
  return proto.pb.GetRawBlockResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetRawBlockResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetRawBlockResponse}
 */
proto.pb.GetRawBlockResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetRawBlockResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetRawBlockResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetRawBlockResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawBlockResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlock_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes block = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetRawBlockResponse.prototype.getBlock = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes block = 1;
 * This is a type-conversion wrapper around `getBlock()`
 * @return {string}
 */
proto.pb.GetRawBlockResponse.prototype.getBlock_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBlock()));
};


/**
 * optional bytes block = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBlock()`
 * @return {!Uint8Array}
 */
proto.pb.GetRawBlockResponse.prototype.getBlock_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBlock()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.GetRawBlockResponse.prototype.setBlock = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetBlockFilterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pb.GetBlockFilterRequest.oneofGroups_);
};
goog.inherits(proto.pb.GetBlockFilterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetBlockFilterRequest.displayName = 'proto.pb.GetBlockFilterRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pb.GetBlockFilterRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.pb.GetBlockFilterRequest.HashOrHeightCase = {
  HASH_OR_HEIGHT_NOT_SET: 0,
  HASH: 1,
  HEIGHT: 2
};

/**
 * @return {proto.pb.GetBlockFilterRequest.HashOrHeightCase}
 */
proto.pb.GetBlockFilterRequest.prototype.getHashOrHeightCase = function() {
  return /** @type {proto.pb.GetBlockFilterRequest.HashOrHeightCase} */(jspb.Message.computeOneofCase(this, proto.pb.GetBlockFilterRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetBlockFilterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetBlockFilterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetBlockFilterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockFilterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    height: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetBlockFilterRequest}
 */
proto.pb.GetBlockFilterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetBlockFilterRequest;
  return proto.pb.GetBlockFilterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetBlockFilterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetBlockFilterRequest}
 */
proto.pb.GetBlockFilterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetBlockFilterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetBlockFilterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetBlockFilterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockFilterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetBlockFilterRequest.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.GetBlockFilterRequest.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetBlockFilterRequest.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.GetBlockFilterRequest.prototype.setHash = function(value) {
  jspb.Message.setOneofField(this, 1, proto.pb.GetBlockFilterRequest.oneofGroups_[0], value);
};


proto.pb.GetBlockFilterRequest.prototype.clearHash = function() {
  jspb.Message.setOneofField(this, 1, proto.pb.GetBlockFilterRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetBlockFilterRequest.prototype.hasHash = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 height = 2;
 * @return {number}
 */
proto.pb.GetBlockFilterRequest.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.pb.GetBlockFilterRequest.prototype.setHeight = function(value) {
  jspb.Message.setOneofField(this, 2, proto.pb.GetBlockFilterRequest.oneofGroups_[0], value);
};


proto.pb.GetBlockFilterRequest.prototype.clearHeight = function() {
  jspb.Message.setOneofField(this, 2, proto.pb.GetBlockFilterRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetBlockFilterRequest.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetBlockFilterResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetBlockFilterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetBlockFilterResponse.displayName = 'proto.pb.GetBlockFilterResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetBlockFilterResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetBlockFilterResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetBlockFilterResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockFilterResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    filter: msg.getFilter_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetBlockFilterResponse}
 */
proto.pb.GetBlockFilterResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetBlockFilterResponse;
  return proto.pb.GetBlockFilterResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetBlockFilterResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetBlockFilterResponse}
 */
proto.pb.GetBlockFilterResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetBlockFilterResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetBlockFilterResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetBlockFilterResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockFilterResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilter_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes filter = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetBlockFilterResponse.prototype.getFilter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes filter = 1;
 * This is a type-conversion wrapper around `getFilter()`
 * @return {string}
 */
proto.pb.GetBlockFilterResponse.prototype.getFilter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFilter()));
};


/**
 * optional bytes filter = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFilter()`
 * @return {!Uint8Array}
 */
proto.pb.GetBlockFilterResponse.prototype.getFilter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFilter()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.GetBlockFilterResponse.prototype.setFilter = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetHeadersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.GetHeadersRequest.repeatedFields_, null);
};
goog.inherits(proto.pb.GetHeadersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetHeadersRequest.displayName = 'proto.pb.GetHeadersRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.GetHeadersRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetHeadersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetHeadersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetHeadersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetHeadersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockLocatorHashesList: msg.getBlockLocatorHashesList_asB64(),
    stopHash: msg.getStopHash_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetHeadersRequest}
 */
proto.pb.GetHeadersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetHeadersRequest;
  return proto.pb.GetHeadersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetHeadersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetHeadersRequest}
 */
proto.pb.GetHeadersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addBlockLocatorHashes(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setStopHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetHeadersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetHeadersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetHeadersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetHeadersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockLocatorHashesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
  f = message.getStopHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * repeated bytes block_locator_hashes = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.pb.GetHeadersRequest.prototype.getBlockLocatorHashesList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes block_locator_hashes = 1;
 * This is a type-conversion wrapper around `getBlockLocatorHashesList()`
 * @return {!Array<string>}
 */
proto.pb.GetHeadersRequest.prototype.getBlockLocatorHashesList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getBlockLocatorHashesList()));
};


/**
 * repeated bytes block_locator_hashes = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBlockLocatorHashesList()`
 * @return {!Array<!Uint8Array>}
 */
proto.pb.GetHeadersRequest.prototype.getBlockLocatorHashesList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getBlockLocatorHashesList()));
};


/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.pb.GetHeadersRequest.prototype.setBlockLocatorHashesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.pb.GetHeadersRequest.prototype.addBlockLocatorHashes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.pb.GetHeadersRequest.prototype.clearBlockLocatorHashesList = function() {
  this.setBlockLocatorHashesList([]);
};


/**
 * optional bytes stop_hash = 2;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetHeadersRequest.prototype.getStopHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes stop_hash = 2;
 * This is a type-conversion wrapper around `getStopHash()`
 * @return {string}
 */
proto.pb.GetHeadersRequest.prototype.getStopHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getStopHash()));
};


/**
 * optional bytes stop_hash = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getStopHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetHeadersRequest.prototype.getStopHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getStopHash()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.GetHeadersRequest.prototype.setStopHash = function(value) {
  jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetHeadersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.GetHeadersResponse.repeatedFields_, null);
};
goog.inherits(proto.pb.GetHeadersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetHeadersResponse.displayName = 'proto.pb.GetHeadersResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.GetHeadersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetHeadersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetHeadersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetHeadersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetHeadersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    headersList: jspb.Message.toObjectList(msg.getHeadersList(),
    proto.pb.BlockInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetHeadersResponse}
 */
proto.pb.GetHeadersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetHeadersResponse;
  return proto.pb.GetHeadersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetHeadersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetHeadersResponse}
 */
proto.pb.GetHeadersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.BlockInfo;
      reader.readMessage(value,proto.pb.BlockInfo.deserializeBinaryFromReader);
      msg.addHeaders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetHeadersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetHeadersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetHeadersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetHeadersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeadersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pb.BlockInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BlockInfo headers = 1;
 * @return {!Array<!proto.pb.BlockInfo>}
 */
proto.pb.GetHeadersResponse.prototype.getHeadersList = function() {
  return /** @type{!Array<!proto.pb.BlockInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.BlockInfo, 1));
};


/** @param {!Array<!proto.pb.BlockInfo>} value */
proto.pb.GetHeadersResponse.prototype.setHeadersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pb.BlockInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.BlockInfo}
 */
proto.pb.GetHeadersResponse.prototype.addHeaders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pb.BlockInfo, opt_index);
};


proto.pb.GetHeadersResponse.prototype.clearHeadersList = function() {
  this.setHeadersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetTransactionRequest.displayName = 'proto.pb.GetTransactionRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetTransactionRequest}
 */
proto.pb.GetTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetTransactionRequest;
  return proto.pb.GetTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetTransactionRequest}
 */
proto.pb.GetTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetTransactionRequest.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.GetTransactionRequest.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetTransactionRequest.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.GetTransactionRequest.prototype.setHash = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetTransactionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetTransactionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetTransactionResponse.displayName = 'proto.pb.GetTransactionResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetTransactionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetTransactionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetTransactionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetTransactionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    transaction: (f = msg.getTransaction()) && proto.pb.Transaction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetTransactionResponse}
 */
proto.pb.GetTransactionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetTransactionResponse;
  return proto.pb.GetTransactionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetTransactionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetTransactionResponse}
 */
proto.pb.GetTransactionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.Transaction;
      reader.readMessage(value,proto.pb.Transaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetTransactionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetTransactionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetTransactionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetTransactionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pb.Transaction.serializeBinaryToWriter
    );
  }
};


/**
 * optional Transaction transaction = 1;
 * @return {?proto.pb.Transaction}
 */
proto.pb.GetTransactionResponse.prototype.getTransaction = function() {
  return /** @type{?proto.pb.Transaction} */ (
    jspb.Message.getWrapperField(this, proto.pb.Transaction, 1));
};


/** @param {?proto.pb.Transaction|undefined} value */
proto.pb.GetTransactionResponse.prototype.setTransaction = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.pb.GetTransactionResponse.prototype.clearTransaction = function() {
  this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetTransactionResponse.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetRawTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetRawTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetRawTransactionRequest.displayName = 'proto.pb.GetRawTransactionRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetRawTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetRawTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetRawTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetRawTransactionRequest}
 */
proto.pb.GetRawTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetRawTransactionRequest;
  return proto.pb.GetRawTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetRawTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetRawTransactionRequest}
 */
proto.pb.GetRawTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetRawTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetRawTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetRawTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetRawTransactionRequest.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.GetRawTransactionRequest.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetRawTransactionRequest.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.GetRawTransactionRequest.prototype.setHash = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetRawTransactionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetRawTransactionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetRawTransactionResponse.displayName = 'proto.pb.GetRawTransactionResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetRawTransactionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetRawTransactionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetRawTransactionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawTransactionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    transaction: msg.getTransaction_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetRawTransactionResponse}
 */
proto.pb.GetRawTransactionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetRawTransactionResponse;
  return proto.pb.GetRawTransactionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetRawTransactionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetRawTransactionResponse}
 */
proto.pb.GetRawTransactionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTransaction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetRawTransactionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetRawTransactionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetRawTransactionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawTransactionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransaction_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes transaction = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetRawTransactionResponse.prototype.getTransaction = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes transaction = 1;
 * This is a type-conversion wrapper around `getTransaction()`
 * @return {string}
 */
proto.pb.GetRawTransactionResponse.prototype.getTransaction_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTransaction()));
};


/**
 * optional bytes transaction = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTransaction()`
 * @return {!Uint8Array}
 */
proto.pb.GetRawTransactionResponse.prototype.getTransaction_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTransaction()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.GetRawTransactionResponse.prototype.setTransaction = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetAddressTransactionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pb.GetAddressTransactionsRequest.oneofGroups_);
};
goog.inherits(proto.pb.GetAddressTransactionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetAddressTransactionsRequest.displayName = 'proto.pb.GetAddressTransactionsRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pb.GetAddressTransactionsRequest.oneofGroups_ = [[4,5]];

/**
 * @enum {number}
 */
proto.pb.GetAddressTransactionsRequest.StartBlockCase = {
  START_BLOCK_NOT_SET: 0,
  HASH: 4,
  HEIGHT: 5
};

/**
 * @return {proto.pb.GetAddressTransactionsRequest.StartBlockCase}
 */
proto.pb.GetAddressTransactionsRequest.prototype.getStartBlockCase = function() {
  return /** @type {proto.pb.GetAddressTransactionsRequest.StartBlockCase} */(jspb.Message.computeOneofCase(this, proto.pb.GetAddressTransactionsRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetAddressTransactionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetAddressTransactionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetAddressTransactionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetAddressTransactionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    nbSkip: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nbFetch: jspb.Message.getFieldWithDefault(msg, 3, 0),
    hash: msg.getHash_asB64(),
    height: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetAddressTransactionsRequest}
 */
proto.pb.GetAddressTransactionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetAddressTransactionsRequest;
  return proto.pb.GetAddressTransactionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetAddressTransactionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetAddressTransactionsRequest}
 */
proto.pb.GetAddressTransactionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNbSkip(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNbFetch(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetAddressTransactionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetAddressTransactionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetAddressTransactionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetAddressTransactionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNbSkip();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getNbFetch();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.pb.GetAddressTransactionsRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.pb.GetAddressTransactionsRequest.prototype.setAddress = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 nb_skip = 2;
 * @return {number}
 */
proto.pb.GetAddressTransactionsRequest.prototype.getNbSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.pb.GetAddressTransactionsRequest.prototype.setNbSkip = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 nb_fetch = 3;
 * @return {number}
 */
proto.pb.GetAddressTransactionsRequest.prototype.getNbFetch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.pb.GetAddressTransactionsRequest.prototype.setNbFetch = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes hash = 4;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetAddressTransactionsRequest.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes hash = 4;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.GetAddressTransactionsRequest.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetAddressTransactionsRequest.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.GetAddressTransactionsRequest.prototype.setHash = function(value) {
  jspb.Message.setOneofField(this, 4, proto.pb.GetAddressTransactionsRequest.oneofGroups_[0], value);
};


proto.pb.GetAddressTransactionsRequest.prototype.clearHash = function() {
  jspb.Message.setOneofField(this, 4, proto.pb.GetAddressTransactionsRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetAddressTransactionsRequest.prototype.hasHash = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 height = 5;
 * @return {number}
 */
proto.pb.GetAddressTransactionsRequest.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.pb.GetAddressTransactionsRequest.prototype.setHeight = function(value) {
  jspb.Message.setOneofField(this, 5, proto.pb.GetAddressTransactionsRequest.oneofGroups_[0], value);
};


proto.pb.GetAddressTransactionsRequest.prototype.clearHeight = function() {
  jspb.Message.setOneofField(this, 5, proto.pb.GetAddressTransactionsRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetAddressTransactionsRequest.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetAddressTransactionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.GetAddressTransactionsResponse.repeatedFields_, null);
};
goog.inherits(proto.pb.GetAddressTransactionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetAddressTransactionsResponse.displayName = 'proto.pb.GetAddressTransactionsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.GetAddressTransactionsResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetAddressTransactionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetAddressTransactionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetAddressTransactionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetAddressTransactionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    confirmedTransactionsList: jspb.Message.toObjectList(msg.getConfirmedTransactionsList(),
    proto.pb.Transaction.toObject, includeInstance),
    unconfirmedTransactionsList: jspb.Message.toObjectList(msg.getUnconfirmedTransactionsList(),
    proto.pb.MempoolTransaction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetAddressTransactionsResponse}
 */
proto.pb.GetAddressTransactionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetAddressTransactionsResponse;
  return proto.pb.GetAddressTransactionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetAddressTransactionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetAddressTransactionsResponse}
 */
proto.pb.GetAddressTransactionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.Transaction;
      reader.readMessage(value,proto.pb.Transaction.deserializeBinaryFromReader);
      msg.addConfirmedTransactions(value);
      break;
    case 2:
      var value = new proto.pb.MempoolTransaction;
      reader.readMessage(value,proto.pb.MempoolTransaction.deserializeBinaryFromReader);
      msg.addUnconfirmedTransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetAddressTransactionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetAddressTransactionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetAddressTransactionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetAddressTransactionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfirmedTransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pb.Transaction.serializeBinaryToWriter
    );
  }
  f = message.getUnconfirmedTransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.pb.MempoolTransaction.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Transaction confirmed_transactions = 1;
 * @return {!Array<!proto.pb.Transaction>}
 */
proto.pb.GetAddressTransactionsResponse.prototype.getConfirmedTransactionsList = function() {
  return /** @type{!Array<!proto.pb.Transaction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.Transaction, 1));
};


/** @param {!Array<!proto.pb.Transaction>} value */
proto.pb.GetAddressTransactionsResponse.prototype.setConfirmedTransactionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pb.Transaction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.Transaction}
 */
proto.pb.GetAddressTransactionsResponse.prototype.addConfirmedTransactions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pb.Transaction, opt_index);
};


proto.pb.GetAddressTransactionsResponse.prototype.clearConfirmedTransactionsList = function() {
  this.setConfirmedTransactionsList([]);
};


/**
 * repeated MempoolTransaction unconfirmed_transactions = 2;
 * @return {!Array<!proto.pb.MempoolTransaction>}
 */
proto.pb.GetAddressTransactionsResponse.prototype.getUnconfirmedTransactionsList = function() {
  return /** @type{!Array<!proto.pb.MempoolTransaction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.MempoolTransaction, 2));
};


/** @param {!Array<!proto.pb.MempoolTransaction>} value */
proto.pb.GetAddressTransactionsResponse.prototype.setUnconfirmedTransactionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.pb.MempoolTransaction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.MempoolTransaction}
 */
proto.pb.GetAddressTransactionsResponse.prototype.addUnconfirmedTransactions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.pb.MempoolTransaction, opt_index);
};


proto.pb.GetAddressTransactionsResponse.prototype.clearUnconfirmedTransactionsList = function() {
  this.setUnconfirmedTransactionsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetRawAddressTransactionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pb.GetRawAddressTransactionsRequest.oneofGroups_);
};
goog.inherits(proto.pb.GetRawAddressTransactionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetRawAddressTransactionsRequest.displayName = 'proto.pb.GetRawAddressTransactionsRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pb.GetRawAddressTransactionsRequest.oneofGroups_ = [[4,5]];

/**
 * @enum {number}
 */
proto.pb.GetRawAddressTransactionsRequest.StartBlockCase = {
  START_BLOCK_NOT_SET: 0,
  HASH: 4,
  HEIGHT: 5
};

/**
 * @return {proto.pb.GetRawAddressTransactionsRequest.StartBlockCase}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.getStartBlockCase = function() {
  return /** @type {proto.pb.GetRawAddressTransactionsRequest.StartBlockCase} */(jspb.Message.computeOneofCase(this, proto.pb.GetRawAddressTransactionsRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetRawAddressTransactionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetRawAddressTransactionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawAddressTransactionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    nbSkip: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nbFetch: jspb.Message.getFieldWithDefault(msg, 3, 0),
    hash: msg.getHash_asB64(),
    height: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetRawAddressTransactionsRequest}
 */
proto.pb.GetRawAddressTransactionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetRawAddressTransactionsRequest;
  return proto.pb.GetRawAddressTransactionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetRawAddressTransactionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetRawAddressTransactionsRequest}
 */
proto.pb.GetRawAddressTransactionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNbSkip(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNbFetch(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetRawAddressTransactionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetRawAddressTransactionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawAddressTransactionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNbSkip();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getNbFetch();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.pb.GetRawAddressTransactionsRequest.prototype.setAddress = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 nb_skip = 2;
 * @return {number}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.getNbSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.pb.GetRawAddressTransactionsRequest.prototype.setNbSkip = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 nb_fetch = 3;
 * @return {number}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.getNbFetch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.pb.GetRawAddressTransactionsRequest.prototype.setNbFetch = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes hash = 4;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes hash = 4;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.GetRawAddressTransactionsRequest.prototype.setHash = function(value) {
  jspb.Message.setOneofField(this, 4, proto.pb.GetRawAddressTransactionsRequest.oneofGroups_[0], value);
};


proto.pb.GetRawAddressTransactionsRequest.prototype.clearHash = function() {
  jspb.Message.setOneofField(this, 4, proto.pb.GetRawAddressTransactionsRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.hasHash = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 height = 5;
 * @return {number}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.pb.GetRawAddressTransactionsRequest.prototype.setHeight = function(value) {
  jspb.Message.setOneofField(this, 5, proto.pb.GetRawAddressTransactionsRequest.oneofGroups_[0], value);
};


proto.pb.GetRawAddressTransactionsRequest.prototype.clearHeight = function() {
  jspb.Message.setOneofField(this, 5, proto.pb.GetRawAddressTransactionsRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetRawAddressTransactionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.GetRawAddressTransactionsResponse.repeatedFields_, null);
};
goog.inherits(proto.pb.GetRawAddressTransactionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetRawAddressTransactionsResponse.displayName = 'proto.pb.GetRawAddressTransactionsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.GetRawAddressTransactionsResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetRawAddressTransactionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetRawAddressTransactionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawAddressTransactionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    confirmedTransactionsList: msg.getConfirmedTransactionsList_asB64(),
    unconfirmedTransactionsList: msg.getUnconfirmedTransactionsList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetRawAddressTransactionsResponse}
 */
proto.pb.GetRawAddressTransactionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetRawAddressTransactionsResponse;
  return proto.pb.GetRawAddressTransactionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetRawAddressTransactionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetRawAddressTransactionsResponse}
 */
proto.pb.GetRawAddressTransactionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addConfirmedTransactions(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addUnconfirmedTransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetRawAddressTransactionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetRawAddressTransactionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawAddressTransactionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfirmedTransactionsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
  f = message.getUnconfirmedTransactionsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
};


/**
 * repeated bytes confirmed_transactions = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.getConfirmedTransactionsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes confirmed_transactions = 1;
 * This is a type-conversion wrapper around `getConfirmedTransactionsList()`
 * @return {!Array<string>}
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.getConfirmedTransactionsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getConfirmedTransactionsList()));
};


/**
 * repeated bytes confirmed_transactions = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getConfirmedTransactionsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.getConfirmedTransactionsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getConfirmedTransactionsList()));
};


/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.pb.GetRawAddressTransactionsResponse.prototype.setConfirmedTransactionsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.addConfirmedTransactions = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.pb.GetRawAddressTransactionsResponse.prototype.clearConfirmedTransactionsList = function() {
  this.setConfirmedTransactionsList([]);
};


/**
 * repeated bytes unconfirmed_transactions = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.getUnconfirmedTransactionsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * repeated bytes unconfirmed_transactions = 2;
 * This is a type-conversion wrapper around `getUnconfirmedTransactionsList()`
 * @return {!Array<string>}
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.getUnconfirmedTransactionsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getUnconfirmedTransactionsList()));
};


/**
 * repeated bytes unconfirmed_transactions = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUnconfirmedTransactionsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.getUnconfirmedTransactionsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getUnconfirmedTransactionsList()));
};


/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.pb.GetRawAddressTransactionsResponse.prototype.setUnconfirmedTransactionsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.addUnconfirmedTransactions = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.pb.GetRawAddressTransactionsResponse.prototype.clearUnconfirmedTransactionsList = function() {
  this.setUnconfirmedTransactionsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetAddressUnspentOutputsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetAddressUnspentOutputsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetAddressUnspentOutputsRequest.displayName = 'proto.pb.GetAddressUnspentOutputsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetAddressUnspentOutputsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetAddressUnspentOutputsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetAddressUnspentOutputsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetAddressUnspentOutputsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    includeMempool: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetAddressUnspentOutputsRequest}
 */
proto.pb.GetAddressUnspentOutputsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetAddressUnspentOutputsRequest;
  return proto.pb.GetAddressUnspentOutputsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetAddressUnspentOutputsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetAddressUnspentOutputsRequest}
 */
proto.pb.GetAddressUnspentOutputsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeMempool(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetAddressUnspentOutputsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetAddressUnspentOutputsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetAddressUnspentOutputsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetAddressUnspentOutputsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIncludeMempool();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.pb.GetAddressUnspentOutputsRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.pb.GetAddressUnspentOutputsRequest.prototype.setAddress = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool include_mempool = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.pb.GetAddressUnspentOutputsRequest.prototype.getIncludeMempool = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.pb.GetAddressUnspentOutputsRequest.prototype.setIncludeMempool = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetAddressUnspentOutputsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.GetAddressUnspentOutputsResponse.repeatedFields_, null);
};
goog.inherits(proto.pb.GetAddressUnspentOutputsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetAddressUnspentOutputsResponse.displayName = 'proto.pb.GetAddressUnspentOutputsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.GetAddressUnspentOutputsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetAddressUnspentOutputsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetAddressUnspentOutputsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetAddressUnspentOutputsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetAddressUnspentOutputsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    outputsList: jspb.Message.toObjectList(msg.getOutputsList(),
    proto.pb.UnspentOutput.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetAddressUnspentOutputsResponse}
 */
proto.pb.GetAddressUnspentOutputsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetAddressUnspentOutputsResponse;
  return proto.pb.GetAddressUnspentOutputsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetAddressUnspentOutputsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetAddressUnspentOutputsResponse}
 */
proto.pb.GetAddressUnspentOutputsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.UnspentOutput;
      reader.readMessage(value,proto.pb.UnspentOutput.deserializeBinaryFromReader);
      msg.addOutputs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetAddressUnspentOutputsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetAddressUnspentOutputsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetAddressUnspentOutputsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetAddressUnspentOutputsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pb.UnspentOutput.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UnspentOutput outputs = 1;
 * @return {!Array<!proto.pb.UnspentOutput>}
 */
proto.pb.GetAddressUnspentOutputsResponse.prototype.getOutputsList = function() {
  return /** @type{!Array<!proto.pb.UnspentOutput>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.UnspentOutput, 1));
};


/** @param {!Array<!proto.pb.UnspentOutput>} value */
proto.pb.GetAddressUnspentOutputsResponse.prototype.setOutputsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pb.UnspentOutput=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.UnspentOutput}
 */
proto.pb.GetAddressUnspentOutputsResponse.prototype.addOutputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pb.UnspentOutput, opt_index);
};


proto.pb.GetAddressUnspentOutputsResponse.prototype.clearOutputsList = function() {
  this.setOutputsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetUnspentOutputRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetUnspentOutputRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetUnspentOutputRequest.displayName = 'proto.pb.GetUnspentOutputRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetUnspentOutputRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetUnspentOutputRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetUnspentOutputRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetUnspentOutputRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    index: jspb.Message.getFieldWithDefault(msg, 2, 0),
    includeMempool: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetUnspentOutputRequest}
 */
proto.pb.GetUnspentOutputRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetUnspentOutputRequest;
  return proto.pb.GetUnspentOutputRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetUnspentOutputRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetUnspentOutputRequest}
 */
proto.pb.GetUnspentOutputRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeMempool(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetUnspentOutputRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetUnspentOutputRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetUnspentOutputRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetUnspentOutputRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getIncludeMempool();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetUnspentOutputRequest.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.GetUnspentOutputRequest.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetUnspentOutputRequest.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.GetUnspentOutputRequest.prototype.setHash = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 index = 2;
 * @return {number}
 */
proto.pb.GetUnspentOutputRequest.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.pb.GetUnspentOutputRequest.prototype.setIndex = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool include_mempool = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.pb.GetUnspentOutputRequest.prototype.getIncludeMempool = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.pb.GetUnspentOutputRequest.prototype.setIncludeMempool = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetUnspentOutputResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetUnspentOutputResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetUnspentOutputResponse.displayName = 'proto.pb.GetUnspentOutputResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetUnspentOutputResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetUnspentOutputResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetUnspentOutputResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetUnspentOutputResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    outpoint: (f = msg.getOutpoint()) && proto.pb.Transaction.Input.Outpoint.toObject(includeInstance, f),
    pubkeyScript: msg.getPubkeyScript_asB64(),
    value: jspb.Message.getFieldWithDefault(msg, 3, 0),
    isCoinbase: jspb.Message.getFieldWithDefault(msg, 4, false),
    blockHeight: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetUnspentOutputResponse}
 */
proto.pb.GetUnspentOutputResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetUnspentOutputResponse;
  return proto.pb.GetUnspentOutputResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetUnspentOutputResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetUnspentOutputResponse}
 */
proto.pb.GetUnspentOutputResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.Transaction.Input.Outpoint;
      reader.readMessage(value,proto.pb.Transaction.Input.Outpoint.deserializeBinaryFromReader);
      msg.setOutpoint(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubkeyScript(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCoinbase(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBlockHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetUnspentOutputResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetUnspentOutputResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetUnspentOutputResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetUnspentOutputResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutpoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pb.Transaction.Input.Outpoint.serializeBinaryToWriter
    );
  }
  f = message.getPubkeyScript_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getIsCoinbase();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getBlockHeight();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional Transaction.Input.Outpoint outpoint = 1;
 * @return {?proto.pb.Transaction.Input.Outpoint}
 */
proto.pb.GetUnspentOutputResponse.prototype.getOutpoint = function() {
  return /** @type{?proto.pb.Transaction.Input.Outpoint} */ (
    jspb.Message.getWrapperField(this, proto.pb.Transaction.Input.Outpoint, 1));
};


/** @param {?proto.pb.Transaction.Input.Outpoint|undefined} value */
proto.pb.GetUnspentOutputResponse.prototype.setOutpoint = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.pb.GetUnspentOutputResponse.prototype.clearOutpoint = function() {
  this.setOutpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetUnspentOutputResponse.prototype.hasOutpoint = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes pubkey_script = 2;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetUnspentOutputResponse.prototype.getPubkeyScript = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes pubkey_script = 2;
 * This is a type-conversion wrapper around `getPubkeyScript()`
 * @return {string}
 */
proto.pb.GetUnspentOutputResponse.prototype.getPubkeyScript_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubkeyScript()));
};


/**
 * optional bytes pubkey_script = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubkeyScript()`
 * @return {!Uint8Array}
 */
proto.pb.GetUnspentOutputResponse.prototype.getPubkeyScript_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubkeyScript()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.GetUnspentOutputResponse.prototype.setPubkeyScript = function(value) {
  jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional int64 value = 3;
 * @return {number}
 */
proto.pb.GetUnspentOutputResponse.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.pb.GetUnspentOutputResponse.prototype.setValue = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool is_coinbase = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.pb.GetUnspentOutputResponse.prototype.getIsCoinbase = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.pb.GetUnspentOutputResponse.prototype.setIsCoinbase = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional int32 block_height = 5;
 * @return {number}
 */
proto.pb.GetUnspentOutputResponse.prototype.getBlockHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.pb.GetUnspentOutputResponse.prototype.setBlockHeight = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetMerkleProofRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetMerkleProofRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetMerkleProofRequest.displayName = 'proto.pb.GetMerkleProofRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetMerkleProofRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetMerkleProofRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetMerkleProofRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMerkleProofRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionHash: msg.getTransactionHash_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetMerkleProofRequest}
 */
proto.pb.GetMerkleProofRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetMerkleProofRequest;
  return proto.pb.GetMerkleProofRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetMerkleProofRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetMerkleProofRequest}
 */
proto.pb.GetMerkleProofRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTransactionHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetMerkleProofRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetMerkleProofRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetMerkleProofRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMerkleProofRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes transaction_hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetMerkleProofRequest.prototype.getTransactionHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes transaction_hash = 1;
 * This is a type-conversion wrapper around `getTransactionHash()`
 * @return {string}
 */
proto.pb.GetMerkleProofRequest.prototype.getTransactionHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTransactionHash()));
};


/**
 * optional bytes transaction_hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTransactionHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetMerkleProofRequest.prototype.getTransactionHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTransactionHash()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.GetMerkleProofRequest.prototype.setTransactionHash = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetMerkleProofResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.GetMerkleProofResponse.repeatedFields_, null);
};
goog.inherits(proto.pb.GetMerkleProofResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.GetMerkleProofResponse.displayName = 'proto.pb.GetMerkleProofResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.GetMerkleProofResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetMerkleProofResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetMerkleProofResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetMerkleProofResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMerkleProofResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    block: (f = msg.getBlock()) && proto.pb.BlockInfo.toObject(includeInstance, f),
    hashesList: msg.getHashesList_asB64(),
    flags: msg.getFlags_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetMerkleProofResponse}
 */
proto.pb.GetMerkleProofResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetMerkleProofResponse;
  return proto.pb.GetMerkleProofResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetMerkleProofResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetMerkleProofResponse}
 */
proto.pb.GetMerkleProofResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.BlockInfo;
      reader.readMessage(value,proto.pb.BlockInfo.deserializeBinaryFromReader);
      msg.setBlock(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addHashes(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFlags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetMerkleProofResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetMerkleProofResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetMerkleProofResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMerkleProofResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlock();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pb.BlockInfo.serializeBinaryToWriter
    );
  }
  f = message.getHashesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
  f = message.getFlags_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional BlockInfo block = 1;
 * @return {?proto.pb.BlockInfo}
 */
proto.pb.GetMerkleProofResponse.prototype.getBlock = function() {
  return /** @type{?proto.pb.BlockInfo} */ (
    jspb.Message.getWrapperField(this, proto.pb.BlockInfo, 1));
};


/** @param {?proto.pb.BlockInfo|undefined} value */
proto.pb.GetMerkleProofResponse.prototype.setBlock = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.pb.GetMerkleProofResponse.prototype.clearBlock = function() {
  this.setBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetMerkleProofResponse.prototype.hasBlock = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated bytes hashes = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.pb.GetMerkleProofResponse.prototype.getHashesList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * repeated bytes hashes = 2;
 * This is a type-conversion wrapper around `getHashesList()`
 * @return {!Array<string>}
 */
proto.pb.GetMerkleProofResponse.prototype.getHashesList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getHashesList()));
};


/**
 * repeated bytes hashes = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHashesList()`
 * @return {!Array<!Uint8Array>}
 */
proto.pb.GetMerkleProofResponse.prototype.getHashesList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getHashesList()));
};


/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.pb.GetMerkleProofResponse.prototype.setHashesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.pb.GetMerkleProofResponse.prototype.addHashes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.pb.GetMerkleProofResponse.prototype.clearHashesList = function() {
  this.setHashesList([]);
};


/**
 * optional bytes flags = 3;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetMerkleProofResponse.prototype.getFlags = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes flags = 3;
 * This is a type-conversion wrapper around `getFlags()`
 * @return {string}
 */
proto.pb.GetMerkleProofResponse.prototype.getFlags_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFlags()));
};


/**
 * optional bytes flags = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFlags()`
 * @return {!Uint8Array}
 */
proto.pb.GetMerkleProofResponse.prototype.getFlags_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFlags()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.GetMerkleProofResponse.prototype.setFlags = function(value) {
  jspb.Message.setProto3BytesField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.SubmitTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.SubmitTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.SubmitTransactionRequest.displayName = 'proto.pb.SubmitTransactionRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.SubmitTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.SubmitTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.SubmitTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.SubmitTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    transaction: msg.getTransaction_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.SubmitTransactionRequest}
 */
proto.pb.SubmitTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.SubmitTransactionRequest;
  return proto.pb.SubmitTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.SubmitTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.SubmitTransactionRequest}
 */
proto.pb.SubmitTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTransaction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.SubmitTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.SubmitTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.SubmitTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.SubmitTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransaction_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes transaction = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.SubmitTransactionRequest.prototype.getTransaction = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes transaction = 1;
 * This is a type-conversion wrapper around `getTransaction()`
 * @return {string}
 */
proto.pb.SubmitTransactionRequest.prototype.getTransaction_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTransaction()));
};


/**
 * optional bytes transaction = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTransaction()`
 * @return {!Uint8Array}
 */
proto.pb.SubmitTransactionRequest.prototype.getTransaction_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTransaction()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.SubmitTransactionRequest.prototype.setTransaction = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.SubmitTransactionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.SubmitTransactionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.SubmitTransactionResponse.displayName = 'proto.pb.SubmitTransactionResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.SubmitTransactionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.SubmitTransactionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.SubmitTransactionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.SubmitTransactionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.SubmitTransactionResponse}
 */
proto.pb.SubmitTransactionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.SubmitTransactionResponse;
  return proto.pb.SubmitTransactionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.SubmitTransactionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.SubmitTransactionResponse}
 */
proto.pb.SubmitTransactionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.SubmitTransactionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.SubmitTransactionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.SubmitTransactionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.SubmitTransactionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.SubmitTransactionResponse.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.SubmitTransactionResponse.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.SubmitTransactionResponse.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.SubmitTransactionResponse.prototype.setHash = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.SubscribeTransactionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.SubscribeTransactionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.SubscribeTransactionsRequest.displayName = 'proto.pb.SubscribeTransactionsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.SubscribeTransactionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.SubscribeTransactionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.SubscribeTransactionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.SubscribeTransactionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    subscribe: (f = msg.getSubscribe()) && proto.pb.TransactionFilter.toObject(includeInstance, f),
    unsubscribe: (f = msg.getUnsubscribe()) && proto.pb.TransactionFilter.toObject(includeInstance, f),
    includeMempool: jspb.Message.getFieldWithDefault(msg, 3, false),
    includeInBlock: jspb.Message.getFieldWithDefault(msg, 4, false),
    serializeTx: jspb.Message.getFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.SubscribeTransactionsRequest}
 */
proto.pb.SubscribeTransactionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.SubscribeTransactionsRequest;
  return proto.pb.SubscribeTransactionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.SubscribeTransactionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.SubscribeTransactionsRequest}
 */
proto.pb.SubscribeTransactionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.TransactionFilter;
      reader.readMessage(value,proto.pb.TransactionFilter.deserializeBinaryFromReader);
      msg.setSubscribe(value);
      break;
    case 2:
      var value = new proto.pb.TransactionFilter;
      reader.readMessage(value,proto.pb.TransactionFilter.deserializeBinaryFromReader);
      msg.setUnsubscribe(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeMempool(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeInBlock(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSerializeTx(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.SubscribeTransactionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.SubscribeTransactionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.SubscribeTransactionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.SubscribeTransactionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubscribe();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pb.TransactionFilter.serializeBinaryToWriter
    );
  }
  f = message.getUnsubscribe();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pb.TransactionFilter.serializeBinaryToWriter
    );
  }
  f = message.getIncludeMempool();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getIncludeInBlock();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getSerializeTx();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional TransactionFilter subscribe = 1;
 * @return {?proto.pb.TransactionFilter}
 */
proto.pb.SubscribeTransactionsRequest.prototype.getSubscribe = function() {
  return /** @type{?proto.pb.TransactionFilter} */ (
    jspb.Message.getWrapperField(this, proto.pb.TransactionFilter, 1));
};


/** @param {?proto.pb.TransactionFilter|undefined} value */
proto.pb.SubscribeTransactionsRequest.prototype.setSubscribe = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.pb.SubscribeTransactionsRequest.prototype.clearSubscribe = function() {
  this.setSubscribe(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.SubscribeTransactionsRequest.prototype.hasSubscribe = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TransactionFilter unsubscribe = 2;
 * @return {?proto.pb.TransactionFilter}
 */
proto.pb.SubscribeTransactionsRequest.prototype.getUnsubscribe = function() {
  return /** @type{?proto.pb.TransactionFilter} */ (
    jspb.Message.getWrapperField(this, proto.pb.TransactionFilter, 2));
};


/** @param {?proto.pb.TransactionFilter|undefined} value */
proto.pb.SubscribeTransactionsRequest.prototype.setUnsubscribe = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.pb.SubscribeTransactionsRequest.prototype.clearUnsubscribe = function() {
  this.setUnsubscribe(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.SubscribeTransactionsRequest.prototype.hasUnsubscribe = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool include_mempool = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.pb.SubscribeTransactionsRequest.prototype.getIncludeMempool = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.pb.SubscribeTransactionsRequest.prototype.setIncludeMempool = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool include_in_block = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.pb.SubscribeTransactionsRequest.prototype.getIncludeInBlock = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.pb.SubscribeTransactionsRequest.prototype.setIncludeInBlock = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool serialize_tx = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.pb.SubscribeTransactionsRequest.prototype.getSerializeTx = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.pb.SubscribeTransactionsRequest.prototype.setSerializeTx = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.SubscribeBlocksRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.SubscribeBlocksRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.SubscribeBlocksRequest.displayName = 'proto.pb.SubscribeBlocksRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.SubscribeBlocksRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.SubscribeBlocksRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.SubscribeBlocksRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.SubscribeBlocksRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    fullBlock: jspb.Message.getFieldWithDefault(msg, 1, false),
    fullTransactions: jspb.Message.getFieldWithDefault(msg, 2, false),
    serializeBlock: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.SubscribeBlocksRequest}
 */
proto.pb.SubscribeBlocksRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.SubscribeBlocksRequest;
  return proto.pb.SubscribeBlocksRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.SubscribeBlocksRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.SubscribeBlocksRequest}
 */
proto.pb.SubscribeBlocksRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFullBlock(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFullTransactions(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSerializeBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.SubscribeBlocksRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.SubscribeBlocksRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.SubscribeBlocksRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.SubscribeBlocksRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFullBlock();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getFullTransactions();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getSerializeBlock();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional bool full_block = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.pb.SubscribeBlocksRequest.prototype.getFullBlock = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.pb.SubscribeBlocksRequest.prototype.setFullBlock = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool full_transactions = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.pb.SubscribeBlocksRequest.prototype.getFullTransactions = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.pb.SubscribeBlocksRequest.prototype.setFullTransactions = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool serialize_block = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.pb.SubscribeBlocksRequest.prototype.getSerializeBlock = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.pb.SubscribeBlocksRequest.prototype.setSerializeBlock = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.BlockNotification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pb.BlockNotification.oneofGroups_);
};
goog.inherits(proto.pb.BlockNotification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.BlockNotification.displayName = 'proto.pb.BlockNotification';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pb.BlockNotification.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.pb.BlockNotification.BlockCase = {
  BLOCK_NOT_SET: 0,
  BLOCK_INFO: 2,
  MARSHALED_BLOCK: 3,
  SERIALIZED_BLOCK: 4
};

/**
 * @return {proto.pb.BlockNotification.BlockCase}
 */
proto.pb.BlockNotification.prototype.getBlockCase = function() {
  return /** @type {proto.pb.BlockNotification.BlockCase} */(jspb.Message.computeOneofCase(this, proto.pb.BlockNotification.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.BlockNotification.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.BlockNotification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.BlockNotification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BlockNotification.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    blockInfo: (f = msg.getBlockInfo()) && proto.pb.BlockInfo.toObject(includeInstance, f),
    marshaledBlock: (f = msg.getMarshaledBlock()) && proto.pb.Block.toObject(includeInstance, f),
    serializedBlock: msg.getSerializedBlock_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.BlockNotification}
 */
proto.pb.BlockNotification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.BlockNotification;
  return proto.pb.BlockNotification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.BlockNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.BlockNotification}
 */
proto.pb.BlockNotification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.pb.BlockNotification.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new proto.pb.BlockInfo;
      reader.readMessage(value,proto.pb.BlockInfo.deserializeBinaryFromReader);
      msg.setBlockInfo(value);
      break;
    case 3:
      var value = new proto.pb.Block;
      reader.readMessage(value,proto.pb.Block.deserializeBinaryFromReader);
      msg.setMarshaledBlock(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSerializedBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.BlockNotification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.BlockNotification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.BlockNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BlockNotification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getBlockInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pb.BlockInfo.serializeBinaryToWriter
    );
  }
  f = message.getMarshaledBlock();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.pb.Block.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.pb.BlockNotification.Type = {
  CONNECTED: 0,
  DISCONNECTED: 1
};

/**
 * optional Type type = 1;
 * @return {!proto.pb.BlockNotification.Type}
 */
proto.pb.BlockNotification.prototype.getType = function() {
  return /** @type {!proto.pb.BlockNotification.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.pb.BlockNotification.Type} value */
proto.pb.BlockNotification.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional BlockInfo block_info = 2;
 * @return {?proto.pb.BlockInfo}
 */
proto.pb.BlockNotification.prototype.getBlockInfo = function() {
  return /** @type{?proto.pb.BlockInfo} */ (
    jspb.Message.getWrapperField(this, proto.pb.BlockInfo, 2));
};


/** @param {?proto.pb.BlockInfo|undefined} value */
proto.pb.BlockNotification.prototype.setBlockInfo = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.pb.BlockNotification.oneofGroups_[0], value);
};


proto.pb.BlockNotification.prototype.clearBlockInfo = function() {
  this.setBlockInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.BlockNotification.prototype.hasBlockInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Block marshaled_block = 3;
 * @return {?proto.pb.Block}
 */
proto.pb.BlockNotification.prototype.getMarshaledBlock = function() {
  return /** @type{?proto.pb.Block} */ (
    jspb.Message.getWrapperField(this, proto.pb.Block, 3));
};


/** @param {?proto.pb.Block|undefined} value */
proto.pb.BlockNotification.prototype.setMarshaledBlock = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.pb.BlockNotification.oneofGroups_[0], value);
};


proto.pb.BlockNotification.prototype.clearMarshaledBlock = function() {
  this.setMarshaledBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.BlockNotification.prototype.hasMarshaledBlock = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes serialized_block = 4;
 * @return {!(string|Uint8Array)}
 */
proto.pb.BlockNotification.prototype.getSerializedBlock = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes serialized_block = 4;
 * This is a type-conversion wrapper around `getSerializedBlock()`
 * @return {string}
 */
proto.pb.BlockNotification.prototype.getSerializedBlock_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSerializedBlock()));
};


/**
 * optional bytes serialized_block = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSerializedBlock()`
 * @return {!Uint8Array}
 */
proto.pb.BlockNotification.prototype.getSerializedBlock_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSerializedBlock()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.BlockNotification.prototype.setSerializedBlock = function(value) {
  jspb.Message.setOneofField(this, 4, proto.pb.BlockNotification.oneofGroups_[0], value);
};


proto.pb.BlockNotification.prototype.clearSerializedBlock = function() {
  jspb.Message.setOneofField(this, 4, proto.pb.BlockNotification.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.BlockNotification.prototype.hasSerializedBlock = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.TransactionNotification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pb.TransactionNotification.oneofGroups_);
};
goog.inherits(proto.pb.TransactionNotification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.TransactionNotification.displayName = 'proto.pb.TransactionNotification';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pb.TransactionNotification.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.pb.TransactionNotification.TransactionCase = {
  TRANSACTION_NOT_SET: 0,
  CONFIRMED_TRANSACTION: 2,
  UNCONFIRMED_TRANSACTION: 3,
  SERIALIZED_TRANSACTION: 4
};

/**
 * @return {proto.pb.TransactionNotification.TransactionCase}
 */
proto.pb.TransactionNotification.prototype.getTransactionCase = function() {
  return /** @type {proto.pb.TransactionNotification.TransactionCase} */(jspb.Message.computeOneofCase(this, proto.pb.TransactionNotification.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.TransactionNotification.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.TransactionNotification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.TransactionNotification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TransactionNotification.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confirmedTransaction: (f = msg.getConfirmedTransaction()) && proto.pb.Transaction.toObject(includeInstance, f),
    unconfirmedTransaction: (f = msg.getUnconfirmedTransaction()) && proto.pb.MempoolTransaction.toObject(includeInstance, f),
    serializedTransaction: msg.getSerializedTransaction_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.TransactionNotification}
 */
proto.pb.TransactionNotification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.TransactionNotification;
  return proto.pb.TransactionNotification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.TransactionNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.TransactionNotification}
 */
proto.pb.TransactionNotification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.pb.TransactionNotification.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new proto.pb.Transaction;
      reader.readMessage(value,proto.pb.Transaction.deserializeBinaryFromReader);
      msg.setConfirmedTransaction(value);
      break;
    case 3:
      var value = new proto.pb.MempoolTransaction;
      reader.readMessage(value,proto.pb.MempoolTransaction.deserializeBinaryFromReader);
      msg.setUnconfirmedTransaction(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSerializedTransaction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.TransactionNotification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.TransactionNotification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.TransactionNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TransactionNotification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfirmedTransaction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pb.Transaction.serializeBinaryToWriter
    );
  }
  f = message.getUnconfirmedTransaction();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.pb.MempoolTransaction.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.pb.TransactionNotification.Type = {
  UNCONFIRMED: 0,
  CONFIRMED: 1
};

/**
 * optional Type type = 1;
 * @return {!proto.pb.TransactionNotification.Type}
 */
proto.pb.TransactionNotification.prototype.getType = function() {
  return /** @type {!proto.pb.TransactionNotification.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.pb.TransactionNotification.Type} value */
proto.pb.TransactionNotification.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Transaction confirmed_transaction = 2;
 * @return {?proto.pb.Transaction}
 */
proto.pb.TransactionNotification.prototype.getConfirmedTransaction = function() {
  return /** @type{?proto.pb.Transaction} */ (
    jspb.Message.getWrapperField(this, proto.pb.Transaction, 2));
};


/** @param {?proto.pb.Transaction|undefined} value */
proto.pb.TransactionNotification.prototype.setConfirmedTransaction = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.pb.TransactionNotification.oneofGroups_[0], value);
};


proto.pb.TransactionNotification.prototype.clearConfirmedTransaction = function() {
  this.setConfirmedTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.TransactionNotification.prototype.hasConfirmedTransaction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional MempoolTransaction unconfirmed_transaction = 3;
 * @return {?proto.pb.MempoolTransaction}
 */
proto.pb.TransactionNotification.prototype.getUnconfirmedTransaction = function() {
  return /** @type{?proto.pb.MempoolTransaction} */ (
    jspb.Message.getWrapperField(this, proto.pb.MempoolTransaction, 3));
};


/** @param {?proto.pb.MempoolTransaction|undefined} value */
proto.pb.TransactionNotification.prototype.setUnconfirmedTransaction = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.pb.TransactionNotification.oneofGroups_[0], value);
};


proto.pb.TransactionNotification.prototype.clearUnconfirmedTransaction = function() {
  this.setUnconfirmedTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.TransactionNotification.prototype.hasUnconfirmedTransaction = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes serialized_transaction = 4;
 * @return {!(string|Uint8Array)}
 */
proto.pb.TransactionNotification.prototype.getSerializedTransaction = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes serialized_transaction = 4;
 * This is a type-conversion wrapper around `getSerializedTransaction()`
 * @return {string}
 */
proto.pb.TransactionNotification.prototype.getSerializedTransaction_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSerializedTransaction()));
};


/**
 * optional bytes serialized_transaction = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSerializedTransaction()`
 * @return {!Uint8Array}
 */
proto.pb.TransactionNotification.prototype.getSerializedTransaction_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSerializedTransaction()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.TransactionNotification.prototype.setSerializedTransaction = function(value) {
  jspb.Message.setOneofField(this, 4, proto.pb.TransactionNotification.oneofGroups_[0], value);
};


proto.pb.TransactionNotification.prototype.clearSerializedTransaction = function() {
  jspb.Message.setOneofField(this, 4, proto.pb.TransactionNotification.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.TransactionNotification.prototype.hasSerializedTransaction = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.BlockInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.BlockInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.BlockInfo.displayName = 'proto.pb.BlockInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.BlockInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.BlockInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.BlockInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BlockInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    height: jspb.Message.getFieldWithDefault(msg, 2, 0),
    version: jspb.Message.getFieldWithDefault(msg, 3, 0),
    previousBlock: msg.getPreviousBlock_asB64(),
    merkleRoot: msg.getMerkleRoot_asB64(),
    timestamp: jspb.Message.getFieldWithDefault(msg, 6, 0),
    bits: jspb.Message.getFieldWithDefault(msg, 7, 0),
    nonce: jspb.Message.getFieldWithDefault(msg, 8, 0),
    confirmations: jspb.Message.getFieldWithDefault(msg, 9, 0),
    difficulty: +jspb.Message.getFieldWithDefault(msg, 10, 0.0),
    nextBlockHash: msg.getNextBlockHash_asB64(),
    size: jspb.Message.getFieldWithDefault(msg, 12, 0),
    medianTime: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.BlockInfo}
 */
proto.pb.BlockInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.BlockInfo;
  return proto.pb.BlockInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.BlockInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.BlockInfo}
 */
proto.pb.BlockInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPreviousBlock(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMerkleRoot(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBits(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNonce(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConfirmations(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDifficulty(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNextBlockHash(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSize(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMedianTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.BlockInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.BlockInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.BlockInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BlockInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPreviousBlock_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getMerkleRoot_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getBits();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getNonce();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getConfirmations();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getDifficulty();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getNextBlockHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      11,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getMedianTime();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.BlockInfo.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.BlockInfo.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.BlockInfo.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.BlockInfo.prototype.setHash = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional int32 height = 2;
 * @return {number}
 */
proto.pb.BlockInfo.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.pb.BlockInfo.prototype.setHeight = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 version = 3;
 * @return {number}
 */
proto.pb.BlockInfo.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.pb.BlockInfo.prototype.setVersion = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes previous_block = 4;
 * @return {!(string|Uint8Array)}
 */
proto.pb.BlockInfo.prototype.getPreviousBlock = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes previous_block = 4;
 * This is a type-conversion wrapper around `getPreviousBlock()`
 * @return {string}
 */
proto.pb.BlockInfo.prototype.getPreviousBlock_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPreviousBlock()));
};


/**
 * optional bytes previous_block = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPreviousBlock()`
 * @return {!Uint8Array}
 */
proto.pb.BlockInfo.prototype.getPreviousBlock_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPreviousBlock()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.BlockInfo.prototype.setPreviousBlock = function(value) {
  jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional bytes merkle_root = 5;
 * @return {!(string|Uint8Array)}
 */
proto.pb.BlockInfo.prototype.getMerkleRoot = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes merkle_root = 5;
 * This is a type-conversion wrapper around `getMerkleRoot()`
 * @return {string}
 */
proto.pb.BlockInfo.prototype.getMerkleRoot_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMerkleRoot()));
};


/**
 * optional bytes merkle_root = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMerkleRoot()`
 * @return {!Uint8Array}
 */
proto.pb.BlockInfo.prototype.getMerkleRoot_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMerkleRoot()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.BlockInfo.prototype.setMerkleRoot = function(value) {
  jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional int64 timestamp = 6;
 * @return {number}
 */
proto.pb.BlockInfo.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.pb.BlockInfo.prototype.setTimestamp = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 bits = 7;
 * @return {number}
 */
proto.pb.BlockInfo.prototype.getBits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.pb.BlockInfo.prototype.setBits = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 nonce = 8;
 * @return {number}
 */
proto.pb.BlockInfo.prototype.getNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.pb.BlockInfo.prototype.setNonce = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 confirmations = 9;
 * @return {number}
 */
proto.pb.BlockInfo.prototype.getConfirmations = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.pb.BlockInfo.prototype.setConfirmations = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional double difficulty = 10;
 * @return {number}
 */
proto.pb.BlockInfo.prototype.getDifficulty = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 10, 0.0));
};


/** @param {number} value */
proto.pb.BlockInfo.prototype.setDifficulty = function(value) {
  jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional bytes next_block_hash = 11;
 * @return {!(string|Uint8Array)}
 */
proto.pb.BlockInfo.prototype.getNextBlockHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes next_block_hash = 11;
 * This is a type-conversion wrapper around `getNextBlockHash()`
 * @return {string}
 */
proto.pb.BlockInfo.prototype.getNextBlockHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNextBlockHash()));
};


/**
 * optional bytes next_block_hash = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNextBlockHash()`
 * @return {!Uint8Array}
 */
proto.pb.BlockInfo.prototype.getNextBlockHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNextBlockHash()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.BlockInfo.prototype.setNextBlockHash = function(value) {
  jspb.Message.setProto3BytesField(this, 11, value);
};


/**
 * optional int32 size = 12;
 * @return {number}
 */
proto.pb.BlockInfo.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.pb.BlockInfo.prototype.setSize = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int64 median_time = 13;
 * @return {number}
 */
proto.pb.BlockInfo.prototype.getMedianTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.pb.BlockInfo.prototype.setMedianTime = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.Block = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.Block.repeatedFields_, null);
};
goog.inherits(proto.pb.Block, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.Block.displayName = 'proto.pb.Block';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.Block.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.Block.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.Block.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.Block} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Block.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.pb.BlockInfo.toObject(includeInstance, f),
    transactionDataList: jspb.Message.toObjectList(msg.getTransactionDataList(),
    proto.pb.Block.TransactionData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.Block}
 */
proto.pb.Block.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.Block;
  return proto.pb.Block.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.Block} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.Block}
 */
proto.pb.Block.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.BlockInfo;
      reader.readMessage(value,proto.pb.BlockInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 2:
      var value = new proto.pb.Block.TransactionData;
      reader.readMessage(value,proto.pb.Block.TransactionData.deserializeBinaryFromReader);
      msg.addTransactionData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.Block.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.Block.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.Block} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Block.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pb.BlockInfo.serializeBinaryToWriter
    );
  }
  f = message.getTransactionDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.pb.Block.TransactionData.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.Block.TransactionData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pb.Block.TransactionData.oneofGroups_);
};
goog.inherits(proto.pb.Block.TransactionData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.Block.TransactionData.displayName = 'proto.pb.Block.TransactionData';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pb.Block.TransactionData.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.pb.Block.TransactionData.TxidsOrTxsCase = {
  TXIDS_OR_TXS_NOT_SET: 0,
  TRANSACTION_HASH: 1,
  TRANSACTION: 2
};

/**
 * @return {proto.pb.Block.TransactionData.TxidsOrTxsCase}
 */
proto.pb.Block.TransactionData.prototype.getTxidsOrTxsCase = function() {
  return /** @type {proto.pb.Block.TransactionData.TxidsOrTxsCase} */(jspb.Message.computeOneofCase(this, proto.pb.Block.TransactionData.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.Block.TransactionData.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.Block.TransactionData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.Block.TransactionData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Block.TransactionData.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionHash: msg.getTransactionHash_asB64(),
    transaction: (f = msg.getTransaction()) && proto.pb.Transaction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.Block.TransactionData}
 */
proto.pb.Block.TransactionData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.Block.TransactionData;
  return proto.pb.Block.TransactionData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.Block.TransactionData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.Block.TransactionData}
 */
proto.pb.Block.TransactionData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTransactionHash(value);
      break;
    case 2:
      var value = new proto.pb.Transaction;
      reader.readMessage(value,proto.pb.Transaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.Block.TransactionData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.Block.TransactionData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.Block.TransactionData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Block.TransactionData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pb.Transaction.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes transaction_hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.Block.TransactionData.prototype.getTransactionHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes transaction_hash = 1;
 * This is a type-conversion wrapper around `getTransactionHash()`
 * @return {string}
 */
proto.pb.Block.TransactionData.prototype.getTransactionHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTransactionHash()));
};


/**
 * optional bytes transaction_hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTransactionHash()`
 * @return {!Uint8Array}
 */
proto.pb.Block.TransactionData.prototype.getTransactionHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTransactionHash()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.Block.TransactionData.prototype.setTransactionHash = function(value) {
  jspb.Message.setOneofField(this, 1, proto.pb.Block.TransactionData.oneofGroups_[0], value);
};


proto.pb.Block.TransactionData.prototype.clearTransactionHash = function() {
  jspb.Message.setOneofField(this, 1, proto.pb.Block.TransactionData.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Block.TransactionData.prototype.hasTransactionHash = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Transaction transaction = 2;
 * @return {?proto.pb.Transaction}
 */
proto.pb.Block.TransactionData.prototype.getTransaction = function() {
  return /** @type{?proto.pb.Transaction} */ (
    jspb.Message.getWrapperField(this, proto.pb.Transaction, 2));
};


/** @param {?proto.pb.Transaction|undefined} value */
proto.pb.Block.TransactionData.prototype.setTransaction = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.pb.Block.TransactionData.oneofGroups_[0], value);
};


proto.pb.Block.TransactionData.prototype.clearTransaction = function() {
  this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Block.TransactionData.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional BlockInfo info = 1;
 * @return {?proto.pb.BlockInfo}
 */
proto.pb.Block.prototype.getInfo = function() {
  return /** @type{?proto.pb.BlockInfo} */ (
    jspb.Message.getWrapperField(this, proto.pb.BlockInfo, 1));
};


/** @param {?proto.pb.BlockInfo|undefined} value */
proto.pb.Block.prototype.setInfo = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.pb.Block.prototype.clearInfo = function() {
  this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Block.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated TransactionData transaction_data = 2;
 * @return {!Array<!proto.pb.Block.TransactionData>}
 */
proto.pb.Block.prototype.getTransactionDataList = function() {
  return /** @type{!Array<!proto.pb.Block.TransactionData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.Block.TransactionData, 2));
};


/** @param {!Array<!proto.pb.Block.TransactionData>} value */
proto.pb.Block.prototype.setTransactionDataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.pb.Block.TransactionData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.Block.TransactionData}
 */
proto.pb.Block.prototype.addTransactionData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.pb.Block.TransactionData, opt_index);
};


proto.pb.Block.prototype.clearTransactionDataList = function() {
  this.setTransactionDataList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.Transaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.Transaction.repeatedFields_, null);
};
goog.inherits(proto.pb.Transaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.Transaction.displayName = 'proto.pb.Transaction';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.Transaction.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.Transaction.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.Transaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.Transaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Transaction.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    version: jspb.Message.getFieldWithDefault(msg, 2, 0),
    inputsList: jspb.Message.toObjectList(msg.getInputsList(),
    proto.pb.Transaction.Input.toObject, includeInstance),
    outputsList: jspb.Message.toObjectList(msg.getOutputsList(),
    proto.pb.Transaction.Output.toObject, includeInstance),
    lockTime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    size: jspb.Message.getFieldWithDefault(msg, 8, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 9, 0),
    confirmations: jspb.Message.getFieldWithDefault(msg, 10, 0),
    blockHeight: jspb.Message.getFieldWithDefault(msg, 11, 0),
    blockHash: msg.getBlockHash_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.Transaction}
 */
proto.pb.Transaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.Transaction;
  return proto.pb.Transaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.Transaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.Transaction}
 */
proto.pb.Transaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 3:
      var value = new proto.pb.Transaction.Input;
      reader.readMessage(value,proto.pb.Transaction.Input.deserializeBinaryFromReader);
      msg.addInputs(value);
      break;
    case 4:
      var value = new proto.pb.Transaction.Output;
      reader.readMessage(value,proto.pb.Transaction.Output.deserializeBinaryFromReader);
      msg.addOutputs(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLockTime(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSize(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConfirmations(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBlockHeight(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBlockHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.Transaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.Transaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.Transaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Transaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getInputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.pb.Transaction.Input.serializeBinaryToWriter
    );
  }
  f = message.getOutputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.pb.Transaction.Output.serializeBinaryToWriter
    );
  }
  f = message.getLockTime();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getConfirmations();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getBlockHeight();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getBlockHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      12,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.Transaction.Input = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.Transaction.Input, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.Transaction.Input.displayName = 'proto.pb.Transaction.Input';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.Transaction.Input.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.Transaction.Input.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.Transaction.Input} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Transaction.Input.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0),
    outpoint: (f = msg.getOutpoint()) && proto.pb.Transaction.Input.Outpoint.toObject(includeInstance, f),
    signatureScript: msg.getSignatureScript_asB64(),
    sequence: jspb.Message.getFieldWithDefault(msg, 4, 0),
    value: jspb.Message.getFieldWithDefault(msg, 5, 0),
    previousScript: msg.getPreviousScript_asB64(),
    address: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.Transaction.Input}
 */
proto.pb.Transaction.Input.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.Transaction.Input;
  return proto.pb.Transaction.Input.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.Transaction.Input} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.Transaction.Input}
 */
proto.pb.Transaction.Input.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 2:
      var value = new proto.pb.Transaction.Input.Outpoint;
      reader.readMessage(value,proto.pb.Transaction.Input.Outpoint.deserializeBinaryFromReader);
      msg.setOutpoint(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignatureScript(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSequence(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPreviousScript(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.Transaction.Input.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.Transaction.Input.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.Transaction.Input} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Transaction.Input.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getOutpoint();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pb.Transaction.Input.Outpoint.serializeBinaryToWriter
    );
  }
  f = message.getSignatureScript_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getPreviousScript_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.Transaction.Input.Outpoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.Transaction.Input.Outpoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.Transaction.Input.Outpoint.displayName = 'proto.pb.Transaction.Input.Outpoint';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.Transaction.Input.Outpoint.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.Transaction.Input.Outpoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.Transaction.Input.Outpoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Transaction.Input.Outpoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    index: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.Transaction.Input.Outpoint}
 */
proto.pb.Transaction.Input.Outpoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.Transaction.Input.Outpoint;
  return proto.pb.Transaction.Input.Outpoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.Transaction.Input.Outpoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.Transaction.Input.Outpoint}
 */
proto.pb.Transaction.Input.Outpoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.Transaction.Input.Outpoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.Transaction.Input.Outpoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.Transaction.Input.Outpoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Transaction.Input.Outpoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.Transaction.Input.Outpoint.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.Transaction.Input.Outpoint.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.Transaction.Input.Outpoint.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.Transaction.Input.Outpoint.prototype.setHash = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 index = 2;
 * @return {number}
 */
proto.pb.Transaction.Input.Outpoint.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.pb.Transaction.Input.Outpoint.prototype.setIndex = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 index = 1;
 * @return {number}
 */
proto.pb.Transaction.Input.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.pb.Transaction.Input.prototype.setIndex = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Outpoint outpoint = 2;
 * @return {?proto.pb.Transaction.Input.Outpoint}
 */
proto.pb.Transaction.Input.prototype.getOutpoint = function() {
  return /** @type{?proto.pb.Transaction.Input.Outpoint} */ (
    jspb.Message.getWrapperField(this, proto.pb.Transaction.Input.Outpoint, 2));
};


/** @param {?proto.pb.Transaction.Input.Outpoint|undefined} value */
proto.pb.Transaction.Input.prototype.setOutpoint = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.pb.Transaction.Input.prototype.clearOutpoint = function() {
  this.setOutpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Transaction.Input.prototype.hasOutpoint = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes signature_script = 3;
 * @return {!(string|Uint8Array)}
 */
proto.pb.Transaction.Input.prototype.getSignatureScript = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes signature_script = 3;
 * This is a type-conversion wrapper around `getSignatureScript()`
 * @return {string}
 */
proto.pb.Transaction.Input.prototype.getSignatureScript_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignatureScript()));
};


/**
 * optional bytes signature_script = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignatureScript()`
 * @return {!Uint8Array}
 */
proto.pb.Transaction.Input.prototype.getSignatureScript_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignatureScript()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.Transaction.Input.prototype.setSignatureScript = function(value) {
  jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional uint32 sequence = 4;
 * @return {number}
 */
proto.pb.Transaction.Input.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.pb.Transaction.Input.prototype.setSequence = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 value = 5;
 * @return {number}
 */
proto.pb.Transaction.Input.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.pb.Transaction.Input.prototype.setValue = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bytes previous_script = 6;
 * @return {!(string|Uint8Array)}
 */
proto.pb.Transaction.Input.prototype.getPreviousScript = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes previous_script = 6;
 * This is a type-conversion wrapper around `getPreviousScript()`
 * @return {string}
 */
proto.pb.Transaction.Input.prototype.getPreviousScript_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPreviousScript()));
};


/**
 * optional bytes previous_script = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPreviousScript()`
 * @return {!Uint8Array}
 */
proto.pb.Transaction.Input.prototype.getPreviousScript_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPreviousScript()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.Transaction.Input.prototype.setPreviousScript = function(value) {
  jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional string address = 7;
 * @return {string}
 */
proto.pb.Transaction.Input.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.pb.Transaction.Input.prototype.setAddress = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.Transaction.Output = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.Transaction.Output, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.Transaction.Output.displayName = 'proto.pb.Transaction.Output';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.Transaction.Output.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.Transaction.Output.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.Transaction.Output} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Transaction.Output.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pubkeyScript: msg.getPubkeyScript_asB64(),
    address: jspb.Message.getFieldWithDefault(msg, 4, ""),
    scriptClass: jspb.Message.getFieldWithDefault(msg, 5, ""),
    disassembledScript: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.Transaction.Output}
 */
proto.pb.Transaction.Output.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.Transaction.Output;
  return proto.pb.Transaction.Output.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.Transaction.Output} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.Transaction.Output}
 */
proto.pb.Transaction.Output.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubkeyScript(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setScriptClass(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisassembledScript(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.Transaction.Output.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.Transaction.Output.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.Transaction.Output} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Transaction.Output.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPubkeyScript_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getScriptClass();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDisassembledScript();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional uint32 index = 1;
 * @return {number}
 */
proto.pb.Transaction.Output.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.pb.Transaction.Output.prototype.setIndex = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 value = 2;
 * @return {number}
 */
proto.pb.Transaction.Output.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.pb.Transaction.Output.prototype.setValue = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bytes pubkey_script = 3;
 * @return {!(string|Uint8Array)}
 */
proto.pb.Transaction.Output.prototype.getPubkeyScript = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes pubkey_script = 3;
 * This is a type-conversion wrapper around `getPubkeyScript()`
 * @return {string}
 */
proto.pb.Transaction.Output.prototype.getPubkeyScript_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubkeyScript()));
};


/**
 * optional bytes pubkey_script = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubkeyScript()`
 * @return {!Uint8Array}
 */
proto.pb.Transaction.Output.prototype.getPubkeyScript_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubkeyScript()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.Transaction.Output.prototype.setPubkeyScript = function(value) {
  jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional string address = 4;
 * @return {string}
 */
proto.pb.Transaction.Output.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.pb.Transaction.Output.prototype.setAddress = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string script_class = 5;
 * @return {string}
 */
proto.pb.Transaction.Output.prototype.getScriptClass = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.pb.Transaction.Output.prototype.setScriptClass = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string disassembled_script = 6;
 * @return {string}
 */
proto.pb.Transaction.Output.prototype.getDisassembledScript = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.pb.Transaction.Output.prototype.setDisassembledScript = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.Transaction.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.Transaction.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.Transaction.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.Transaction.prototype.setHash = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional int32 version = 2;
 * @return {number}
 */
proto.pb.Transaction.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.pb.Transaction.prototype.setVersion = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated Input inputs = 3;
 * @return {!Array<!proto.pb.Transaction.Input>}
 */
proto.pb.Transaction.prototype.getInputsList = function() {
  return /** @type{!Array<!proto.pb.Transaction.Input>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.Transaction.Input, 3));
};


/** @param {!Array<!proto.pb.Transaction.Input>} value */
proto.pb.Transaction.prototype.setInputsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.pb.Transaction.Input=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.Transaction.Input}
 */
proto.pb.Transaction.prototype.addInputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.pb.Transaction.Input, opt_index);
};


proto.pb.Transaction.prototype.clearInputsList = function() {
  this.setInputsList([]);
};


/**
 * repeated Output outputs = 4;
 * @return {!Array<!proto.pb.Transaction.Output>}
 */
proto.pb.Transaction.prototype.getOutputsList = function() {
  return /** @type{!Array<!proto.pb.Transaction.Output>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.Transaction.Output, 4));
};


/** @param {!Array<!proto.pb.Transaction.Output>} value */
proto.pb.Transaction.prototype.setOutputsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.pb.Transaction.Output=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.Transaction.Output}
 */
proto.pb.Transaction.prototype.addOutputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.pb.Transaction.Output, opt_index);
};


proto.pb.Transaction.prototype.clearOutputsList = function() {
  this.setOutputsList([]);
};


/**
 * optional uint32 lock_time = 5;
 * @return {number}
 */
proto.pb.Transaction.prototype.getLockTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.pb.Transaction.prototype.setLockTime = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 size = 8;
 * @return {number}
 */
proto.pb.Transaction.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.pb.Transaction.prototype.setSize = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 timestamp = 9;
 * @return {number}
 */
proto.pb.Transaction.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.pb.Transaction.prototype.setTimestamp = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 confirmations = 10;
 * @return {number}
 */
proto.pb.Transaction.prototype.getConfirmations = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.pb.Transaction.prototype.setConfirmations = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 block_height = 11;
 * @return {number}
 */
proto.pb.Transaction.prototype.getBlockHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.pb.Transaction.prototype.setBlockHeight = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional bytes block_hash = 12;
 * @return {!(string|Uint8Array)}
 */
proto.pb.Transaction.prototype.getBlockHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes block_hash = 12;
 * This is a type-conversion wrapper around `getBlockHash()`
 * @return {string}
 */
proto.pb.Transaction.prototype.getBlockHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBlockHash()));
};


/**
 * optional bytes block_hash = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBlockHash()`
 * @return {!Uint8Array}
 */
proto.pb.Transaction.prototype.getBlockHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBlockHash()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.Transaction.prototype.setBlockHash = function(value) {
  jspb.Message.setProto3BytesField(this, 12, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.MempoolTransaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.MempoolTransaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.MempoolTransaction.displayName = 'proto.pb.MempoolTransaction';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.MempoolTransaction.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.MempoolTransaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.MempoolTransaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.MempoolTransaction.toObject = function(includeInstance, msg) {
  var f, obj = {
    transaction: (f = msg.getTransaction()) && proto.pb.Transaction.toObject(includeInstance, f),
    addedTime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    addedHeight: jspb.Message.getFieldWithDefault(msg, 3, 0),
    fee: jspb.Message.getFieldWithDefault(msg, 4, 0),
    feePerKb: jspb.Message.getFieldWithDefault(msg, 5, 0),
    startingPriority: +jspb.Message.getFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.MempoolTransaction}
 */
proto.pb.MempoolTransaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.MempoolTransaction;
  return proto.pb.MempoolTransaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.MempoolTransaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.MempoolTransaction}
 */
proto.pb.MempoolTransaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.Transaction;
      reader.readMessage(value,proto.pb.Transaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAddedTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAddedHeight(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFee(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFeePerKb(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStartingPriority(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.MempoolTransaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.MempoolTransaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.MempoolTransaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.MempoolTransaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pb.Transaction.serializeBinaryToWriter
    );
  }
  f = message.getAddedTime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAddedHeight();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFee();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getFeePerKb();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getStartingPriority();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional Transaction transaction = 1;
 * @return {?proto.pb.Transaction}
 */
proto.pb.MempoolTransaction.prototype.getTransaction = function() {
  return /** @type{?proto.pb.Transaction} */ (
    jspb.Message.getWrapperField(this, proto.pb.Transaction, 1));
};


/** @param {?proto.pb.Transaction|undefined} value */
proto.pb.MempoolTransaction.prototype.setTransaction = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.pb.MempoolTransaction.prototype.clearTransaction = function() {
  this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.MempoolTransaction.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 added_time = 2;
 * @return {number}
 */
proto.pb.MempoolTransaction.prototype.getAddedTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.pb.MempoolTransaction.prototype.setAddedTime = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 added_height = 3;
 * @return {number}
 */
proto.pb.MempoolTransaction.prototype.getAddedHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.pb.MempoolTransaction.prototype.setAddedHeight = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 fee = 4;
 * @return {number}
 */
proto.pb.MempoolTransaction.prototype.getFee = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.pb.MempoolTransaction.prototype.setFee = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 fee_per_kb = 5;
 * @return {number}
 */
proto.pb.MempoolTransaction.prototype.getFeePerKb = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.pb.MempoolTransaction.prototype.setFeePerKb = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional double starting_priority = 6;
 * @return {number}
 */
proto.pb.MempoolTransaction.prototype.getStartingPriority = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.pb.MempoolTransaction.prototype.setStartingPriority = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.UnspentOutput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.UnspentOutput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.UnspentOutput.displayName = 'proto.pb.UnspentOutput';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.UnspentOutput.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.UnspentOutput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.UnspentOutput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.UnspentOutput.toObject = function(includeInstance, msg) {
  var f, obj = {
    outpoint: (f = msg.getOutpoint()) && proto.pb.Transaction.Input.Outpoint.toObject(includeInstance, f),
    pubkeyScript: msg.getPubkeyScript_asB64(),
    value: jspb.Message.getFieldWithDefault(msg, 3, 0),
    isCoinbase: jspb.Message.getFieldWithDefault(msg, 4, false),
    blockHeight: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.UnspentOutput}
 */
proto.pb.UnspentOutput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.UnspentOutput;
  return proto.pb.UnspentOutput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.UnspentOutput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.UnspentOutput}
 */
proto.pb.UnspentOutput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.Transaction.Input.Outpoint;
      reader.readMessage(value,proto.pb.Transaction.Input.Outpoint.deserializeBinaryFromReader);
      msg.setOutpoint(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubkeyScript(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCoinbase(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBlockHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.UnspentOutput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.UnspentOutput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.UnspentOutput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.UnspentOutput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutpoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pb.Transaction.Input.Outpoint.serializeBinaryToWriter
    );
  }
  f = message.getPubkeyScript_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getIsCoinbase();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getBlockHeight();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional Transaction.Input.Outpoint outpoint = 1;
 * @return {?proto.pb.Transaction.Input.Outpoint}
 */
proto.pb.UnspentOutput.prototype.getOutpoint = function() {
  return /** @type{?proto.pb.Transaction.Input.Outpoint} */ (
    jspb.Message.getWrapperField(this, proto.pb.Transaction.Input.Outpoint, 1));
};


/** @param {?proto.pb.Transaction.Input.Outpoint|undefined} value */
proto.pb.UnspentOutput.prototype.setOutpoint = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.pb.UnspentOutput.prototype.clearOutpoint = function() {
  this.setOutpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.UnspentOutput.prototype.hasOutpoint = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes pubkey_script = 2;
 * @return {!(string|Uint8Array)}
 */
proto.pb.UnspentOutput.prototype.getPubkeyScript = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes pubkey_script = 2;
 * This is a type-conversion wrapper around `getPubkeyScript()`
 * @return {string}
 */
proto.pb.UnspentOutput.prototype.getPubkeyScript_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubkeyScript()));
};


/**
 * optional bytes pubkey_script = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubkeyScript()`
 * @return {!Uint8Array}
 */
proto.pb.UnspentOutput.prototype.getPubkeyScript_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubkeyScript()));
};


/** @param {!(string|Uint8Array)} value */
proto.pb.UnspentOutput.prototype.setPubkeyScript = function(value) {
  jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional int64 value = 3;
 * @return {number}
 */
proto.pb.UnspentOutput.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.pb.UnspentOutput.prototype.setValue = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool is_coinbase = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.pb.UnspentOutput.prototype.getIsCoinbase = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.pb.UnspentOutput.prototype.setIsCoinbase = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional int32 block_height = 5;
 * @return {number}
 */
proto.pb.UnspentOutput.prototype.getBlockHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.pb.UnspentOutput.prototype.setBlockHeight = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.TransactionFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.TransactionFilter.repeatedFields_, null);
};
goog.inherits(proto.pb.TransactionFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pb.TransactionFilter.displayName = 'proto.pb.TransactionFilter';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.TransactionFilter.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.TransactionFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.TransactionFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.TransactionFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TransactionFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    addressesList: jspb.Message.getRepeatedField(msg, 1),
    outpointsList: jspb.Message.toObjectList(msg.getOutpointsList(),
    proto.pb.Transaction.Input.Outpoint.toObject, includeInstance),
    dataElementsList: msg.getDataElementsList_asB64(),
    allTransactions: jspb.Message.getFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.TransactionFilter}
 */
proto.pb.TransactionFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.TransactionFilter;
  return proto.pb.TransactionFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.TransactionFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.TransactionFilter}
 */
proto.pb.TransactionFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAddresses(value);
      break;
    case 2:
      var value = new proto.pb.Transaction.Input.Outpoint;
      reader.readMessage(value,proto.pb.Transaction.Input.Outpoint.deserializeBinaryFromReader);
      msg.addOutpoints(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addDataElements(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllTransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.TransactionFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.TransactionFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.TransactionFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TransactionFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddressesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getOutpointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.pb.Transaction.Input.Outpoint.serializeBinaryToWriter
    );
  }
  f = message.getDataElementsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
  f = message.getAllTransactions();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * repeated string addresses = 1;
 * @return {!Array<string>}
 */
proto.pb.TransactionFilter.prototype.getAddressesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.pb.TransactionFilter.prototype.setAddressesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.pb.TransactionFilter.prototype.addAddresses = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.pb.TransactionFilter.prototype.clearAddressesList = function() {
  this.setAddressesList([]);
};


/**
 * repeated Transaction.Input.Outpoint outpoints = 2;
 * @return {!Array<!proto.pb.Transaction.Input.Outpoint>}
 */
proto.pb.TransactionFilter.prototype.getOutpointsList = function() {
  return /** @type{!Array<!proto.pb.Transaction.Input.Outpoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.Transaction.Input.Outpoint, 2));
};


/** @param {!Array<!proto.pb.Transaction.Input.Outpoint>} value */
proto.pb.TransactionFilter.prototype.setOutpointsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.pb.Transaction.Input.Outpoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.Transaction.Input.Outpoint}
 */
proto.pb.TransactionFilter.prototype.addOutpoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.pb.Transaction.Input.Outpoint, opt_index);
};


proto.pb.TransactionFilter.prototype.clearOutpointsList = function() {
  this.setOutpointsList([]);
};


/**
 * repeated bytes data_elements = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.pb.TransactionFilter.prototype.getDataElementsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes data_elements = 3;
 * This is a type-conversion wrapper around `getDataElementsList()`
 * @return {!Array<string>}
 */
proto.pb.TransactionFilter.prototype.getDataElementsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getDataElementsList()));
};


/**
 * repeated bytes data_elements = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDataElementsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.pb.TransactionFilter.prototype.getDataElementsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getDataElementsList()));
};


/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.pb.TransactionFilter.prototype.setDataElementsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.pb.TransactionFilter.prototype.addDataElements = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.pb.TransactionFilter.prototype.clearDataElementsList = function() {
  this.setDataElementsList([]);
};


/**
 * optional bool all_transactions = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.pb.TransactionFilter.prototype.getAllTransactions = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.pb.TransactionFilter.prototype.setAllTransactions = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


goog.object.extend(exports, proto.pb);


/***/ }),

/***/ "./node_modules/grpc/index.js":
/*!************************************!*\
  !*** ./node_modules/grpc/index.js ***!
  \************************************/
/*! default exports */
/*! export Channel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Client [provided] [no usage info] [missing usage info prevents renaming] */
/*! export InterceptingCall [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ListenerBuilder [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Metadata [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RequesterBuilder [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Server [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ServerCredentials [provided] [no usage info] [missing usage info prevents renaming] */
/*! export StatusBuilder [provided] [no usage info] [missing usage info prevents renaming] */
/*! export callError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export closeClient [provided] [no usage info] [missing usage info prevents renaming] */
/*! export connectivityState [provided] [no usage info] [missing usage info prevents renaming] */
/*! export credentials [provided] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/grpc/src/credentials.js */
/*!   export combineCallCredentials [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export combineChannelCredentials [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createFromGoogleCredential [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createFromMetadataGenerator [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createInsecure [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createSsl [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export getClientChannel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export load [provided] [no usage info] [missing usage info prevents renaming] */
/*! export loadObject [provided] [no usage info] [missing usage info prevents renaming] */
/*! export loadPackageDefinition [provided] [no usage info] [missing usage info prevents renaming] */
/*! export logVerbosity [provided] [no usage info] [missing usage info prevents renaming] */
/*! export makeGenericClientConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! export methodTypes [provided] [no usage info] [missing usage info prevents renaming] */
/*! export propagate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setLogVerbosity [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setLogger [provided] [no usage info] [missing usage info prevents renaming] */
/*! export status [provided] [no usage info] [missing usage info prevents renaming] */
/*! export waitForClientReady [provided] [no usage info] [missing usage info prevents renaming] */
/*! export writeFlags [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/**
 * @license
 * Copyright 2015 gRPC authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */



var path = __webpack_require__(/*! path */ "path");
var fs = __webpack_require__(/*! fs */ "fs");
var util = __webpack_require__(/*! util */ "util");

var SSL_ROOTS_PATH = path.resolve(__dirname, 'deps', 'grpc', 'etc', 'roots.pem');

var client = __webpack_require__(/*! ./src/client.js */ "./node_modules/grpc/src/client.js");

var server = __webpack_require__(/*! ./src/server.js */ "./node_modules/grpc/src/server.js");

var common = __webpack_require__(/*! ./src/common.js */ "./node_modules/grpc/src/common.js");

var Metadata = __webpack_require__(/*! ./src/metadata.js */ "./node_modules/grpc/src/metadata.js");

var grpc = __webpack_require__(/*! ./src/grpc_extension */ "./node_modules/grpc/src/grpc_extension.js");

var protobuf_js_5_common = __webpack_require__(/*! ./src/protobuf_js_5_common */ "./node_modules/grpc/src/protobuf_js_5_common.js");
var protobuf_js_6_common = __webpack_require__(/*! ./src/protobuf_js_6_common */ "./node_modules/grpc/src/protobuf_js_6_common.js");

var constants = __webpack_require__(/*! ./src/constants.js */ "./node_modules/grpc/src/constants.js");

grpc.setDefaultRootsPem(fs.readFileSync(SSL_ROOTS_PATH, 'ascii'));

/**
 * @namespace grpc
 */

/**
 * Load a ProtoBuf.js object as a gRPC object.
 * @memberof grpc
 * @alias grpc.loadObject
 * @param {Object} value The ProtoBuf.js reflection object to load
 * @param {Object=} options Options to apply to the loaded file
 * @param {bool=} [options.binaryAsBase64=false] deserialize bytes values as
 *     base64 strings instead of Buffers
 * @param {bool=} [options.longsAsStrings=true] deserialize long values as
 *     strings instead of objects
 * @param {bool=} [options.enumsAsStrings=true] deserialize enum values as
 *     strings instead of numbers. Only works with Protobuf.js 6 values.
 * @param {bool=} [options.deprecatedArgumentOrder=false] use the beta method
 *     argument order for client methods, with optional arguments after the
 *     callback. This option is only a temporary stopgap measure to smooth an
 *     API breakage. It is deprecated, and new code should not use it.
 * @param {(number|string)=} [options.protobufjsVersion='detect'] 5 and 6
 *     respectively indicate that an object from the corresponding version of
 *     Protobuf.js is provided in the value argument. If the option is 'detect',
 *     gRPC will guess what the version is based on the structure of the value.
 * @return {Object<string, *>} The resulting gRPC object.
 */
exports.loadObject = function loadObject(value, options) {
  options = Object.assign({}, common.defaultGrpcOptions, options);
  options = Object.assign({}, {'protobufjsVersion': 'detect'}, options);
  var protobufjsVersion;
  if (options.protobufjsVersion === 'detect') {
    if (protobuf_js_6_common.isProbablyProtobufJs6(value)) {
      protobufjsVersion = 6;
    } else if (protobuf_js_5_common.isProbablyProtobufJs5(value)) {
      protobufjsVersion = 5;
    } else {
      var error_message = 'Could not detect ProtoBuf.js version. Please ' +
          'specify the version number with the "protobufjsVersion" option';
      throw new Error(error_message);
    }
  } else {
    protobufjsVersion = options.protobufjsVersion;
  }
  switch (protobufjsVersion) {
    case 6: return protobuf_js_6_common.loadObject(value, options);
    case 5:
    return protobuf_js_5_common.loadObject(value, options);
    default:
    throw new Error('Unrecognized protobufjsVersion', protobufjsVersion);
  }
};

var loadObject = exports.loadObject;

/**
 * Load a gRPC object from a .proto file.
 * @deprecated Use the {@link https://www.npmjs.com/package/@grpc/proto-loader|proto-loader module}
       with grpc.loadPackageDefinition instead.
 * @memberof grpc
 * @alias grpc.load
 * @param {string|{root: string, file: string}} filename The file to load
 * @param {string=} format The file format to expect. Must be either 'proto' or
 *     'json'. Defaults to 'proto'
 * @param {Object=} options Options to apply to the loaded file
 * @param {bool=} [options.convertFieldsToCamelCase=false] Load this file with
 *     field names in camel case instead of their original case
 * @param {bool=} [options.binaryAsBase64=false] deserialize bytes values as
 *     base64 strings instead of Buffers
 * @param {bool=} [options.longsAsStrings=true] deserialize long values as
 *     strings instead of objects
 * @param {bool=} [options.deprecatedArgumentOrder=false] use the beta method
 *     argument order for client methods, with optional arguments after the
 *     callback. This option is only a temporary stopgap measure to smooth an
 *     API breakage. It is deprecated, and new code should not use it.
 * @return {Object<string, *>} The resulting gRPC object
 */
exports.load = util.deprecate(function load(filename, format, options) {
  const ProtoBuf = __webpack_require__(/*! protobufjs */ "./node_modules/grpc/node_modules/protobufjs/dist/protobuf.js");
  options = Object.assign({}, common.defaultGrpcOptions, options);
  options.protobufjsVersion = 5;
  if (!format) {
    format = 'proto';
  }
  var convertFieldsToCamelCaseOriginal = ProtoBuf.convertFieldsToCamelCase;
  if(options && options.hasOwnProperty('convertFieldsToCamelCase')) {
    ProtoBuf.convertFieldsToCamelCase = options.convertFieldsToCamelCase;
  }
  var builder;
  try {
    switch(format) {
      case 'proto':
      builder = ProtoBuf.loadProtoFile(filename);
      break;
      case 'json':
      builder = ProtoBuf.loadJsonFile(filename);
      break;
      default:
      throw new Error('Unrecognized format "' + format + '"');
    }
  } finally {
    ProtoBuf.convertFieldsToCamelCase = convertFieldsToCamelCaseOriginal;
  }

  if (!builder) {
    throw new Error('Could not load file "' + filename + '"');
  }

  return loadObject(builder.ns, options);
}, 'grpc.load: Use the @grpc/proto-loader module with grpc.loadPackageDefinition instead');

/**
 * Load a gRPC package definition as a gRPC object hierarchy
 * @param packageDef grpc~PackageDefinition The package definition object
 * @return {Object<string, *>} The resulting gRPC object
 */
exports.loadPackageDefinition = function loadPackageDefintion(packageDef) {
  const result = {};
  for (const serviceFqn in packageDef) {
    const service = packageDef[serviceFqn];
    const nameComponents = serviceFqn.split('.');
    const serviceName = nameComponents[nameComponents.length-1];
    let current = result;
    for (const packageName of nameComponents.slice(0, -1)) {
      if (!current[packageName]) {
        current[packageName] = {};
      }
      current = current[packageName];
    }
    if (service.hasOwnProperty('format')) {
      current[serviceName] = service;
    } else {
      current[serviceName] = client.makeClientConstructor(service, serviceName, {});
    }
  }
  return result;
};

var log_template = function(args) {
  var file = args.file;
  var line = args.line;
  var severity = args.severity;
  var message = args.message;
  var timestamp = args.timestamp;
  return `${severity} ${timestamp}\t${file}:${line}]\t${message}`;
};

/**
 * Sets the logger function for the gRPC module. For debugging purposes, the C
 * core will log synchronously directly to stdout unless this function is
 * called. Note: the output format here is intended to be informational, and
 * is not guaranteed to stay the same in the future.
 * Logs will be directed to logger.error.
 * @memberof grpc
 * @alias grpc.setLogger
 * @param {Console} logger A Console-like object.
 */
exports.setLogger = function setLogger(logger) {
  common.logger = logger;
  grpc.setDefaultLoggerCallback(function(file, line, severity,
                                         message, timestamp) {
    logger.error(log_template({
      file: path.basename(file),
      line: line,
      severity: severity,
      message: message,
      timestamp: timestamp.toISOString()
    }));
  });
};

/**
 * Sets the logger verbosity for gRPC module logging. The options are members
 * of the grpc.logVerbosity map.
 * @memberof grpc
 * @alias grpc.setLogVerbosity
 * @param {Number} verbosity The minimum severity to log
 */
exports.setLogVerbosity = function setLogVerbosity(verbosity) {
  common.logVerbosity = verbosity;
  grpc.setLogVerbosity(verbosity);
};

exports.Server = server.Server;

exports.Metadata = Metadata;

exports.status = constants.status;

exports.propagate = constants.propagate;

exports.callError = constants.callError;

exports.writeFlags = constants.writeFlags;

exports.logVerbosity = constants.logVerbosity;

exports.methodTypes = constants.methodTypes;

exports.connectivityState = constants.connectivityState;

exports.credentials = __webpack_require__(/*! ./src/credentials.js */ "./node_modules/grpc/src/credentials.js");

/**
 * ServerCredentials factories
 * @constructor ServerCredentials
 * @memberof grpc
 */
exports.ServerCredentials = grpc.ServerCredentials;

/**
 * Create insecure server credentials
 * @name grpc.ServerCredentials.createInsecure
 * @kind function
 * @return {grpc.ServerCredentials}
 */

/**
 * A private key and certificate pair
 * @typedef {Object} grpc.ServerCredentials~keyCertPair
 * @property {Buffer} private_key The server's private key
 * @property {Buffer} cert_chain The server's certificate chain
 */

/**
 * Create SSL server credentials
 * @name grpc.ServerCredentials.createSsl
 * @kind function
 * @param {?Buffer} rootCerts Root CA certificates for validating client
 *     certificates
 * @param {Array<grpc.ServerCredentials~keyCertPair>} keyCertPairs A list of
 *     private key and certificate chain pairs to be used for authenticating
 *     the server
 * @param {boolean} [checkClientCertificate=false] Indicates that the server
 *     should request and verify the client's certificates
 * @return {grpc.ServerCredentials}
 */

exports.makeGenericClientConstructor = client.makeClientConstructor;

exports.getClientChannel = client.getClientChannel;

exports.waitForClientReady = client.waitForClientReady;

exports.StatusBuilder = client.StatusBuilder;
exports.ListenerBuilder = client.ListenerBuilder;
exports.RequesterBuilder = client.RequesterBuilder;
exports.InterceptingCall = client.InterceptingCall;

/**
 * @memberof grpc
 * @alias grpc.closeClient
 * @param {grpc.Client} client_obj The client to close
 */
exports.closeClient = function closeClient(client_obj) {
  client.Client.prototype.close.apply(client_obj);
};

exports.Client = client.Client;

/**
 * @typedef {Object.<string, string | number>} grpc~ChannelOptions
 */

/**
 * This constructor API is almost identical to the Client constructor,
 * except that some of the options for the Client constructor are not valid
 * here.
 * @constructor Channel
 * @memberof grpc
 * @param {string} target The address of the server to connect to
 * @param {grpc.ChannelCredentials} credentials Channel credentials to use when connecting
 * @param {grpc~ChannelOptions} options A map of channel options that will be passed to the core.
 *     The available options are listed in
 *     [this document]{@link https://grpc.github.io/grpc/core/group__grpc__arg__keys.html}.
 */
exports.Channel = grpc.Channel;

/**
 * Close the channel. This has the same functionality as the existing grpc.Client#close
 * @name grpc.Channel#close
 * @kind function
 */

/**
 * Return the target that this channel connects to
 * @name grpc.Channel#getTarget
 * @kind function
 * @return {string} The target
 */

/**
 * Get the channel's current connectivity state.
 * @name grpc.Channel#getConnectivityState
 * @kind function
 * @param {boolean} tryToConnect If true, the channel will start connecting if it is
 *     idle. Otherwise, idle channels will only start connecting when a
 *     call starts.
 * @return {grpc.connectivityState} The current connectivity state
 */

/**
 * @callback grpc.Channel~watchConnectivityStateCallback
 * @param {Error?} error
 */

/**
 * Watch for connectivity state changes.
 * @name grpc.Channel#watchConnectivityState
 * @kind function
 * @param {grpc.ConnectivityState} currentState The state to watch for
 *     transitions from. This should always be populated by calling
 *     getConnectivityState immediately before.
 * @param {grpc~Deadline} deadline A deadline for waiting for a state change
 * @param {grpc.Channel~watchConnectivityStateCallback} callback Called with no
 *     error when the state changes, or with an error if the deadline passes
 *     without a state change
 */

/**
 * @name grpc~Call
 * @kind class
 */

/**
 * Create a call object. Call is an opaque type used by the {@link grpc.Client}
 * and {@link grpc.Server} classes. This function is called by the gRPC library
 * when starting a request. Implementers should return an instance of Call that
 * is returned from calling createCall on an instance of the provided Channel
 * class.
 * @name grpc.Channel#createCall
 * @kind function
 * @param {string} method The full method string to request
 * @param {grpc~Deadline} deadline The call deadline
 * @param {string|null} host A host string override for making the request
 * @param {grpc~Call|null} parentCall A server call to propagate some
 *     information from
 * @param {number|null} propagateFlags A bitwise combination of elements of
 *     {@link grpc.propagate} that indicates what information to propagate
 *     from parentCall
 * @return {grpc~Call}
 */


/***/ }),

/***/ "./node_modules/grpc/node_modules/protobufjs/dist/protobuf.js":
/*!********************************************************************!*\
  !*** ./node_modules/grpc/node_modules/protobufjs/dist/protobuf.js ***!
  \********************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, __webpack_require__, __webpack_exports__, module */
/*! CommonJS bailout: this is used directly at 31:3-7 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
 Copyright 2013 Daniel Wirtz <dcode@dcode.io>

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */

/**
 * @license protobuf.js (c) 2013 Daniel Wirtz <dcode@dcode.io>
 * Released under the Apache License, Version 2.0
 * see: https://github.com/dcodeIO/protobuf.js for details
 */
(function(global, factory) {

    /* AMD */ if (true)
        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! bytebuffer */ "./node_modules/bytebuffer/dist/bytebuffer-node.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    /* CommonJS */ else {}

})(this, function(ByteBuffer, isCommonJS) {
    "use strict";

    /**
     * The ProtoBuf namespace.
     * @exports ProtoBuf
     * @namespace
     * @expose
     */
    var ProtoBuf = {};

    /**
     * @type {!function(new: ByteBuffer, ...[*])}
     * @expose
     */
    ProtoBuf.ByteBuffer = ByteBuffer;

    /**
     * @type {?function(new: Long, ...[*])}
     * @expose
     */
    ProtoBuf.Long = ByteBuffer.Long || null;

    /**
     * ProtoBuf.js version.
     * @type {string}
     * @const
     * @expose
     */
    ProtoBuf.VERSION = "5.0.3";

    /**
     * Wire types.
     * @type {Object.<string,number>}
     * @const
     * @expose
     */
    ProtoBuf.WIRE_TYPES = {};

    /**
     * Varint wire type.
     * @type {number}
     * @expose
     */
    ProtoBuf.WIRE_TYPES.VARINT = 0;

    /**
     * Fixed 64 bits wire type.
     * @type {number}
     * @const
     * @expose
     */
    ProtoBuf.WIRE_TYPES.BITS64 = 1;

    /**
     * Length delimited wire type.
     * @type {number}
     * @const
     * @expose
     */
    ProtoBuf.WIRE_TYPES.LDELIM = 2;

    /**
     * Start group wire type.
     * @type {number}
     * @const
     * @expose
     */
    ProtoBuf.WIRE_TYPES.STARTGROUP = 3;

    /**
     * End group wire type.
     * @type {number}
     * @const
     * @expose
     */
    ProtoBuf.WIRE_TYPES.ENDGROUP = 4;

    /**
     * Fixed 32 bits wire type.
     * @type {number}
     * @const
     * @expose
     */
    ProtoBuf.WIRE_TYPES.BITS32 = 5;

    /**
     * Packable wire types.
     * @type {!Array.<number>}
     * @const
     * @expose
     */
    ProtoBuf.PACKABLE_WIRE_TYPES = [
        ProtoBuf.WIRE_TYPES.VARINT,
        ProtoBuf.WIRE_TYPES.BITS64,
        ProtoBuf.WIRE_TYPES.BITS32
    ];

    /**
     * Types.
     * @dict
     * @type {!Object.<string,{name: string, wireType: number, defaultValue: *}>}
     * @const
     * @expose
     */
    ProtoBuf.TYPES = {
        // According to the protobuf spec.
        "int32": {
            name: "int32",
            wireType: ProtoBuf.WIRE_TYPES.VARINT,
            defaultValue: 0
        },
        "uint32": {
            name: "uint32",
            wireType: ProtoBuf.WIRE_TYPES.VARINT,
            defaultValue: 0
        },
        "sint32": {
            name: "sint32",
            wireType: ProtoBuf.WIRE_TYPES.VARINT,
            defaultValue: 0
        },
        "int64": {
            name: "int64",
            wireType: ProtoBuf.WIRE_TYPES.VARINT,
            defaultValue: ProtoBuf.Long ? ProtoBuf.Long.ZERO : undefined
        },
        "uint64": {
            name: "uint64",
            wireType: ProtoBuf.WIRE_TYPES.VARINT,
            defaultValue: ProtoBuf.Long ? ProtoBuf.Long.UZERO : undefined
        },
        "sint64": {
            name: "sint64",
            wireType: ProtoBuf.WIRE_TYPES.VARINT,
            defaultValue: ProtoBuf.Long ? ProtoBuf.Long.ZERO : undefined
        },
        "bool": {
            name: "bool",
            wireType: ProtoBuf.WIRE_TYPES.VARINT,
            defaultValue: false
        },
        "double": {
            name: "double",
            wireType: ProtoBuf.WIRE_TYPES.BITS64,
            defaultValue: 0
        },
        "string": {
            name: "string",
            wireType: ProtoBuf.WIRE_TYPES.LDELIM,
            defaultValue: ""
        },
        "bytes": {
            name: "bytes",
            wireType: ProtoBuf.WIRE_TYPES.LDELIM,
            defaultValue: null // overridden in the code, must be a unique instance
        },
        "fixed32": {
            name: "fixed32",
            wireType: ProtoBuf.WIRE_TYPES.BITS32,
            defaultValue: 0
        },
        "sfixed32": {
            name: "sfixed32",
            wireType: ProtoBuf.WIRE_TYPES.BITS32,
            defaultValue: 0
        },
        "fixed64": {
            name: "fixed64",
            wireType: ProtoBuf.WIRE_TYPES.BITS64,
            defaultValue:  ProtoBuf.Long ? ProtoBuf.Long.UZERO : undefined
        },
        "sfixed64": {
            name: "sfixed64",
            wireType: ProtoBuf.WIRE_TYPES.BITS64,
            defaultValue: ProtoBuf.Long ? ProtoBuf.Long.ZERO : undefined
        },
        "float": {
            name: "float",
            wireType: ProtoBuf.WIRE_TYPES.BITS32,
            defaultValue: 0
        },
        "enum": {
            name: "enum",
            wireType: ProtoBuf.WIRE_TYPES.VARINT,
            defaultValue: 0
        },
        "message": {
            name: "message",
            wireType: ProtoBuf.WIRE_TYPES.LDELIM,
            defaultValue: null
        },
        "group": {
            name: "group",
            wireType: ProtoBuf.WIRE_TYPES.STARTGROUP,
            defaultValue: null
        }
    };

    /**
     * Valid map key types.
     * @type {!Array.<!Object.<string,{name: string, wireType: number, defaultValue: *}>>}
     * @const
     * @expose
     */
    ProtoBuf.MAP_KEY_TYPES = [
        ProtoBuf.TYPES["int32"],
        ProtoBuf.TYPES["sint32"],
        ProtoBuf.TYPES["sfixed32"],
        ProtoBuf.TYPES["uint32"],
        ProtoBuf.TYPES["fixed32"],
        ProtoBuf.TYPES["int64"],
        ProtoBuf.TYPES["sint64"],
        ProtoBuf.TYPES["sfixed64"],
        ProtoBuf.TYPES["uint64"],
        ProtoBuf.TYPES["fixed64"],
        ProtoBuf.TYPES["bool"],
        ProtoBuf.TYPES["string"],
        ProtoBuf.TYPES["bytes"]
    ];

    /**
     * Minimum field id.
     * @type {number}
     * @const
     * @expose
     */
    ProtoBuf.ID_MIN = 1;

    /**
     * Maximum field id.
     * @type {number}
     * @const
     * @expose
     */
    ProtoBuf.ID_MAX = 0x1FFFFFFF;

    /**
     * If set to `true`, field names will be converted from underscore notation to camel case. Defaults to `false`.
     *  Must be set prior to parsing.
     * @type {boolean}
     * @expose
     */
    ProtoBuf.convertFieldsToCamelCase = false;

    /**
     * By default, messages are populated with (setX, set_x) accessors for each field. This can be disabled by
     *  setting this to `false` prior to building messages.
     * @type {boolean}
     * @expose
     */
    ProtoBuf.populateAccessors = true;

    /**
     * By default, messages are populated with default values if a field is not present on the wire. To disable
     *  this behavior, set this setting to `false`.
     * @type {boolean}
     * @expose
     */
    ProtoBuf.populateDefaults = true;

    /**
     * @alias ProtoBuf.Util
     * @expose
     */
    ProtoBuf.Util = (function() {
        "use strict";

        /**
         * ProtoBuf utilities.
         * @exports ProtoBuf.Util
         * @namespace
         */
        var Util = {};

        /**
         * Flag if running in node or not.
         * @type {boolean}
         * @const
         * @expose
         */
        Util.IS_NODE = !!(
            typeof process === 'object' && process+'' === '[object process]' && !process['browser']
        );

        /**
         * Constructs a XMLHttpRequest object.
         * @return {XMLHttpRequest}
         * @throws {Error} If XMLHttpRequest is not supported
         * @expose
         */
        Util.XHR = function() {
            // No dependencies please, ref: http://www.quirksmode.org/js/xmlhttp.html
            var XMLHttpFactories = [
                function () {return new XMLHttpRequest()},
                function () {return new ActiveXObject("Msxml2.XMLHTTP")},
                function () {return new ActiveXObject("Msxml3.XMLHTTP")},
                function () {return new ActiveXObject("Microsoft.XMLHTTP")}
            ];
            /** @type {?XMLHttpRequest} */
            var xhr = null;
            for (var i=0;i<XMLHttpFactories.length;i++) {
                try { xhr = XMLHttpFactories[i](); }
                catch (e) { continue; }
                break;
            }
            if (!xhr)
                throw Error("XMLHttpRequest is not supported");
            return xhr;
        };

        /**
         * Fetches a resource.
         * @param {string} path Resource path
         * @param {function(?string)=} callback Callback receiving the resource's contents. If omitted the resource will
         *   be fetched synchronously. If the request failed, contents will be null.
         * @return {?string|undefined} Resource contents if callback is omitted (null if the request failed), else undefined.
         * @expose
         */
        Util.fetch = function(path, callback) {
            if (callback && typeof callback != 'function')
                callback = null;
            if (Util.IS_NODE) {
                var fs = __webpack_require__(/*! fs */ "fs");
                if (callback) {
                    fs.readFile(path, function(err, data) {
                        if (err)
                            callback(null);
                        else
                            callback(""+data);
                    });
                } else
                    try {
                        return fs.readFileSync(path);
                    } catch (e) {
                        return null;
                    }
            } else {
                var xhr = Util.XHR();
                xhr.open('GET', path, callback ? true : false);
                // xhr.setRequestHeader('User-Agent', 'XMLHTTP/1.0');
                xhr.setRequestHeader('Accept', 'text/plain');
                if (typeof xhr.overrideMimeType === 'function') xhr.overrideMimeType('text/plain');
                if (callback) {
                    xhr.onreadystatechange = function() {
                        if (xhr.readyState != 4) return;
                        if (/* remote */ xhr.status == 200 || /* local */ (xhr.status == 0 && typeof xhr.responseText === 'string'))
                            callback(xhr.responseText);
                        else
                            callback(null);
                    };
                    if (xhr.readyState == 4)
                        return;
                    xhr.send(null);
                } else {
                    xhr.send(null);
                    if (/* remote */ xhr.status == 200 || /* local */ (xhr.status == 0 && typeof xhr.responseText === 'string'))
                        return xhr.responseText;
                    return null;
                }
            }
        };

        /**
         * Converts a string to camel case.
         * @param {string} str
         * @returns {string}
         * @expose
         */
        Util.toCamelCase = function(str) {
            return str.replace(/_([a-zA-Z])/g, function ($0, $1) {
                return $1.toUpperCase();
            });
        };

        return Util;
    })();

    /**
     * Language expressions.
     * @type {!Object.<string,!RegExp>}
     * @expose
     */
    ProtoBuf.Lang = {

        // Characters always ending a statement
        DELIM: /[\s\{\}=;:\[\],'"\(\)<>]/g,

        // Field rules
        RULE: /^(?:required|optional|repeated|map)$/,

        // Field types
        TYPE: /^(?:double|float|int32|uint32|sint32|int64|uint64|sint64|fixed32|sfixed32|fixed64|sfixed64|bool|string|bytes)$/,

        // Names
        NAME: /^[a-zA-Z_][a-zA-Z_0-9]*$/,

        // Type definitions
        TYPEDEF: /^[a-zA-Z][a-zA-Z_0-9]*$/,

        // Type references
        TYPEREF: /^(?:\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,

        // Fully qualified type references
        FQTYPEREF: /^(?:\.[a-zA-Z_][a-zA-Z_0-9]*)+$/,

        // All numbers
        NUMBER: /^-?(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+|([0-9]*(\.[0-9]*)?([Ee][+-]?[0-9]+)?)|inf|nan)$/,

        // Decimal numbers
        NUMBER_DEC: /^(?:[1-9][0-9]*|0)$/,

        // Hexadecimal numbers
        NUMBER_HEX: /^0[xX][0-9a-fA-F]+$/,

        // Octal numbers
        NUMBER_OCT: /^0[0-7]+$/,

        // Floating point numbers
        NUMBER_FLT: /^([0-9]*(\.[0-9]*)?([Ee][+-]?[0-9]+)?|inf|nan)$/,

        // Booleans
        BOOL: /^(?:true|false)$/i,

        // Id numbers
        ID: /^(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+)$/,

        // Negative id numbers (enum values)
        NEGID: /^\-?(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+)$/,

        // Whitespaces
        WHITESPACE: /\s/,

        // All strings
        STRING: /(?:"([^"\\]*(?:\\.[^"\\]*)*)")|(?:'([^'\\]*(?:\\.[^'\\]*)*)')/g,

        // Double quoted strings
        STRING_DQ: /(?:"([^"\\]*(?:\\.[^"\\]*)*)")/g,

        // Single quoted strings
        STRING_SQ: /(?:'([^'\\]*(?:\\.[^'\\]*)*)')/g
    };

    /**
     * @alias ProtoBuf.DotProto
     * @expose
     */
    ProtoBuf.DotProto = (function(ProtoBuf, Lang) {
        "use strict";

        /**
         * Utilities to parse .proto files.
         * @exports ProtoBuf.DotProto
         * @namespace
         */
        var DotProto = {};

        /**
         * Constructs a new Tokenizer.
         * @exports ProtoBuf.DotProto.Tokenizer
         * @class prototype tokenizer
         * @param {string} proto Proto to tokenize
         * @constructor
         */
        var Tokenizer = function(proto) {

            /**
             * Source to parse.
             * @type {string}
             * @expose
             */
            this.source = proto+"";

            /**
             * Current index.
             * @type {number}
             * @expose
             */
            this.index = 0;

            /**
             * Current line.
             * @type {number}
             * @expose
             */
            this.line = 1;

            /**
             * Token stack.
             * @type {!Array.<string>}
             * @expose
             */
            this.stack = [];

            /**
             * Opening character of the current string read, if any.
             * @type {?string}
             * @private
             */
            this._stringOpen = null;
        };

        /**
         * @alias ProtoBuf.DotProto.Tokenizer.prototype
         * @inner
         */
        var TokenizerPrototype = Tokenizer.prototype;

        /**
         * Reads a string beginning at the current index.
         * @return {string}
         * @private
         */
        TokenizerPrototype._readString = function() {
            var re = this._stringOpen === '"'
                ? Lang.STRING_DQ
                : Lang.STRING_SQ;
            re.lastIndex = this.index - 1; // Include the open quote
            var match = re.exec(this.source);
            if (!match)
                throw Error("unterminated string");
            this.index = re.lastIndex;
            this.stack.push(this._stringOpen);
            this._stringOpen = null;
            return match[1];
        };

        /**
         * Gets the next token and advances by one.
         * @return {?string} Token or `null` on EOF
         * @expose
         */
        TokenizerPrototype.next = function() {
            if (this.stack.length > 0)
                return this.stack.shift();
            if (this.index >= this.source.length)
                return null;
            if (this._stringOpen !== null)
                return this._readString();

            var repeat,
                prev,
                next;
            do {
                repeat = false;

                // Strip white spaces
                while (Lang.WHITESPACE.test(next = this.source.charAt(this.index))) {
                    if (next === '\n')
                        ++this.line;
                    if (++this.index === this.source.length)
                        return null;
                }

                // Strip comments
                if (this.source.charAt(this.index) === '/') {
                    ++this.index;
                    if (this.source.charAt(this.index) === '/') { // Line
                        while (this.source.charAt(++this.index) !== '\n')
                            if (this.index == this.source.length)
                                return null;
                        ++this.index;
                        ++this.line;
                        repeat = true;
                    } else if ((next = this.source.charAt(this.index)) === '*') { /* Block */
                        do {
                            if (next === '\n')
                                ++this.line;
                            if (++this.index === this.source.length)
                                return null;
                            prev = next;
                            next = this.source.charAt(this.index);
                        } while (prev !== '*' || next !== '/');
                        ++this.index;
                        repeat = true;
                    } else
                        return '/';
                }
            } while (repeat);

            if (this.index === this.source.length)
                return null;

            // Read the next token
            var end = this.index;
            Lang.DELIM.lastIndex = 0;
            var delim = Lang.DELIM.test(this.source.charAt(end++));
            if (!delim)
                while(end < this.source.length && !Lang.DELIM.test(this.source.charAt(end)))
                    ++end;
            var token = this.source.substring(this.index, this.index = end);
            if (token === '"' || token === "'")
                this._stringOpen = token;
            return token;
        };

        /**
         * Peeks for the next token.
         * @return {?string} Token or `null` on EOF
         * @expose
         */
        TokenizerPrototype.peek = function() {
            if (this.stack.length === 0) {
                var token = this.next();
                if (token === null)
                    return null;
                this.stack.push(token);
            }
            return this.stack[0];
        };

        /**
         * Skips a specific token and throws if it differs.
         * @param {string} expected Expected token
         * @throws {Error} If the actual token differs
         */
        TokenizerPrototype.skip = function(expected) {
            var actual = this.next();
            if (actual !== expected)
                throw Error("illegal '"+actual+"', '"+expected+"' expected");
        };

        /**
         * Omits an optional token.
         * @param {string} expected Expected optional token
         * @returns {boolean} `true` if the token exists
         */
        TokenizerPrototype.omit = function(expected) {
            if (this.peek() === expected) {
                this.next();
                return true;
            }
            return false;
        };

        /**
         * Returns a string representation of this object.
         * @return {string} String representation as of "Tokenizer(index/length)"
         * @expose
         */
        TokenizerPrototype.toString = function() {
            return "Tokenizer ("+this.index+"/"+this.source.length+" at line "+this.line+")";
        };

        /**
         * @alias ProtoBuf.DotProto.Tokenizer
         * @expose
         */
        DotProto.Tokenizer = Tokenizer;

        /**
         * Constructs a new Parser.
         * @exports ProtoBuf.DotProto.Parser
         * @class prototype parser
         * @param {string} source Source
         * @constructor
         */
        var Parser = function(source) {

            /**
             * Tokenizer.
             * @type {!ProtoBuf.DotProto.Tokenizer}
             * @expose
             */
            this.tn = new Tokenizer(source);

            /**
             * Whether parsing proto3 or not.
             * @type {boolean}
             */
            this.proto3 = false;
        };

        /**
         * @alias ProtoBuf.DotProto.Parser.prototype
         * @inner
         */
        var ParserPrototype = Parser.prototype;

        /**
         * Parses the source.
         * @returns {!Object}
         * @throws {Error} If the source cannot be parsed
         * @expose
         */
        ParserPrototype.parse = function() {
            var topLevel = {
                "name": "[ROOT]", // temporary
                "package": null,
                "messages": [],
                "enums": [],
                "imports": [],
                "options": {},
                "services": []
                // "syntax": undefined
            };
            var token,
                head = true,
                weak;
            try {
                while (token = this.tn.next()) {
                    switch (token) {
                        case 'package':
                            if (!head || topLevel["package"] !== null)
                                throw Error("unexpected 'package'");
                            token = this.tn.next();
                            if (!Lang.TYPEREF.test(token))
                                throw Error("illegal package name: " + token);
                            this.tn.skip(";");
                            topLevel["package"] = token;
                            break;
                        case 'import':
                            if (!head)
                                throw Error("unexpected 'import'");
                            token = this.tn.peek();
                            if (token === "public" || (weak = token === "weak")) // token ignored
                                this.tn.next();
                            token = this._readString();
                            this.tn.skip(";");
                            if (!weak) // import ignored
                                topLevel["imports"].push(token);
                            break;
                        case 'syntax':
                            if (!head)
                                throw Error("unexpected 'syntax'");
                            this.tn.skip("=");
                            if ((topLevel["syntax"] = this._readString()) === "proto3")
                                this.proto3 = true;
                            this.tn.skip(";");
                            break;
                        case 'message':
                            this._parseMessage(topLevel, null);
                            head = false;
                            break;
                        case 'enum':
                            this._parseEnum(topLevel);
                            head = false;
                            break;
                        case 'option':
                            this._parseOption(topLevel);
                            break;
                        case 'service':
                            this._parseService(topLevel);
                            break;
                        case 'extend':
                            this._parseExtend(topLevel);
                            break;
                        default:
                            throw Error("unexpected '" + token + "'");
                    }
                }
            } catch (e) {
                e.message = "Parse error at line "+this.tn.line+": " + e.message;
                throw e;
            }
            delete topLevel["name"];
            return topLevel;
        };

        /**
         * Parses the specified source.
         * @returns {!Object}
         * @throws {Error} If the source cannot be parsed
         * @expose
         */
        Parser.parse = function(source) {
            return new Parser(source).parse();
        };

        // ----- Conversion ------

        /**
         * Converts a numerical string to an id.
         * @param {string} value
         * @param {boolean=} mayBeNegative
         * @returns {number}
         * @inner
         */
        function mkId(value, mayBeNegative) {
            var id = -1,
                sign = 1;
            if (value.charAt(0) == '-') {
                sign = -1;
                value = value.substring(1);
            }
            if (Lang.NUMBER_DEC.test(value))
                id = parseInt(value);
            else if (Lang.NUMBER_HEX.test(value))
                id = parseInt(value.substring(2), 16);
            else if (Lang.NUMBER_OCT.test(value))
                id = parseInt(value.substring(1), 8);
            else
                throw Error("illegal id value: " + (sign < 0 ? '-' : '') + value);
            id = (sign*id)|0; // Force to 32bit
            if (!mayBeNegative && id < 0)
                throw Error("illegal id value: " + (sign < 0 ? '-' : '') + value);
            return id;
        }

        /**
         * Converts a numerical string to a number.
         * @param {string} val
         * @returns {number}
         * @inner
         */
        function mkNumber(val) {
            var sign = 1;
            if (val.charAt(0) == '-') {
                sign = -1;
                val = val.substring(1);
            }
            if (Lang.NUMBER_DEC.test(val))
                return sign * parseInt(val, 10);
            else if (Lang.NUMBER_HEX.test(val))
                return sign * parseInt(val.substring(2), 16);
            else if (Lang.NUMBER_OCT.test(val))
                return sign * parseInt(val.substring(1), 8);
            else if (val === 'inf')
                return sign * Infinity;
            else if (val === 'nan')
                return NaN;
            else if (Lang.NUMBER_FLT.test(val))
                return sign * parseFloat(val);
            throw Error("illegal number value: " + (sign < 0 ? '-' : '') + val);
        }

        // ----- Reading ------

        /**
         * Reads a string.
         * @returns {string}
         * @private
         */
        ParserPrototype._readString = function() {
            var value = "",
                token,
                delim;
            do {
                delim = this.tn.next();
                if (delim !== "'" && delim !== '"')
                    throw Error("illegal string delimiter: "+delim);
                value += this.tn.next();
                this.tn.skip(delim);
                token = this.tn.peek();
            } while (token === '"' || token === '"'); // multi line?
            return value;
        };

        /**
         * Reads a value.
         * @param {boolean=} mayBeTypeRef
         * @returns {number|boolean|string}
         * @private
         */
        ParserPrototype._readValue = function(mayBeTypeRef) {
            var token = this.tn.peek(),
                value;
            if (token === '"' || token === "'")
                return this._readString();
            this.tn.next();
            if (Lang.NUMBER.test(token))
                return mkNumber(token);
            if (Lang.BOOL.test(token))
                return (token.toLowerCase() === 'true');
            if (mayBeTypeRef && Lang.TYPEREF.test(token))
                return token;
            throw Error("illegal value: "+token);

        };

        // ----- Parsing constructs -----

        /**
         * Parses a namespace option.
         * @param {!Object} parent Parent definition
         * @param {boolean=} isList
         * @private
         */
        ParserPrototype._parseOption = function(parent, isList) {
            var token = this.tn.next(),
                custom = false;
            if (token === '(') {
                custom = true;
                token = this.tn.next();
            }
            if (!Lang.TYPEREF.test(token))
                // we can allow options of the form google.protobuf.* since they will just get ignored anyways
                // if (!/google\.protobuf\./.test(token)) // FIXME: Why should that not be a valid typeref?
                    throw Error("illegal option name: "+token);
            var name = token;
            if (custom) { // (my_method_option).foo, (my_method_option), some_method_option, (foo.my_option).bar
                this.tn.skip(')');
                name = '('+name+')';
                token = this.tn.peek();
                if (Lang.FQTYPEREF.test(token)) {
                    name += token;
                    this.tn.next();
                }
            }
            this.tn.skip('=');
            this._parseOptionValue(parent, name);
            if (!isList)
                this.tn.skip(";");
        };

        /**
         * Sets an option on the specified options object.
         * @param {!Object.<string,*>} options
         * @param {string} name
         * @param {string|number|boolean} value
         * @inner
         */
        function setOption(options, name, value) {
            if (typeof options[name] === 'undefined')
                options[name] = value;
            else {
                if (!Array.isArray(options[name]))
                    options[name] = [ options[name] ];
                options[name].push(value);
            }
        }

        /**
         * Parses an option value.
         * @param {!Object} parent
         * @param {string} name
         * @private
         */
        ParserPrototype._parseOptionValue = function(parent, name) {
            var token = this.tn.peek();
            if (token !== '{') { // Plain value
                setOption(parent["options"], name, this._readValue(true));
            } else { // Aggregate options
                this.tn.skip("{");
                while ((token = this.tn.next()) !== '}') {
                    if (!Lang.NAME.test(token))
                        throw Error("illegal option name: " + name + "." + token);
                    if (this.tn.omit(":"))
                        setOption(parent["options"], name + "." + token, this._readValue(true));
                    else
                        this._parseOptionValue(parent, name + "." + token);
                }
            }
        };

        /**
         * Parses a service definition.
         * @param {!Object} parent Parent definition
         * @private
         */
        ParserPrototype._parseService = function(parent) {
            var token = this.tn.next();
            if (!Lang.NAME.test(token))
                throw Error("illegal service name at line "+this.tn.line+": "+token);
            var name = token;
            var svc = {
                "name": name,
                "rpc": {},
                "options": {}
            };
            this.tn.skip("{");
            while ((token = this.tn.next()) !== '}') {
                if (token === "option")
                    this._parseOption(svc);
                else if (token === 'rpc')
                    this._parseServiceRPC(svc);
                else
                    throw Error("illegal service token: "+token);
            }
            this.tn.omit(";");
            parent["services"].push(svc);
        };

        /**
         * Parses a RPC service definition of the form ['rpc', name, (request), 'returns', (response)].
         * @param {!Object} svc Service definition
         * @private
         */
        ParserPrototype._parseServiceRPC = function(svc) {
            var type = "rpc",
                token = this.tn.next();
            if (!Lang.NAME.test(token))
                throw Error("illegal rpc service method name: "+token);
            var name = token;
            var method = {
                "request": null,
                "response": null,
                "request_stream": false,
                "response_stream": false,
                "options": {}
            };
            this.tn.skip("(");
            token = this.tn.next();
            if (token.toLowerCase() === "stream") {
              method["request_stream"] = true;
              token = this.tn.next();
            }
            if (!Lang.TYPEREF.test(token))
                throw Error("illegal rpc service request type: "+token);
            method["request"] = token;
            this.tn.skip(")");
            token = this.tn.next();
            if (token.toLowerCase() !== "returns")
                throw Error("illegal rpc service request type delimiter: "+token);
            this.tn.skip("(");
            token = this.tn.next();
            if (token.toLowerCase() === "stream") {
              method["response_stream"] = true;
              token = this.tn.next();
            }
            method["response"] = token;
            this.tn.skip(")");
            token = this.tn.peek();
            if (token === '{') {
                this.tn.next();
                while ((token = this.tn.next()) !== '}') {
                    if (token === 'option')
                        this._parseOption(method);
                    else
                        throw Error("illegal rpc service token: " + token);
                }
                this.tn.omit(";");
            } else
                this.tn.skip(";");
            if (typeof svc[type] === 'undefined')
                svc[type] = {};
            svc[type][name] = method;
        };

        /**
         * Parses a message definition.
         * @param {!Object} parent Parent definition
         * @param {!Object=} fld Field definition if this is a group
         * @returns {!Object}
         * @private
         */
        ParserPrototype._parseMessage = function(parent, fld) {
            var isGroup = !!fld,
                token = this.tn.next();
            var msg = {
                "name": "",
                "fields": [],
                "enums": [],
                "messages": [],
                "options": {},
                "services": [],
                "oneofs": {}
                // "extensions": undefined
            };
            if (!Lang.NAME.test(token))
                throw Error("illegal "+(isGroup ? "group" : "message")+" name: "+token);
            msg["name"] = token;
            if (isGroup) {
                this.tn.skip("=");
                fld["id"] = mkId(this.tn.next());
                msg["isGroup"] = true;
            }
            token = this.tn.peek();
            if (token === '[' && fld)
                this._parseFieldOptions(fld);
            this.tn.skip("{");
            while ((token = this.tn.next()) !== '}') {
                if (Lang.RULE.test(token))
                    this._parseMessageField(msg, token);
                else if (token === "oneof")
                    this._parseMessageOneOf(msg);
                else if (token === "enum")
                    this._parseEnum(msg);
                else if (token === "message")
                    this._parseMessage(msg);
                else if (token === "option")
                    this._parseOption(msg);
                else if (token === "service")
                    this._parseService(msg);
                else if (token === "extensions")
                    if (msg.hasOwnProperty("extensions")) {
                        msg["extensions"] = msg["extensions"].concat(this._parseExtensionRanges())
                    } else {
                        msg["extensions"] = this._parseExtensionRanges();
                    }
                else if (token === "reserved")
                    this._parseIgnored(); // TODO
                else if (token === "extend")
                    this._parseExtend(msg);
                else if (Lang.TYPEREF.test(token)) {
                    if (!this.proto3)
                        throw Error("illegal field rule: "+token);
                    this._parseMessageField(msg, "optional", token);
                } else
                    throw Error("illegal message token: "+token);
            }
            this.tn.omit(";");
            parent["messages"].push(msg);
            return msg;
        };

        /**
         * Parses an ignored statement.
         * @private
         */
        ParserPrototype._parseIgnored = function() {
            while (this.tn.peek() !== ';')
                this.tn.next();
            this.tn.skip(";");
        };

        /**
         * Parses a message field.
         * @param {!Object} msg Message definition
         * @param {string} rule Field rule
         * @param {string=} type Field type if already known (never known for maps)
         * @returns {!Object} Field descriptor
         * @private
         */
        ParserPrototype._parseMessageField = function(msg, rule, type) {
            if (!Lang.RULE.test(rule))
                throw Error("illegal message field rule: "+rule);
            var fld = {
                "rule": rule,
                "type": "",
                "name": "",
                "options": {},
                "id": 0
            };
            var token;
            if (rule === "map") {

                if (type)
                    throw Error("illegal type: " + type);
                this.tn.skip('<');
                token = this.tn.next();
                if (!Lang.TYPE.test(token) && !Lang.TYPEREF.test(token))
                    throw Error("illegal message field type: " + token);
                fld["keytype"] = token;
                this.tn.skip(',');
                token = this.tn.next();
                if (!Lang.TYPE.test(token) && !Lang.TYPEREF.test(token))
                    throw Error("illegal message field: " + token);
                fld["type"] = token;
                this.tn.skip('>');
                token = this.tn.next();
                if (!Lang.NAME.test(token))
                    throw Error("illegal message field name: " + token);
                fld["name"] = token;
                this.tn.skip("=");
                fld["id"] = mkId(this.tn.next());
                token = this.tn.peek();
                if (token === '[')
                    this._parseFieldOptions(fld);
                this.tn.skip(";");

            } else {

                type = typeof type !== 'undefined' ? type : this.tn.next();

                if (type === "group") {

                    // "A [legacy] group simply combines a nested message type and a field into a single declaration. In your
                    // code, you can treat this message just as if it had a Result type field called result (the latter name is
                    // converted to lower-case so that it does not conflict with the former)."
                    var grp = this._parseMessage(msg, fld);
                    if (!/^[A-Z]/.test(grp["name"]))
                        throw Error('illegal group name: '+grp["name"]);
                    fld["type"] = grp["name"];
                    fld["name"] = grp["name"].toLowerCase();
                    this.tn.omit(";");

                } else {

                    if (!Lang.TYPE.test(type) && !Lang.TYPEREF.test(type))
                        throw Error("illegal message field type: " + type);
                    fld["type"] = type;
                    token = this.tn.next();
                    if (!Lang.NAME.test(token))
                        throw Error("illegal message field name: " + token);
                    fld["name"] = token;
                    this.tn.skip("=");
                    fld["id"] = mkId(this.tn.next());
                    token = this.tn.peek();
                    if (token === "[")
                        this._parseFieldOptions(fld);
                    this.tn.skip(";");

                }
            }
            msg["fields"].push(fld);
            return fld;
        };

        /**
         * Parses a message oneof.
         * @param {!Object} msg Message definition
         * @private
         */
        ParserPrototype._parseMessageOneOf = function(msg) {
            var token = this.tn.next();
            if (!Lang.NAME.test(token))
                throw Error("illegal oneof name: "+token);
            var name = token,
                fld;
            var fields = [];
            this.tn.skip("{");
            while ((token = this.tn.next()) !== "}") {
                fld = this._parseMessageField(msg, "optional", token);
                fld["oneof"] = name;
                fields.push(fld["id"]);
            }
            this.tn.omit(";");
            msg["oneofs"][name] = fields;
        };

        /**
         * Parses a set of field option definitions.
         * @param {!Object} fld Field definition
         * @private
         */
        ParserPrototype._parseFieldOptions = function(fld) {
            this.tn.skip("[");
            var token,
                first = true;
            while ((token = this.tn.peek()) !== ']') {
                if (!first)
                    this.tn.skip(",");
                this._parseOption(fld, true);
                first = false;
            }
            this.tn.next();
        };

        /**
         * Parses an enum.
         * @param {!Object} msg Message definition
         * @private
         */
        ParserPrototype._parseEnum = function(msg) {
            var enm = {
                "name": "",
                "values": [],
                "options": {}
            };
            var token = this.tn.next();
            if (!Lang.NAME.test(token))
                throw Error("illegal name: "+token);
            enm["name"] = token;
            this.tn.skip("{");
            while ((token = this.tn.next()) !== '}') {
                if (token === "option")
                    this._parseOption(enm);
                else {
                    if (!Lang.NAME.test(token))
                        throw Error("illegal name: "+token);
                    this.tn.skip("=");
                    var val = {
                        "name": token,
                        "id": mkId(this.tn.next(), true)
                    };
                    token = this.tn.peek();
                    if (token === "[")
                        this._parseFieldOptions({ "options": {} });
                    this.tn.skip(";");
                    enm["values"].push(val);
                }
            }
            this.tn.omit(";");
            msg["enums"].push(enm);
        };

        /**
         * Parses extension / reserved ranges.
         * @returns {!Array.<!Array.<number>>}
         * @private
         */
        ParserPrototype._parseExtensionRanges = function() {
            var ranges = [];
            var token,
                range,
                value;
            do {
                range = [];
                while (true) {
                    token = this.tn.next();
                    switch (token) {
                        case "min":
                            value = ProtoBuf.ID_MIN;
                            break;
                        case "max":
                            value = ProtoBuf.ID_MAX;
                            break;
                        default:
                            value = mkNumber(token);
                            break;
                    }
                    range.push(value);
                    if (range.length === 2)
                        break;
                    if (this.tn.peek() !== "to") {
                        range.push(value);
                        break;
                    }
                    this.tn.next();
                }
                ranges.push(range);
            } while (this.tn.omit(","));
            this.tn.skip(";");
            return ranges;
        };

        /**
         * Parses an extend block.
         * @param {!Object} parent Parent object
         * @private
         */
        ParserPrototype._parseExtend = function(parent) {
            var token = this.tn.next();
            if (!Lang.TYPEREF.test(token))
                throw Error("illegal extend reference: "+token);
            var ext = {
                "ref": token,
                "fields": []
            };
            this.tn.skip("{");
            while ((token = this.tn.next()) !== '}') {
                if (Lang.RULE.test(token))
                    this._parseMessageField(ext, token);
                else if (Lang.TYPEREF.test(token)) {
                    if (!this.proto3)
                        throw Error("illegal field rule: "+token);
                    this._parseMessageField(ext, "optional", token);
                } else
                    throw Error("illegal extend token: "+token);
            }
            this.tn.omit(";");
            parent["messages"].push(ext);
            return ext;
        };

        // ----- General -----

        /**
         * Returns a string representation of this parser.
         * @returns {string}
         */
        ParserPrototype.toString = function() {
            return "Parser at line "+this.tn.line;
        };

        /**
         * @alias ProtoBuf.DotProto.Parser
         * @expose
         */
        DotProto.Parser = Parser;

        return DotProto;

    })(ProtoBuf, ProtoBuf.Lang);

    /**
     * @alias ProtoBuf.Reflect
     * @expose
     */
    ProtoBuf.Reflect = (function(ProtoBuf) {
        "use strict";

        /**
         * Reflection types.
         * @exports ProtoBuf.Reflect
         * @namespace
         */
        var Reflect = {};

        /**
         * Constructs a Reflect base class.
         * @exports ProtoBuf.Reflect.T
         * @constructor
         * @abstract
         * @param {!ProtoBuf.Builder} builder Builder reference
         * @param {?ProtoBuf.Reflect.T} parent Parent object
         * @param {string} name Object name
         */
        var T = function(builder, parent, name) {

            /**
             * Builder reference.
             * @type {!ProtoBuf.Builder}
             * @expose
             */
            this.builder = builder;

            /**
             * Parent object.
             * @type {?ProtoBuf.Reflect.T}
             * @expose
             */
            this.parent = parent;

            /**
             * Object name in namespace.
             * @type {string}
             * @expose
             */
            this.name = name;

            /**
             * Fully qualified class name
             * @type {string}
             * @expose
             */
            this.className;
        };

        /**
         * @alias ProtoBuf.Reflect.T.prototype
         * @inner
         */
        var TPrototype = T.prototype;

        /**
         * Returns the fully qualified name of this object.
         * @returns {string} Fully qualified name as of ".PATH.TO.THIS"
         * @expose
         */
        TPrototype.fqn = function() {
            var name = this.name,
                ptr = this;
            do {
                ptr = ptr.parent;
                if (ptr == null)
                    break;
                name = ptr.name+"."+name;
            } while (true);
            return name;
        };

        /**
         * Returns a string representation of this Reflect object (its fully qualified name).
         * @param {boolean=} includeClass Set to true to include the class name. Defaults to false.
         * @return String representation
         * @expose
         */
        TPrototype.toString = function(includeClass) {
            return (includeClass ? this.className + " " : "") + this.fqn();
        };

        /**
         * Builds this type.
         * @throws {Error} If this type cannot be built directly
         * @expose
         */
        TPrototype.build = function() {
            throw Error(this.toString(true)+" cannot be built directly");
        };

        /**
         * @alias ProtoBuf.Reflect.T
         * @expose
         */
        Reflect.T = T;

        /**
         * Constructs a new Namespace.
         * @exports ProtoBuf.Reflect.Namespace
         * @param {!ProtoBuf.Builder} builder Builder reference
         * @param {?ProtoBuf.Reflect.Namespace} parent Namespace parent
         * @param {string} name Namespace name
         * @param {Object.<string,*>=} options Namespace options
         * @param {string?} syntax The syntax level of this definition (e.g., proto3)
         * @constructor
         * @extends ProtoBuf.Reflect.T
         */
        var Namespace = function(builder, parent, name, options, syntax) {
            T.call(this, builder, parent, name);

            /**
             * @override
             */
            this.className = "Namespace";

            /**
             * Children inside the namespace.
             * @type {!Array.<ProtoBuf.Reflect.T>}
             */
            this.children = [];

            /**
             * Options.
             * @type {!Object.<string, *>}
             */
            this.options = options || {};

            /**
             * Syntax level (e.g., proto2 or proto3).
             * @type {!string}
             */
            this.syntax = syntax || "proto2";
        };

        /**
         * @alias ProtoBuf.Reflect.Namespace.prototype
         * @inner
         */
        var NamespacePrototype = Namespace.prototype = Object.create(T.prototype);

        /**
         * Returns an array of the namespace's children.
         * @param {ProtoBuf.Reflect.T=} type Filter type (returns instances of this type only). Defaults to null (all children).
         * @return {Array.<ProtoBuf.Reflect.T>}
         * @expose
         */
        NamespacePrototype.getChildren = function(type) {
            type = type || null;
            if (type == null)
                return this.children.slice();
            var children = [];
            for (var i=0, k=this.children.length; i<k; ++i)
                if (this.children[i] instanceof type)
                    children.push(this.children[i]);
            return children;
        };

        /**
         * Adds a child to the namespace.
         * @param {ProtoBuf.Reflect.T} child Child
         * @throws {Error} If the child cannot be added (duplicate)
         * @expose
         */
        NamespacePrototype.addChild = function(child) {
            var other;
            if (other = this.getChild(child.name)) {
                // Try to revert camelcase transformation on collision
                if (other instanceof Message.Field && other.name !== other.originalName && this.getChild(other.originalName) === null)
                    other.name = other.originalName; // Revert previous first (effectively keeps both originals)
                else if (child instanceof Message.Field && child.name !== child.originalName && this.getChild(child.originalName) === null)
                    child.name = child.originalName;
                else
                    throw Error("Duplicate name in namespace "+this.toString(true)+": "+child.name);
            }
            this.children.push(child);
        };

        /**
         * Gets a child by its name or id.
         * @param {string|number} nameOrId Child name or id
         * @return {?ProtoBuf.Reflect.T} The child or null if not found
         * @expose
         */
        NamespacePrototype.getChild = function(nameOrId) {
            var key = typeof nameOrId === 'number' ? 'id' : 'name';
            for (var i=0, k=this.children.length; i<k; ++i)
                if (this.children[i][key] === nameOrId)
                    return this.children[i];
            return null;
        };

        /**
         * Resolves a reflect object inside of this namespace.
         * @param {string|!Array.<string>} qn Qualified name to resolve
         * @param {boolean=} excludeNonNamespace Excludes non-namespace types, defaults to `false`
         * @return {?ProtoBuf.Reflect.Namespace} The resolved type or null if not found
         * @expose
         */
        NamespacePrototype.resolve = function(qn, excludeNonNamespace) {
            var part = typeof qn === 'string' ? qn.split(".") : qn,
                ptr = this,
                i = 0;
            if (part[i] === "") { // Fully qualified name, e.g. ".My.Message'
                while (ptr.parent !== null)
                    ptr = ptr.parent;
                i++;
            }
            var child;
            do {
                do {
                    if (!(ptr instanceof Reflect.Namespace)) {
                        ptr = null;
                        break;
                    }
                    child = ptr.getChild(part[i]);
                    if (!child || !(child instanceof Reflect.T) || (excludeNonNamespace && !(child instanceof Reflect.Namespace))) {
                        ptr = null;
                        break;
                    }
                    ptr = child; i++;
                } while (i < part.length);
                if (ptr != null)
                    break; // Found
                // Else search the parent
                if (this.parent !== null)
                    return this.parent.resolve(qn, excludeNonNamespace);
            } while (ptr != null);
            return ptr;
        };

        /**
         * Determines the shortest qualified name of the specified type, if any, relative to this namespace.
         * @param {!ProtoBuf.Reflect.T} t Reflection type
         * @returns {string} The shortest qualified name or, if there is none, the fqn
         * @expose
         */
        NamespacePrototype.qn = function(t) {
            var part = [], ptr = t;
            do {
                part.unshift(ptr.name);
                ptr = ptr.parent;
            } while (ptr !== null);
            for (var len=1; len <= part.length; len++) {
                var qn = part.slice(part.length-len);
                if (t === this.resolve(qn, t instanceof Reflect.Namespace))
                    return qn.join(".");
            }
            return t.fqn();
        };

        /**
         * Builds the namespace and returns the runtime counterpart.
         * @return {Object.<string,Function|Object>} Runtime namespace
         * @expose
         */
        NamespacePrototype.build = function() {
            /** @dict */
            var ns = {};
            var children = this.children;
            for (var i=0, k=children.length, child; i<k; ++i) {
                child = children[i];
                if (child instanceof Namespace)
                    ns[child.name] = child.build();
            }
            if (Object.defineProperty)
                Object.defineProperty(ns, "$options", { "value": this.buildOpt() });
            return ns;
        };

        /**
         * Builds the namespace's '$options' property.
         * @return {Object.<string,*>}
         */
        NamespacePrototype.buildOpt = function() {
            var opt = {},
                keys = Object.keys(this.options);
            for (var i=0, k=keys.length; i<k; ++i) {
                var key = keys[i],
                    val = this.options[keys[i]];
                // TODO: Options are not resolved, yet.
                // if (val instanceof Namespace) {
                //     opt[key] = val.build();
                // } else {
                opt[key] = val;
                // }
            }
            return opt;
        };

        /**
         * Gets the value assigned to the option with the specified name.
         * @param {string=} name Returns the option value if specified, otherwise all options are returned.
         * @return {*|Object.<string,*>}null} Option value or NULL if there is no such option
         */
        NamespacePrototype.getOption = function(name) {
            if (typeof name === 'undefined')
                return this.options;
            return typeof this.options[name] !== 'undefined' ? this.options[name] : null;
        };

        /**
         * @alias ProtoBuf.Reflect.Namespace
         * @expose
         */
        Reflect.Namespace = Namespace;

        /**
         * Constructs a new Element implementation that checks and converts values for a
         * particular field type, as appropriate.
         *
         * An Element represents a single value: either the value of a singular field,
         * or a value contained in one entry of a repeated field or map field. This
         * class does not implement these higher-level concepts; it only encapsulates
         * the low-level typechecking and conversion.
         *
         * @exports ProtoBuf.Reflect.Element
         * @param {{name: string, wireType: number}} type Resolved data type
         * @param {ProtoBuf.Reflect.T|null} resolvedType Resolved type, if relevant
         * (e.g. submessage field).
         * @param {boolean} isMapKey Is this element a Map key? The value will be
         * converted to string form if so.
         * @param {string} syntax Syntax level of defining message type, e.g.,
         * proto2 or proto3.
         * @param {string} name Name of the field containing this element (for error
         * messages)
         * @constructor
         */
        var Element = function(type, resolvedType, isMapKey, syntax, name) {

            /**
             * Element type, as a string (e.g., int32).
             * @type {{name: string, wireType: number}}
             */
            this.type = type;

            /**
             * Element type reference to submessage or enum definition, if needed.
             * @type {ProtoBuf.Reflect.T|null}
             */
            this.resolvedType = resolvedType;

            /**
             * Element is a map key.
             * @type {boolean}
             */
            this.isMapKey = isMapKey;

            /**
             * Syntax level of defining message type, e.g., proto2 or proto3.
             * @type {string}
             */
            this.syntax = syntax;

            /**
             * Name of the field containing this element (for error messages)
             * @type {string}
             */
            this.name = name;

            if (isMapKey && ProtoBuf.MAP_KEY_TYPES.indexOf(type) < 0)
                throw Error("Invalid map key type: " + type.name);
        };

        var ElementPrototype = Element.prototype;

        /**
         * Obtains a (new) default value for the specified type.
         * @param type {string|{name: string, wireType: number}} Field type
         * @returns {*} Default value
         * @inner
         */
        function mkDefault(type) {
            if (typeof type === 'string')
                type = ProtoBuf.TYPES[type];
            if (typeof type.defaultValue === 'undefined')
                throw Error("default value for type "+type.name+" is not supported");
            if (type == ProtoBuf.TYPES["bytes"])
                return new ByteBuffer(0);
            return type.defaultValue;
        }

        /**
         * Returns the default value for this field in proto3.
         * @function
         * @param type {string|{name: string, wireType: number}} the field type
         * @returns {*} Default value
         */
        Element.defaultFieldValue = mkDefault;

        /**
         * Makes a Long from a value.
         * @param {{low: number, high: number, unsigned: boolean}|string|number} value Value
         * @param {boolean=} unsigned Whether unsigned or not, defaults to reuse it from Long-like objects or to signed for
         *  strings and numbers
         * @returns {!Long}
         * @throws {Error} If the value cannot be converted to a Long
         * @inner
         */
        function mkLong(value, unsigned) {
            if (value && typeof value.low === 'number' && typeof value.high === 'number' && typeof value.unsigned === 'boolean'
                && value.low === value.low && value.high === value.high)
                return new ProtoBuf.Long(value.low, value.high, typeof unsigned === 'undefined' ? value.unsigned : unsigned);
            if (typeof value === 'string')
                return ProtoBuf.Long.fromString(value, unsigned || false, 10);
            if (typeof value === 'number')
                return ProtoBuf.Long.fromNumber(value, unsigned || false);
            throw Error("not convertible to Long");
        }

        ElementPrototype.toString = function() {
            return (this.name || '') + (this.isMapKey ? 'map' : 'value') + ' element';
        }

        /**
         * Checks if the given value can be set for an element of this type (singular
         * field or one element of a repeated field or map).
         * @param {*} value Value to check
         * @return {*} Verified, maybe adjusted, value
         * @throws {Error} If the value cannot be verified for this element slot
         * @expose
         */
        ElementPrototype.verifyValue = function(value) {
            var self = this;
            function fail(val, msg) {
                throw Error("Illegal value for "+self.toString(true)+" of type "+self.type.name+": "+val+" ("+msg+")");
            }
            switch (this.type) {
                // Signed 32bit
                case ProtoBuf.TYPES["int32"]:
                case ProtoBuf.TYPES["sint32"]:
                case ProtoBuf.TYPES["sfixed32"]:
                    // Account for !NaN: value === value
                    if (typeof value !== 'number' || (value === value && value % 1 !== 0))
                        fail(typeof value, "not an integer");
                    return value > 4294967295 ? value | 0 : value;

                // Unsigned 32bit
                case ProtoBuf.TYPES["uint32"]:
                case ProtoBuf.TYPES["fixed32"]:
                    if (typeof value !== 'number' || (value === value && value % 1 !== 0))
                        fail(typeof value, "not an integer");
                    return value < 0 ? value >>> 0 : value;

                // Signed 64bit
                case ProtoBuf.TYPES["int64"]:
                case ProtoBuf.TYPES["sint64"]:
                case ProtoBuf.TYPES["sfixed64"]: {
                    if (ProtoBuf.Long)
                        try {
                            return mkLong(value, false);
                        } catch (e) {
                            fail(typeof value, e.message);
                        }
                    else
                        fail(typeof value, "requires Long.js");
                }

                // Unsigned 64bit
                case ProtoBuf.TYPES["uint64"]:
                case ProtoBuf.TYPES["fixed64"]: {
                    if (ProtoBuf.Long)
                        try {
                            return mkLong(value, true);
                        } catch (e) {
                            fail(typeof value, e.message);
                        }
                    else
                        fail(typeof value, "requires Long.js");
                }

                // Bool
                case ProtoBuf.TYPES["bool"]:
                    if (typeof value !== 'boolean')
                        fail(typeof value, "not a boolean");
                    return value;

                // Float
                case ProtoBuf.TYPES["float"]:
                case ProtoBuf.TYPES["double"]:
                    if (typeof value !== 'number')
                        fail(typeof value, "not a number");
                    return value;

                // Length-delimited string
                case ProtoBuf.TYPES["string"]:
                    if (typeof value !== 'string' && !(value && value instanceof String))
                        fail(typeof value, "not a string");
                    return ""+value; // Convert String object to string

                // Length-delimited bytes
                case ProtoBuf.TYPES["bytes"]:
                    if (ByteBuffer.isByteBuffer(value))
                        return value;
                    return ByteBuffer.wrap(value, "base64");

                // Constant enum value
                case ProtoBuf.TYPES["enum"]: {
                    var values = this.resolvedType.getChildren(ProtoBuf.Reflect.Enum.Value);
                    for (i=0; i<values.length; i++)
                        if (values[i].name == value)
                            return values[i].id;
                        else if (values[i].id == value)
                            return values[i].id;

                    if (this.syntax === 'proto3') {
                        // proto3: just make sure it's an integer.
                        if (typeof value !== 'number' || (value === value && value % 1 !== 0))
                            fail(typeof value, "not an integer");
                        if (value > 4294967295 || value < 0)
                            fail(typeof value, "not in range for uint32")
                        return value;
                    } else {
                        // proto2 requires enum values to be valid.
                        fail(value, "not a valid enum value");
                    }
                }
                // Embedded message
                case ProtoBuf.TYPES["group"]:
                case ProtoBuf.TYPES["message"]: {
                    if (!value || typeof value !== 'object')
                        fail(typeof value, "object expected");
                    if (value instanceof this.resolvedType.clazz)
                        return value;
                    if (value instanceof ProtoBuf.Builder.Message) {
                        // Mismatched type: Convert to object (see: https://github.com/dcodeIO/ProtoBuf.js/issues/180)
                        var obj = {};
                        for (var i in value)
                            if (value.hasOwnProperty(i))
                                obj[i] = value[i];
                        value = obj;
                    }
                    // Else let's try to construct one from a key-value object
                    return new (this.resolvedType.clazz)(value); // May throw for a hundred of reasons
                }
            }

            // We should never end here
            throw Error("[INTERNAL] Illegal value for "+this.toString(true)+": "+value+" (undefined type "+this.type+")");
        };

        /**
         * Calculates the byte length of an element on the wire.
         * @param {number} id Field number
         * @param {*} value Field value
         * @returns {number} Byte length
         * @throws {Error} If the value cannot be calculated
         * @expose
         */
        ElementPrototype.calculateLength = function(id, value) {
            if (value === null) return 0; // Nothing to encode
            // Tag has already been written
            var n;
            switch (this.type) {
                case ProtoBuf.TYPES["int32"]:
                    return value < 0 ? ByteBuffer.calculateVarint64(value) : ByteBuffer.calculateVarint32(value);
                case ProtoBuf.TYPES["uint32"]:
                    return ByteBuffer.calculateVarint32(value);
                case ProtoBuf.TYPES["sint32"]:
                    return ByteBuffer.calculateVarint32(ByteBuffer.zigZagEncode32(value));
                case ProtoBuf.TYPES["fixed32"]:
                case ProtoBuf.TYPES["sfixed32"]:
                case ProtoBuf.TYPES["float"]:
                    return 4;
                case ProtoBuf.TYPES["int64"]:
                case ProtoBuf.TYPES["uint64"]:
                    return ByteBuffer.calculateVarint64(value);
                case ProtoBuf.TYPES["sint64"]:
                    return ByteBuffer.calculateVarint64(ByteBuffer.zigZagEncode64(value));
                case ProtoBuf.TYPES["fixed64"]:
                case ProtoBuf.TYPES["sfixed64"]:
                    return 8;
                case ProtoBuf.TYPES["bool"]:
                    return 1;
                case ProtoBuf.TYPES["enum"]:
                    return ByteBuffer.calculateVarint32(value);
                case ProtoBuf.TYPES["double"]:
                    return 8;
                case ProtoBuf.TYPES["string"]:
                    n = ByteBuffer.calculateUTF8Bytes(value);
                    return ByteBuffer.calculateVarint32(n) + n;
                case ProtoBuf.TYPES["bytes"]:
                    if (value.remaining() < 0)
                        throw Error("Illegal value for "+this.toString(true)+": "+value.remaining()+" bytes remaining");
                    return ByteBuffer.calculateVarint32(value.remaining()) + value.remaining();
                case ProtoBuf.TYPES["message"]:
                    n = this.resolvedType.calculate(value);
                    return ByteBuffer.calculateVarint32(n) + n;
                case ProtoBuf.TYPES["group"]:
                    n = this.resolvedType.calculate(value);
                    return n + ByteBuffer.calculateVarint32((id << 3) | ProtoBuf.WIRE_TYPES.ENDGROUP);
            }
            // We should never end here
            throw Error("[INTERNAL] Illegal value to encode in "+this.toString(true)+": "+value+" (unknown type)");
        };

        /**
         * Encodes a value to the specified buffer. Does not encode the key.
         * @param {number} id Field number
         * @param {*} value Field value
         * @param {ByteBuffer} buffer ByteBuffer to encode to
         * @return {ByteBuffer} The ByteBuffer for chaining
         * @throws {Error} If the value cannot be encoded
         * @expose
         */
        ElementPrototype.encodeValue = function(id, value, buffer) {
            if (value === null) return buffer; // Nothing to encode
            // Tag has already been written

            switch (this.type) {
                // 32bit signed varint
                case ProtoBuf.TYPES["int32"]:
                    // "If you use int32 or int64 as the type for a negative number, the resulting varint is always ten bytes
                    // long – it is, effectively, treated like a very large unsigned integer." (see #122)
                    if (value < 0)
                        buffer.writeVarint64(value);
                    else
                        buffer.writeVarint32(value);
                    break;

                // 32bit unsigned varint
                case ProtoBuf.TYPES["uint32"]:
                    buffer.writeVarint32(value);
                    break;

                // 32bit varint zig-zag
                case ProtoBuf.TYPES["sint32"]:
                    buffer.writeVarint32ZigZag(value);
                    break;

                // Fixed unsigned 32bit
                case ProtoBuf.TYPES["fixed32"]:
                    buffer.writeUint32(value);
                    break;

                // Fixed signed 32bit
                case ProtoBuf.TYPES["sfixed32"]:
                    buffer.writeInt32(value);
                    break;

                // 64bit varint as-is
                case ProtoBuf.TYPES["int64"]:
                case ProtoBuf.TYPES["uint64"]:
                    buffer.writeVarint64(value); // throws
                    break;

                // 64bit varint zig-zag
                case ProtoBuf.TYPES["sint64"]:
                    buffer.writeVarint64ZigZag(value); // throws
                    break;

                // Fixed unsigned 64bit
                case ProtoBuf.TYPES["fixed64"]:
                    buffer.writeUint64(value); // throws
                    break;

                // Fixed signed 64bit
                case ProtoBuf.TYPES["sfixed64"]:
                    buffer.writeInt64(value); // throws
                    break;

                // Bool
                case ProtoBuf.TYPES["bool"]:
                    if (typeof value === 'string')
                        buffer.writeVarint32(value.toLowerCase() === 'false' ? 0 : !!value);
                    else
                        buffer.writeVarint32(value ? 1 : 0);
                    break;

                // Constant enum value
                case ProtoBuf.TYPES["enum"]:
                    buffer.writeVarint32(value);
                    break;

                // 32bit float
                case ProtoBuf.TYPES["float"]:
                    buffer.writeFloat32(value);
                    break;

                // 64bit float
                case ProtoBuf.TYPES["double"]:
                    buffer.writeFloat64(value);
                    break;

                // Length-delimited string
                case ProtoBuf.TYPES["string"]:
                    buffer.writeVString(value);
                    break;

                // Length-delimited bytes
                case ProtoBuf.TYPES["bytes"]:
                    if (value.remaining() < 0)
                        throw Error("Illegal value for "+this.toString(true)+": "+value.remaining()+" bytes remaining");
                    var prevOffset = value.offset;
                    buffer.writeVarint32(value.remaining());
                    buffer.append(value);
                    value.offset = prevOffset;
                    break;

                // Embedded message
                case ProtoBuf.TYPES["message"]:
                    var bb = new ByteBuffer().LE();
                    this.resolvedType.encode(value, bb);
                    buffer.writeVarint32(bb.offset);
                    buffer.append(bb.flip());
                    break;

                // Legacy group
                case ProtoBuf.TYPES["group"]:
                    this.resolvedType.encode(value, buffer);
                    buffer.writeVarint32((id << 3) | ProtoBuf.WIRE_TYPES.ENDGROUP);
                    break;

                default:
                    // We should never end here
                    throw Error("[INTERNAL] Illegal value to encode in "+this.toString(true)+": "+value+" (unknown type)");
            }
            return buffer;
        };

        /**
         * Decode one element value from the specified buffer.
         * @param {ByteBuffer} buffer ByteBuffer to decode from
         * @param {number} wireType The field wire type
         * @param {number} id The field number
         * @return {*} Decoded value
         * @throws {Error} If the field cannot be decoded
         * @expose
         */
        ElementPrototype.decode = function(buffer, wireType, id) {
            if (wireType != this.type.wireType)
                throw Error("Unexpected wire type for element");

            var value, nBytes;
            switch (this.type) {
                // 32bit signed varint
                case ProtoBuf.TYPES["int32"]:
                    return buffer.readVarint32() | 0;

                // 32bit unsigned varint
                case ProtoBuf.TYPES["uint32"]:
                    return buffer.readVarint32() >>> 0;

                // 32bit signed varint zig-zag
                case ProtoBuf.TYPES["sint32"]:
                    return buffer.readVarint32ZigZag() | 0;

                // Fixed 32bit unsigned
                case ProtoBuf.TYPES["fixed32"]:
                    return buffer.readUint32() >>> 0;

                case ProtoBuf.TYPES["sfixed32"]:
                    return buffer.readInt32() | 0;

                // 64bit signed varint
                case ProtoBuf.TYPES["int64"]:
                    return buffer.readVarint64();

                // 64bit unsigned varint
                case ProtoBuf.TYPES["uint64"]:
                    return buffer.readVarint64().toUnsigned();

                // 64bit signed varint zig-zag
                case ProtoBuf.TYPES["sint64"]:
                    return buffer.readVarint64ZigZag();

                // Fixed 64bit unsigned
                case ProtoBuf.TYPES["fixed64"]:
                    return buffer.readUint64();

                // Fixed 64bit signed
                case ProtoBuf.TYPES["sfixed64"]:
                    return buffer.readInt64();

                // Bool varint
                case ProtoBuf.TYPES["bool"]:
                    return !!buffer.readVarint32();

                // Constant enum value (varint)
                case ProtoBuf.TYPES["enum"]:
                    // The following Builder.Message#set will already throw
                    return buffer.readVarint32();

                // 32bit float
                case ProtoBuf.TYPES["float"]:
                    return buffer.readFloat();

                // 64bit float
                case ProtoBuf.TYPES["double"]:
                    return buffer.readDouble();

                // Length-delimited string
                case ProtoBuf.TYPES["string"]:
                    return buffer.readVString();

                // Length-delimited bytes
                case ProtoBuf.TYPES["bytes"]: {
                    nBytes = buffer.readVarint32();
                    if (buffer.remaining() < nBytes)
                        throw Error("Illegal number of bytes for "+this.toString(true)+": "+nBytes+" required but got only "+buffer.remaining());
                    value = buffer.clone(); // Offset already set
                    value.limit = value.offset+nBytes;
                    buffer.offset += nBytes;
                    return value;
                }

                // Length-delimited embedded message
                case ProtoBuf.TYPES["message"]: {
                    nBytes = buffer.readVarint32();
                    return this.resolvedType.decode(buffer, nBytes);
                }

                // Legacy group
                case ProtoBuf.TYPES["group"]:
                    return this.resolvedType.decode(buffer, -1, id);
            }

            // We should never end here
            throw Error("[INTERNAL] Illegal decode type");
        };

        /**
         * Converts a value from a string to the canonical element type.
         *
         * Legal only when isMapKey is true.
         *
         * @param {string} str The string value
         * @returns {*} The value
         */
        ElementPrototype.valueFromString = function(str) {
            if (!this.isMapKey) {
                throw Error("valueFromString() called on non-map-key element");
            }

            switch (this.type) {
                case ProtoBuf.TYPES["int32"]:
                case ProtoBuf.TYPES["sint32"]:
                case ProtoBuf.TYPES["sfixed32"]:
                case ProtoBuf.TYPES["uint32"]:
                case ProtoBuf.TYPES["fixed32"]:
                    return this.verifyValue(parseInt(str));

                case ProtoBuf.TYPES["int64"]:
                case ProtoBuf.TYPES["sint64"]:
                case ProtoBuf.TYPES["sfixed64"]:
                case ProtoBuf.TYPES["uint64"]:
                case ProtoBuf.TYPES["fixed64"]:
                      // Long-based fields support conversions from string already.
                      return this.verifyValue(str);

                case ProtoBuf.TYPES["bool"]:
                      return str === "true";

                case ProtoBuf.TYPES["string"]:
                      return this.verifyValue(str);

                case ProtoBuf.TYPES["bytes"]:
                      return ByteBuffer.fromBinary(str);
            }
        };

        /**
         * Converts a value from the canonical element type to a string.
         *
         * It should be the case that `valueFromString(valueToString(val))` returns
         * a value equivalent to `verifyValue(val)` for every legal value of `val`
         * according to this element type.
         *
         * This may be used when the element must be stored or used as a string,
         * e.g., as a map key on an Object.
         *
         * Legal only when isMapKey is true.
         *
         * @param {*} val The value
         * @returns {string} The string form of the value.
         */
        ElementPrototype.valueToString = function(value) {
            if (!this.isMapKey) {
                throw Error("valueToString() called on non-map-key element");
            }

            if (this.type === ProtoBuf.TYPES["bytes"]) {
                return value.toString("binary");
            } else {
                return value.toString();
            }
        };

        /**
         * @alias ProtoBuf.Reflect.Element
         * @expose
         */
        Reflect.Element = Element;

        /**
         * Constructs a new Message.
         * @exports ProtoBuf.Reflect.Message
         * @param {!ProtoBuf.Builder} builder Builder reference
         * @param {!ProtoBuf.Reflect.Namespace} parent Parent message or namespace
         * @param {string} name Message name
         * @param {Object.<string,*>=} options Message options
         * @param {boolean=} isGroup `true` if this is a legacy group
         * @param {string?} syntax The syntax level of this definition (e.g., proto3)
         * @constructor
         * @extends ProtoBuf.Reflect.Namespace
         */
        var Message = function(builder, parent, name, options, isGroup, syntax) {
            Namespace.call(this, builder, parent, name, options, syntax);

            /**
             * @override
             */
            this.className = "Message";

            /**
             * Extensions range.
             * @type {!Array.<number>|undefined}
             * @expose
             */
            this.extensions = undefined;

            /**
             * Runtime message class.
             * @type {?function(new:ProtoBuf.Builder.Message)}
             * @expose
             */
            this.clazz = null;

            /**
             * Whether this is a legacy group or not.
             * @type {boolean}
             * @expose
             */
            this.isGroup = !!isGroup;

            // The following cached collections are used to efficiently iterate over or look up fields when decoding.

            /**
             * Cached fields.
             * @type {?Array.<!ProtoBuf.Reflect.Message.Field>}
             * @private
             */
            this._fields = null;

            /**
             * Cached fields by id.
             * @type {?Object.<number,!ProtoBuf.Reflect.Message.Field>}
             * @private
             */
            this._fieldsById = null;

            /**
             * Cached fields by name.
             * @type {?Object.<string,!ProtoBuf.Reflect.Message.Field>}
             * @private
             */
            this._fieldsByName = null;
        };

        /**
         * @alias ProtoBuf.Reflect.Message.prototype
         * @inner
         */
        var MessagePrototype = Message.prototype = Object.create(Namespace.prototype);

        /**
         * Builds the message and returns the runtime counterpart, which is a fully functional class.
         * @see ProtoBuf.Builder.Message
         * @param {boolean=} rebuild Whether to rebuild or not, defaults to false
         * @return {ProtoBuf.Reflect.Message} Message class
         * @throws {Error} If the message cannot be built
         * @expose
         */
        MessagePrototype.build = function(rebuild) {
            if (this.clazz && !rebuild)
                return this.clazz;

            // Create the runtime Message class in its own scope
            var clazz = (function(ProtoBuf, T) {

                var fields = T.getChildren(ProtoBuf.Reflect.Message.Field),
                    oneofs = T.getChildren(ProtoBuf.Reflect.Message.OneOf);

                /**
                 * Constructs a new runtime Message.
                 * @name ProtoBuf.Builder.Message
                 * @class Barebone of all runtime messages.
                 * @param {!Object.<string,*>|string} values Preset values
                 * @param {...string} var_args
                 * @constructor
                 * @throws {Error} If the message cannot be created
                 */
                var Message = function(values, var_args) {
                    ProtoBuf.Builder.Message.call(this);

                    // Create virtual oneof properties
                    for (var i=0, k=oneofs.length; i<k; ++i)
                        this[oneofs[i].name] = null;
                    // Create fields and set default values
                    for (i=0, k=fields.length; i<k; ++i) {
                        var field = fields[i];
                        this[field.name] =
                            field.repeated ? [] :
                            (field.map ? new ProtoBuf.Map(field) : null);
                        if ((field.required || T.syntax === 'proto3') &&
                            field.defaultValue !== null)
                            this[field.name] = field.defaultValue;
                    }

                    if (arguments.length > 0) {
                        var value;
                        // Set field values from a values object
                        if (arguments.length === 1 && values !== null && typeof values === 'object' &&
                            /* not _another_ Message */ (typeof values.encode !== 'function' || values instanceof Message) &&
                            /* not a repeated field */ !Array.isArray(values) &&
                            /* not a Map */ !(values instanceof ProtoBuf.Map) &&
                            /* not a ByteBuffer */ !ByteBuffer.isByteBuffer(values) &&
                            /* not an ArrayBuffer */ !(values instanceof ArrayBuffer) &&
                            /* not a Long */ !(ProtoBuf.Long && values instanceof ProtoBuf.Long)) {
                            this.$set(values);
                        } else // Set field values from arguments, in declaration order
                            for (i=0, k=arguments.length; i<k; ++i)
                                if (typeof (value = arguments[i]) !== 'undefined')
                                    this.$set(fields[i].name, value); // May throw
                    }
                };

                /**
                 * @alias ProtoBuf.Builder.Message.prototype
                 * @inner
                 */
                var MessagePrototype = Message.prototype = Object.create(ProtoBuf.Builder.Message.prototype);

                /**
                 * Adds a value to a repeated field.
                 * @name ProtoBuf.Builder.Message#add
                 * @function
                 * @param {string} key Field name
                 * @param {*} value Value to add
                 * @param {boolean=} noAssert Whether to assert the value or not (asserts by default)
                 * @returns {!ProtoBuf.Builder.Message} this
                 * @throws {Error} If the value cannot be added
                 * @expose
                 */
                MessagePrototype.add = function(key, value, noAssert) {
                    var field = T._fieldsByName[key];
                    if (!noAssert) {
                        if (!field)
                            throw Error(this+"#"+key+" is undefined");
                        if (!(field instanceof ProtoBuf.Reflect.Message.Field))
                            throw Error(this+"#"+key+" is not a field: "+field.toString(true)); // May throw if it's an enum or embedded message
                        if (!field.repeated)
                            throw Error(this+"#"+key+" is not a repeated field");
                        value = field.verifyValue(value, true);
                    }
                    if (this[key] === null)
                        this[key] = [];
                    this[key].push(value);
                    return this;
                };

                /**
                 * Adds a value to a repeated field. This is an alias for {@link ProtoBuf.Builder.Message#add}.
                 * @name ProtoBuf.Builder.Message#$add
                 * @function
                 * @param {string} key Field name
                 * @param {*} value Value to add
                 * @param {boolean=} noAssert Whether to assert the value or not (asserts by default)
                 * @returns {!ProtoBuf.Builder.Message} this
                 * @throws {Error} If the value cannot be added
                 * @expose
                 */
                MessagePrototype.$add = MessagePrototype.add;

                /**
                 * Sets a field's value.
                 * @name ProtoBuf.Builder.Message#set
                 * @function
                 * @param {string|!Object.<string,*>} keyOrObj String key or plain object holding multiple values
                 * @param {(*|boolean)=} value Value to set if key is a string, otherwise omitted
                 * @param {boolean=} noAssert Whether to not assert for an actual field / proper value type, defaults to `false`
                 * @returns {!ProtoBuf.Builder.Message} this
                 * @throws {Error} If the value cannot be set
                 * @expose
                 */
                MessagePrototype.set = function(keyOrObj, value, noAssert) {
                    if (keyOrObj && typeof keyOrObj === 'object') {
                        noAssert = value;
                        for (var ikey in keyOrObj) {
                            // Check if virtual oneof field - don't set these
                            if (keyOrObj.hasOwnProperty(ikey) && typeof (value = keyOrObj[ikey]) !== 'undefined' && T._oneofsByName[ikey] === undefined)
                                this.$set(ikey, value, noAssert);
                        }
                        return this;
                    }
                    var field = T._fieldsByName[keyOrObj];
                    if (!noAssert) {
                        if (!field)
                            throw Error(this+"#"+keyOrObj+" is not a field: undefined");
                        if (!(field instanceof ProtoBuf.Reflect.Message.Field))
                            throw Error(this+"#"+keyOrObj+" is not a field: "+field.toString(true));
                        this[field.name] = (value = field.verifyValue(value)); // May throw
                    } else
                        this[keyOrObj] = value;
                    if (field && field.oneof) { // Field is part of an OneOf (not a virtual OneOf field)
                        var currentField = this[field.oneof.name]; // Virtual field references currently set field
                        if (value !== null) {
                            if (currentField !== null && currentField !== field.name)
                                this[currentField] = null; // Clear currently set field
                            this[field.oneof.name] = field.name; // Point virtual field at this field
                        } else if (/* value === null && */currentField === keyOrObj)
                            this[field.oneof.name] = null; // Clear virtual field (current field explicitly cleared)
                    }
                    return this;
                };

                /**
                 * Sets a field's value. This is an alias for [@link ProtoBuf.Builder.Message#set}.
                 * @name ProtoBuf.Builder.Message#$set
                 * @function
                 * @param {string|!Object.<string,*>} keyOrObj String key or plain object holding multiple values
                 * @param {(*|boolean)=} value Value to set if key is a string, otherwise omitted
                 * @param {boolean=} noAssert Whether to not assert the value, defaults to `false`
                 * @throws {Error} If the value cannot be set
                 * @expose
                 */
                MessagePrototype.$set = MessagePrototype.set;

                /**
                 * Gets a field's value.
                 * @name ProtoBuf.Builder.Message#get
                 * @function
                 * @param {string} key Key
                 * @param {boolean=} noAssert Whether to not assert for an actual field, defaults to `false`
                 * @return {*} Value
                 * @throws {Error} If there is no such field
                 * @expose
                 */
                MessagePrototype.get = function(key, noAssert) {
                    if (noAssert)
                        return this[key];
                    var field = T._fieldsByName[key];
                    if (!field || !(field instanceof ProtoBuf.Reflect.Message.Field))
                        throw Error(this+"#"+key+" is not a field: undefined");
                    if (!(field instanceof ProtoBuf.Reflect.Message.Field))
                        throw Error(this+"#"+key+" is not a field: "+field.toString(true));
                    return this[field.name];
                };

                /**
                 * Gets a field's value. This is an alias for {@link ProtoBuf.Builder.Message#$get}.
                 * @name ProtoBuf.Builder.Message#$get
                 * @function
                 * @param {string} key Key
                 * @return {*} Value
                 * @throws {Error} If there is no such field
                 * @expose
                 */
                MessagePrototype.$get = MessagePrototype.get;

                // Getters and setters

                for (var i=0; i<fields.length; i++) {
                    var field = fields[i];
                    // no setters for extension fields as these are named by their fqn
                    if (field instanceof ProtoBuf.Reflect.Message.ExtensionField)
                        continue;

                    if (T.builder.options['populateAccessors'])
                        (function(field) {
                            // set/get[SomeValue]
                            var Name = field.originalName.replace(/(_[a-zA-Z])/g, function(match) {
                                return match.toUpperCase().replace('_','');
                            });
                            Name = Name.substring(0,1).toUpperCase() + Name.substring(1);

                            // set/get_[some_value] FIXME: Do we really need these?
                            var name = field.originalName.replace(/([A-Z])/g, function(match) {
                                return "_"+match;
                            });

                            /**
                             * The current field's unbound setter function.
                             * @function
                             * @param {*} value
                             * @param {boolean=} noAssert
                             * @returns {!ProtoBuf.Builder.Message}
                             * @inner
                             */
                            var setter = function(value, noAssert) {
                                this[field.name] = noAssert ? value : field.verifyValue(value);
                                return this;
                            };

                            /**
                             * The current field's unbound getter function.
                             * @function
                             * @returns {*}
                             * @inner
                             */
                            var getter = function() {
                                return this[field.name];
                            };

                            if (T.getChild("set"+Name) === null)
                                /**
                                 * Sets a value. This method is present for each field, but only if there is no name conflict with
                                 *  another field.
                                 * @name ProtoBuf.Builder.Message#set[SomeField]
                                 * @function
                                 * @param {*} value Value to set
                                 * @param {boolean=} noAssert Whether to not assert the value, defaults to `false`
                                 * @returns {!ProtoBuf.Builder.Message} this
                                 * @abstract
                                 * @throws {Error} If the value cannot be set
                                 */
                                MessagePrototype["set"+Name] = setter;

                            if (T.getChild("set_"+name) === null)
                                /**
                                 * Sets a value. This method is present for each field, but only if there is no name conflict with
                                 *  another field.
                                 * @name ProtoBuf.Builder.Message#set_[some_field]
                                 * @function
                                 * @param {*} value Value to set
                                 * @param {boolean=} noAssert Whether to not assert the value, defaults to `false`
                                 * @returns {!ProtoBuf.Builder.Message} this
                                 * @abstract
                                 * @throws {Error} If the value cannot be set
                                 */
                                MessagePrototype["set_"+name] = setter;

                            if (T.getChild("get"+Name) === null)
                                /**
                                 * Gets a value. This method is present for each field, but only if there is no name conflict with
                                 *  another field.
                                 * @name ProtoBuf.Builder.Message#get[SomeField]
                                 * @function
                                 * @abstract
                                 * @return {*} The value
                                 */
                                MessagePrototype["get"+Name] = getter;

                            if (T.getChild("get_"+name) === null)
                                /**
                                 * Gets a value. This method is present for each field, but only if there is no name conflict with
                                 *  another field.
                                 * @name ProtoBuf.Builder.Message#get_[some_field]
                                 * @function
                                 * @return {*} The value
                                 * @abstract
                                 */
                                MessagePrototype["get_"+name] = getter;

                        })(field);
                }

                // En-/decoding

                /**
                 * Encodes the message.
                 * @name ProtoBuf.Builder.Message#$encode
                 * @function
                 * @param {(!ByteBuffer|boolean)=} buffer ByteBuffer to encode to. Will create a new one and flip it if omitted.
                 * @param {boolean=} noVerify Whether to not verify field values, defaults to `false`
                 * @return {!ByteBuffer} Encoded message as a ByteBuffer
                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still
                 *  returns the encoded ByteBuffer in the `encoded` property on the error.
                 * @expose
                 * @see ProtoBuf.Builder.Message#encode64
                 * @see ProtoBuf.Builder.Message#encodeHex
                 * @see ProtoBuf.Builder.Message#encodeAB
                 */
                MessagePrototype.encode = function(buffer, noVerify) {
                    if (typeof buffer === 'boolean')
                        noVerify = buffer,
                        buffer = undefined;
                    var isNew = false;
                    if (!buffer)
                        buffer = new ByteBuffer(),
                        isNew = true;
                    var le = buffer.littleEndian;
                    try {
                        T.encode(this, buffer.LE(), noVerify);
                        return (isNew ? buffer.flip() : buffer).LE(le);
                    } catch (e) {
                        buffer.LE(le);
                        throw(e);
                    }
                };

                /**
                 * Encodes a message using the specified data payload.
                 * @param {!Object.<string,*>} data Data payload
                 * @param {(!ByteBuffer|boolean)=} buffer ByteBuffer to encode to. Will create a new one and flip it if omitted.
                 * @param {boolean=} noVerify Whether to not verify field values, defaults to `false`
                 * @return {!ByteBuffer} Encoded message as a ByteBuffer
                 * @expose
                 */
                Message.encode = function(data, buffer, noVerify) {
                    return new Message(data).encode(buffer, noVerify);
                };

                /**
                 * Calculates the byte length of the message.
                 * @name ProtoBuf.Builder.Message#calculate
                 * @function
                 * @returns {number} Byte length
                 * @throws {Error} If the message cannot be calculated or if required fields are missing.
                 * @expose
                 */
                MessagePrototype.calculate = function() {
                    return T.calculate(this);
                };

                /**
                 * Encodes the varint32 length-delimited message.
                 * @name ProtoBuf.Builder.Message#encodeDelimited
                 * @function
                 * @param {(!ByteBuffer|boolean)=} buffer ByteBuffer to encode to. Will create a new one and flip it if omitted.
                 * @param {boolean=} noVerify Whether to not verify field values, defaults to `false`
                 * @return {!ByteBuffer} Encoded message as a ByteBuffer
                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still
                 *  returns the encoded ByteBuffer in the `encoded` property on the error.
                 * @expose
                 */
                MessagePrototype.encodeDelimited = function(buffer, noVerify) {
                    var isNew = false;
                    if (!buffer)
                        buffer = new ByteBuffer(),
                        isNew = true;
                    var enc = new ByteBuffer().LE();
                    T.encode(this, enc, noVerify).flip();
                    buffer.writeVarint32(enc.remaining());
                    buffer.append(enc);
                    return isNew ? buffer.flip() : buffer;
                };

                /**
                 * Directly encodes the message to an ArrayBuffer.
                 * @name ProtoBuf.Builder.Message#encodeAB
                 * @function
                 * @return {ArrayBuffer} Encoded message as ArrayBuffer
                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still
                 *  returns the encoded ArrayBuffer in the `encoded` property on the error.
                 * @expose
                 */
                MessagePrototype.encodeAB = function() {
                    try {
                        return this.encode().toArrayBuffer();
                    } catch (e) {
                        if (e["encoded"]) e["encoded"] = e["encoded"].toArrayBuffer();
                        throw(e);
                    }
                };

                /**
                 * Returns the message as an ArrayBuffer. This is an alias for {@link ProtoBuf.Builder.Message#encodeAB}.
                 * @name ProtoBuf.Builder.Message#toArrayBuffer
                 * @function
                 * @return {ArrayBuffer} Encoded message as ArrayBuffer
                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still
                 *  returns the encoded ArrayBuffer in the `encoded` property on the error.
                 * @expose
                 */
                MessagePrototype.toArrayBuffer = MessagePrototype.encodeAB;

                /**
                 * Directly encodes the message to a node Buffer.
                 * @name ProtoBuf.Builder.Message#encodeNB
                 * @function
                 * @return {!Buffer}
                 * @throws {Error} If the message cannot be encoded, not running under node.js or if required fields are
                 *  missing. The later still returns the encoded node Buffer in the `encoded` property on the error.
                 * @expose
                 */
                MessagePrototype.encodeNB = function() {
                    try {
                        return this.encode().toBuffer();
                    } catch (e) {
                        if (e["encoded"]) e["encoded"] = e["encoded"].toBuffer();
                        throw(e);
                    }
                };

                /**
                 * Returns the message as a node Buffer. This is an alias for {@link ProtoBuf.Builder.Message#encodeNB}.
                 * @name ProtoBuf.Builder.Message#toBuffer
                 * @function
                 * @return {!Buffer}
                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still
                 *  returns the encoded node Buffer in the `encoded` property on the error.
                 * @expose
                 */
                MessagePrototype.toBuffer = MessagePrototype.encodeNB;

                /**
                 * Directly encodes the message to a base64 encoded string.
                 * @name ProtoBuf.Builder.Message#encode64
                 * @function
                 * @return {string} Base64 encoded string
                 * @throws {Error} If the underlying buffer cannot be encoded or if required fields are missing. The later
                 *  still returns the encoded base64 string in the `encoded` property on the error.
                 * @expose
                 */
                MessagePrototype.encode64 = function() {
                    try {
                        return this.encode().toBase64();
                    } catch (e) {
                        if (e["encoded"]) e["encoded"] = e["encoded"].toBase64();
                        throw(e);
                    }
                };

                /**
                 * Returns the message as a base64 encoded string. This is an alias for {@link ProtoBuf.Builder.Message#encode64}.
                 * @name ProtoBuf.Builder.Message#toBase64
                 * @function
                 * @return {string} Base64 encoded string
                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still
                 *  returns the encoded base64 string in the `encoded` property on the error.
                 * @expose
                 */
                MessagePrototype.toBase64 = MessagePrototype.encode64;

                /**
                 * Directly encodes the message to a hex encoded string.
                 * @name ProtoBuf.Builder.Message#encodeHex
                 * @function
                 * @return {string} Hex encoded string
                 * @throws {Error} If the underlying buffer cannot be encoded or if required fields are missing. The later
                 *  still returns the encoded hex string in the `encoded` property on the error.
                 * @expose
                 */
                MessagePrototype.encodeHex = function() {
                    try {
                        return this.encode().toHex();
                    } catch (e) {
                        if (e["encoded"]) e["encoded"] = e["encoded"].toHex();
                        throw(e);
                    }
                };

                /**
                 * Returns the message as a hex encoded string. This is an alias for {@link ProtoBuf.Builder.Message#encodeHex}.
                 * @name ProtoBuf.Builder.Message#toHex
                 * @function
                 * @return {string} Hex encoded string
                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still
                 *  returns the encoded hex string in the `encoded` property on the error.
                 * @expose
                 */
                MessagePrototype.toHex = MessagePrototype.encodeHex;

                /**
                 * Clones a message object or field value to a raw object.
                 * @param {*} obj Object to clone
                 * @param {boolean} binaryAsBase64 Whether to include binary data as base64 strings or as a buffer otherwise
                 * @param {boolean} longsAsStrings Whether to encode longs as strings
                 * @param {!ProtoBuf.Reflect.T=} resolvedType The resolved field type if a field
                 * @returns {*} Cloned object
                 * @inner
                 */
                function cloneRaw(obj, binaryAsBase64, longsAsStrings, resolvedType) {
                    if (obj === null || typeof obj !== 'object') {
                        // Convert enum values to their respective names
                        if (resolvedType && resolvedType instanceof ProtoBuf.Reflect.Enum) {
                            var name = ProtoBuf.Reflect.Enum.getName(resolvedType.object, obj);
                            if (name !== null)
                                return name;
                        }
                        // Pass-through string, number, boolean, null...
                        return obj;
                    }
                    // Convert ByteBuffers to raw buffer or strings
                    if (ByteBuffer.isByteBuffer(obj))
                        return binaryAsBase64 ? obj.toBase64() : obj.toBuffer();
                    // Convert Longs to proper objects or strings
                    if (ProtoBuf.Long.isLong(obj))
                        return longsAsStrings ? obj.toString() : ProtoBuf.Long.fromValue(obj);
                    var clone;
                    // Clone arrays
                    if (Array.isArray(obj)) {
                        clone = [];
                        obj.forEach(function(v, k) {
                            clone[k] = cloneRaw(v, binaryAsBase64, longsAsStrings, resolvedType);
                        });
                        return clone;
                    }
                    clone = {};
                    // Convert maps to objects
                    if (obj instanceof ProtoBuf.Map) {
                        var it = obj.entries();
                        for (var e = it.next(); !e.done; e = it.next())
                            clone[obj.keyElem.valueToString(e.value[0])] = cloneRaw(e.value[1], binaryAsBase64, longsAsStrings, obj.valueElem.resolvedType);
                        return clone;
                    }
                    // Everything else is a non-null object
                    var type = obj.$type,
                        field = undefined;
                    for (var i in obj)
                        if (obj.hasOwnProperty(i)) {
                            if (type && (field = type.getChild(i)))
                                clone[i] = cloneRaw(obj[i], binaryAsBase64, longsAsStrings, field.resolvedType);
                            else
                                clone[i] = cloneRaw(obj[i], binaryAsBase64, longsAsStrings);
                        }
                    return clone;
                }

                /**
                 * Returns the message's raw payload.
                 * @param {boolean=} binaryAsBase64 Whether to include binary data as base64 strings instead of Buffers, defaults to `false`
                 * @param {boolean} longsAsStrings Whether to encode longs as strings
                 * @returns {Object.<string,*>} Raw payload
                 * @expose
                 */
                MessagePrototype.toRaw = function(binaryAsBase64, longsAsStrings) {
                    return cloneRaw(this, !!binaryAsBase64, !!longsAsStrings, this.$type);
                };

                /**
                 * Encodes a message to JSON.
                 * @returns {string} JSON string
                 * @expose
                 */
                MessagePrototype.encodeJSON = function() {
                    return JSON.stringify(
                        cloneRaw(this,
                             /* binary-as-base64 */ true,
                             /* longs-as-strings */ true,
                             this.$type
                        )
                    );
                };

                /**
                 * Decodes a message from the specified buffer or string.
                 * @name ProtoBuf.Builder.Message.decode
                 * @function
                 * @param {!ByteBuffer|!ArrayBuffer|!Buffer|string} buffer Buffer to decode from
                 * @param {(number|string)=} length Message length. Defaults to decode all the remainig data.
                 * @param {string=} enc Encoding if buffer is a string: hex, utf8 (not recommended), defaults to base64
                 * @return {!ProtoBuf.Builder.Message} Decoded message
                 * @throws {Error} If the message cannot be decoded or if required fields are missing. The later still
                 *  returns the decoded message with missing fields in the `decoded` property on the error.
                 * @expose
                 * @see ProtoBuf.Builder.Message.decode64
                 * @see ProtoBuf.Builder.Message.decodeHex
                 */
                Message.decode = function(buffer, length, enc) {
                    if (typeof length === 'string')
                        enc = length,
                        length = -1;
                    if (typeof buffer === 'string')
                        buffer = ByteBuffer.wrap(buffer, enc ? enc : "base64");
                    else if (!ByteBuffer.isByteBuffer(buffer))
                        buffer = ByteBuffer.wrap(buffer); // May throw
                    var le = buffer.littleEndian;
                    try {
                        var msg = T.decode(buffer.LE(), length);
                        buffer.LE(le);
                        return msg;
                    } catch (e) {
                        buffer.LE(le);
                        throw(e);
                    }
                };

                /**
                 * Decodes a varint32 length-delimited message from the specified buffer or string.
                 * @name ProtoBuf.Builder.Message.decodeDelimited
                 * @function
                 * @param {!ByteBuffer|!ArrayBuffer|!Buffer|string} buffer Buffer to decode from
                 * @param {string=} enc Encoding if buffer is a string: hex, utf8 (not recommended), defaults to base64
                 * @return {ProtoBuf.Builder.Message} Decoded message or `null` if not enough bytes are available yet
                 * @throws {Error} If the message cannot be decoded or if required fields are missing. The later still
                 *  returns the decoded message with missing fields in the `decoded` property on the error.
                 * @expose
                 */
                Message.decodeDelimited = function(buffer, enc) {
                    if (typeof buffer === 'string')
                        buffer = ByteBuffer.wrap(buffer, enc ? enc : "base64");
                    else if (!ByteBuffer.isByteBuffer(buffer))
                        buffer = ByteBuffer.wrap(buffer); // May throw
                    if (buffer.remaining() < 1)
                        return null;
                    var off = buffer.offset,
                        len = buffer.readVarint32();
                    if (buffer.remaining() < len) {
                        buffer.offset = off;
                        return null;
                    }
                    try {
                        var msg = T.decode(buffer.slice(buffer.offset, buffer.offset + len).LE());
                        buffer.offset += len;
                        return msg;
                    } catch (err) {
                        buffer.offset += len;
                        throw err;
                    }
                };

                /**
                 * Decodes the message from the specified base64 encoded string.
                 * @name ProtoBuf.Builder.Message.decode64
                 * @function
                 * @param {string} str String to decode from
                 * @return {!ProtoBuf.Builder.Message} Decoded message
                 * @throws {Error} If the message cannot be decoded or if required fields are missing. The later still
                 *  returns the decoded message with missing fields in the `decoded` property on the error.
                 * @expose
                 */
                Message.decode64 = function(str) {
                    return Message.decode(str, "base64");
                };

                /**
                 * Decodes the message from the specified hex encoded string.
                 * @name ProtoBuf.Builder.Message.decodeHex
                 * @function
                 * @param {string} str String to decode from
                 * @return {!ProtoBuf.Builder.Message} Decoded message
                 * @throws {Error} If the message cannot be decoded or if required fields are missing. The later still
                 *  returns the decoded message with missing fields in the `decoded` property on the error.
                 * @expose
                 */
                Message.decodeHex = function(str) {
                    return Message.decode(str, "hex");
                };

                /**
                 * Decodes the message from a JSON string.
                 * @name ProtoBuf.Builder.Message.decodeJSON
                 * @function
                 * @param {string} str String to decode from
                 * @return {!ProtoBuf.Builder.Message} Decoded message
                 * @throws {Error} If the message cannot be decoded or if required fields are
                 * missing.
                 * @expose
                 */
                Message.decodeJSON = function(str) {
                    return new Message(JSON.parse(str));
                };

                // Utility

                /**
                 * Returns a string representation of this Message.
                 * @name ProtoBuf.Builder.Message#toString
                 * @function
                 * @return {string} String representation as of ".Fully.Qualified.MessageName"
                 * @expose
                 */
                MessagePrototype.toString = function() {
                    return T.toString();
                };

                // Properties

                /**
                 * Message options.
                 * @name ProtoBuf.Builder.Message.$options
                 * @type {Object.<string,*>}
                 * @expose
                 */
                var $optionsS; // cc needs this

                /**
                 * Message options.
                 * @name ProtoBuf.Builder.Message#$options
                 * @type {Object.<string,*>}
                 * @expose
                 */
                var $options;

                /**
                 * Reflection type.
                 * @name ProtoBuf.Builder.Message.$type
                 * @type {!ProtoBuf.Reflect.Message}
                 * @expose
                 */
                var $typeS;

                /**
                 * Reflection type.
                 * @name ProtoBuf.Builder.Message#$type
                 * @type {!ProtoBuf.Reflect.Message}
                 * @expose
                 */
                var $type;

                if (Object.defineProperty)
                    Object.defineProperty(Message, '$options', { "value": T.buildOpt() }),
                    Object.defineProperty(MessagePrototype, "$options", { "value": Message["$options"] }),
                    Object.defineProperty(Message, "$type", { "value": T }),
                    Object.defineProperty(MessagePrototype, "$type", { "value": T });

                return Message;

            })(ProtoBuf, this);

            // Static enums and prototyped sub-messages / cached collections
            this._fields = [];
            this._fieldsById = {};
            this._fieldsByName = {};
            this._oneofsByName = {};
            for (var i=0, k=this.children.length, child; i<k; i++) {
                child = this.children[i];
                if (child instanceof Enum || child instanceof Message || child instanceof Service) {
                    if (clazz.hasOwnProperty(child.name))
                        throw Error("Illegal reflect child of "+this.toString(true)+": "+child.toString(true)+" cannot override static property '"+child.name+"'");
                    clazz[child.name] = child.build();
                } else if (child instanceof Message.Field)
                    child.build(),
                    this._fields.push(child),
                    this._fieldsById[child.id] = child,
                    this._fieldsByName[child.name] = child;
                else if (child instanceof Message.OneOf) {
                    this._oneofsByName[child.name] = child;
                }
                else if (!(child instanceof Message.OneOf) && !(child instanceof Extension)) // Not built
                    throw Error("Illegal reflect child of "+this.toString(true)+": "+this.children[i].toString(true));
            }

            return this.clazz = clazz;
        };

        /**
         * Encodes a runtime message's contents to the specified buffer.
         * @param {!ProtoBuf.Builder.Message} message Runtime message to encode
         * @param {ByteBuffer} buffer ByteBuffer to write to
         * @param {boolean=} noVerify Whether to not verify field values, defaults to `false`
         * @return {ByteBuffer} The ByteBuffer for chaining
         * @throws {Error} If required fields are missing or the message cannot be encoded for another reason
         * @expose
         */
        MessagePrototype.encode = function(message, buffer, noVerify) {
            var fieldMissing = null,
                field;
            for (var i=0, k=this._fields.length, val; i<k; ++i) {
                field = this._fields[i];
                val = message[field.name];
                if (field.required && val === null) {
                    if (fieldMissing === null)
                        fieldMissing = field;
                } else
                    field.encode(noVerify ? val : field.verifyValue(val), buffer, message);
            }
            if (fieldMissing !== null) {
                var err = Error("Missing at least one required field for "+this.toString(true)+": "+fieldMissing);
                err["encoded"] = buffer; // Still expose what we got
                throw(err);
            }
            return buffer;
        };

        /**
         * Calculates a runtime message's byte length.
         * @param {!ProtoBuf.Builder.Message} message Runtime message to encode
         * @returns {number} Byte length
         * @throws {Error} If required fields are missing or the message cannot be calculated for another reason
         * @expose
         */
        MessagePrototype.calculate = function(message) {
            for (var n=0, i=0, k=this._fields.length, field, val; i<k; ++i) {
                field = this._fields[i];
                val = message[field.name];
                if (field.required && val === null)
                   throw Error("Missing at least one required field for "+this.toString(true)+": "+field);
                else
                    n += field.calculate(val, message);
            }
            return n;
        };

        /**
         * Skips all data until the end of the specified group has been reached.
         * @param {number} expectedId Expected GROUPEND id
         * @param {!ByteBuffer} buf ByteBuffer
         * @returns {boolean} `true` if a value as been skipped, `false` if the end has been reached
         * @throws {Error} If it wasn't possible to find the end of the group (buffer overrun or end tag mismatch)
         * @inner
         */
        function skipTillGroupEnd(expectedId, buf) {
            var tag = buf.readVarint32(), // Throws on OOB
                wireType = tag & 0x07,
                id = tag >>> 3;
            switch (wireType) {
                case ProtoBuf.WIRE_TYPES.VARINT:
                    do tag = buf.readUint8();
                    while ((tag & 0x80) === 0x80);
                    break;
                case ProtoBuf.WIRE_TYPES.BITS64:
                    buf.offset += 8;
                    break;
                case ProtoBuf.WIRE_TYPES.LDELIM:
                    tag = buf.readVarint32(); // reads the varint
                    buf.offset += tag;        // skips n bytes
                    break;
                case ProtoBuf.WIRE_TYPES.STARTGROUP:
                    skipTillGroupEnd(id, buf);
                    break;
                case ProtoBuf.WIRE_TYPES.ENDGROUP:
                    if (id === expectedId)
                        return false;
                    else
                        throw Error("Illegal GROUPEND after unknown group: "+id+" ("+expectedId+" expected)");
                case ProtoBuf.WIRE_TYPES.BITS32:
                    buf.offset += 4;
                    break;
                default:
                    throw Error("Illegal wire type in unknown group "+expectedId+": "+wireType);
            }
            return true;
        }

        /**
         * Decodes an encoded message and returns the decoded message.
         * @param {ByteBuffer} buffer ByteBuffer to decode from
         * @param {number=} length Message length. Defaults to decode all remaining data.
         * @param {number=} expectedGroupEndId Expected GROUPEND id if this is a legacy group
         * @return {ProtoBuf.Builder.Message} Decoded message
         * @throws {Error} If the message cannot be decoded
         * @expose
         */
        MessagePrototype.decode = function(buffer, length, expectedGroupEndId) {
            if (typeof length !== 'number')
                length = -1;
            var start = buffer.offset,
                msg = new (this.clazz)(),
                tag, wireType, id, field;
            while (buffer.offset < start+length || (length === -1 && buffer.remaining() > 0)) {
                tag = buffer.readVarint32();
                wireType = tag & 0x07;
                id = tag >>> 3;
                if (wireType === ProtoBuf.WIRE_TYPES.ENDGROUP) {
                    if (id !== expectedGroupEndId)
                        throw Error("Illegal group end indicator for "+this.toString(true)+": "+id+" ("+(expectedGroupEndId ? expectedGroupEndId+" expected" : "not a group")+")");
                    break;
                }
                if (!(field = this._fieldsById[id])) {
                    // "messages created by your new code can be parsed by your old code: old binaries simply ignore the new field when parsing."
                    switch (wireType) {
                        case ProtoBuf.WIRE_TYPES.VARINT:
                            buffer.readVarint32();
                            break;
                        case ProtoBuf.WIRE_TYPES.BITS32:
                            buffer.offset += 4;
                            break;
                        case ProtoBuf.WIRE_TYPES.BITS64:
                            buffer.offset += 8;
                            break;
                        case ProtoBuf.WIRE_TYPES.LDELIM:
                            var len = buffer.readVarint32();
                            buffer.offset += len;
                            break;
                        case ProtoBuf.WIRE_TYPES.STARTGROUP:
                            while (skipTillGroupEnd(id, buffer)) {}
                            break;
                        default:
                            throw Error("Illegal wire type for unknown field "+id+" in "+this.toString(true)+"#decode: "+wireType);
                    }
                    continue;
                }
                if (field.repeated && !field.options["packed"]) {
                    msg[field.name].push(field.decode(wireType, buffer));
                } else if (field.map) {
                    var keyval = field.decode(wireType, buffer);
                    msg[field.name].set(keyval[0], keyval[1]);
                } else {
                    msg[field.name] = field.decode(wireType, buffer);
                    if (field.oneof) { // Field is part of an OneOf (not a virtual OneOf field)
                        var currentField = msg[field.oneof.name]; // Virtual field references currently set field
                        if (currentField !== null && currentField !== field.name)
                            msg[currentField] = null; // Clear currently set field
                        msg[field.oneof.name] = field.name; // Point virtual field at this field
                    }
                }
            }

            // Check if all required fields are present and set default values for optional fields that are not
            for (var i=0, k=this._fields.length; i<k; ++i) {
                field = this._fields[i];
                if (msg[field.name] === null) {
                    if (this.syntax === "proto3") { // Proto3 sets default values by specification
                        msg[field.name] = field.defaultValue;
                    } else if (field.required) {
                        var err = Error("Missing at least one required field for " + this.toString(true) + ": " + field.name);
                        err["decoded"] = msg; // Still expose what we got
                        throw(err);
                    } else if (ProtoBuf.populateDefaults && field.defaultValue !== null)
                        msg[field.name] = field.defaultValue;
                }
            }
            return msg;
        };

        /**
         * @alias ProtoBuf.Reflect.Message
         * @expose
         */
        Reflect.Message = Message;

        /**
         * Constructs a new Message Field.
         * @exports ProtoBuf.Reflect.Message.Field
         * @param {!ProtoBuf.Builder} builder Builder reference
         * @param {!ProtoBuf.Reflect.Message} message Message reference
         * @param {string} rule Rule, one of requried, optional, repeated
         * @param {string?} keytype Key data type, if any.
         * @param {string} type Data type, e.g. int32
         * @param {string} name Field name
         * @param {number} id Unique field id
         * @param {Object.<string,*>=} options Options
         * @param {!ProtoBuf.Reflect.Message.OneOf=} oneof Enclosing OneOf
         * @param {string?} syntax The syntax level of this definition (e.g., proto3)
         * @constructor
         * @extends ProtoBuf.Reflect.T
         */
        var Field = function(builder, message, rule, keytype, type, name, id, options, oneof, syntax) {
            T.call(this, builder, message, name);

            /**
             * @override
             */
            this.className = "Message.Field";

            /**
             * Message field required flag.
             * @type {boolean}
             * @expose
             */
            this.required = rule === "required";

            /**
             * Message field repeated flag.
             * @type {boolean}
             * @expose
             */
            this.repeated = rule === "repeated";

            /**
             * Message field map flag.
             * @type {boolean}
             * @expose
             */
            this.map = rule === "map";

            /**
             * Message field key type. Type reference string if unresolved, protobuf
             * type if resolved. Valid only if this.map === true, null otherwise.
             * @type {string|{name: string, wireType: number}|null}
             * @expose
             */
            this.keyType = keytype || null;

            /**
             * Message field type. Type reference string if unresolved, protobuf type if
             * resolved. In a map field, this is the value type.
             * @type {string|{name: string, wireType: number}}
             * @expose
             */
            this.type = type;

            /**
             * Resolved type reference inside the global namespace.
             * @type {ProtoBuf.Reflect.T|null}
             * @expose
             */
            this.resolvedType = null;

            /**
             * Unique message field id.
             * @type {number}
             * @expose
             */
            this.id = id;

            /**
             * Message field options.
             * @type {!Object.<string,*>}
             * @dict
             * @expose
             */
            this.options = options || {};

            /**
             * Default value.
             * @type {*}
             * @expose
             */
            this.defaultValue = null;

            /**
             * Enclosing OneOf.
             * @type {?ProtoBuf.Reflect.Message.OneOf}
             * @expose
             */
            this.oneof = oneof || null;

            /**
             * Syntax level of this definition (e.g., proto3).
             * @type {string}
             * @expose
             */
            this.syntax = syntax || 'proto2';

            /**
             * Original field name.
             * @type {string}
             * @expose
             */
            this.originalName = this.name; // Used to revert camelcase transformation on naming collisions

            /**
             * Element implementation. Created in build() after types are resolved.
             * @type {ProtoBuf.Element}
             * @expose
             */
            this.element = null;

            /**
             * Key element implementation, for map fields. Created in build() after
             * types are resolved.
             * @type {ProtoBuf.Element}
             * @expose
             */
            this.keyElement = null;

            // Convert field names to camel case notation if the override is set
            if (this.builder.options['convertFieldsToCamelCase'] && !(this instanceof Message.ExtensionField))
                this.name = ProtoBuf.Util.toCamelCase(this.name);
        };

        /**
         * @alias ProtoBuf.Reflect.Message.Field.prototype
         * @inner
         */
        var FieldPrototype = Field.prototype = Object.create(T.prototype);

        /**
         * Builds the field.
         * @override
         * @expose
         */
        FieldPrototype.build = function() {
            this.element = new Element(this.type, this.resolvedType, false, this.syntax, this.name);
            if (this.map)
                this.keyElement = new Element(this.keyType, undefined, true, this.syntax, this.name);

            // In proto3, fields do not have field presence, and every field is set to
            // its type's default value ("", 0, 0.0, or false).
            if (this.syntax === 'proto3' && !this.repeated && !this.map)
                this.defaultValue = Element.defaultFieldValue(this.type);

            // Otherwise, default values are present when explicitly specified
            else if (typeof this.options['default'] !== 'undefined')
                this.defaultValue = this.verifyValue(this.options['default']);
        };

        /**
         * Checks if the given value can be set for this field.
         * @param {*} value Value to check
         * @param {boolean=} skipRepeated Whether to skip the repeated value check or not. Defaults to false.
         * @return {*} Verified, maybe adjusted, value
         * @throws {Error} If the value cannot be set for this field
         * @expose
         */
        FieldPrototype.verifyValue = function(value, skipRepeated) {
            skipRepeated = skipRepeated || false;
            var self = this;
            function fail(val, msg) {
                throw Error("Illegal value for "+self.toString(true)+" of type "+self.type.name+": "+val+" ("+msg+")");
            }
            if (value === null) { // NULL values for optional fields
                if (this.required)
                    fail(typeof value, "required");
                if (this.syntax === 'proto3' && this.type !== ProtoBuf.TYPES["message"])
                    fail(typeof value, "proto3 field without field presence cannot be null");
                return null;
            }
            var i;
            if (this.repeated && !skipRepeated) { // Repeated values as arrays
                if (!Array.isArray(value))
                    value = [value];
                var res = [];
                for (i=0; i<value.length; i++)
                    res.push(this.element.verifyValue(value[i]));
                return res;
            }
            if (this.map && !skipRepeated) { // Map values as objects
                if (!(value instanceof ProtoBuf.Map)) {
                    // If not already a Map, attempt to convert.
                    if (!(value instanceof Object)) {
                        fail(typeof value,
                             "expected ProtoBuf.Map or raw object for map field");
                    }
                    return new ProtoBuf.Map(this, value);
                } else {
                    return value;
                }
            }
            // All non-repeated fields expect no array
            if (!this.repeated && Array.isArray(value))
                fail(typeof value, "no array expected");

            return this.element.verifyValue(value);
        };

        /**
         * Determines whether the field will have a presence on the wire given its
         * value.
         * @param {*} value Verified field value
         * @param {!ProtoBuf.Builder.Message} message Runtime message
         * @return {boolean} Whether the field will be present on the wire
         */
        FieldPrototype.hasWirePresence = function(value, message) {
            if (this.syntax !== 'proto3')
                return (value !== null);
            if (this.oneof && message[this.oneof.name] === this.name)
                return true;
            switch (this.type) {
                case ProtoBuf.TYPES["int32"]:
                case ProtoBuf.TYPES["sint32"]:
                case ProtoBuf.TYPES["sfixed32"]:
                case ProtoBuf.TYPES["uint32"]:
                case ProtoBuf.TYPES["fixed32"]:
                    return value !== 0;

                case ProtoBuf.TYPES["int64"]:
                case ProtoBuf.TYPES["sint64"]:
                case ProtoBuf.TYPES["sfixed64"]:
                case ProtoBuf.TYPES["uint64"]:
                case ProtoBuf.TYPES["fixed64"]:
                    return value.low !== 0 || value.high !== 0;

                case ProtoBuf.TYPES["bool"]:
                    return value;

                case ProtoBuf.TYPES["float"]:
                case ProtoBuf.TYPES["double"]:
                    return value !== 0.0;

                case ProtoBuf.TYPES["string"]:
                    return value.length > 0;

                case ProtoBuf.TYPES["bytes"]:
                    return value.remaining() > 0;

                case ProtoBuf.TYPES["enum"]:
                    return value !== 0;

                case ProtoBuf.TYPES["message"]:
                    return value !== null;
                default:
                    return true;
            }
        };

        /**
         * Encodes the specified field value to the specified buffer.
         * @param {*} value Verified field value
         * @param {ByteBuffer} buffer ByteBuffer to encode to
         * @param {!ProtoBuf.Builder.Message} message Runtime message
         * @return {ByteBuffer} The ByteBuffer for chaining
         * @throws {Error} If the field cannot be encoded
         * @expose
         */
        FieldPrototype.encode = function(value, buffer, message) {
            if (this.type === null || typeof this.type !== 'object')
                throw Error("[INTERNAL] Unresolved type in "+this.toString(true)+": "+this.type);
            if (value === null || (this.repeated && value.length == 0))
                return buffer; // Optional omitted
            try {
                if (this.repeated) {
                    var i;
                    // "Only repeated fields of primitive numeric types (types which use the varint, 32-bit, or 64-bit wire
                    // types) can be declared 'packed'."
                    if (this.options["packed"] && ProtoBuf.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType) >= 0) {
                        // "All of the elements of the field are packed into a single key-value pair with wire type 2
                        // (length-delimited). Each element is encoded the same way it would be normally, except without a
                        // tag preceding it."
                        buffer.writeVarint32((this.id << 3) | ProtoBuf.WIRE_TYPES.LDELIM);
                        buffer.ensureCapacity(buffer.offset += 1); // We do not know the length yet, so let's assume a varint of length 1
                        var start = buffer.offset; // Remember where the contents begin
                        for (i=0; i<value.length; i++)
                            this.element.encodeValue(this.id, value[i], buffer);
                        var len = buffer.offset-start,
                            varintLen = ByteBuffer.calculateVarint32(len);
                        if (varintLen > 1) { // We need to move the contents
                            var contents = buffer.slice(start, buffer.offset);
                            start += varintLen-1;
                            buffer.offset = start;
                            buffer.append(contents);
                        }
                        buffer.writeVarint32(len, start-varintLen);
                    } else {
                        // "If your message definition has repeated elements (without the [packed=true] option), the encoded
                        // message has zero or more key-value pairs with the same tag number"
                        for (i=0; i<value.length; i++)
                            buffer.writeVarint32((this.id << 3) | this.type.wireType),
                            this.element.encodeValue(this.id, value[i], buffer);
                    }
                } else if (this.map) {
                    // Write out each map entry as a submessage.
                    value.forEach(function(val, key, m) {
                        // Compute the length of the submessage (key, val) pair.
                        var length =
                            ByteBuffer.calculateVarint32((1 << 3) | this.keyType.wireType) +
                            this.keyElement.calculateLength(1, key) +
                            ByteBuffer.calculateVarint32((2 << 3) | this.type.wireType) +
                            this.element.calculateLength(2, val);

                        // Submessage with wire type of length-delimited.
                        buffer.writeVarint32((this.id << 3) | ProtoBuf.WIRE_TYPES.LDELIM);
                        buffer.writeVarint32(length);

                        // Write out the key and val.
                        buffer.writeVarint32((1 << 3) | this.keyType.wireType);
                        this.keyElement.encodeValue(1, key, buffer);
                        buffer.writeVarint32((2 << 3) | this.type.wireType);
                        this.element.encodeValue(2, val, buffer);
                    }, this);
                } else {
                    if (this.hasWirePresence(value, message)) {
                        buffer.writeVarint32((this.id << 3) | this.type.wireType);
                        this.element.encodeValue(this.id, value, buffer);
                    }
                }
            } catch (e) {
                throw Error("Illegal value for "+this.toString(true)+": "+value+" ("+e+")");
            }
            return buffer;
        };

        /**
         * Calculates the length of this field's value on the network level.
         * @param {*} value Field value
         * @param {!ProtoBuf.Builder.Message} message Runtime message
         * @returns {number} Byte length
         * @expose
         */
        FieldPrototype.calculate = function(value, message) {
            value = this.verifyValue(value); // May throw
            if (this.type === null || typeof this.type !== 'object')
                throw Error("[INTERNAL] Unresolved type in "+this.toString(true)+": "+this.type);
            if (value === null || (this.repeated && value.length == 0))
                return 0; // Optional omitted
            var n = 0;
            try {
                if (this.repeated) {
                    var i, ni;
                    if (this.options["packed"] && ProtoBuf.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType) >= 0) {
                        n += ByteBuffer.calculateVarint32((this.id << 3) | ProtoBuf.WIRE_TYPES.LDELIM);
                        ni = 0;
                        for (i=0; i<value.length; i++)
                            ni += this.element.calculateLength(this.id, value[i]);
                        n += ByteBuffer.calculateVarint32(ni);
                        n += ni;
                    } else {
                        for (i=0; i<value.length; i++)
                            n += ByteBuffer.calculateVarint32((this.id << 3) | this.type.wireType),
                            n += this.element.calculateLength(this.id, value[i]);
                    }
                } else if (this.map) {
                    // Each map entry becomes a submessage.
                    value.forEach(function(val, key, m) {
                        // Compute the length of the submessage (key, val) pair.
                        var length =
                            ByteBuffer.calculateVarint32((1 << 3) | this.keyType.wireType) +
                            this.keyElement.calculateLength(1, key) +
                            ByteBuffer.calculateVarint32((2 << 3) | this.type.wireType) +
                            this.element.calculateLength(2, val);

                        n += ByteBuffer.calculateVarint32((this.id << 3) | ProtoBuf.WIRE_TYPES.LDELIM);
                        n += ByteBuffer.calculateVarint32(length);
                        n += length;
                    }, this);
                } else {
                    if (this.hasWirePresence(value, message)) {
                        n += ByteBuffer.calculateVarint32((this.id << 3) | this.type.wireType);
                        n += this.element.calculateLength(this.id, value);
                    }
                }
            } catch (e) {
                throw Error("Illegal value for "+this.toString(true)+": "+value+" ("+e+")");
            }
            return n;
        };

        /**
         * Decode the field value from the specified buffer.
         * @param {number} wireType Leading wire type
         * @param {ByteBuffer} buffer ByteBuffer to decode from
         * @param {boolean=} skipRepeated Whether to skip the repeated check or not. Defaults to false.
         * @return {*} Decoded value: array for packed repeated fields, [key, value] for
         *             map fields, or an individual value otherwise.
         * @throws {Error} If the field cannot be decoded
         * @expose
         */
        FieldPrototype.decode = function(wireType, buffer, skipRepeated) {
            var value, nBytes;

            // We expect wireType to match the underlying type's wireType unless we see
            // a packed repeated field, or unless this is a map field.
            var wireTypeOK =
                (!this.map && wireType == this.type.wireType) ||
                (!skipRepeated && this.repeated && this.options["packed"] &&
                 wireType == ProtoBuf.WIRE_TYPES.LDELIM) ||
                (this.map && wireType == ProtoBuf.WIRE_TYPES.LDELIM);
            if (!wireTypeOK)
                throw Error("Illegal wire type for field "+this.toString(true)+": "+wireType+" ("+this.type.wireType+" expected)");

            // Handle packed repeated fields.
            if (wireType == ProtoBuf.WIRE_TYPES.LDELIM && this.repeated && this.options["packed"] && ProtoBuf.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType) >= 0) {
                if (!skipRepeated) {
                    nBytes = buffer.readVarint32();
                    nBytes = buffer.offset + nBytes; // Limit
                    var values = [];
                    while (buffer.offset < nBytes)
                        values.push(this.decode(this.type.wireType, buffer, true));
                    return values;
                }
                // Read the next value otherwise...
            }

            // Handle maps.
            if (this.map) {
                // Read one (key, value) submessage, and return [key, value]
                var key = Element.defaultFieldValue(this.keyType);
                value = Element.defaultFieldValue(this.type);

                // Read the length
                nBytes = buffer.readVarint32();
                if (buffer.remaining() < nBytes)
                    throw Error("Illegal number of bytes for "+this.toString(true)+": "+nBytes+" required but got only "+buffer.remaining());

                // Get a sub-buffer of this key/value submessage
                var msgbuf = buffer.clone();
                msgbuf.limit = msgbuf.offset + nBytes;
                buffer.offset += nBytes;

                while (msgbuf.remaining() > 0) {
                    var tag = msgbuf.readVarint32();
                    wireType = tag & 0x07;
                    var id = tag >>> 3;
                    if (id === 1) {
                        key = this.keyElement.decode(msgbuf, wireType, id);
                    } else if (id === 2) {
                        value = this.element.decode(msgbuf, wireType, id);
                    } else {
                        throw Error("Unexpected tag in map field key/value submessage");
                    }
                }

                return [key, value];
            }

            // Handle singular and non-packed repeated field values.
            return this.element.decode(buffer, wireType, this.id);
        };

        /**
         * @alias ProtoBuf.Reflect.Message.Field
         * @expose
         */
        Reflect.Message.Field = Field;

        /**
         * Constructs a new Message ExtensionField.
         * @exports ProtoBuf.Reflect.Message.ExtensionField
         * @param {!ProtoBuf.Builder} builder Builder reference
         * @param {!ProtoBuf.Reflect.Message} message Message reference
         * @param {string} rule Rule, one of requried, optional, repeated
         * @param {string} type Data type, e.g. int32
         * @param {string} name Field name
         * @param {number} id Unique field id
         * @param {!Object.<string,*>=} options Options
         * @constructor
         * @extends ProtoBuf.Reflect.Message.Field
         */
        var ExtensionField = function(builder, message, rule, type, name, id, options) {
            Field.call(this, builder, message, rule, /* keytype = */ null, type, name, id, options);

            /**
             * Extension reference.
             * @type {!ProtoBuf.Reflect.Extension}
             * @expose
             */
            this.extension;
        };

        // Extends Field
        ExtensionField.prototype = Object.create(Field.prototype);

        /**
         * @alias ProtoBuf.Reflect.Message.ExtensionField
         * @expose
         */
        Reflect.Message.ExtensionField = ExtensionField;

        /**
         * Constructs a new Message OneOf.
         * @exports ProtoBuf.Reflect.Message.OneOf
         * @param {!ProtoBuf.Builder} builder Builder reference
         * @param {!ProtoBuf.Reflect.Message} message Message reference
         * @param {string} name OneOf name
         * @constructor
         * @extends ProtoBuf.Reflect.T
         */
        var OneOf = function(builder, message, name) {
            T.call(this, builder, message, name);

            /**
             * Enclosed fields.
             * @type {!Array.<!ProtoBuf.Reflect.Message.Field>}
             * @expose
             */
            this.fields = [];
        };

        /**
         * @alias ProtoBuf.Reflect.Message.OneOf
         * @expose
         */
        Reflect.Message.OneOf = OneOf;

        /**
         * Constructs a new Enum.
         * @exports ProtoBuf.Reflect.Enum
         * @param {!ProtoBuf.Builder} builder Builder reference
         * @param {!ProtoBuf.Reflect.T} parent Parent Reflect object
         * @param {string} name Enum name
         * @param {Object.<string,*>=} options Enum options
         * @param {string?} syntax The syntax level (e.g., proto3)
         * @constructor
         * @extends ProtoBuf.Reflect.Namespace
         */
        var Enum = function(builder, parent, name, options, syntax) {
            Namespace.call(this, builder, parent, name, options, syntax);

            /**
             * @override
             */
            this.className = "Enum";

            /**
             * Runtime enum object.
             * @type {Object.<string,number>|null}
             * @expose
             */
            this.object = null;
        };

        /**
         * Gets the string name of an enum value.
         * @param {!ProtoBuf.Builder.Enum} enm Runtime enum
         * @param {number} value Enum value
         * @returns {?string} Name or `null` if not present
         * @expose
         */
        Enum.getName = function(enm, value) {
            var keys = Object.keys(enm);
            for (var i=0, key; i<keys.length; ++i)
                if (enm[key = keys[i]] === value)
                    return key;
            return null;
        };

        /**
         * @alias ProtoBuf.Reflect.Enum.prototype
         * @inner
         */
        var EnumPrototype = Enum.prototype = Object.create(Namespace.prototype);

        /**
         * Builds this enum and returns the runtime counterpart.
         * @param {boolean} rebuild Whether to rebuild or not, defaults to false
         * @returns {!Object.<string,number>}
         * @expose
         */
        EnumPrototype.build = function(rebuild) {
            if (this.object && !rebuild)
                return this.object;
            var enm = new ProtoBuf.Builder.Enum(),
                values = this.getChildren(Enum.Value);
            for (var i=0, k=values.length; i<k; ++i)
                enm[values[i]['name']] = values[i]['id'];
            if (Object.defineProperty)
                Object.defineProperty(enm, '$options', {
                    "value": this.buildOpt(),
                    "enumerable": false
                });
            return this.object = enm;
        };

        /**
         * @alias ProtoBuf.Reflect.Enum
         * @expose
         */
        Reflect.Enum = Enum;

        /**
         * Constructs a new Enum Value.
         * @exports ProtoBuf.Reflect.Enum.Value
         * @param {!ProtoBuf.Builder} builder Builder reference
         * @param {!ProtoBuf.Reflect.Enum} enm Enum reference
         * @param {string} name Field name
         * @param {number} id Unique field id
         * @constructor
         * @extends ProtoBuf.Reflect.T
         */
        var Value = function(builder, enm, name, id) {
            T.call(this, builder, enm, name);

            /**
             * @override
             */
            this.className = "Enum.Value";

            /**
             * Unique enum value id.
             * @type {number}
             * @expose
             */
            this.id = id;
        };

        // Extends T
        Value.prototype = Object.create(T.prototype);

        /**
         * @alias ProtoBuf.Reflect.Enum.Value
         * @expose
         */
        Reflect.Enum.Value = Value;

        /**
         * An extension (field).
         * @exports ProtoBuf.Reflect.Extension
         * @constructor
         * @param {!ProtoBuf.Builder} builder Builder reference
         * @param {!ProtoBuf.Reflect.T} parent Parent object
         * @param {string} name Object name
         * @param {!ProtoBuf.Reflect.Message.Field} field Extension field
         */
        var Extension = function(builder, parent, name, field) {
            T.call(this, builder, parent, name);

            /**
             * Extended message field.
             * @type {!ProtoBuf.Reflect.Message.Field}
             * @expose
             */
            this.field = field;
        };

        // Extends T
        Extension.prototype = Object.create(T.prototype);

        /**
         * @alias ProtoBuf.Reflect.Extension
         * @expose
         */
        Reflect.Extension = Extension;

        /**
         * Constructs a new Service.
         * @exports ProtoBuf.Reflect.Service
         * @param {!ProtoBuf.Builder} builder Builder reference
         * @param {!ProtoBuf.Reflect.Namespace} root Root
         * @param {string} name Service name
         * @param {Object.<string,*>=} options Options
         * @constructor
         * @extends ProtoBuf.Reflect.Namespace
         */
        var Service = function(builder, root, name, options) {
            Namespace.call(this, builder, root, name, options);

            /**
             * @override
             */
            this.className = "Service";

            /**
             * Built runtime service class.
             * @type {?function(new:ProtoBuf.Builder.Service)}
             */
            this.clazz = null;
        };

        /**
         * @alias ProtoBuf.Reflect.Service.prototype
         * @inner
         */
        var ServicePrototype = Service.prototype = Object.create(Namespace.prototype);

        /**
         * Builds the service and returns the runtime counterpart, which is a fully functional class.
         * @see ProtoBuf.Builder.Service
         * @param {boolean=} rebuild Whether to rebuild or not
         * @return {Function} Service class
         * @throws {Error} If the message cannot be built
         * @expose
         */
        ServicePrototype.build = function(rebuild) {
            if (this.clazz && !rebuild)
                return this.clazz;

            // Create the runtime Service class in its own scope
            return this.clazz = (function(ProtoBuf, T) {

                /**
                 * Constructs a new runtime Service.
                 * @name ProtoBuf.Builder.Service
                 * @param {function(string, ProtoBuf.Builder.Message, function(Error, ProtoBuf.Builder.Message=))=} rpcImpl RPC implementation receiving the method name and the message
                 * @class Barebone of all runtime services.
                 * @constructor
                 * @throws {Error} If the service cannot be created
                 */
                var Service = function(rpcImpl) {
                    ProtoBuf.Builder.Service.call(this);

                    /**
                     * Service implementation.
                     * @name ProtoBuf.Builder.Service#rpcImpl
                     * @type {!function(string, ProtoBuf.Builder.Message, function(Error, ProtoBuf.Builder.Message=))}
                     * @expose
                     */
                    this.rpcImpl = rpcImpl || function(name, msg, callback) {
                        // This is what a user has to implement: A function receiving the method name, the actual message to
                        // send (type checked) and the callback that's either provided with the error as its first
                        // argument or null and the actual response message.
                        setTimeout(callback.bind(this, Error("Not implemented, see: https://github.com/dcodeIO/ProtoBuf.js/wiki/Services")), 0); // Must be async!
                    };
                };

                /**
                 * @alias ProtoBuf.Builder.Service.prototype
                 * @inner
                 */
                var ServicePrototype = Service.prototype = Object.create(ProtoBuf.Builder.Service.prototype);

                /**
                 * Asynchronously performs an RPC call using the given RPC implementation.
                 * @name ProtoBuf.Builder.Service.[Method]
                 * @function
                 * @param {!function(string, ProtoBuf.Builder.Message, function(Error, ProtoBuf.Builder.Message=))} rpcImpl RPC implementation
                 * @param {ProtoBuf.Builder.Message} req Request
                 * @param {function(Error, (ProtoBuf.Builder.Message|ByteBuffer|Buffer|string)=)} callback Callback receiving
                 *  the error if any and the response either as a pre-parsed message or as its raw bytes
                 * @abstract
                 */

                /**
                 * Asynchronously performs an RPC call using the instance's RPC implementation.
                 * @name ProtoBuf.Builder.Service#[Method]
                 * @function
                 * @param {ProtoBuf.Builder.Message} req Request
                 * @param {function(Error, (ProtoBuf.Builder.Message|ByteBuffer|Buffer|string)=)} callback Callback receiving
                 *  the error if any and the response either as a pre-parsed message or as its raw bytes
                 * @abstract
                 */

                var rpc = T.getChildren(ProtoBuf.Reflect.Service.RPCMethod);
                for (var i=0; i<rpc.length; i++) {
                    (function(method) {

                        // service#Method(message, callback)
                        ServicePrototype[method.name] = function(req, callback) {
                            try {
                                try {
                                    // If given as a buffer, decode the request. Will throw a TypeError if not a valid buffer.
                                    req = method.resolvedRequestType.clazz.decode(ByteBuffer.wrap(req));
                                } catch (err) {
                                    if (!(err instanceof TypeError))
                                        throw err;
                                }
                                if (req === null || typeof req !== 'object')
                                    throw Error("Illegal arguments");
                                if (!(req instanceof method.resolvedRequestType.clazz))
                                    req = new method.resolvedRequestType.clazz(req);
                                this.rpcImpl(method.fqn(), req, function(err, res) { // Assumes that this is properly async
                                    if (err) {
                                        callback(err);
                                        return;
                                    }
                                    // Coalesce to empty string when service response has empty content
                                    if (res === null)
                                        res = ''
                                    try { res = method.resolvedResponseType.clazz.decode(res); } catch (notABuffer) {}
                                    if (!res || !(res instanceof method.resolvedResponseType.clazz)) {
                                        callback(Error("Illegal response type received in service method "+ T.name+"#"+method.name));
                                        return;
                                    }
                                    callback(null, res);
                                });
                            } catch (err) {
                                setTimeout(callback.bind(this, err), 0);
                            }
                        };

                        // Service.Method(rpcImpl, message, callback)
                        Service[method.name] = function(rpcImpl, req, callback) {
                            new Service(rpcImpl)[method.name](req, callback);
                        };

                        if (Object.defineProperty)
                            Object.defineProperty(Service[method.name], "$options", { "value": method.buildOpt() }),
                            Object.defineProperty(ServicePrototype[method.name], "$options", { "value": Service[method.name]["$options"] });
                    })(rpc[i]);
                }

                // Properties

                /**
                 * Service options.
                 * @name ProtoBuf.Builder.Service.$options
                 * @type {Object.<string,*>}
                 * @expose
                 */
                var $optionsS; // cc needs this

                /**
                 * Service options.
                 * @name ProtoBuf.Builder.Service#$options
                 * @type {Object.<string,*>}
                 * @expose
                 */
                var $options;

                /**
                 * Reflection type.
                 * @name ProtoBuf.Builder.Service.$type
                 * @type {!ProtoBuf.Reflect.Service}
                 * @expose
                 */
                var $typeS;

                /**
                 * Reflection type.
                 * @name ProtoBuf.Builder.Service#$type
                 * @type {!ProtoBuf.Reflect.Service}
                 * @expose
                 */
                var $type;

                if (Object.defineProperty)
                    Object.defineProperty(Service, "$options", { "value": T.buildOpt() }),
                    Object.defineProperty(ServicePrototype, "$options", { "value": Service["$options"] }),
                    Object.defineProperty(Service, "$type", { "value": T }),
                    Object.defineProperty(ServicePrototype, "$type", { "value": T });

                return Service;

            })(ProtoBuf, this);
        };

        /**
         * @alias ProtoBuf.Reflect.Service
         * @expose
         */
        Reflect.Service = Service;

        /**
         * Abstract service method.
         * @exports ProtoBuf.Reflect.Service.Method
         * @param {!ProtoBuf.Builder} builder Builder reference
         * @param {!ProtoBuf.Reflect.Service} svc Service
         * @param {string} name Method name
         * @param {Object.<string,*>=} options Options
         * @constructor
         * @extends ProtoBuf.Reflect.T
         */
        var Method = function(builder, svc, name, options) {
            T.call(this, builder, svc, name);

            /**
             * @override
             */
            this.className = "Service.Method";

            /**
             * Options.
             * @type {Object.<string, *>}
             * @expose
             */
            this.options = options || {};
        };

        /**
         * @alias ProtoBuf.Reflect.Service.Method.prototype
         * @inner
         */
        var MethodPrototype = Method.prototype = Object.create(T.prototype);

        /**
         * Builds the method's '$options' property.
         * @name ProtoBuf.Reflect.Service.Method#buildOpt
         * @function
         * @return {Object.<string,*>}
         */
        MethodPrototype.buildOpt = NamespacePrototype.buildOpt;

        /**
         * @alias ProtoBuf.Reflect.Service.Method
         * @expose
         */
        Reflect.Service.Method = Method;

        /**
         * RPC service method.
         * @exports ProtoBuf.Reflect.Service.RPCMethod
         * @param {!ProtoBuf.Builder} builder Builder reference
         * @param {!ProtoBuf.Reflect.Service} svc Service
         * @param {string} name Method name
         * @param {string} request Request message name
         * @param {string} response Response message name
         * @param {boolean} request_stream Whether requests are streamed
         * @param {boolean} response_stream Whether responses are streamed
         * @param {Object.<string,*>=} options Options
         * @constructor
         * @extends ProtoBuf.Reflect.Service.Method
         */
        var RPCMethod = function(builder, svc, name, request, response, request_stream, response_stream, options) {
            Method.call(this, builder, svc, name, options);

            /**
             * @override
             */
            this.className = "Service.RPCMethod";

            /**
             * Request message name.
             * @type {string}
             * @expose
             */
            this.requestName = request;

            /**
             * Response message name.
             * @type {string}
             * @expose
             */
            this.responseName = response;

            /**
             * Whether requests are streamed
             * @type {bool}
             * @expose
             */
            this.requestStream = request_stream;

            /**
             * Whether responses are streamed
             * @type {bool}
             * @expose
             */
            this.responseStream = response_stream;

            /**
             * Resolved request message type.
             * @type {ProtoBuf.Reflect.Message}
             * @expose
             */
            this.resolvedRequestType = null;

            /**
             * Resolved response message type.
             * @type {ProtoBuf.Reflect.Message}
             * @expose
             */
            this.resolvedResponseType = null;
        };

        // Extends Method
        RPCMethod.prototype = Object.create(Method.prototype);

        /**
         * @alias ProtoBuf.Reflect.Service.RPCMethod
         * @expose
         */
        Reflect.Service.RPCMethod = RPCMethod;

        return Reflect;

    })(ProtoBuf);

    /**
     * @alias ProtoBuf.Builder
     * @expose
     */
    ProtoBuf.Builder = (function(ProtoBuf, Lang, Reflect) {
        "use strict";

        /**
         * Constructs a new Builder.
         * @exports ProtoBuf.Builder
         * @class Provides the functionality to build protocol messages.
         * @param {Object.<string,*>=} options Options
         * @constructor
         */
        var Builder = function(options) {

            /**
             * Namespace.
             * @type {ProtoBuf.Reflect.Namespace}
             * @expose
             */
            this.ns = new Reflect.Namespace(this, null, ""); // Global namespace

            /**
             * Namespace pointer.
             * @type {ProtoBuf.Reflect.T}
             * @expose
             */
            this.ptr = this.ns;

            /**
             * Resolved flag.
             * @type {boolean}
             * @expose
             */
            this.resolved = false;

            /**
             * The current building result.
             * @type {Object.<string,ProtoBuf.Builder.Message|Object>|null}
             * @expose
             */
            this.result = null;

            /**
             * Imported files.
             * @type {Array.<string>}
             * @expose
             */
            this.files = {};

            /**
             * Import root override.
             * @type {?string}
             * @expose
             */
            this.importRoot = null;

            /**
             * Options.
             * @type {!Object.<string, *>}
             * @expose
             */
            this.options = options || {};
        };

        /**
         * @alias ProtoBuf.Builder.prototype
         * @inner
         */
        var BuilderPrototype = Builder.prototype;

        // ----- Definition tests -----

        /**
         * Tests if a definition most likely describes a message.
         * @param {!Object} def
         * @returns {boolean}
         * @expose
         */
        Builder.isMessage = function(def) {
            // Messages require a string name
            if (typeof def["name"] !== 'string')
                return false;
            // Messages do not contain values (enum) or rpc methods (service)
            if (typeof def["values"] !== 'undefined' || typeof def["rpc"] !== 'undefined')
                return false;
            return true;
        };

        /**
         * Tests if a definition most likely describes a message field.
         * @param {!Object} def
         * @returns {boolean}
         * @expose
         */
        Builder.isMessageField = function(def) {
            // Message fields require a string rule, name and type and an id
            if (typeof def["rule"] !== 'string' || typeof def["name"] !== 'string' || typeof def["type"] !== 'string' || typeof def["id"] === 'undefined')
                return false;
            return true;
        };

        /**
         * Tests if a definition most likely describes an enum.
         * @param {!Object} def
         * @returns {boolean}
         * @expose
         */
        Builder.isEnum = function(def) {
            // Enums require a string name
            if (typeof def["name"] !== 'string')
                return false;
            // Enums require at least one value
            if (typeof def["values"] === 'undefined' || !Array.isArray(def["values"]) || def["values"].length === 0)
                return false;
            return true;
        };

        /**
         * Tests if a definition most likely describes a service.
         * @param {!Object} def
         * @returns {boolean}
         * @expose
         */
        Builder.isService = function(def) {
            // Services require a string name and an rpc object
            if (typeof def["name"] !== 'string' || typeof def["rpc"] !== 'object' || !def["rpc"])
                return false;
            return true;
        };

        /**
         * Tests if a definition most likely describes an extended message
         * @param {!Object} def
         * @returns {boolean}
         * @expose
         */
        Builder.isExtend = function(def) {
            // Extends rquire a string ref
            if (typeof def["ref"] !== 'string')
                return false;
            return true;
        };

        // ----- Building -----

        /**
         * Resets the pointer to the root namespace.
         * @returns {!ProtoBuf.Builder} this
         * @expose
         */
        BuilderPrototype.reset = function() {
            this.ptr = this.ns;
            return this;
        };

        /**
         * Defines a namespace on top of the current pointer position and places the pointer on it.
         * @param {string} namespace
         * @return {!ProtoBuf.Builder} this
         * @expose
         */
        BuilderPrototype.define = function(namespace) {
            if (typeof namespace !== 'string' || !Lang.TYPEREF.test(namespace))
                throw Error("illegal namespace: "+namespace);
            namespace.split(".").forEach(function(part) {
                var ns = this.ptr.getChild(part);
                if (ns === null) // Keep existing
                    this.ptr.addChild(ns = new Reflect.Namespace(this, this.ptr, part));
                this.ptr = ns;
            }, this);
            return this;
        };

        /**
         * Creates the specified definitions at the current pointer position.
         * @param {!Array.<!Object>} defs Messages, enums or services to create
         * @returns {!ProtoBuf.Builder} this
         * @throws {Error} If a message definition is invalid
         * @expose
         */
        BuilderPrototype.create = function(defs) {
            if (!defs)
                return this; // Nothing to create
            if (!Array.isArray(defs))
                defs = [defs];
            else {
                if (defs.length === 0)
                    return this;
                defs = defs.slice();
            }

            // It's quite hard to keep track of scopes and memory here, so let's do this iteratively.
            var stack = [defs];
            while (stack.length > 0) {
                defs = stack.pop();

                if (!Array.isArray(defs)) // Stack always contains entire namespaces
                    throw Error("not a valid namespace: "+JSON.stringify(defs));

                while (defs.length > 0) {
                    var def = defs.shift(); // Namespaces always contain an array of messages, enums and services

                    if (Builder.isMessage(def)) {
                        var obj = new Reflect.Message(this, this.ptr, def["name"], def["options"], def["isGroup"], def["syntax"]);

                        // Create OneOfs
                        var oneofs = {};
                        if (def["oneofs"])
                            Object.keys(def["oneofs"]).forEach(function(name) {
                                obj.addChild(oneofs[name] = new Reflect.Message.OneOf(this, obj, name));
                            }, this);

                        // Create fields
                        if (def["fields"])
                            def["fields"].forEach(function(fld) {
                                if (obj.getChild(fld["id"]|0) !== null)
                                    throw Error("duplicate or invalid field id in "+obj.name+": "+fld['id']);
                                if (fld["options"] && typeof fld["options"] !== 'object')
                                    throw Error("illegal field options in "+obj.name+"#"+fld["name"]);
                                var oneof = null;
                                if (typeof fld["oneof"] === 'string' && !(oneof = oneofs[fld["oneof"]]))
                                    throw Error("illegal oneof in "+obj.name+"#"+fld["name"]+": "+fld["oneof"]);
                                fld = new Reflect.Message.Field(this, obj, fld["rule"], fld["keytype"], fld["type"], fld["name"], fld["id"], fld["options"], oneof, def["syntax"]);
                                if (oneof)
                                    oneof.fields.push(fld);
                                obj.addChild(fld);
                            }, this);

                        // Push children to stack
                        var subObj = [];
                        if (def["enums"])
                            def["enums"].forEach(function(enm) {
                                subObj.push(enm);
                            });
                        if (def["messages"])
                            def["messages"].forEach(function(msg) {
                                subObj.push(msg);
                            });
                        if (def["services"])
                            def["services"].forEach(function(svc) {
                                subObj.push(svc);
                            });

                        // Set extension ranges
                        if (def["extensions"]) {
                            if (typeof def["extensions"][0] === 'number') // pre 5.0.1
                                obj.extensions = [ def["extensions"] ];
                            else
                                obj.extensions = def["extensions"];
                        }

                        // Create on top of current namespace
                        this.ptr.addChild(obj);
                        if (subObj.length > 0) {
                            stack.push(defs); // Push the current level back
                            defs = subObj; // Continue processing sub level
                            subObj = null;
                            this.ptr = obj; // And move the pointer to this namespace
                            obj = null;
                            continue;
                        }
                        subObj = null;

                    } else if (Builder.isEnum(def)) {

                        obj = new Reflect.Enum(this, this.ptr, def["name"], def["options"], def["syntax"]);
                        def["values"].forEach(function(val) {
                            obj.addChild(new Reflect.Enum.Value(this, obj, val["name"], val["id"]));
                        }, this);
                        this.ptr.addChild(obj);

                    } else if (Builder.isService(def)) {

                        obj = new Reflect.Service(this, this.ptr, def["name"], def["options"]);
                        Object.keys(def["rpc"]).forEach(function(name) {
                            var mtd = def["rpc"][name];
                            obj.addChild(new Reflect.Service.RPCMethod(this, obj, name, mtd["request"], mtd["response"], !!mtd["request_stream"], !!mtd["response_stream"], mtd["options"]));
                        }, this);
                        this.ptr.addChild(obj);

                    } else if (Builder.isExtend(def)) {

                        obj = this.ptr.resolve(def["ref"], true);
                        if (obj) {
                            def["fields"].forEach(function(fld) {
                                if (obj.getChild(fld['id']|0) !== null)
                                    throw Error("duplicate extended field id in "+obj.name+": "+fld['id']);
                                // Check if field id is allowed to be extended
                                if (obj.extensions) {
                                    var valid = false;
                                    obj.extensions.forEach(function(range) {
                                        if (fld["id"] >= range[0] && fld["id"] <= range[1])
                                            valid = true;
                                    });
                                    if (!valid)
                                        throw Error("illegal extended field id in "+obj.name+": "+fld['id']+" (not within valid ranges)");
                                }
                                // Convert extension field names to camel case notation if the override is set
                                var name = fld["name"];
                                if (this.options['convertFieldsToCamelCase'])
                                    name = ProtoBuf.Util.toCamelCase(name);
                                // see #161: Extensions use their fully qualified name as their runtime key and...
                                var field = new Reflect.Message.ExtensionField(this, obj, fld["rule"], fld["type"], this.ptr.fqn()+'.'+name, fld["id"], fld["options"]);
                                // ...are added on top of the current namespace as an extension which is used for
                                // resolving their type later on (the extension always keeps the original name to
                                // prevent naming collisions)
                                var ext = new Reflect.Extension(this, this.ptr, fld["name"], field);
                                field.extension = ext;
                                this.ptr.addChild(ext);
                                obj.addChild(field);
                            }, this);

                        } else if (!/\.?google\.protobuf\./.test(def["ref"])) // Silently skip internal extensions
                            throw Error("extended message "+def["ref"]+" is not defined");

                    } else
                        throw Error("not a valid definition: "+JSON.stringify(def));

                    def = null;
                    obj = null;
                }
                // Break goes here
                defs = null;
                this.ptr = this.ptr.parent; // Namespace done, continue at parent
            }
            this.resolved = false; // Require re-resolve
            this.result = null; // Require re-build
            return this;
        };

        /**
         * Propagates syntax to all children.
         * @param {!Object} parent
         * @inner
         */
        function propagateSyntax(parent) {
            if (parent['messages']) {
                parent['messages'].forEach(function(child) {
                    child["syntax"] = parent["syntax"];
                    propagateSyntax(child);
                });
            }
            if (parent['enums']) {
                parent['enums'].forEach(function(child) {
                    child["syntax"] = parent["syntax"];
                });
            }
        }

        /**
         * Imports another definition into this builder.
         * @param {Object.<string,*>} json Parsed import
         * @param {(string|{root: string, file: string})=} filename Imported file name
         * @returns {!ProtoBuf.Builder} this
         * @throws {Error} If the definition or file cannot be imported
         * @expose
         */
        BuilderPrototype["import"] = function(json, filename) {
            var delim = '/';

            // Make sure to skip duplicate imports

            if (typeof filename === 'string') {

                if (ProtoBuf.Util.IS_NODE)
                    filename = __webpack_require__(/*! path */ "path").resolve(filename);
                if (this.files[filename] === true)
                    return this.reset();
                this.files[filename] = true;

            } else if (typeof filename === 'object') { // Object with root, file.

                var root = filename.root;
                if (ProtoBuf.Util.IS_NODE)
                    root = __webpack_require__(/*! path */ "path").resolve(root);
                if (root.indexOf("\\") >= 0 || filename.file.indexOf("\\") >= 0)
                    delim = '\\';
                var fname;
                if (ProtoBuf.Util.IS_NODE)
                    fname = __webpack_require__(/*! path */ "path").join(root, filename.file);
                else
                    fname = root + delim + filename.file;
                if (this.files[fname] === true)
                    return this.reset();
                this.files[fname] = true;
            }

            // Import imports

            if (json['imports'] && json['imports'].length > 0) {
                var importRoot,
                    resetRoot = false;

                if (typeof filename === 'object') { // If an import root is specified, override

                    this.importRoot = filename["root"]; resetRoot = true; // ... and reset afterwards
                    importRoot = this.importRoot;
                    filename = filename["file"];
                    if (importRoot.indexOf("\\") >= 0 || filename.indexOf("\\") >= 0)
                        delim = '\\';

                } else if (typeof filename === 'string') {

                    if (this.importRoot) // If import root is overridden, use it
                        importRoot = this.importRoot;
                    else { // Otherwise compute from filename
                        if (filename.indexOf("/") >= 0) { // Unix
                            importRoot = filename.replace(/\/[^\/]*$/, "");
                            if (/* /file.proto */ importRoot === "")
                                importRoot = "/";
                        } else if (filename.indexOf("\\") >= 0) { // Windows
                            importRoot = filename.replace(/\\[^\\]*$/, "");
                            delim = '\\';
                        } else
                            importRoot = ".";
                    }

                } else
                    importRoot = null;

                for (var i=0; i<json['imports'].length; i++) {
                    if (typeof json['imports'][i] === 'string') { // Import file
                        if (!importRoot)
                            throw Error("cannot determine import root");
                        var importFilename = json['imports'][i];
                        if (importFilename === "google/protobuf/descriptor.proto")
                            continue; // Not needed and therefore not used
                        if (ProtoBuf.Util.IS_NODE)
                            importFilename = __webpack_require__(/*! path */ "path").join(importRoot, importFilename);
                        else
                            importFilename = importRoot + delim + importFilename;
                        if (this.files[importFilename] === true)
                            continue; // Already imported
                        if (/\.proto$/i.test(importFilename) && !ProtoBuf.DotProto)       // If this is a light build
                            importFilename = importFilename.replace(/\.proto$/, ".json"); // always load the JSON file
                        var contents = ProtoBuf.Util.fetch(importFilename);
                        if (contents === null)
                            throw Error("failed to import '"+importFilename+"' in '"+filename+"': file not found");
                        if (/\.json$/i.test(importFilename)) // Always possible
                            this["import"](JSON.parse(contents+""), importFilename); // May throw
                        else
                            this["import"](ProtoBuf.DotProto.Parser.parse(contents), importFilename); // May throw
                    } else // Import structure
                        if (!filename)
                            this["import"](json['imports'][i]);
                        else if (/\.(\w+)$/.test(filename)) // With extension: Append _importN to the name portion to make it unique
                            this["import"](json['imports'][i], filename.replace(/^(.+)\.(\w+)$/, function($0, $1, $2) { return $1+"_import"+i+"."+$2; }));
                        else // Without extension: Append _importN to make it unique
                            this["import"](json['imports'][i], filename+"_import"+i);
                }
                if (resetRoot) // Reset import root override when all imports are done
                    this.importRoot = null;
            }

            // Import structures

            if (json['package'])
                this.define(json['package']);
            if (json['syntax'])
                propagateSyntax(json);
            var base = this.ptr;
            if (json['options'])
                Object.keys(json['options']).forEach(function(key) {
                    base.options[key] = json['options'][key];
                });
            if (json['messages'])
                this.create(json['messages']),
                this.ptr = base;
            if (json['enums'])
                this.create(json['enums']),
                this.ptr = base;
            if (json['services'])
                this.create(json['services']),
                this.ptr = base;
            if (json['extends'])
                this.create(json['extends']);

            return this.reset();
        };

        /**
         * Resolves all namespace objects.
         * @throws {Error} If a type cannot be resolved
         * @returns {!ProtoBuf.Builder} this
         * @expose
         */
        BuilderPrototype.resolveAll = function() {
            // Resolve all reflected objects
            var res;
            if (this.ptr == null || typeof this.ptr.type === 'object')
                return this; // Done (already resolved)

            if (this.ptr instanceof Reflect.Namespace) { // Resolve children

                this.ptr.children.forEach(function(child) {
                    this.ptr = child;
                    this.resolveAll();
                }, this);

            } else if (this.ptr instanceof Reflect.Message.Field) { // Resolve type

                if (!Lang.TYPE.test(this.ptr.type)) {
                    if (!Lang.TYPEREF.test(this.ptr.type))
                        throw Error("illegal type reference in "+this.ptr.toString(true)+": "+this.ptr.type);
                    res = (this.ptr instanceof Reflect.Message.ExtensionField ? this.ptr.extension.parent : this.ptr.parent).resolve(this.ptr.type, true);
                    if (!res)
                        throw Error("unresolvable type reference in "+this.ptr.toString(true)+": "+this.ptr.type);
                    this.ptr.resolvedType = res;
                    if (res instanceof Reflect.Enum) {
                        this.ptr.type = ProtoBuf.TYPES["enum"];
                        if (this.ptr.syntax === 'proto3' && res.syntax !== 'proto3')
                            throw Error("proto3 message cannot reference proto2 enum");
                    }
                    else if (res instanceof Reflect.Message)
                        this.ptr.type = res.isGroup ? ProtoBuf.TYPES["group"] : ProtoBuf.TYPES["message"];
                    else
                        throw Error("illegal type reference in "+this.ptr.toString(true)+": "+this.ptr.type);
                } else
                    this.ptr.type = ProtoBuf.TYPES[this.ptr.type];

                // If it's a map field, also resolve the key type. The key type can be only a numeric, string, or bool type
                // (i.e., no enums or messages), so we don't need to resolve against the current namespace.
                if (this.ptr.map) {
                    if (!Lang.TYPE.test(this.ptr.keyType))
                        throw Error("illegal key type for map field in "+this.ptr.toString(true)+": "+this.ptr.keyType);
                    this.ptr.keyType = ProtoBuf.TYPES[this.ptr.keyType];
                }

                // If it's a repeated and packable field then proto3 mandates it should be packed by
                // default
                if (
                  this.ptr.syntax === 'proto3' &&
                  this.ptr.repeated && this.ptr.options.packed === undefined &&
                  ProtoBuf.PACKABLE_WIRE_TYPES.indexOf(this.ptr.type.wireType) !== -1
                ) {
                  this.ptr.options.packed = true;
                }

            } else if (this.ptr instanceof ProtoBuf.Reflect.Service.Method) {

                if (this.ptr instanceof ProtoBuf.Reflect.Service.RPCMethod) {
                    res = this.ptr.parent.resolve(this.ptr.requestName, true);
                    if (!res || !(res instanceof ProtoBuf.Reflect.Message))
                        throw Error("Illegal type reference in "+this.ptr.toString(true)+": "+this.ptr.requestName);
                    this.ptr.resolvedRequestType = res;
                    res = this.ptr.parent.resolve(this.ptr.responseName, true);
                    if (!res || !(res instanceof ProtoBuf.Reflect.Message))
                        throw Error("Illegal type reference in "+this.ptr.toString(true)+": "+this.ptr.responseName);
                    this.ptr.resolvedResponseType = res;
                } else // Should not happen as nothing else is implemented
                    throw Error("illegal service type in "+this.ptr.toString(true));

            } else if (
                !(this.ptr instanceof ProtoBuf.Reflect.Message.OneOf) && // Not built
                !(this.ptr instanceof ProtoBuf.Reflect.Extension) && // Not built
                !(this.ptr instanceof ProtoBuf.Reflect.Enum.Value) // Built in enum
            )
                throw Error("illegal object in namespace: "+typeof(this.ptr)+": "+this.ptr);

            return this.reset();
        };

        /**
         * Builds the protocol. This will first try to resolve all definitions and, if this has been successful,
         * return the built package.
         * @param {(string|Array.<string>)=} path Specifies what to return. If omitted, the entire namespace will be returned.
         * @returns {!ProtoBuf.Builder.Message|!Object.<string,*>}
         * @throws {Error} If a type could not be resolved
         * @expose
         */
        BuilderPrototype.build = function(path) {
            this.reset();
            if (!this.resolved)
                this.resolveAll(),
                this.resolved = true,
                this.result = null; // Require re-build
            if (this.result === null) // (Re-)Build
                this.result = this.ns.build();
            if (!path)
                return this.result;
            var part = typeof path === 'string' ? path.split(".") : path,
                ptr = this.result; // Build namespace pointer (no hasChild etc.)
            for (var i=0; i<part.length; i++)
                if (ptr[part[i]])
                    ptr = ptr[part[i]];
                else {
                    ptr = null;
                    break;
                }
            return ptr;
        };

        /**
         * Similar to {@link ProtoBuf.Builder#build}, but looks up the internal reflection descriptor.
         * @param {string=} path Specifies what to return. If omitted, the entire namespace wiil be returned.
         * @param {boolean=} excludeNonNamespace Excludes non-namespace types like fields, defaults to `false`
         * @returns {?ProtoBuf.Reflect.T} Reflection descriptor or `null` if not found
         */
        BuilderPrototype.lookup = function(path, excludeNonNamespace) {
            return path ? this.ns.resolve(path, excludeNonNamespace) : this.ns;
        };

        /**
         * Returns a string representation of this object.
         * @return {string} String representation as of "Builder"
         * @expose
         */
        BuilderPrototype.toString = function() {
            return "Builder";
        };

        // ----- Base classes -----
        // Exist for the sole purpose of being able to "... instanceof ProtoBuf.Builder.Message" etc.

        /**
         * @alias ProtoBuf.Builder.Message
         */
        Builder.Message = function() {};

        /**
         * @alias ProtoBuf.Builder.Enum
         */
        Builder.Enum = function() {};

        /**
         * @alias ProtoBuf.Builder.Message
         */
        Builder.Service = function() {};

        return Builder;

    })(ProtoBuf, ProtoBuf.Lang, ProtoBuf.Reflect);

    /**
     * @alias ProtoBuf.Map
     * @expose
     */
    ProtoBuf.Map = (function(ProtoBuf, Reflect) {
        "use strict";

        /**
         * Constructs a new Map. A Map is a container that is used to implement map
         * fields on message objects. It closely follows the ES6 Map API; however,
         * it is distinct because we do not want to depend on external polyfills or
         * on ES6 itself.
         *
         * @exports ProtoBuf.Map
         * @param {!ProtoBuf.Reflect.Field} field Map field
         * @param {Object.<string,*>=} contents Initial contents
         * @constructor
         */
        var Map = function(field, contents) {
            if (!field.map)
                throw Error("field is not a map");

            /**
             * The field corresponding to this map.
             * @type {!ProtoBuf.Reflect.Field}
             */
            this.field = field;

            /**
             * Element instance corresponding to key type.
             * @type {!ProtoBuf.Reflect.Element}
             */
            this.keyElem = new Reflect.Element(field.keyType, null, true, field.syntax);

            /**
             * Element instance corresponding to value type.
             * @type {!ProtoBuf.Reflect.Element}
             */
            this.valueElem = new Reflect.Element(field.type, field.resolvedType, false, field.syntax);

            /**
             * Internal map: stores mapping of (string form of key) -> (key, value)
             * pair.
             *
             * We provide map semantics for arbitrary key types, but we build on top
             * of an Object, which has only string keys. In order to avoid the need
             * to convert a string key back to its native type in many situations,
             * we store the native key value alongside the value. Thus, we only need
             * a one-way mapping from a key type to its string form that guarantees
             * uniqueness and equality (i.e., str(K1) === str(K2) if and only if K1
             * === K2).
             *
             * @type {!Object<string, {key: *, value: *}>}
             */
            this.map = {};

            /**
             * Returns the number of elements in the map.
             */
            Object.defineProperty(this, "size", {
                get: function() { return Object.keys(this.map).length; }
            });

            // Fill initial contents from a raw object.
            if (contents) {
                var keys = Object.keys(contents);
                for (var i = 0; i < keys.length; i++) {
                    var key = this.keyElem.valueFromString(keys[i]);
                    var val = this.valueElem.verifyValue(contents[keys[i]]);
                    this.map[this.keyElem.valueToString(key)] =
                        { key: key, value: val };
                }
            }
        };

        var MapPrototype = Map.prototype;

        /**
         * Helper: return an iterator over an array.
         * @param {!Array<*>} arr the array
         * @returns {!Object} an iterator
         * @inner
         */
        function arrayIterator(arr) {
            var idx = 0;
            return {
                next: function() {
                    if (idx < arr.length)
                        return { done: false, value: arr[idx++] };
                    return { done: true };
                }
            }
        }

        /**
         * Clears the map.
         */
        MapPrototype.clear = function() {
            this.map = {};
        };

        /**
         * Deletes a particular key from the map.
         * @returns {boolean} Whether any entry with this key was deleted.
         */
        MapPrototype["delete"] = function(key) {
            var keyValue = this.keyElem.valueToString(this.keyElem.verifyValue(key));
            var hadKey = keyValue in this.map;
            delete this.map[keyValue];
            return hadKey;
        };

        /**
         * Returns an iterator over [key, value] pairs in the map.
         * @returns {Object} The iterator
         */
        MapPrototype.entries = function() {
            var entries = [];
            var strKeys = Object.keys(this.map);
            for (var i = 0, entry; i < strKeys.length; i++)
                entries.push([(entry=this.map[strKeys[i]]).key, entry.value]);
            return arrayIterator(entries);
        };

        /**
         * Returns an iterator over keys in the map.
         * @returns {Object} The iterator
         */
        MapPrototype.keys = function() {
            var keys = [];
            var strKeys = Object.keys(this.map);
            for (var i = 0; i < strKeys.length; i++)
                keys.push(this.map[strKeys[i]].key);
            return arrayIterator(keys);
        };

        /**
         * Returns an iterator over values in the map.
         * @returns {!Object} The iterator
         */
        MapPrototype.values = function() {
            var values = [];
            var strKeys = Object.keys(this.map);
            for (var i = 0; i < strKeys.length; i++)
                values.push(this.map[strKeys[i]].value);
            return arrayIterator(values);
        };

        /**
         * Iterates over entries in the map, calling a function on each.
         * @param {function(this:*, *, *, *)} cb The callback to invoke with value, key, and map arguments.
         * @param {Object=} thisArg The `this` value for the callback
         */
        MapPrototype.forEach = function(cb, thisArg) {
            var strKeys = Object.keys(this.map);
            for (var i = 0, entry; i < strKeys.length; i++)
                cb.call(thisArg, (entry=this.map[strKeys[i]]).value, entry.key, this);
        };

        /**
         * Sets a key in the map to the given value.
         * @param {*} key The key
         * @param {*} value The value
         * @returns {!ProtoBuf.Map} The map instance
         */
        MapPrototype.set = function(key, value) {
            var keyValue = this.keyElem.verifyValue(key);
            var valValue = this.valueElem.verifyValue(value);
            this.map[this.keyElem.valueToString(keyValue)] =
                { key: keyValue, value: valValue };
            return this;
        };

        /**
         * Gets the value corresponding to a key in the map.
         * @param {*} key The key
         * @returns {*|undefined} The value, or `undefined` if key not present
         */
        MapPrototype.get = function(key) {
            var keyValue = this.keyElem.valueToString(this.keyElem.verifyValue(key));
            if (!(keyValue in this.map))
                return undefined;
            return this.map[keyValue].value;
        };

        /**
         * Determines whether the given key is present in the map.
         * @param {*} key The key
         * @returns {boolean} `true` if the key is present
         */
        MapPrototype.has = function(key) {
            var keyValue = this.keyElem.valueToString(this.keyElem.verifyValue(key));
            return (keyValue in this.map);
        };

        return Map;
    })(ProtoBuf, ProtoBuf.Reflect);


    /**
     * Loads a .proto string and returns the Builder.
     * @param {string} proto .proto file contents
     * @param {(ProtoBuf.Builder|string|{root: string, file: string})=} builder Builder to append to. Will create a new one if omitted.
     * @param {(string|{root: string, file: string})=} filename The corresponding file name if known. Must be specified for imports.
     * @return {ProtoBuf.Builder} Builder to create new messages
     * @throws {Error} If the definition cannot be parsed or built
     * @expose
     */
    ProtoBuf.loadProto = function(proto, builder, filename) {
        if (typeof builder === 'string' || (builder && typeof builder["file"] === 'string' && typeof builder["root"] === 'string'))
            filename = builder,
            builder = undefined;
        return ProtoBuf.loadJson(ProtoBuf.DotProto.Parser.parse(proto), builder, filename);
    };

    /**
     * Loads a .proto string and returns the Builder. This is an alias of {@link ProtoBuf.loadProto}.
     * @function
     * @param {string} proto .proto file contents
     * @param {(ProtoBuf.Builder|string)=} builder Builder to append to. Will create a new one if omitted.
     * @param {(string|{root: string, file: string})=} filename The corresponding file name if known. Must be specified for imports.
     * @return {ProtoBuf.Builder} Builder to create new messages
     * @throws {Error} If the definition cannot be parsed or built
     * @expose
     */
    ProtoBuf.protoFromString = ProtoBuf.loadProto; // Legacy

    /**
     * Loads a .proto file and returns the Builder.
     * @param {string|{root: string, file: string}} filename Path to proto file or an object specifying 'file' with
     *  an overridden 'root' path for all imported files.
     * @param {function(?Error, !ProtoBuf.Builder=)=} callback Callback that will receive `null` as the first and
     *  the Builder as its second argument on success, otherwise the error as its first argument. If omitted, the
     *  file will be read synchronously and this function will return the Builder.
     * @param {ProtoBuf.Builder=} builder Builder to append to. Will create a new one if omitted.
     * @return {?ProtoBuf.Builder|undefined} The Builder if synchronous (no callback specified, will be NULL if the
     *   request has failed), else undefined
     * @expose
     */
    ProtoBuf.loadProtoFile = function(filename, callback, builder) {
        if (callback && typeof callback === 'object')
            builder = callback,
            callback = null;
        else if (!callback || typeof callback !== 'function')
            callback = null;
        if (callback)
            return ProtoBuf.Util.fetch(typeof filename === 'string' ? filename : filename["root"]+"/"+filename["file"], function(contents) {
                if (contents === null) {
                    callback(Error("Failed to fetch file"));
                    return;
                }
                try {
                    callback(null, ProtoBuf.loadProto(contents, builder, filename));
                } catch (e) {
                    callback(e);
                }
            });
        var contents = ProtoBuf.Util.fetch(typeof filename === 'object' ? filename["root"]+"/"+filename["file"] : filename);
        return contents === null ? null : ProtoBuf.loadProto(contents, builder, filename);
    };

    /**
     * Loads a .proto file and returns the Builder. This is an alias of {@link ProtoBuf.loadProtoFile}.
     * @function
     * @param {string|{root: string, file: string}} filename Path to proto file or an object specifying 'file' with
     *  an overridden 'root' path for all imported files.
     * @param {function(?Error, !ProtoBuf.Builder=)=} callback Callback that will receive `null` as the first and
     *  the Builder as its second argument on success, otherwise the error as its first argument. If omitted, the
     *  file will be read synchronously and this function will return the Builder.
     * @param {ProtoBuf.Builder=} builder Builder to append to. Will create a new one if omitted.
     * @return {!ProtoBuf.Builder|undefined} The Builder if synchronous (no callback specified, will be NULL if the
     *   request has failed), else undefined
     * @expose
     */
    ProtoBuf.protoFromFile = ProtoBuf.loadProtoFile; // Legacy


    /**
     * Constructs a new empty Builder.
     * @param {Object.<string,*>=} options Builder options, defaults to global options set on ProtoBuf
     * @return {!ProtoBuf.Builder} Builder
     * @expose
     */
    ProtoBuf.newBuilder = function(options) {
        options = options || {};
        if (typeof options['convertFieldsToCamelCase'] === 'undefined')
            options['convertFieldsToCamelCase'] = ProtoBuf.convertFieldsToCamelCase;
        if (typeof options['populateAccessors'] === 'undefined')
            options['populateAccessors'] = ProtoBuf.populateAccessors;
        return new ProtoBuf.Builder(options);
    };

    /**
     * Loads a .json definition and returns the Builder.
     * @param {!*|string} json JSON definition
     * @param {(ProtoBuf.Builder|string|{root: string, file: string})=} builder Builder to append to. Will create a new one if omitted.
     * @param {(string|{root: string, file: string})=} filename The corresponding file name if known. Must be specified for imports.
     * @return {ProtoBuf.Builder} Builder to create new messages
     * @throws {Error} If the definition cannot be parsed or built
     * @expose
     */
    ProtoBuf.loadJson = function(json, builder, filename) {
        if (typeof builder === 'string' || (builder && typeof builder["file"] === 'string' && typeof builder["root"] === 'string'))
            filename = builder,
            builder = null;
        if (!builder || typeof builder !== 'object')
            builder = ProtoBuf.newBuilder();
        if (typeof json === 'string')
            json = JSON.parse(json);
        builder["import"](json, filename);
        builder.resolveAll();
        return builder;
    };

    /**
     * Loads a .json file and returns the Builder.
     * @param {string|!{root: string, file: string}} filename Path to json file or an object specifying 'file' with
     *  an overridden 'root' path for all imported files.
     * @param {function(?Error, !ProtoBuf.Builder=)=} callback Callback that will receive `null` as the first and
     *  the Builder as its second argument on success, otherwise the error as its first argument. If omitted, the
     *  file will be read synchronously and this function will return the Builder.
     * @param {ProtoBuf.Builder=} builder Builder to append to. Will create a new one if omitted.
     * @return {?ProtoBuf.Builder|undefined} The Builder if synchronous (no callback specified, will be NULL if the
     *   request has failed), else undefined
     * @expose
     */
    ProtoBuf.loadJsonFile = function(filename, callback, builder) {
        if (callback && typeof callback === 'object')
            builder = callback,
            callback = null;
        else if (!callback || typeof callback !== 'function')
            callback = null;
        if (callback)
            return ProtoBuf.Util.fetch(typeof filename === 'string' ? filename : filename["root"]+"/"+filename["file"], function(contents) {
                if (contents === null) {
                    callback(Error("Failed to fetch file"));
                    return;
                }
                try {
                    callback(null, ProtoBuf.loadJson(JSON.parse(contents), builder, filename));
                } catch (e) {
                    callback(e);
                }
            });
        var contents = ProtoBuf.Util.fetch(typeof filename === 'object' ? filename["root"]+"/"+filename["file"] : filename);
        return contents === null ? null : ProtoBuf.loadJson(JSON.parse(contents), builder, filename);
    };

    return ProtoBuf;
});


/***/ }),

/***/ "./node_modules/grpc/package.json":
/*!****************************************!*\
  !*** ./node_modules/grpc/package.json ***!
  \****************************************/
/*! default exports */
/*! export _args [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export 0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export 1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!     other exports [not provided] [no usage info] */
/*!   other exports [not provided] [no usage info] */
/*! export _from [provided] [no usage info] [missing usage info prevents renaming] */
/*! export _id [provided] [no usage info] [missing usage info prevents renaming] */
/*! export _inBundle [provided] [no usage info] [missing usage info prevents renaming] */
/*! export _integrity [provided] [no usage info] [missing usage info prevents renaming] */
/*! export _location [provided] [no usage info] [missing usage info prevents renaming] */
/*! export _phantomChildren [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export ascli [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export bytebuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export code-point-at [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export decamelize [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export glob [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export number-is-nan [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export os-locale [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export window-size [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export _requested [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export escapedName [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export fetchSpec [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export name [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export raw [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export rawSpec [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export registry [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export saveSpec [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export type [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export _requiredBy [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export _resolved [provided] [no usage info] [missing usage info prevents renaming] */
/*! export _spec [provided] [no usage info] [missing usage info prevents renaming] */
/*! export _where [provided] [no usage info] [missing usage info prevents renaming] */
/*! export author [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export name [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export binary [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export host [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export module_name [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export module_path [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export package_name [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export remote_path [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export bugs [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export url [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export contributors [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export email [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export name [provided] [no usage info] [missing usage info prevents renaming] */
/*!     other exports [not provided] [no usage info] */
/*!   other exports [not provided] [no usage info] */
/*! export dependencies [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @types/bytebuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export lodash.camelcase [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export lodash.clone [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export nan [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node-pre-gyp [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export protobufjs [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export description [provided] [no usage info] [missing usage info prevents renaming] */
/*! export devDependencies [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export body-parser [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export electron-mocha [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export express [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export google-protobuf [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export istanbul [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export lodash [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export minimist [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node-forge [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export poisson-process [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export directories [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export lib [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export engines [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export files [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 10 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 11 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 12 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 13 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 14 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 15 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 16 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 17 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 18 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 19 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 20 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 5 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 6 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 7 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 9 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export homepage [provided] [no usage info] [missing usage info prevents renaming] */
/*! export jshintConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export bitwise [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export curly [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export eqeqeq [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export esnext [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export freeze [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export immed [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export indent [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export latedef [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export maxlen [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export mocha [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export newcap [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export noarg [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export quotmark [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export strict [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export trailing [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export undef [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export unused [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export license [provided] [no usage info] [missing usage info prevents renaming] */
/*! export main [provided] [no usage info] [missing usage info prevents renaming] */
/*! export name [provided] [no usage info] [missing usage info prevents renaming] */
/*! export repository [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export type [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export url [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export scripts [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export build [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export coverage [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export electron-build [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export install [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export prepack [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export typings [provided] [no usage info] [missing usage info prevents renaming] */
/*! export version [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = JSON.parse("{\"_args\":[[\"grpc@1.24.3\",\"/home/amnesia/Projects/oss/mainnet-js\"]],\"_from\":\"grpc@1.24.3\",\"_id\":\"grpc@1.24.3\",\"_inBundle\":false,\"_integrity\":\"sha512-EDemzuZTfhM0hgrXqC4PtR76O3t+hTIYJYR5vgiW0yt2WJqo4mhxUqZUirzUQz34Psz7dbLp38C6Cl7Ij2vXRQ==\",\"_location\":\"/grpc\",\"_phantomChildren\":{\"ascli\":\"1.0.1\",\"bytebuffer\":\"5.0.1\",\"code-point-at\":\"1.1.0\",\"decamelize\":\"1.2.0\",\"glob\":\"7.1.6\",\"number-is-nan\":\"1.0.1\",\"os-locale\":\"1.4.0\",\"window-size\":\"0.1.4\"},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"grpc@1.24.3\",\"name\":\"grpc\",\"escapedName\":\"grpc\",\"rawSpec\":\"1.24.3\",\"saveSpec\":null,\"fetchSpec\":\"1.24.3\"},\"_requiredBy\":[\"/grpc-bchrpc-node\"],\"_resolved\":\"https://registry.npmjs.org/grpc/-/grpc-1.24.3.tgz\",\"_spec\":\"1.24.3\",\"_where\":\"/home/amnesia/Projects/oss/mainnet-js\",\"author\":{\"name\":\"Google Inc.\"},\"binary\":{\"module_name\":\"grpc_node\",\"module_path\":\"src/node/extension_binary/{node_abi}-{platform}-{arch}-{libc}\",\"host\":\"https://node-precompiled-binaries.grpc.io/\",\"remote_path\":\"{name}/v{version}\",\"package_name\":\"{node_abi}-{platform}-{arch}-{libc}.tar.gz\"},\"bugs\":{\"url\":\"https://github.com/grpc/grpc-node/issues\"},\"contributors\":[{\"name\":\"Michael Lumish\",\"email\":\"mlumish@google.com\"}],\"dependencies\":{\"@types/bytebuffer\":\"^5.0.40\",\"lodash.camelcase\":\"^4.3.0\",\"lodash.clone\":\"^4.5.0\",\"nan\":\"^2.13.2\",\"node-pre-gyp\":\"^0.15.0\",\"protobufjs\":\"^5.0.3\"},\"description\":\"gRPC Library for Node\",\"devDependencies\":{\"body-parser\":\"^1.15.2\",\"electron-mocha\":\"^3.1.1\",\"express\":\"^4.14.0\",\"google-protobuf\":\"^3.0.0\",\"istanbul\":\"^0.4.4\",\"lodash\":\"^4.17.4\",\"minimist\":\"^1.1.0\",\"node-forge\":\"^0.7.5\",\"poisson-process\":\"^0.2.1\"},\"directories\":{\"lib\":\"src\"},\"engines\":{\"node\":\">=4\"},\"files\":[\"LICENSE\",\"README.md\",\"deps/grpc/etc/\",\"index.js\",\"index.d.ts\",\"src/*.js\",\"ext/*.{cc,h}\",\"deps/grpc/include/grpc/**/*.h\",\"deps/grpc/src/core/**/*.{c,cc,h}\",\"deps/grpc/src/boringssl/err_data.c\",\"deps/grpc/third_party/abseil-cpp/absl/**/*.{h,hh,inc}\",\"deps/grpc/third_party/boringssl/crypto/**/*.{c,cc,h}\",\"deps/grpc/third_party/boringssl/include/**/*.{c,cc,h}\",\"deps/grpc/third_party/boringssl/ssl/**/*.{c,cc,h}\",\"deps/grpc/third_party/boringssl/third_party/**/*.{c,h}\",\"deps/grpc/third_party/nanopb/*.{c,cc,h}\",\"deps/grpc/third_party/upb/**/*.{c,h,inc}\",\"deps/grpc/third_party/zlib/**/*.{c,cc,h}\",\"deps/grpc/third_party/address_sorting/**/*.{c,h}\",\"deps/grpc/third_party/cares/**/*.{c,h}\",\"binding.gyp\"],\"homepage\":\"https://grpc.io/\",\"jshintConfig\":{\"bitwise\":true,\"curly\":true,\"eqeqeq\":true,\"esnext\":true,\"freeze\":true,\"immed\":true,\"indent\":2,\"latedef\":\"nofunc\",\"maxlen\":80,\"mocha\":true,\"newcap\":true,\"node\":true,\"noarg\":true,\"quotmark\":\"single\",\"strict\":true,\"trailing\":true,\"undef\":true,\"unused\":\"vars\"},\"license\":\"Apache-2.0\",\"main\":\"index.js\",\"name\":\"grpc\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/grpc/grpc-node.git\"},\"scripts\":{\"build\":\"node-pre-gyp build\",\"coverage\":\"istanbul cover ./node_modules/.bin/_mocha test\",\"electron-build\":\"node-pre-gyp configure build --runtime=electron --disturl=https://atom.io/download/atom-shell\",\"install\":\"node-pre-gyp install --fallback-to-build --library=static_library\",\"prepack\":\"git submodule update --init --recursive && npm install\"},\"typings\":\"index.d.ts\",\"version\":\"1.24.3\"}");

/***/ }),

/***/ "./node_modules/grpc/src/client.js":
/*!*****************************************!*\
  !*** ./node_modules/grpc/src/client.js ***!
  \*****************************************/
/*! default exports */
/*! export Client [provided] [no usage info] [missing usage info prevents renaming] */
/*! export InterceptingCall [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ListenerBuilder [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RequesterBuilder [provided] [no usage info] [missing usage info prevents renaming] */
/*! export StatusBuilder [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getClientChannel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getClientInterceptors [provided] [no usage info] [missing usage info prevents renaming] */
/*! export makeClientConstructor [provided] [no usage info] [missing usage info prevents renaming] */
/*! export waitForClientReady [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/**
 * @license
 * Copyright 2015 gRPC authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

/**
 * Client module
 *
 * This module contains the factory method for creating Client classes, and the
 * method calling code for all types of methods.
 *
 * @example <caption>Create a client and call a method on it</caption>
 *
 * var proto_obj = grpc.load(proto_file_path);
 * var Client = proto_obj.package.subpackage.ServiceName;
 * var client = new Client(server_address, client_credentials);
 * var call = client.unaryMethod(arguments, callback);
 */



var client_interceptors = __webpack_require__(/*! ./client_interceptors */ "./node_modules/grpc/src/client_interceptors.js");
var grpc = __webpack_require__(/*! ./grpc_extension */ "./node_modules/grpc/src/grpc_extension.js");

var common = __webpack_require__(/*! ./common */ "./node_modules/grpc/src/common.js");

var Metadata = __webpack_require__(/*! ./metadata */ "./node_modules/grpc/src/metadata.js");

var constants = __webpack_require__(/*! ./constants */ "./node_modules/grpc/src/constants.js");

var EventEmitter = __webpack_require__(/*! events */ "events").EventEmitter;

var stream = __webpack_require__(/*! stream */ "stream");

var Readable = stream.Readable;
var Writable = stream.Writable;
var Duplex = stream.Duplex;
var methodTypes = constants.methodTypes;
var util = __webpack_require__(/*! util */ "util");
var version = __webpack_require__(/*! ../package.json */ "./node_modules/grpc/package.json").version;

/**
 * Initial response metadata sent by the server when it starts processing the
 * call
 * @event grpc~ClientUnaryCall#metadata
 * @type {grpc.Metadata}
 */

/**
 * Status of the call when it has completed.
 * @event grpc~ClientUnaryCall#status
 * @type grpc~StatusObject
 */

util.inherits(ClientUnaryCall, EventEmitter);

/**
 * An EventEmitter. Used for unary calls.
 * @constructor grpc~ClientUnaryCall
 * @extends external:EventEmitter
 * @param {grpc.internal~Call} call The call object associated with the request
 */
function ClientUnaryCall(call) {
  EventEmitter.call(this);
  this.call = call;
}

util.inherits(ClientWritableStream, Writable);

/**
 * A stream that the client can write to. Used for calls that are streaming from
 * the client side.
 * @constructor grpc~ClientWritableStream
 * @extends external:Writable
 * @borrows grpc~ClientUnaryCall#cancel as grpc~ClientWritableStream#cancel
 * @borrows grpc~ClientUnaryCall#getPeer as grpc~ClientWritableStream#getPeer
 * @borrows grpc~ClientUnaryCall#event:metadata as
 *     grpc~ClientWritableStream#metadata
 * @borrows grpc~ClientUnaryCall#event:status as
 *     grpc~ClientWritableStream#status
 * @param {InterceptingCall} call Exposes gRPC request operations, processed by
 *     an interceptor stack.
 */
function ClientWritableStream(call) {
  Writable.call(this, {objectMode: true});
  this.call = call;
  var self = this;
  this.on('finish', function() {
    self.call.halfClose();
  });
}

/**
 * Write a message to the request stream. If serializing the argument fails,
 * the call will be cancelled and the stream will end with an error.
 * @name grpc~ClientWritableStream#write
 * @kind function
 * @override
 * @param {*} message The message to write. Must be a valid argument to the
 *     serialize function of the corresponding method
 * @param {grpc.writeFlags} flags Flags to modify how the message is written
 * @param {Function} callback Callback for when this chunk of data is flushed
 * @return {boolean} As defined for [Writable]{@link external:Writable}
 */

/**
 * Attempt to write the given chunk. Calls the callback when done. This is an
 * implementation of a method needed for implementing stream.Writable.
 * @private
 * @param {*} chunk The chunk to write
 * @param {grpc.writeFlags} encoding Used to pass write flags
 * @param {function(Error=)} callback Called when the write is complete
 */
function _write(chunk, encoding, callback) {
  /* jshint validthis: true */
  var self = this;
  if (this.writeFailed) {
    /* Once a write fails, just call the callback immediately to let the caller
       flush any pending writes. */
    setImmediate(callback);
    return;
  }
  var outerCallback = function(err, event) {
    if (err) {
      /* Assume that the call is complete and that writing failed because a
         status was received. In that case, set a flag to discard all future
         writes */
      self.writeFailed = true;
    }
    callback();
  };
  var context = {
    encoding: encoding,
    callback: outerCallback
  };
  this.call.sendMessageWithContext(context, chunk);
}

ClientWritableStream.prototype._write = _write;

util.inherits(ClientReadableStream, Readable);

/**
 * A stream that the client can read from. Used for calls that are streaming
 * from the server side.
 * @constructor grpc~ClientReadableStream
 * @extends external:Readable
 * @borrows grpc~ClientUnaryCall#cancel as grpc~ClientReadableStream#cancel
 * @borrows grpc~ClientUnaryCall#getPeer as grpc~ClientReadableStream#getPeer
 * @borrows grpc~ClientUnaryCall#event:metadata as
 *     grpc~ClientReadableStream#metadata
 * @borrows grpc~ClientUnaryCall#event:status as
 *     grpc~ClientReadableStream#status
 * @param {InterceptingCall} call Exposes gRPC request operations, processed by
 *     an interceptor stack.
 */
function ClientReadableStream(call) {
  Readable.call(this, {objectMode: true});
  this.call = call;
  this.finished = false;
  this.reading = false;
  /* Status generated from reading messages from the server. Overrides the
   * status from the server if not OK */
  this.read_status = null;
  /* Status received from the server. */
  this.received_status = null;
}

/**
 * Called when all messages from the server have been processed. The status
 * parameter indicates that the call should end with that status. status
 * defaults to OK if not provided.
 * @param {Object!} status The status that the call should end with
 * @private
 */
function _readsDone(status) {
  /* jshint validthis: true */
  if (!status) {
    status = {code: constants.status.OK, details: 'OK'};
  }
  if (status.code !== constants.status.OK) {
    this.call.cancelWithStatus(status.code, status.details);
  }
  this.finished = true;
  this.read_status = status;
  this._emitStatusIfDone();
}

ClientReadableStream.prototype._readsDone = _readsDone;

/**
 * Called to indicate that we have received a status from the server.
 * @private
 */
function _receiveStatus(status) {
  /* jshint validthis: true */
  this.received_status = status;
  this._emitStatusIfDone();
}

ClientReadableStream.prototype._receiveStatus = _receiveStatus;

/**
 * If we have both processed all incoming messages and received the status from
 * the server, emit the status. Otherwise, do nothing.
 * @private
 */
function _emitStatusIfDone() {
  /* jshint validthis: true */
  var status;
  if (this.read_status && this.received_status) {
    if (this.read_status.code !== constants.status.OK) {
      status = this.read_status;
    } else {
      status = this.received_status;
    }
    if (status.code === constants.status.OK) {
      this.push(null);
    } else {
      var error = common.createStatusError(status);
      this.emit('error', error);
    }
    this.emit('status', status);
  }
}

ClientReadableStream.prototype._emitStatusIfDone = _emitStatusIfDone;

/**
 * Read the next object from the stream.
 * @private
 * @param {*} size Ignored because we use objectMode=true
 */
function _read(size) {
  /* jshint validthis: true */
  if (this.finished) {
    this.push(null);
  } else {
    if (!this.reading) {
      this.reading = true;
      var context = {
        stream: this
      };
      this.call.recvMessageWithContext(context);
    }
  }
}

ClientReadableStream.prototype._read = _read;

util.inherits(ClientDuplexStream, Duplex);

/**
 * A stream that the client can read from or write to. Used for calls with
 * duplex streaming.
 * @constructor grpc~ClientDuplexStream
 * @extends external:Duplex
 * @borrows grpc~ClientUnaryCall#cancel as grpc~ClientDuplexStream#cancel
 * @borrows grpc~ClientUnaryCall#getPeer as grpc~ClientDuplexStream#getPeer
 * @borrows grpc~ClientWritableStream#write as grpc~ClientDuplexStream#write
 * @borrows grpc~ClientUnaryCall#event:metadata as
 *     grpc~ClientDuplexStream#metadata
 * @borrows grpc~ClientUnaryCall#event:status as
 *     grpc~ClientDuplexStream#status
 * @param {InterceptingCall} call Exposes gRPC request operations, processed by
 *     an interceptor stack.
 */
function ClientDuplexStream(call) {
  Duplex.call(this, {objectMode: true});
  this.call = call;
  /* Status generated from reading messages from the server. Overrides the
   * status from the server if not OK */
  this.read_status = null;
  /* Status received from the server. */
  this.received_status = null;
  var self = this;
  this.on('finish', function() {
    self.call.halfClose();
  });
}

ClientDuplexStream.prototype._readsDone = _readsDone;
ClientDuplexStream.prototype._receiveStatus = _receiveStatus;
ClientDuplexStream.prototype._emitStatusIfDone = _emitStatusIfDone;
ClientDuplexStream.prototype._read = _read;
ClientDuplexStream.prototype._write = _write;

/**
 * Cancel the ongoing call. Results in the call ending with a CANCELLED status,
 * unless it has already ended with some other status.
 * @alias grpc~ClientUnaryCall#cancel
 */
function cancel() {
  /* jshint validthis: true */
  this.call.cancel();
}

ClientUnaryCall.prototype.cancel = cancel;
ClientReadableStream.prototype.cancel = cancel;
ClientWritableStream.prototype.cancel = cancel;
ClientDuplexStream.prototype.cancel = cancel;

/**
 * Get the endpoint this call/stream is connected to.
 * @return {string} The URI of the endpoint
 * @alias grpc~ClientUnaryCall#getPeer
 */
function getPeer() {
  /* jshint validthis: true */
  return this.call.getPeer();
}

ClientUnaryCall.prototype.getPeer = getPeer;
ClientReadableStream.prototype.getPeer = getPeer;
ClientWritableStream.prototype.getPeer = getPeer;
ClientDuplexStream.prototype.getPeer = getPeer;

/**
 * Any client call type
 * @typedef {(grpc~ClientUnaryCall|grpc~ClientReadableStream|
 *            grpc~ClientWritableStream|grpc~ClientDuplexStream)}
 *     grpc.Client~Call
 */

/**
 * Options that can be set on a call.
 * @typedef {Object} grpc.Client~CallOptions
 * @property {grpc~Deadline} deadline The deadline for the entire call to
 *     complete.
 * @property {string} host Server hostname to set on the call. Only meaningful
 *     if different from the server address used to construct the client.
 * @property {grpc.Client~Call} parent Parent call. Used in servers when
 *     making a call as part of the process of handling a call. Used to
 *     propagate some information automatically, as specified by
 *     propagate_flags.
 * @property {number} propagate_flags Indicates which properties of a parent
 *     call should propagate to this call. Bitwise combination of flags in
 *     {@link grpc.propagate}.
 * @property {grpc.credentials~CallCredentials} credentials The credentials that
 *     should be used to make this particular call.
 */

/**
 * Properties of a call, for use with a {@link grpc.Client~callInvocationTransformer}.
 * @typedef {Object} grpc.Client~CallProperties
 * @property {*} argument The call argument. Only preset if the method is unary or server streaming.
 * @property {grpc.Metadata} metadata The request metadata
 * @property {grpc~Call} call The call object that will be returned by the client method
 * @property {grpc.Channel} channel The channel that will be used to make a request
 * @property {grpc~MethodDefinition} methodDefinition The MethodDefinition object that describes this method
 * @property {grpc.Client~CallOptions} options The call options passed when making this request
 * @property {grpc.Client~requestCallback} callback The callback that will handle the response.
 *     Only present if this method is unary or client streaming.
 */

/**
 * Call invocation transformer. Has access to the full call properties before a
 * call is processed and can modify most of those properties. Some modifications
 * will have no effect or may cause problems.
 * @name grpc.Client~callInvocationTransformer
 * @function
 * @param {grpc.Client~CallProperties} callProperties The original call properties
 * @return {grpc.Client~CallProperties} The modified call properties.
 */

/**
 * A function that functionally replaces the Channel constructor.
 * @name grpc.Client~channelFactory
 * @function
 * @param {string} target The address of the server to connect to
 * @param {grpc.ChannelCredentials} credentials Channel credentials to use when connecting
 * @param {grpc~ChannelOptions} options A map of channel options that will be passed to the core.
 *     The available options are listed in
 *     [this document]{@link https://grpc.github.io/grpc/core/group__grpc__arg__keys.html}.
 * @returns {grpc.Channel} This can either be an actual channel object, or an object with the
 *     same API.
 */

/**
 * A generic gRPC client. Primarily useful as a base class for generated clients
 * @memberof grpc
 * @constructor
 * @param {string} address Server address to connect to
 * @param {grpc.credentials~ChannelCredentials} credentials Credentials to use
 *     to connect to the server
 * @param {Object} options Options to apply to channel creation. Any of
 *     [the channel arguments]{@link https://grpc.github.io/grpc/core/group__grpc__arg__keys.html}
 *     can be used here in addition to specific client options.
 * @param {grpc~Interceptor[]} [options.interceptors] Interceptors to apply to each request
 * @param {grpc~InterceptorProvider[]} [options.interceptor_providers] Interceptor providers
 *     to apply interceptors to each request depending on the method definition. At most
 *     one of the interceptors and interceptor_providers options may be set.
 * @param {grpc.Client~callInvocationTransformer=} options.callInvocationTransformer
 * @param {grpc.Channel=} options.channelOverride Channel to use instead of constructing a new one.
 *     If set, the address, credentials, channel arguments options, and channelFactoryOverride
 *     option will all be ignored.
 * @param {grpc.Client~channelFactory} options.channelFactoryOverride Function to use instead of
 *     the Channel constructor when creating the Client's channel.
 */
function Client(address, credentials, options) {
  var self = this;
  if (!options) {
    options = {};
  }

  // Resolve interceptor options and assign interceptors to each method
  if (Array.isArray(options.interceptor_providers) && Array.isArray(options.interceptors)) {
    throw new client_interceptors.InterceptorConfigurationError(
      'Both interceptors and interceptor_providers were passed as options ' +
      'to the client constructor. Only one of these is allowed.');
  }
  self.$interceptors = options.interceptors || [];
  self.$interceptor_providers = options.interceptor_providers || [];
  if (self.$method_definitions) {
    Object.keys(self.$method_definitions).forEach(method_name => {
      const method_definition = self.$method_definitions[method_name];
      self[method_name].interceptors = client_interceptors
        .resolveInterceptorProviders(self.$interceptor_providers, method_definition)
        .concat(self.$interceptors);
    });
  }

  this.$callInvocationTransformer = options.callInvocationTransformer;

  let channelOverride = options.channelOverride;
  let channelFactoryOverride = options.channelFactoryOverride;
  // Exclude channel options which have already been consumed
  const ignoredKeys = [
    'interceptors', 'interceptor_providers', 'channelOverride',
    'channelFactoryOverride', 'callInvocationTransformer'
  ];
  var channel_options = Object.getOwnPropertyNames(options)
    .reduce((acc, key) => {
      if (ignoredKeys.indexOf(key) === -1) {
        acc[key] = options[key];
      }
      return acc;
    }, {});
  /* Private fields use $ as a prefix instead of _ because it is an invalid
   * prefix of a method name */
  if (channelOverride) {
    this.$channel = options.channelOverride;
  } else {
    if (channelFactoryOverride) {
      this.$channel = channelFactoryOverride(address, credentials, channel_options);
    } else {
      this.$channel = new grpc.Channel(address, credentials, channel_options);
    }
  }
}

exports.Client = Client;

Client.prototype.resolveCallInterceptors = function(method_definition, interceptors, interceptor_providers) {
  if (Array.isArray(interceptors) && Array.isArray(interceptor_providers)) {
    throw new client_interceptors.InterceptorConfigurationError(
      'Both interceptors and interceptor_providers were passed as call ' +
      'options. Only one of these is allowed.');
  }
  if (Array.isArray(interceptors) || Array.isArray(interceptor_providers)) {
    interceptors = interceptors || [];
    interceptor_providers = interceptor_providers || [];
    return client_interceptors.resolveInterceptorProviders(interceptor_providers, method_definition).concat(interceptors);
  } else {
    return client_interceptors.resolveInterceptorProviders(this.$interceptor_providers, method_definition).concat(this.$interceptors);
  }
}

/**
 * @callback grpc.Client~requestCallback
 * @param {?grpc~ServiceError} error The error, if the call
 *     failed
 * @param {*} value The response value, if the call succeeded
 */

/**
 * Make a unary request to the given method, using the given serialize
 * and deserialize functions, with the given argument.
 * @param {string} path The path of the method to request
 * @param {grpc~serialize} serialize The serialization function for
 *     inputs
 * @param {grpc~deserialize} deserialize The deserialization
 *     function for outputs
 * @param {*} argument The argument to the call. Should be serializable with
 *     serialize
 * @param {grpc.Metadata=} metadata Metadata to add to the call
 * @param {grpc.Client~CallOptions=} options Options map
 * @param {grpc.Client~requestCallback} callback The callback
 *     for when the response is received
 * @return {grpc~ClientUnaryCall} An event emitter for stream related events
 */
Client.prototype.makeUnaryRequest = function(path, serialize, deserialize,
                                             argument, metadata, options,
                                             callback) {
  if (typeof options === 'function') {
    callback = options;
    if (metadata instanceof Metadata) {
      options = {};
    } else {
      options = metadata;
      metadata = new Metadata();
    }
  } else if (typeof metadata === 'function') {
    callback = metadata;
    metadata = new Metadata();
    options = {};
  }
  if (!metadata) {
    metadata = new Metadata();
  }
  if (!options) {
    options = {};
  }
  if (!((metadata instanceof Metadata) &&
        (options instanceof Object) &&
        (typeof callback === 'function'))) {
    throw new Error('Argument mismatch in makeUnaryRequest');
  }

  var method_definition = options.method_definition = {
    path: path,
    requestStream: false,
    responseStream: false,
    requestSerialize: serialize,
    responseDeserialize: deserialize
  };

  metadata = metadata.clone();

  var callProperties = {
    argument: argument,
    metadata: metadata,
    call: new ClientUnaryCall(),
    channel: this.$channel,
    methodDefinition: method_definition,
    callOptions: options,
    callback: callback
  };

  // Transform call properties if specified.
  if (this.$callInvocationTransformer) {
    callProperties = this.$callInvocationTransformer(callProperties);
  }

  var callOptions = callProperties.callOptions;
  var methodDefinition = callProperties.methodDefinition;

  var interceptors = Client.prototype.resolveCallInterceptors.call(
    this,
    methodDefinition,
    callOptions.interceptors,
    callOptions.interceptor_providers
  );

  var intercepting_call = client_interceptors.getInterceptingCall(
    methodDefinition,
    callOptions,
    interceptors,
    callProperties.channel,
    callProperties.callback
  );

  var emitter = callProperties.call;
  emitter.call = intercepting_call;

  var last_listener = client_interceptors.getLastListener(
    methodDefinition,
    emitter,
    callProperties.callback
  );

  intercepting_call.start(callProperties.metadata, last_listener);
  intercepting_call.sendMessage(callProperties.argument);
  intercepting_call.halfClose();

  return emitter;
};

/**
 * Make a client stream request to the given method, using the given serialize
 * and deserialize functions, with the given argument.
 * @param {string} path The path of the method to request
 * @param {grpc~serialize} serialize The serialization function for
 *     inputs
 * @param {grpc~deserialize} deserialize The deserialization
 *     function for outputs
 * @param {grpc.Metadata=} metadata Array of metadata key/value pairs to add to
 *     the call
 * @param {grpc.Client~CallOptions=} options Options map
 * @param {grpc.Client~requestCallback} callback The callback for when the
 *     response is received
 * @return {grpc~ClientWritableStream} An event emitter for stream related
 *     events
 */
Client.prototype.makeClientStreamRequest = function(path, serialize,
                                                    deserialize, metadata,
                                                    options, callback) {
  if (typeof options === 'function') {
    callback = options;
    if (metadata instanceof Metadata) {
      options = {};
    } else {
      options = metadata;
      metadata = new Metadata();
    }
  } else if (typeof metadata === 'function') {
    callback = metadata;
    metadata = new Metadata();
    options = {};
  }
  if (!metadata) {
    metadata = new Metadata();
  }
  if (!options) {
    options = {};
  }
  if (!((metadata instanceof Metadata) &&
       (options instanceof Object) &&
       (typeof callback === 'function'))) {
    throw new Error('Argument mismatch in makeClientStreamRequest');
  }

  var method_definition = options.method_definition = {
    path: path,
    requestStream: true,
    responseStream: false,
    requestSerialize: serialize,
    responseDeserialize: deserialize
  };

  metadata = metadata.clone();

  var callProperties = {
    metadata: metadata,
    call: new ClientWritableStream(),
    channel: this.$channel,
    methodDefinition: method_definition,
    callOptions: options,
    callback: callback
  };

  // Transform call properties if specified.
  if (this.$callInvocationTransformer) {
    callProperties = this.$callInvocationTransformer(callProperties);
  }

  var callOptions = callProperties.callOptions;
  var methodDefinition = callProperties.methodDefinition;

  var interceptors = Client.prototype.resolveCallInterceptors.call(
    this,
    methodDefinition,
    callOptions.interceptors,
    callOptions.interceptor_providers
  );

  var intercepting_call = client_interceptors.getInterceptingCall(
    methodDefinition,
    callOptions,
    interceptors,
    callProperties.channel,
    callProperties.callback
  );

  var emitter = callProperties.call;
  emitter.call = intercepting_call;

  var last_listener = client_interceptors.getLastListener(
    methodDefinition,
    emitter,
    callProperties.callback
  );

  intercepting_call.start(callProperties.metadata, last_listener);

  return emitter;
};

/**
 * Make a server stream request to the given method, with the given serialize
 * and deserialize function, using the given argument
 * @param {string} path The path of the method to request
 * @param {grpc~serialize} serialize The serialization function for inputs
 * @param {grpc~deserialize} deserialize The deserialization
 *     function for outputs
 * @param {*} argument The argument to the call. Should be serializable with
 *     serialize
 * @param {grpc.Metadata=} metadata Array of metadata key/value pairs to add to
 *     the call
 * @param {grpc.Client~CallOptions=} options Options map
 * @return {grpc~ClientReadableStream} An event emitter for stream related
 *     events
 */
Client.prototype.makeServerStreamRequest = function(path, serialize,
                                                    deserialize, argument,
                                                    metadata, options) {
  if (!(metadata instanceof Metadata)) {
    options = metadata;
    metadata = new Metadata();
  }
  if (!(options instanceof Object)) {
    options = {};
  }
  if (!((metadata instanceof Metadata) && (options instanceof Object))) {
    throw new Error('Argument mismatch in makeServerStreamRequest');
  }

  var method_definition = options.method_definition = {
    path: path,
    requestStream: false,
    responseStream: true,
    requestSerialize: serialize,
    responseDeserialize: deserialize
  };

  metadata = metadata.clone();

  var callProperties = {
    argument: argument,
    metadata: metadata,
    call: new ClientReadableStream(),
    channel: this.$channel,
    methodDefinition: method_definition,
    callOptions: options,
  };

  // Transform call properties if specified.
  if (this.$callInvocationTransformer) {
    callProperties = this.$callInvocationTransformer(callProperties);
  }

  var callOptions = callProperties.callOptions;
  var methodDefinition = callProperties.methodDefinition;

  var interceptors = Client.prototype.resolveCallInterceptors.call(
    this,
    methodDefinition,
    callOptions.interceptors,
    callOptions.interceptor_providers
  );

  var emitter = callProperties.call;
  var intercepting_call = client_interceptors.getInterceptingCall(
    methodDefinition,
    callOptions,
    interceptors,
    callProperties.channel,
    emitter
  );
  emitter.call = intercepting_call;
  var last_listener = client_interceptors.getLastListener(
    methodDefinition,
    emitter
  );

  intercepting_call.start(callProperties.metadata, last_listener);
  intercepting_call.sendMessage(callProperties.argument);
  intercepting_call.halfClose();

  return emitter;
};

/**
 * Make a bidirectional stream request with this method on the given channel.
 * @param {string} path The path of the method to request
 * @param {grpc~serialize} serialize The serialization function for inputs
 * @param {grpc~deserialize} deserialize The deserialization
 *     function for outputs
 * @param {grpc.Metadata=} metadata Array of metadata key/value
 *     pairs to add to the call
 * @param {grpc.Client~CallOptions=} options Options map
 * @return {grpc~ClientDuplexStream} An event emitter for stream related events
 */
Client.prototype.makeBidiStreamRequest = function(path, serialize,
                                                  deserialize, metadata,
                                                  options) {
  if (!(metadata instanceof Metadata)) {
    options = metadata;
    metadata = new Metadata();
  }
  if (!(options instanceof Object)) {
    options = {};
  }
  if (!((metadata instanceof Metadata) && (options instanceof Object))) {
    throw new Error('Argument mismatch in makeBidiStreamRequest');
  }

  var method_definition = options.method_definition = {
    path: path,
    requestStream: true,
    responseStream: true,
    requestSerialize: serialize,
    responseDeserialize: deserialize
  };

  metadata = metadata.clone();

  var callProperties = {
    metadata: metadata,
    call: new ClientDuplexStream(),
    channel: this.$channel,
    methodDefinition: method_definition,
    callOptions: options,
  };

  // Transform call properties if specified.
  if (this.$callInvocationTransformer) {
    callProperties = this.$callInvocationTransformer(callProperties);
  }

  var callOptions = callProperties.callOptions;
  var methodDefinition = callProperties.methodDefinition;

  var interceptors = Client.prototype.resolveCallInterceptors.call(
    this,
    methodDefinition,
    callOptions.interceptors,
    callOptions.interceptor_providers
  );


  var emitter = callProperties.call;
  var intercepting_call = client_interceptors.getInterceptingCall(
    methodDefinition,
    callOptions,
    interceptors,
    callProperties.channel,
    emitter
  );
  emitter.call = intercepting_call;
  var last_listener = client_interceptors.getLastListener(
    methodDefinition,
    emitter
  );

  intercepting_call.start(callProperties.metadata, last_listener);

  return emitter;
};

/**
 * Close this client.
 */
Client.prototype.close = function() {
  this.$channel.close();
};

/**
 * Return the underlying channel object for the specified client
 * @return {Channel} The channel
 */
Client.prototype.getChannel = function() {
  return this.$channel;
};

/**
 * Wait for the client to be ready. The callback will be called when the
 * client has successfully connected to the server, and it will be called
 * with an error if the attempt to connect to the server has unrecoverablly
 * failed or if the deadline expires. This function will make the channel
 * start connecting if it has not already done so.
 * @param {grpc~Deadline} deadline When to stop waiting for a connection.
 * @param {function(Error)} callback The callback to call when done attempting
 *     to connect.
 */
Client.prototype.waitForReady = function(deadline, callback) {
  var self = this;
  var checkState = function(err) {
    if (err) {
      callback(new Error('Failed to connect before the deadline'));
      return;
    }
    var new_state;
    try {
      new_state = self.$channel.getConnectivityState(true);
    } catch (e) {
      callback(new Error('The channel has been closed'));
      return;
    }
    if (new_state === grpc.connectivityState.READY) {
      callback();
    } else if (new_state === grpc.connectivityState.FATAL_FAILURE) {
      callback(new Error('Failed to connect to server'));
    } else {
      try {
        self.$channel.watchConnectivityState(new_state, deadline, checkState);
      } catch (e) {
        callback(new Error('The channel has been closed'));
      }
    }
  };
  /* Force a single round of polling to ensure that the channel state is up
   * to date */
  grpc.forcePoll();
  setImmediate(checkState);
};

/**
 * Map with short names for each of the requester maker functions. Used in
 * makeClientConstructor
 * @private
 */
var requester_funcs = {
  [methodTypes.UNARY]: Client.prototype.makeUnaryRequest,
  [methodTypes.CLIENT_STREAMING]: Client.prototype.makeClientStreamRequest,
  [methodTypes.SERVER_STREAMING]: Client.prototype.makeServerStreamRequest,
  [methodTypes.BIDI_STREAMING]: Client.prototype.makeBidiStreamRequest
};

function getDefaultValues(metadata, options) {
  var res = {};
  res.metadata = metadata || new Metadata();
  res.options = options || {};
  return res;
}

/**
 * Map with wrappers for each type of requester function to make it use the old
 * argument order with optional arguments after the callback.
 * @access private
 */
var deprecated_request_wrap = {
  [methodTypes.UNARY]: function(makeUnaryRequest) {
    return function makeWrappedUnaryRequest(argument, callback,
                                            metadata, options) {
      /* jshint validthis: true */
      var opt_args = getDefaultValues(metadata, options);
      return makeUnaryRequest.call(this, argument, opt_args.metadata,
                                   opt_args.options, callback);
    };
  },
  [methodTypes.CLIENT_STREAMING]: function(makeServerStreamRequest) {
    return function makeWrappedClientStreamRequest(callback, metadata,
                                                   options) {
      /* jshint validthis: true */
      var opt_args = getDefaultValues(metadata, options);
      return makeServerStreamRequest.call(this, opt_args.metadata,
                                          opt_args.options, callback);
    };
  },
  [methodTypes.SERVER_STREAMING]: x => x,
  [methodTypes.BIDI_STREAMING]: x => x
};

/**
 * Creates a constructor for a client with the given methods, as specified in
 * the methods argument. The resulting class will have an instance method for
 * each method in the service, which is a partial application of one of the
 * [Client]{@link grpc.Client} request methods, depending on `requestSerialize`
 * and `responseSerialize`, with the `method`, `serialize`, and `deserialize`
 * arguments predefined.
 * @memberof grpc
 * @alias grpc~makeGenericClientConstructor
 * @param {grpc~ServiceDefinition} methods An object mapping method names to
 *     method attributes
 * @param {string} serviceName The fully qualified name of the service
 * @param {Object} class_options An options object.
 * @param {boolean=} [class_options.deprecatedArgumentOrder=false] Indicates
 *     that the old argument order should be used for methods, with optional
 *     arguments at the end instead of the callback at the end. This option
 *     is only a temporary stopgap measure to smooth an API breakage.
 *     It is deprecated, and new code should not use it.
 * @return {function} New client constructor, which is a subclass of
 *     {@link grpc.Client}, and has the same arguments as that constructor.
 */
exports.makeClientConstructor = function(methods, serviceName,
                                         class_options) {
  if (!class_options) {
    class_options = {};
  }

  function ServiceClient(address, credentials, options) {
    Client.call(this, address, credentials, options);
  }

  util.inherits(ServiceClient, Client);
  ServiceClient.prototype.$method_definitions = methods;
  ServiceClient.prototype.$method_names = {};

  Object.keys(methods).forEach(name => {
    const attrs = methods[name];
    if (name.indexOf('$') === 0) {
      throw new Error('Method names cannot start with $');
    }
    var method_type = common.getMethodType(attrs);
    var method_func = function() {
      return requester_funcs[method_type].apply(this,
        [ attrs.path, attrs.requestSerialize, attrs.responseDeserialize ]
        .concat([].slice.call(arguments))
      );
    };
    if (class_options.deprecatedArgumentOrder) {
      ServiceClient.prototype[name] =
        deprecated_request_wrap[method_type](method_func);
    } else {
      ServiceClient.prototype[name] = method_func;
    }
    ServiceClient.prototype.$method_names[attrs.path] = name;
    // Associate all provided attributes with the method
    Object.assign(ServiceClient.prototype[name], attrs);
    if (attrs.originalName) {
      ServiceClient.prototype[attrs.originalName] =
        ServiceClient.prototype[name];
    }
  });

  ServiceClient.service = methods;

  return ServiceClient;
};

/**
 * Return the underlying channel object for the specified client
 * @memberof grpc
 * @alias grpc~getClientChannel
 * @param {grpc.Client} client The client
 * @return {Channel} The channel
 * @see grpc.Client#getChannel
 */
exports.getClientChannel = function(client) {
  return Client.prototype.getChannel.call(client);
};

/**
 * Gets a map of client method names to interceptor stacks.
 * @param {grpc.Client} client
 * @returns {Object.<string, Interceptor[]>}
 */
exports.getClientInterceptors = function(client) {
  return Object.keys(client.$method_definitions)
    .reduce((acc, key) => {
      if (typeof key === 'string') {
        acc[key] = client[key].interceptors;
      }
      return acc;
    }, {});
};

/**
 * Wait for the client to be ready. The callback will be called when the
 * client has successfully connected to the server, and it will be called
 * with an error if the attempt to connect to the server has unrecoverablly
 * failed or if the deadline expires. This function will make the channel
 * start connecting if it has not already done so.
 * @memberof grpc
 * @alias grpc~waitForClientReady
 * @param {grpc.Client} client The client to wait on
 * @param {grpc~Deadline} deadline When to stop waiting for a connection. Pass
 *     Infinity to wait forever.
 * @param {function(Error)} callback The callback to call when done attempting
 *     to connect.
 * @see grpc.Client#waitForReady
 */
exports.waitForClientReady = function(client, deadline, callback) {
  Client.prototype.waitForReady.call(client, deadline, callback);
};

exports.StatusBuilder = client_interceptors.StatusBuilder;
exports.ListenerBuilder = client_interceptors.ListenerBuilder;
exports.RequesterBuilder = client_interceptors.RequesterBuilder;
exports.InterceptingCall = client_interceptors.InterceptingCall;


/***/ }),

/***/ "./node_modules/grpc/src/client_interceptors.js":
/*!******************************************************!*\
  !*** ./node_modules/grpc/src/client_interceptors.js ***!
  \******************************************************/
/*! default exports */
/*! export InterceptingCall [provided] [no usage info] [missing usage info prevents renaming] */
/*! export InterceptorConfigurationError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ListenerBuilder [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RequesterBuilder [provided] [no usage info] [missing usage info prevents renaming] */
/*! export StatusBuilder [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getInterceptingCall [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getLastListener [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resolveInterceptorProviders [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/**
 * @license
 * Copyright 2018 gRPC authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

/**
 * Client Interceptors
 *
 * This module describes the interceptor framework for clients.
 * An interceptor is a function which takes an options object and a nextCall
 * function and returns an InterceptingCall:
 *
 * ```
 * var interceptor = function(options, nextCall) {
 *   return new InterceptingCall(nextCall(options));
 * }
 * ```
 *
 * The interceptor function must return an InterceptingCall object. Returning
 * `new InterceptingCall(nextCall(options))` will satisfy the contract (but
 * provide no interceptor functionality). `nextCall` is a function which will
 * generate the next interceptor in the chain.
 *
 * To implement interceptor functionality, create a requester and pass it to
 * the InterceptingCall constructor:
 *
 * `return new InterceptingCall(nextCall(options), requester);`
 *
 * A requester is a POJO with zero or more of the following methods:
 *
 * `start(metadata, listener, next)`
 * * To continue, call next(metadata, listener). Listeners are described
 * * below.
 *
 * `sendMessage(message, next)`
 * * To continue, call next(message).
 *
 * `halfClose(next)`
 * * To continue, call next().
 *
 * `cancel(message, next)`
 * * To continue, call next().
 *
 * A listener is a POJO with one or more of the following methods:
 *
 * `onReceiveMetadata(metadata, next)`
 * * To continue, call next(metadata)
 *
 * `onReceiveMessage(message, next)`
 * * To continue, call next(message)
 *
 * `onReceiveStatus(status, next)`
 * * To continue, call next(status)
 *
 * A listener is provided by the requester's `start` method. The provided
 * listener implements all the inbound interceptor methods, which can be called
 * to short-circuit the gRPC call.
 *
 * Three usage patterns are supported for listeners:
 * 1) Pass the listener along without modification: `next(metadata, listener)`.
 *   In this case the interceptor declines to intercept any inbound operations.
 * 2) Create a new listener with one or more inbound interceptor methods and
 *   pass it to `next`. In this case the interceptor will fire on the inbound
 *   operations implemented in the new listener.
 * 3) Make direct inbound calls to the provided listener's methods. This
 *   short-circuits the interceptor stack.
 *
 * Do not modify the listener passed in. Either pass it along unmodified,
 * ignore it, or call methods on it to short-circuit the call.
 *
 * To intercept errors, implement the `onReceiveStatus` method and test for
 * `status.code !== grpc.status.OK`.
 *
 * To intercept trailers, examine `status.metadata` in the `onReceiveStatus`
 * method.
 *
 * This is a trivial implementation of all interceptor methods:
 * var interceptor = function(options, nextCall) {
 *   return new InterceptingCall(nextCall(options), {
 *     start: function(metadata, listener, next) {
 *       next(metadata, {
 *         onReceiveMetadata: function (metadata, next) {
 *           next(metadata);
 *         },
 *         onReceiveMessage: function (message, next) {
 *           next(message);
 *         },
 *         onReceiveStatus: function (status, next) {
 *           next(status);
 *         },
 *       });
 *     },
 *     sendMessage: function(message, next) {
 *       next(message);
 *     },
 *     halfClose: function(next) {
 *       next();
 *     },
 *     cancel: function(message, next) {
 *       next();
 *     }
 *   });
 * };
 *
 * This is an interceptor with a single method:
 * var interceptor = function(options, nextCall) {
 *   return new InterceptingCall(nextCall(options), {
 *     sendMessage: function(message, next) {
 *       next(message);
 *     }
 *   });
 * };
 *
 * Builders are provided for convenience: StatusBuilder, ListenerBuilder,
 * and RequesterBuilder
 *
 * gRPC client operations use this mapping to interceptor methods:
 *
 * grpc.opType.SEND_INITIAL_METADATA -> start
 * grpc.opType.SEND_MESSAGE -> sendMessage
 * grpc.opType.SEND_CLOSE_FROM_CLIENT -> halfClose
 * grpc.opType.RECV_INITIAL_METADATA -> onReceiveMetadata
 * grpc.opType.RECV_MESSAGE -> onReceiveMessage
 * grpc.opType.RECV_STATUS_ON_CLIENT -> onReceiveStatus
 *
 * @module
 */



var grpc = __webpack_require__(/*! ./grpc_extension */ "./node_modules/grpc/src/grpc_extension.js");
var Metadata = __webpack_require__(/*! ./metadata */ "./node_modules/grpc/src/metadata.js");
var constants = __webpack_require__(/*! ./constants */ "./node_modules/grpc/src/constants.js");
var common = __webpack_require__(/*! ./common */ "./node_modules/grpc/src/common.js");
var methodTypes = constants.methodTypes;
var EventEmitter = __webpack_require__(/*! events */ "events").EventEmitter;

/**
 * A custom error thrown when interceptor configuration fails.
 * @param {string} message The error message
 * @param {object=} extra
 * @constructor
 */
var InterceptorConfigurationError =
  function InterceptorConfigurationError(message, extra) {
    Error.captureStackTrace(this, this.constructor);
    this.name = this.constructor.name;
    this.message = message;
    this.extra = extra;
  };

__webpack_require__(/*! util */ "util").inherits(InterceptorConfigurationError, Error);

/**
 * A builder for gRPC status objects.
 * @constructor
 */
function StatusBuilder() {
  this.code = null;
  this.details = null;
  this.metadata = null;
}

/**
 * Adds a status code to the builder.
 * @param {number} code The status code.
 * @return {StatusBuilder}
 */
StatusBuilder.prototype.withCode = function(code) {
  this.code = code;
  return this;
};

/**
 * Adds details to the builder.
 * @param {string} details A status message.
 * @return {StatusBuilder}
 */
StatusBuilder.prototype.withDetails = function(details) {
  this.details = details;
  return this;
};

/**
 * Adds metadata to the builder.
 * @param {Metadata} metadata The gRPC status metadata.
 * @return {StatusBuilder}
 */
StatusBuilder.prototype.withMetadata = function(metadata) {
  this.metadata = metadata;
  return this;
};

/**
 * Builds the status object.
 * @return {grpc~StatusObject} A gRPC status.
 */
StatusBuilder.prototype.build = function() {
  var status = {};
  if (this.code !== undefined) {
    status.code = this.code;
  }
  if (this.details) {
    status.details = this.details;
  }
  if (this.metadata) {
    status.metadata = this.metadata;
  }
  return status;
};

/**
 * A builder for listener interceptors.
 * @constructor
 */
function ListenerBuilder() {
  this.metadata = null;
  this.message = null;
  this.status = null;
}

/**
 * Adds an onReceiveMetadata method to the builder.
 * @param {MetadataListener} on_receive_metadata A listener method for
 * receiving metadata.
 * @return {ListenerBuilder}
 */
ListenerBuilder.prototype.withOnReceiveMetadata =
  function(on_receive_metadata) {
    this.metadata = on_receive_metadata;
    return this;
  };

/**
 * Adds an onReceiveMessage method to the builder.
 * @param {MessageListener} on_receive_message A listener method for receiving
 * messages.
 * @return {ListenerBuilder}
 */
ListenerBuilder.prototype.withOnReceiveMessage = function(on_receive_message) {
  this.message = on_receive_message;
  return this;
};

/**
 * Adds an onReceiveStatus method to the builder.
 * @param {StatusListener} on_receive_status A listener method for receiving
 * status.
 * @return {ListenerBuilder}
 */
ListenerBuilder.prototype.withOnReceiveStatus = function(on_receive_status) {
  this.status = on_receive_status;
  return this;
};

/**
 * Builds the call listener.
 * @return {grpc~Listener}
 */
ListenerBuilder.prototype.build = function() {
  var self = this;
  var listener = {};
  listener.onReceiveMetadata = self.metadata;
  listener.onReceiveMessage = self.message;
  listener.onReceiveStatus = self.status;
  return listener;
};

/**
 * A builder for the outbound methods of an interceptor.
 * @constructor
 */
function RequesterBuilder() {
  this.start = null;
  this.message = null;
  this.half_close = null;
  this.cancel = null;
}

/**
 * Add a metadata requester to the builder.
 * @param {MetadataRequester} start A requester method for handling metadata.
 * @return {RequesterBuilder}
 */
RequesterBuilder.prototype.withStart = function(start) {
  this.start = start;
  return this;
};

/**
 * Add a message requester to the builder.
 * @param {MessageRequester} send_message A requester method for handling
 * messages.
 * @return {RequesterBuilder}
 */
RequesterBuilder.prototype.withSendMessage = function(send_message) {
  this.message = send_message;
  return this;
};

/**
 * Add a close requester to the builder.
 * @param {CloseRequester} half_close A requester method for handling client
 * close.
 * @return {RequesterBuilder}
 */
RequesterBuilder.prototype.withHalfClose = function(half_close) {
  this.half_close = half_close;
  return this;
};

/**
 * Add a cancel requester to the builder.
 * @param {CancelRequester} cancel A requester method for handling `cancel`
 * @return {RequesterBuilder}
 */
RequesterBuilder.prototype.withCancel = function(cancel) {
  this.cancel = cancel;
  return this;
};

/**
 * Builds the requester's interceptor methods.
 * @return {grpc~Requester}
 */
RequesterBuilder.prototype.build = function() {
  var requester = {};
  requester.start = this.start;
  requester.sendMessage = this.message;
  requester.halfClose = this.half_close;
  requester.cancel = this.cancel;
  return requester;
};

/**
 * Transforms a list of interceptor providers into interceptors.
 * @param {InterceptorProvider[]} providers
 * @param {grpc~MethodDefinition} method_definition
 * @return {null|Interceptor[]}
 */
var resolveInterceptorProviders = function(providers, method_definition) {
  if (!Array.isArray(providers)) {
    return null;
  }
  var interceptors = [];
  for (var i = 0; i < providers.length; i++) {
    var provider = providers[i];
    var interceptor = provider(method_definition);
    if (interceptor) {
      interceptors.push(interceptor);
    }
  }
  return interceptors;
};

/**
 * A chainable gRPC call proxy which will delegate to an optional requester
 * object. By default, interceptor methods will chain to next_call. If a
 * requester is provided which implements an interceptor method, that
 * requester method will be executed as part of the chain.
 * @param {InterceptingCall|null} next_call The next call in the chain
 * @param {grpc~Requester=} requester Interceptor methods to handle request
 * operations.
 * @constructor
 */
function InterceptingCall(next_call, requester) {
  this.next_call = next_call;
  this.requester = requester;
}

const emptyNext = function() {};

/**
 * Get the next method in the chain or a no-op function if we are at the end
 * of the chain
 * @param {string} method_name
 * @return {function} The next method in the chain
 * @private
 */
InterceptingCall.prototype._getNextCall = function(method_name) {
  return this.next_call ?
    this.next_call[method_name].bind(this.next_call) :
    emptyNext;
};

/**
 * Call the next method in the chain. This will either be on the next
 * InterceptingCall (next_call), or the requester if the requester
 * implements the method.
 * @param {string} method_name The name of the interceptor method
 * @param {array=} args Payload arguments for the operation
 * @param {function=} next The next InterceptingCall's method
 * @return {null}
 * @private
 */
InterceptingCall.prototype._callNext = function(method_name, args, next) {
  var args_array = args || [];
  var next_call = next ? next : this._getNextCall(method_name);
  if (this.requester && this.requester[method_name]) {
    // Avoid using expensive `apply` calls
    var num_args = args_array.length;
    switch (num_args) {
      case 0:
        return this.requester[method_name](next_call);
      case 1:
        return this.requester[method_name](args_array[0], next_call);
      case 2:
        return this.requester[method_name](args_array[0], args_array[1],
                                           next_call);
    }
  } else {
    if (next_call === emptyNext) {
      throw new Error('Interceptor call chain terminated unexpectedly');
    }
    return next_call(args_array[0], args_array[1]);
  }
};

/**
 * Starts a call through the outbound interceptor chain and adds an element to
 * the reciprocal inbound listener chain.
 * @param {grpc.Metadata} metadata The outgoing metadata.
 * @param {grpc~Listener} listener An intercepting listener for inbound
 * operations.
 */
InterceptingCall.prototype.start = function(metadata, listener) {
  var self = this;

  // If the listener provided is an InterceptingListener, use it. Otherwise, we
  // must be at the end of the listener chain, and any listener operations
  // should be terminated in an EndListener.
  var next_listener = _getInterceptingListener(listener, new EndListener());

  // Build the next method in the interceptor chain
  var next = function(metadata, current_listener) {
    // If there is a next call in the chain, run it. Otherwise do nothing.
    if (self.next_call) {
      // Wire together any listener provided with the next listener
      var listener = _getInterceptingListener(current_listener, next_listener);
      self.next_call.start(metadata, listener);
    }
  };
  this._callNext('start', [metadata, next_listener], next);
};

/**
 * Pass a message through the interceptor chain.
 * @param {jspb.Message} message
 */
InterceptingCall.prototype.sendMessage = function(message) {
  this._callNext('sendMessage', [message]);
};

/**
 * Run a close operation through the interceptor chain
 */
InterceptingCall.prototype.halfClose = function() {
  this._callNext('halfClose');
};

/**
 * Run a cancel operation through the interceptor chain
 */
InterceptingCall.prototype.cancel = function() {
  this._callNext('cancel');
};

/**
 * Run a cancelWithStatus operation through the interceptor chain.
 * @param {number} code
 * @param {string} details
 */
InterceptingCall.prototype.cancelWithStatus = function(code, details) {
  this._callNext('cancelWithStatus', [code, details]);
};

/**
 * Pass a getPeer call down to the base gRPC call (should not be intercepted)
 * @return {object}
 */
InterceptingCall.prototype.getPeer = function() {
  return this._callNext('getPeer');
};

/**
 * For streaming calls, we need to transparently pass the stream's context
 * through the interceptor chain. Passes the context between InterceptingCalls
 * but hides it from any requester implementations.
 * @param {object} context Carries objects needed for streaming operations.
 * @param {jspb.Message} message The message to send.
 */
InterceptingCall.prototype.sendMessageWithContext = function(context, message) {
  var next = this.next_call ?
    this.next_call.sendMessageWithContext.bind(this.next_call, context) :
    context;
  this._callNext('sendMessage', [message], next);
};

/**
 * For receiving streaming messages, we need to seed the base interceptor with
 * the streaming context to create a RECV_MESSAGE batch.
 * @param {object} context Carries objects needed for streaming operations
 */
InterceptingCall.prototype.recvMessageWithContext = function(context) {
  this._callNext('recvMessageWithContext', [context]);
};

/**
 * A chain-able listener object which will delegate to a custom listener when
 * appropriate.
 * @param {InterceptingListener|null} next_listener The next
 * InterceptingListener in the chain
 * @param {grpc~Listener=} delegate A custom listener object which may implement
 * specific operations
 * @constructor
 */
function InterceptingListener(next_listener, delegate) {
  this.delegate = delegate || {};
  this.next_listener = next_listener;
}

/**
 * Get the next method in the chain or a no-op function if we are at the end
 * of the chain.
 * @param {string} method_name The name of the listener method.
 * @return {function} The next method in the chain
 * @private
 */
InterceptingListener.prototype._getNextListener = function(method_name) {
  return this.next_listener ?
    this.next_listener[method_name].bind(this.next_listener) :
    function(){};
};

/**
 * Call the next method in the chain. This will either be on the next
 * InterceptingListener (next_listener), or the requester if the requester
 * implements the method.
 * @param {string} method_name The name of the interceptor method
 * @param {array=} args Payload arguments for the operation
 * @param {function=} next The next InterceptingListener's method
 * @return {null}
 * @private
 */
InterceptingListener.prototype._callNext = function(method_name, args, next) {
  var args_array = args || [];
  var next_listener = next ? next : this._getNextListener(method_name);
  if (this.delegate && this.delegate[method_name]) {
    // Avoid using expensive `apply` calls
    var num_args = args_array.length;
    switch (num_args) {
      case 0:
        return this.delegate[method_name](next_listener);
      case 1:
        return this.delegate[method_name](args_array[0], next_listener);
      case 2:
        return this.delegate[method_name](args_array[0], args_array[1],
                                          next_listener);
    }
  } else {
    return next_listener(args_array[0], args_array[1]);
  }
};
/**
 * Inbound metadata receiver.
 * @param {Metadata} metadata
 */
InterceptingListener.prototype.onReceiveMetadata = function(metadata) {
  this._callNext('onReceiveMetadata', [metadata]);
};

/**
 * Inbound message receiver.
 * @param {jspb.Message} message
 */
InterceptingListener.prototype.onReceiveMessage = function(message) {
  this._callNext('onReceiveMessage', [message]);
};

/**
 * When intercepting streaming message, we need to pass the streaming context
 * transparently along the chain. Hides the context from the delegate listener
 * methods.
 * @param {object} context Carries objects needed for streaming operations.
 * @param {jspb.Message} message The message received.
 */
InterceptingListener.prototype.recvMessageWithContext = function(context,
                                                                 message) {
  var fallback = this.next_listener.recvMessageWithContext;
  var next_method = this.next_listener ?
    fallback.bind(this.next_listener, context) :
    context;
  if (this.delegate.onReceiveMessage) {
    this.delegate.onReceiveMessage(message, next_method, context);
  } else {
    next_method(message);
  }
};

/**
 * Inbound status receiver.
 * @param {grpc~StatusObject} status
 */
InterceptingListener.prototype.onReceiveStatus = function(status) {
  this._callNext('onReceiveStatus', [status]);
};

/**
 * A dead-end listener used to terminate a call chain. Used when an interceptor
 * creates a branch chain, when the branch returns the listener chain will
 * terminate here.
 * @constructor
 */
function EndListener() {}
EndListener.prototype.onReceiveMetadata = function(){};
EndListener.prototype.onReceiveMessage = function(){};
EndListener.prototype.onReceiveStatus = function(){};
EndListener.prototype.recvMessageWithContext = function(){};

/**
 * Get a call object built with the provided options.
 * @param {grpc.Channel} channel
 * @param {string} path
 * @param {grpc.Client~CallOptions=} options Options object.
 */
function getCall(channel, path, options) {
  var deadline;
  var host;
  var parent;
  var propagate_flags;
  var credentials;
  if (options) {
    deadline = options.deadline;
    host = options.host;
    parent = options.parent ? options.parent.call : undefined;
    propagate_flags = options.propagate_flags;
    credentials = options.credentials;
  }
  if (deadline === undefined) {
    deadline = Infinity;
  }
  var call = channel.createCall(path, deadline, host,
                                parent, propagate_flags);
  if (credentials) {
    call.setCredentials(credentials);
  }
  return call;
}

var OP_DEPENDENCIES = {
  [grpc.opType.SEND_MESSAGE]: [grpc.opType.SEND_INITIAL_METADATA],
  [grpc.opType.SEND_CLOSE_FROM_CLIENT]: [grpc.opType.SEND_MESSAGE],
  [grpc.opType.RECV_MESSAGE]: [grpc.opType.SEND_INITIAL_METADATA]
};

/**
 * Produces a callback triggered by streaming response messages.
 * @private
 * @param {EventEmitter} emitter
 * @param {grpc.internal~Call} call
 * @param {function} get_listener Returns a grpc~Listener.
 * @param {grpc~deserialize} deserialize
 * @return {Function}
 */
function _getStreamReadCallback(emitter, call, get_listener, deserialize) {
  return function (err, response) {
    if (err) {
      // Something has gone wrong. Stop reading and wait for status
      emitter.finished = true;
      emitter._readsDone();
      return;
    }
    var data = response.read;
    var deserialized;
    try {
      deserialized = deserialize(data);
    } catch (e) {
      common.log(constants.logVerbosity.ERROR, `Response deserialization failed: ${e.message}`);
      emitter._readsDone({
        code: constants.status.INTERNAL,
        details: 'Failed to parse server response'
      });
      return;
    }
    if (data === null) {
      emitter._readsDone();
      return;
    }
    var listener = get_listener();
    var context = {
      call: call,
      listener: listener
    };
    listener.recvMessageWithContext(context, deserialized);
  };
}

/**
 * Tests whether a batch can be started.
 * @private
 * @param {number[]} batch_ops The operations in the batch we are checking.
 * @param {number[]} completed_ops Previously completed operations.
 * @return {boolean}
 */
function _areBatchRequirementsMet(batch_ops, completed_ops) {
  var dependencies = common.flatMap(batch_ops, function(op) {
    return OP_DEPENDENCIES[op] || [];
  });
  for (var i = 0; i < dependencies.length; i++) {
    var required_dep = dependencies[i];
    if (batch_ops.indexOf(required_dep) === -1 &&
        completed_ops.indexOf(required_dep) === -1) {
      return false;
    }
  }
  return true;
}

/**
 * Enforces the order of operations for synchronous requests. If a batch's
 * operations cannot be started because required operations have not started
 * yet, the batch is deferred until requirements are met.
 * @private
 * @param {grpc.Client~Call} call
 * @param {object} batch
 * @param {object} batch_state
 * @param {number[]} [batch_state.completed_ops] The ops already sent.
 * @param {object} [batch_state.deferred_batches] Batches to be sent after
 *     their dependencies are fulfilled.
 * @param {function} callback
 * @return {object}
 */
function _startBatchIfReady(call, batch, batch_state, callback) {
  var completed_ops = batch_state.completed_ops;
  var deferred_batches = batch_state.deferred_batches;
  var batch_ops = Object.keys(batch).map(Number);
  if (_areBatchRequirementsMet(batch_ops, completed_ops)) {
    // Dependencies are met, start the batch and any deferred batches whose
    // dependencies are met as a result.
    call.startBatch(batch, callback);
    completed_ops = Array.from(new Set(completed_ops.concat(batch_ops)));
    deferred_batches = common.flatMap(deferred_batches, function(deferred_batch) {
      var deferred_batch_ops = Object.keys(deferred_batch).map(Number);
      if (_areBatchRequirementsMet(deferred_batch_ops, completed_ops)) {
        call.startBatch(deferred_batch.batch, deferred_batch.callback);
        return [];
      }
      return [deferred_batch];
    });
  } else {
    // Dependencies are not met, defer the batch
    deferred_batches = deferred_batches.concat({
      batch: batch,
      callback: callback
    });
  }
  return {
    completed_ops: completed_ops,
    deferred_batches: deferred_batches
  };
}

/**
 * Produces an interceptor which will start gRPC batches for unary calls.
 * @private
 * @param {grpc~MethodDefinition} method_definition
 * @param {grpc.Channel} channel
 * @param {EventEmitter} emitter
 * @param {function} callback
 * @return {Interceptor}
 */
function _getUnaryInterceptor(method_definition, channel, emitter, callback) {
  var serialize = method_definition.requestSerialize;
  var deserialize = method_definition.responseDeserialize;
  return function (options) {
    var call = getCall(channel, method_definition.path, options);
    var first_listener;
    var final_requester = {};
    var batch_state = {
      completed_ops: [],
      deferred_batches: []
    };
    final_requester.start = function (metadata, listener) {
      var batch = {
        [grpc.opType.SEND_INITIAL_METADATA]:
          metadata._getCoreRepresentation(),
      };
      first_listener = listener;
      batch_state = _startBatchIfReady(call, batch, batch_state,
                                       function() {});
    };
    final_requester.sendMessage = function (message) {
      var batch = {
        [grpc.opType.SEND_MESSAGE]: serialize(message),
      };
      batch_state = _startBatchIfReady(call, batch, batch_state,
                                         function() {});
    };
    final_requester.halfClose = function () {
      var batch = {
        [grpc.opType.SEND_CLOSE_FROM_CLIENT]: true,
        [grpc.opType.RECV_INITIAL_METADATA]: true,
        [grpc.opType.RECV_MESSAGE]: true,
        [grpc.opType.RECV_STATUS_ON_CLIENT]: true
      };
      var callback = function (err, response) {
        response.status.metadata = Metadata._fromCoreRepresentation(
          response.status.metadata);
        var status = response.status;
        var deserialized;
        if (status.code === constants.status.OK) {
          if (err) {
            // Got a batch error, but OK status. Something went wrong
            callback(err);
            return;
          } else {
            try {
              deserialized = deserialize(response.read);
            } catch (e) {
              common.log(constants.logVerbosity.ERROR, `Response deserialization failed: ${e.message}`);
              /* Change status to indicate bad server response. This
               * will result in passing an error to the callback */
              status = {
                code: constants.status.INTERNAL,
                details: 'Failed to parse server response'
              };
            }
          }
        }
        response.metadata =
          Metadata._fromCoreRepresentation(response.metadata);
        first_listener.onReceiveMetadata(response.metadata);
        first_listener.onReceiveMessage(deserialized);
        first_listener.onReceiveStatus(status);
      };
      batch_state = _startBatchIfReady(call, batch, batch_state, callback);
    };
    final_requester.cancel = function () {
      call.cancel();
    };
    final_requester.cancelWithStatus = function(code, details) {
      call.cancelWithStatus(code, details)
    };
    final_requester.getPeer = function () {
      return call.getPeer();
    };
    return new InterceptingCall(null, final_requester);
  };
}

/**
 * Produces an interceptor which will start gRPC batches for client streaming
 * calls.
 * @private
 * @param {grpc~MethodDefinition} method_definition
 * @param {grpc.Channel} channel
 * @param {EventEmitter} emitter
 * @param {function} callback
 * @return {Interceptor}
 */
function _getClientStreamingInterceptor(method_definition, channel, emitter,
  callback) {
  var serialize = common.wrapIgnoreNull(method_definition.requestSerialize);
  var deserialize = method_definition.responseDeserialize;
  return function (options) {
    var first_listener;
    var call = getCall(channel, method_definition.path, options);
    var final_requester = {};
    final_requester.start = function (metadata, listener) {
      var metadata_batch = {
        [grpc.opType.SEND_INITIAL_METADATA]: metadata._getCoreRepresentation(),
        [grpc.opType.RECV_INITIAL_METADATA]: true
      };
      first_listener = listener;
      call.startBatch(metadata_batch, function (err, response) {
        if (err) {
          // The call has stopped for some reason. A non-OK status will arrive
          // in the other batch.
          return;
        }
        response.metadata = Metadata._fromCoreRepresentation(response.metadata);
        listener.onReceiveMetadata(response.metadata);
      });
      var recv_batch = {};
      recv_batch[grpc.opType.RECV_MESSAGE] = true;
      recv_batch[grpc.opType.RECV_STATUS_ON_CLIENT] = true;
      call.startBatch(recv_batch, function (err, response) {
        response.status.metadata = Metadata._fromCoreRepresentation(
          response.status.metadata);
        var status = response.status;
        var deserialized;
        if (status.code === constants.status.OK) {
          if (err) {
            // Got a batch error, but OK status. Something went wrong
            callback(err);
            return;
          } else {
            try {
              deserialized = deserialize(response.read);
            } catch (e) {
              common.log(constants.logVerbosity.ERROR, `Response deserialization failed: ${e.message}`);
              /* Change status to indicate bad server response. This will result
               * in passing an error to the callback */
              status = {
                code: constants.status.INTERNAL,
                details: 'Failed to parse server response'
              };
            }
          }
        }
        listener.onReceiveMessage(deserialized);
        listener.onReceiveStatus(status);
      });
    };
    final_requester.sendMessage = function (chunk, context) {
      var message;
      var callback = (context && context.callback) ?
        context.callback :
        function () { };
      var encoding = (context && context.encoding) ?
        context.encoding :
        '';
      try {
        message = serialize(chunk);
      } catch (e) {
        common.log(constants.logVerbosity.ERROR, `Request serialization failed: ${e.message}`);
        /* Sending this error to the server and emitting it immediately on the
           client may put the call in a slightly weird state on the client side,
           but passing an object that causes a serialization failure is a misuse
           of the API anyway, so that's OK. The primary purpose here is to give
           the programmer a useful error and to stop the stream properly */
        call.cancelWithStatus(constants.status.INTERNAL,
          'Serialization failure');
        callback(e);
        return;
      }
      if (Number.isFinite(encoding)) {
        /* Attach the encoding if it is a finite number. This is the closest we
         * can get to checking that it is valid flags */
        message.grpcWriteFlags = encoding;
      }
      var batch = {
        [grpc.opType.SEND_MESSAGE]: message
      };
      call.startBatch(batch, function (err, event) {
        callback(err, event);
      });
    };
    final_requester.halfClose = function () {
      var batch = {
        [grpc.opType.SEND_CLOSE_FROM_CLIENT]: true
      };
      call.startBatch(batch, function () { });
    };
    final_requester.cancel = function () {
      call.cancel();
    };
    final_requester.cancelWithStatus = function(code, details) {
      call.cancelWithStatus(code, details)
    };
    final_requester.getPeer = function() {
      return call.getPeer();
    };
    return new InterceptingCall(null, final_requester);
  };
}

/**
 * Produces an interceptor which will start gRPC batches for server streaming
 * calls.
 * @private
 * @param {grpc~MethodDefinition} method_definition
 * @param {grpc.Channel} channel
 * @param {EventEmitter} emitter
 * @return {Interceptor}
 */
function _getServerStreamingInterceptor(method_definition, channel, emitter) {
  var deserialize = common.wrapIgnoreNull(
    method_definition.responseDeserialize);
  var serialize = method_definition.requestSerialize;
  return function (options) {
    var batch_state = {
      completed_ops: [],
      deferred_batches: []
    };
    var call = getCall(channel, method_definition.path, options);
    var final_requester = {};
    var first_listener;
    var get_listener = function() {
      return first_listener;
    };
    final_requester.start = function(metadata, listener) {
      first_listener = listener;
      metadata = metadata.clone();
      var metadata_batch = {
        [grpc.opType.SEND_INITIAL_METADATA]: metadata._getCoreRepresentation(),
        [grpc.opType.RECV_INITIAL_METADATA]: true
      };
      var callback = function(err, response) {
        if (err) {
          // The call has stopped for some reason. A non-OK status will arrive
          // in the other batch.
          return;
        }
        first_listener.onReceiveMetadata(
          Metadata._fromCoreRepresentation(response.metadata));
      };
      batch_state = _startBatchIfReady(call, metadata_batch, batch_state,
                                       callback);
      var status_batch = {
        [grpc.opType.RECV_STATUS_ON_CLIENT]: true
      };
      call.startBatch(status_batch, function(err, response) {
        if (err) {
          emitter.emit('error', err);
          return;
        }
        response.status.metadata = Metadata._fromCoreRepresentation(
          response.status.metadata);
        first_listener.onReceiveStatus(response.status);
      });
    };
    final_requester.sendMessage = function(argument) {
      var message = serialize(argument);
      if (options) {
        message.grpcWriteFlags = options.flags;
      }
      var send_batch = {
        [grpc.opType.SEND_MESSAGE]: message
      };
      var callback = function(err, response) {
        if (err) {
          // The call has stopped for some reason. A non-OK status will arrive
          // in the other batch.
          return;
        }
      };
      batch_state = _startBatchIfReady(call, send_batch, batch_state, callback);
    };
    final_requester.halfClose = function() {
      var batch = {
        [grpc.opType.SEND_CLOSE_FROM_CLIENT]: true
      };
      batch_state = _startBatchIfReady(call, batch, batch_state, function() {});
    };
    final_requester.recvMessageWithContext = function(context) {
      var recv_batch = {
        [grpc.opType.RECV_MESSAGE]: true
      };
      var callback = _getStreamReadCallback(emitter, call,
        get_listener, deserialize);
      batch_state = _startBatchIfReady(call, recv_batch, batch_state, callback);
    };
    final_requester.cancel = function() {
      call.cancel();
    };
    final_requester.cancelWithStatus = function(code, details) {
      call.cancelWithStatus(code, details)
    };
    final_requester.getPeer = function() {
      return call.getPeer();
    };
    return new InterceptingCall(null, final_requester);
  };
}

/**
 * Produces an interceptor which will start gRPC batches for bi-directional
 * calls.
 * @private
 * @param {grpc~MethodDefinition} method_definition
 * @param {grpc.Channel} channel
 * @param {EventEmitter} emitter
 * @return {Interceptor}
 */
function _getBidiStreamingInterceptor(method_definition, channel, emitter) {
  var serialize = common.wrapIgnoreNull(method_definition.requestSerialize);
  var deserialize = common.wrapIgnoreNull(
    method_definition.responseDeserialize);
  return function (options) {
    var first_listener;
    var get_listener = function() {
      return first_listener;
    };
    var call = getCall(channel, method_definition.path, options);
    var final_requester = {};
    final_requester.start = function (metadata, listener) {
      var metadata_batch = {
        [grpc.opType.SEND_INITIAL_METADATA]: metadata._getCoreRepresentation(),
        [grpc.opType.RECV_INITIAL_METADATA]: true
      };
      first_listener = listener;
      call.startBatch(metadata_batch, function (err, response) {
        if (err) {
          // The call has stopped for some reason. A non-OK status will arrive
          // in the other batch.
          return;
        }
        response.metadata = Metadata._fromCoreRepresentation(response.metadata);
        listener.onReceiveMetadata(response.metadata);
      });
      var recv_batch = {};
      recv_batch[grpc.opType.RECV_STATUS_ON_CLIENT] = true;
      call.startBatch(recv_batch, function (err, response) {
        var status = response.status;
        if (status.code === constants.status.OK) {
          if (err) {
            emitter.emit('error', err);
            return;
          }
        }
        response.status.metadata = Metadata._fromCoreRepresentation(
          response.status.metadata);
        listener.onReceiveStatus(status);
      });
    };
    final_requester.sendMessage = function (chunk, context) {
      var message;
      var callback = (context && context.callback) ?
        context.callback :
        function() {};
      var encoding = (context && context.encoding) ?
        context.encoding :
        '';
      try {
        message = serialize(chunk);
      } catch (e) {
        common.log(constants.logVerbosity.ERROR, `Request serialization failed: ${e.message}`);
        /* Sending this error to the server and emitting it immediately on the
           client may put the call in a slightly weird state on the client side,
           but passing an object that causes a serialization failure is a misuse
           of the API anyway, so that's OK. The primary purpose here is to give
           the programmer a useful error and to stop the stream properly */
        call.cancelWithStatus(constants.status.INTERNAL,
          'Serialization failure');
        callback(e);
        return;
      }
      if (Number.isFinite(encoding)) {
        /* Attach the encoding if it is a finite number. This is the closest we
         * can get to checking that it is valid flags */
        message.grpcWriteFlags = encoding;
      }
      var batch = {
        [grpc.opType.SEND_MESSAGE]: message
      };
      call.startBatch(batch, function (err, event) {
        callback(err, event);
      });
    };
    final_requester.halfClose = function () {
      var batch = {
        [grpc.opType.SEND_CLOSE_FROM_CLIENT]: true
      };
      call.startBatch(batch, function () { });
    };
    final_requester.recvMessageWithContext = function(context) {
      var recv_batch = {
        [grpc.opType.RECV_MESSAGE]: true
      };
      call.startBatch(recv_batch, _getStreamReadCallback(emitter, call,
        get_listener, deserialize));
    };
    final_requester.cancel = function() {
      call.cancel();
    };
    final_requester.cancelWithStatus = function(code, details) {
      call.cancelWithStatus(code, details)
    };
    final_requester.getPeer = function() {
      return call.getPeer();
    };
    return new InterceptingCall(null, final_requester);
  };
}

/**
 * Produces a listener for responding to callers of unary RPCs.
 * @private
 * @param {grpc~MethodDefinition} method_definition
 * @param {EventEmitter} emitter
 * @param {function} callback
 * @return {grpc~Listener}
 */
function _getUnaryListener(method_definition, emitter, callback) {
  var resultMessage;
  return {
    onReceiveMetadata: function (metadata) {
      emitter.emit('metadata', metadata);
    },
    onReceiveMessage: function (message) {
      resultMessage = message;
    },
    onReceiveStatus: function (status) {
      if (status.code !== constants.status.OK) {
        var error = common.createStatusError(status);
        callback(error);
      } else {
        callback(null, resultMessage);
      }
      emitter.emit('status', status);
    }
  };
}

/**
 * Produces a listener for responding to callers of client streaming RPCs.
 * @private
 * @param {grpc~MethodDefinition} method_definition
 * @param {EventEmitter} emitter
 * @param {function} callback
 * @return {grpc~Listener}
 */
function _getClientStreamingListener(method_definition, emitter, callback) {
  var resultMessage;
  return {
    onReceiveMetadata: function (metadata) {
      emitter.emit('metadata', metadata);
    },
    onReceiveMessage: function (message) {
      resultMessage = message;
    },
    onReceiveStatus: function (status) {
      if (status.code !== constants.status.OK) {
        var error = common.createStatusError(status);
        callback(error);
      } else {
        callback(null, resultMessage);
      }
      emitter.emit('status', status);
    }
  };
}

/**
 * Produces a listener for responding to callers of server streaming RPCs.
 * @private
 * @param {grpc~MethodDefinition} method_definition
 * @param {EventEmitter} emitter
 * @return {grpc~Listener}
 */
function _getServerStreamingListener(method_definition, emitter) {
  var deserialize = common.wrapIgnoreNull(
    method_definition.responseDeserialize);
  return {
    onReceiveMetadata: function (metadata) {
      emitter.emit('metadata', metadata);
    },
    onReceiveMessage: function(message, next, context) {
      if (emitter.push(message) && message !== null) {
        var call = context.call;
        var get_listener = function() {
          return context.listener;
        };
        var read_batch = {};
        read_batch[grpc.opType.RECV_MESSAGE] = true;
        call.startBatch(read_batch, _getStreamReadCallback(emitter, call,
          get_listener, deserialize));
      } else {
        emitter.reading = false;
      }
    },
    onReceiveStatus: function (status) {
      emitter._receiveStatus(status);
    }
  };
}

/**
 * Produces a listener for responding to callers of bi-directional RPCs.
 * @private
 * @param {grpc~MethodDefinition} method_definition
 * @param {EventEmitter} emitter
 * @return {grpc~Listener}
 */
function _getBidiStreamingListener(method_definition, emitter) {
  var deserialize = common.wrapIgnoreNull(
    method_definition.responseDeserialize);
  return {
    onReceiveMetadata: function (metadata) {
      emitter.emit('metadata', metadata);
    },
    onReceiveMessage: function(message, next, context) {
      if (emitter.push(message) && message !== null) {
        var call = context.call;
        var get_listener = function() {
          return context.listener;
        };
        var read_batch = {};
        read_batch[grpc.opType.RECV_MESSAGE] = true;
        call.startBatch(read_batch, _getStreamReadCallback(emitter, call,
          get_listener, deserialize));
      } else {
        emitter.reading = false;
      }
    },
    onReceiveStatus: function (status) {
      emitter._receiveStatus(status);
    }
  };
}

var interceptorGenerators = {
  [methodTypes.UNARY]: _getUnaryInterceptor,
  [methodTypes.CLIENT_STREAMING]: _getClientStreamingInterceptor,
  [methodTypes.SERVER_STREAMING]: _getServerStreamingInterceptor,
  [methodTypes.BIDI_STREAMING]: _getBidiStreamingInterceptor
};

var listenerGenerators = {
  [methodTypes.UNARY]: _getUnaryListener,
  [methodTypes.CLIENT_STREAMING]: _getClientStreamingListener,
  [methodTypes.SERVER_STREAMING]: _getServerStreamingListener,
  [methodTypes.BIDI_STREAMING]: _getBidiStreamingListener
};

/**
 * Creates the last listener in an interceptor stack.
 * @param {grpc~MethodDefinition} method_definition
 * @param {EventEmitter} emitter
 * @param {function=} callback
 * @return {grpc~Listener}
 */
function getLastListener(method_definition, emitter, callback) {
  if (emitter instanceof Function) {
    callback = emitter;
    callback = function() {};
  }
  if (!(callback instanceof Function)) {
    callback = function() {};
  }
  if (!((emitter instanceof EventEmitter) &&
       (callback instanceof Function))) {
    throw new Error('Argument mismatch in getLastListener');
  }
  var method_type = common.getMethodType(method_definition);
  var generator = listenerGenerators[method_type];
  return generator(method_definition, emitter, callback);
}

/**
 *
 * @param {grpc~MethodDefinition} method_definition
 * @param {grpc.Client~CallOptions} options
 * @param {Interceptor[]} interceptors
 * @param {grpc.Channel} channel
 * @param {function|EventEmitter} responder
 */
function getInterceptingCall(method_definition, options,
                             interceptors, channel, responder) {
  var last_interceptor = _getLastInterceptor(method_definition, channel,
                                            responder);
  var all_interceptors = interceptors.concat(last_interceptor);
  return _buildChain(all_interceptors, options);
}

/**
 * Creates the last interceptor in an interceptor stack.
 * @private
 * @param {grpc~MethodDefinition} method_definition
 * @param {grpc.Channel} channel
 * @param {function|EventEmitter} responder
 * @return {Interceptor}
 */
function _getLastInterceptor(method_definition, channel, responder) {
  var callback = (responder instanceof Function) ? responder : function() {};
  var emitter = (responder instanceof EventEmitter) ? responder :
                                                      new EventEmitter();
  var method_type = common.getMethodType(method_definition);
  var generator = interceptorGenerators[method_type];
  return generator(method_definition, channel, emitter, callback);
}

/**
 * Chain a list of interceptors together and return the first InterceptingCall.
 * @private
 * @param {Interceptor[]} interceptors An interceptor stack.
 * @param {grpc.Client~CallOptions} options Call options.
 * @return {InterceptingCall}
 */
function _buildChain(interceptors, options) {
  var next = function(interceptors) {
    if (interceptors.length === 0) {
      return function (options) {};
    }
    var head_interceptor = interceptors[0];
    var rest_interceptors = interceptors.slice(1);
    return function (options) {
      return head_interceptor(options, next(rest_interceptors));
    };
  };
  var chain = next(interceptors)(options);
  return new InterceptingCall(chain);
}

/**
 * Wraps a plain listener object in an InterceptingListener if it isn't an
 * InterceptingListener already.
 * @param {InterceptingListener|object|null} current_listener
 * @param {InterceptingListener|EndListener} next_listener
 * @return {InterceptingListener|null}
 * @private
 */
function _getInterceptingListener(current_listener, next_listener) {
  if (!_isInterceptingListener(current_listener)) {
    return new InterceptingListener(next_listener, current_listener);
  }
  return current_listener;
}

/**
 * Test if the listener exists and is an InterceptingListener.
 * @param listener
 * @return {boolean}
 * @private
 */
function _isInterceptingListener(listener) {
  return listener && listener.constructor.name === 'InterceptingListener';
}

exports.resolveInterceptorProviders = resolveInterceptorProviders;

exports.InterceptingCall = InterceptingCall;
exports.ListenerBuilder = ListenerBuilder;
exports.RequesterBuilder = RequesterBuilder;
exports.StatusBuilder = StatusBuilder;

exports.InterceptorConfigurationError = InterceptorConfigurationError;

exports.getInterceptingCall = getInterceptingCall;
exports.getLastListener = getLastListener;


/***/ }),

/***/ "./node_modules/grpc/src/common.js":
/*!*****************************************!*\
  !*** ./node_modules/grpc/src/common.js ***!
  \*****************************************/
/*! default exports */
/*! export createStatusError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export defaultGrpcOptions [provided] [no usage info] [missing usage info prevents renaming] */
/*! export flatMap [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getMethodType [provided] [no usage info] [missing usage info prevents renaming] */
/*! export log [provided] [no usage info] [missing usage info prevents renaming] */
/*! export logVerbosity [provided] [no usage info] [missing usage info prevents renaming] */
/*! export logger [provided] [no usage info] [missing usage info prevents renaming] */
/*! export wrapIgnoreNull [provided] [no usage info] [missing usage info prevents renaming] */
/*! export zipObject [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/**
 * @license
 * Copyright 2015 gRPC authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */



var constants = __webpack_require__(/*! ./constants */ "./node_modules/grpc/src/constants.js");

/**
 * Wrap a function to pass null-like values through without calling it. If no
 * function is given, just uses the identity.
 * @private
 * @param {?function} func The function to wrap
 * @return {function} The wrapped function
 */
exports.wrapIgnoreNull = function wrapIgnoreNull(func) {
  if (!func) {
    return x => x;
  }
  return function(arg) {
    if (arg === null || arg === undefined) {
      return null;
    }
    return func(arg);
  };
};

/**
 * The logger object for the gRPC module. Defaults to console.
 * @private
 */
exports.logger = console;

/**
 * The current logging verbosity. 0 corresponds to logging everything
 * @private
 */
exports.logVerbosity = 0;

/**
 * Log a message if the severity is at least as high as the current verbosity
 * @private
 * @param {Number} severity A value of the grpc.logVerbosity map
 * @param {String} message The message to log
 */
exports.log = function log(severity, message) {
  if (severity >= exports.logVerbosity) {
    exports.logger.error(message);
  }
};

/**
 * Default options for loading proto files into gRPC
 * @alias grpc~defaultLoadOptions
 */
exports.defaultGrpcOptions = {
  convertFieldsToCamelCase: false,
  binaryAsBase64: false,
  longsAsStrings: true,
  enumsAsStrings: true,
  deprecatedArgumentOrder: false
};

/**
 * Create an Error object from a status object
 * @param {grpc~StatusObject} status The status object
 * @return {Error} The resulting Error
 */
exports.createStatusError = function(status) {
  let inverted = Object.keys(constants.status)
    .reduce((acc, key) => {
      acc[constants.status[key]] = key;
      return acc;
    }, {});
  let statusName = inverted[status.code];
  let message = `${status.code} ${statusName}: ${status.details}`;
  let error = new Error(message);
  error.code = status.code;
  error.metadata = status.metadata;
  error.details = status.details;
  return error;
};

/**
 * Get a method's type from its definition
 * @param {grpc~MethodDefinition} method_definition
 * @return {number}
 */
exports.getMethodType = function(method_definition) {
  if (method_definition.requestStream) {
    if (method_definition.responseStream) {
      return constants.methodTypes.BIDI_STREAMING;
    } else {
      return constants.methodTypes.CLIENT_STREAMING;
    }
  } else {
    if (method_definition.responseStream) {
      return constants.methodTypes.SERVER_STREAMING;
    } else {
      return constants.methodTypes.UNARY;
    }
  }
};

/**
 * Iterate over a collection of items, and run the given handler.
 * Return the results as a flattened array of values.
 *
 * @private
 *
 * @param {Array} collection Array of items to process
 * @param {Function} handler The function to call on each element in the array
 * @return {Array} A flattened array of results.
 */
exports.flatMap = function(collection, handler) {
  const mapped = collection.map(handler);
  return mapped.reduce((acc, curr) => acc.concat(curr), []);
}

/**
 * Given an array of property names and an array of values,
 * combine the two into an object map.
 * Equivalent to _.zipObject.
 *
 * @private
 *
 * @param props {Array<String>} Array of property names
 * @param values {Array} Array of property values
 * @return {Object} An object with the combined values
 */
exports.zipObject = function(props, values) {
  return props.reduce((acc, curr, idx) => {
    return Object.assign(acc, { [curr]: values[idx] });
  }, {});
}

// JSDoc definitions that are used in multiple other modules

/**
 * Represents the status of a completed request. If `code` is
 * {@link grpc.status}.OK, then the request has completed successfully.
 * Otherwise, the request has failed, `details` will contain a description of
 * the error. Either way, `metadata` contains the trailing response metadata
 * sent by the server when it finishes processing the call.
 * @typedef {object} grpc~StatusObject
 * @property {number} code The error code, a key of {@link grpc.status}
 * @property {string} details Human-readable description of the status
 * @property {grpc.Metadata} metadata Trailing metadata sent with the status,
 *     if applicable
 */

/**
 * Describes how a request has failed. The member `message` will be the same as
 * `details` in {@link grpc~StatusObject}, and `code` and `metadata` are the
 * same as in that object.
 * @typedef {Error} grpc~ServiceError
 * @property {number} code The error code, a key of {@link grpc.status} that is
 *     not `grpc.status.OK`
 * @property {grpc.Metadata} metadata Trailing metadata sent with the status,
 *     if applicable
 */

/**
 * The EventEmitter class in the event standard module
 * @external EventEmitter
 * @see https://nodejs.org/api/events.html#events_class_eventemitter
 */

/**
 * The Readable class in the stream standard module
 * @external Readable
 * @see https://nodejs.org/api/stream.html#stream_readable_streams
 */

/**
 * The Writable class in the stream standard module
 * @external Writable
 * @see https://nodejs.org/api/stream.html#stream_writable_streams
 */

/**
 * The Duplex class in the stream standard module
 * @external Duplex
 * @see https://nodejs.org/api/stream.html#stream_class_stream_duplex
 */

/**
 * A serialization function
 * @callback grpc~serialize
 * @param {*} value The value to serialize
 * @return {Buffer} The value serialized as a byte sequence
 */

/**
 * A deserialization function
 * @callback grpc~deserialize
 * @param {Buffer} data The byte sequence to deserialize
 * @return {*} The data deserialized as a value
 */

/**
 * The deadline of an operation. If it is a date, the deadline is reached at
 * the date and time specified. If it is a finite number, it is treated as
 * a number of milliseconds since the Unix Epoch. If it is Infinity, the
 * deadline will never be reached. If it is -Infinity, the deadline has already
 * passed.
 * @typedef {(number|Date)} grpc~Deadline
 */

/**
 * An object that completely defines a service method signature.
 * @typedef {Object} grpc~MethodDefinition
 * @property {string} path The method's URL path
 * @property {boolean} requestStream Indicates whether the method accepts
 *     a stream of requests
 * @property {boolean} responseStream Indicates whether the method returns
 *     a stream of responses
 * @property {grpc~serialize} requestSerialize Serialization
 *     function for request values
 * @property {grpc~serialize} responseSerialize Serialization
 *     function for response values
 * @property {grpc~deserialize} requestDeserialize Deserialization
 *     function for request data
 * @property {grpc~deserialize} responseDeserialize Deserialization
 *     function for repsonse data
 */

/**
 * @function MetadataListener
 * @param {grpc.Metadata} metadata The response metadata.
 * @param {function} next Passes metadata to the next interceptor.
 */

/**
 * @function MessageListener
 * @param {jspb.Message} message The response message.
 * @param {function} next Passes a message to the next interceptor.
 */

/**
 * @function StatusListener
 * @param {grpc~StatusObject} status The response status.
 * @param {function} next Passes a status to the next interceptor.
 */

/**
 * A set of interceptor functions triggered by responses
 * @typedef {object} grpc~Listener
 * @property {MetadataListener=} onReceiveMetadata A function triggered by
 *     response metadata.
 * @property {MessageListener=} onReceiveMessage A function triggered by a
 *     response message.
 * @property {StatusListener=} onReceiveStatus A function triggered by a
 *     response status.
 */

/**
 * @function MetadataRequester
 * @param {grpc.Metadata} metadata The request metadata.
 * @param {grpc~Listener} listener A listener wired to the previous layers
 *     in the interceptor stack.
 * @param {function} next Passes metadata and a listener to the next
 *      interceptor.
 */

/**
 * @function MessageRequester
 * @param {jspb.Message} message The request message.
 * @param {function} next Passes a message to the next interceptor.
 */

/**
 * @function CloseRequester
 * @param {function} next Calls the next interceptor.
 */

/**
 * @function CancelRequester
 * @param {function} next Calls the next interceptor.
 */

/**
 * @function GetPeerRequester
 * @param {function} next Calls the next interceptor.
 * @return {string}
 */

/**
 * @typedef {object} grpc~Requester
 * @param {MetadataRequester=} start A function triggered when the call begins.
 * @param {MessageRequester=} sendMessage A function triggered by the request
 *     message.
 * @param {CloseRequester=} halfClose A function triggered when the client
 *     closes the call.
 * @param {CancelRequester=} cancel A function triggered when the call is
 *     cancelled.
 * @param {GetPeerRequester=} getPeer A function triggered when the endpoint is
 *     requested.
 */

/**
 * An object that completely defines a service.
 * @typedef {Object.<string, grpc~MethodDefinition>} grpc~ServiceDefinition
 */

 /**
  * An object that defines a protobuf type
  * @typedef {object} grpc~ProtobufTypeDefinition
  * @param {string} format The format of the type definition object
  * @param {*} type The type definition object
  * @param {Buffer[]} fileDescriptorProtos Binary protobuf file
  *     descriptors for all files loaded to construct this type
  */

/**
 * An object that defines a package hierarchy with multiple services
 * @typedef {Object.<string, grpc~ServiceDefinition|grpc~ProtobufTypeDefinition>} grpc~PackageDefinition
 */

/**
 * A function for dynamically assigning an interceptor to a call.
 * @function InterceptorProvider
 * @param {grpc~MethodDefinition} method_definition The method to provide
 *     an interceptor for.
 * @return {Interceptor|null} The interceptor to provide or nothing
 */

/**
 * A function which can modify call options and produce methods to intercept
 * RPC operations.
 * @function Interceptor
 * @param {object} options The grpc call options
 * @param {NextCall} nextCall
 * @return {InterceptingCall}
 */

/**
 * A function which produces the next InterceptingCall.
 * @function NextCall
 * @param {object} options The grpc call options
 * @return {InterceptingCall|null}
 */


/***/ }),

/***/ "./node_modules/grpc/src/constants.js":
/*!********************************************!*\
  !*** ./node_modules/grpc/src/constants.js ***!
  \********************************************/
/*! default exports */
/*! export callError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export connectivityState [provided] [no usage info] [missing usage info prevents renaming] */
/*! export logVerbosity [provided] [no usage info] [missing usage info prevents renaming] */
/*! export methodTypes [provided] [no usage info] [missing usage info prevents renaming] */
/*! export propagate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export status [provided] [no usage info] [missing usage info prevents renaming] */
/*! export writeFlags [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__ */
/***/ ((__unused_webpack_module, exports) => {

/**
 * @license
 * Copyright 2017 gRPC authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

/* The comments about status codes are copied verbatim (with some formatting
 * modifications) from include/grpc/impl/codegen/status.h, for the purpose of
 * including them in generated documentation.
 */
/**
 * Enum of status codes that gRPC can return
 * @memberof grpc
 * @alias grpc.status
 * @readonly
 * @enum {number}
 */
exports.status = {
  /** Not an error; returned on success */
  OK: 0,
  /** The operation was cancelled (typically by the caller). */
  CANCELLED: 1,
  /**
   * Unknown error.  An example of where this error may be returned is
   * if a status value received from another address space belongs to
   * an error-space that is not known in this address space.  Also
   * errors raised by APIs that do not return enough error information
   * may be converted to this error.
   */
  UNKNOWN: 2,
  /**
   * Client specified an invalid argument.  Note that this differs
   * from FAILED_PRECONDITION.  INVALID_ARGUMENT indicates arguments
   * that are problematic regardless of the state of the system
   * (e.g., a malformed file name).
   */
  INVALID_ARGUMENT: 3,
  /**
   * Deadline expired before operation could complete.  For operations
   * that change the state of the system, this error may be returned
   * even if the operation has completed successfully.  For example, a
   * successful response from a server could have been delayed long
   * enough for the deadline to expire.
   */
  DEADLINE_EXCEEDED: 4,
  /** Some requested entity (e.g., file or directory) was not found. */
  NOT_FOUND: 5,
  /**
   * Some entity that we attempted to create (e.g., file or directory)
   * already exists.
   */
  ALREADY_EXISTS: 6,
  /**
   * The caller does not have permission to execute the specified
   * operation.  PERMISSION_DENIED must not be used for rejections
   * caused by exhausting some resource (use RESOURCE_EXHAUSTED
   * instead for those errors).  PERMISSION_DENIED must not be
   * used if the caller can not be identified (use UNAUTHENTICATED
   * instead for those errors).
   */
  PERMISSION_DENIED: 7,
  /**
   * Some resource has been exhausted, perhaps a per-user quota, or
   * perhaps the entire file system is out of space.
   */
  RESOURCE_EXHAUSTED: 8,
  /**
   * Operation was rejected because the system is not in a state
   * required for the operation's execution.  For example, directory
   * to be deleted may be non-empty, an rmdir operation is applied to
   * a non-directory, etc.
   *
   * A litmus test that may help a service implementor in deciding
   * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:
   *
   *  - Use UNAVAILABLE if the client can retry just the failing call.
   *  - Use ABORTED if the client should retry at a higher-level
   *    (e.g., restarting a read-modify-write sequence).
   *  - Use FAILED_PRECONDITION if the client should not retry until
   *    the system state has been explicitly fixed.  E.g., if an "rmdir"
   *    fails because the directory is non-empty, FAILED_PRECONDITION
   *    should be returned since the client should not retry unless
   *    they have first fixed up the directory by deleting files from it.
   *  - Use FAILED_PRECONDITION if the client performs conditional
   *    REST Get/Update/Delete on a resource and the resource on the
   *    server does not match the condition. E.g., conflicting
   *    read-modify-write on the same resource.
   */
  FAILED_PRECONDITION: 9,
  /**
   * The operation was aborted, typically due to a concurrency issue
   * like sequencer check failures, transaction aborts, etc.
   *
   * See litmus test above for deciding between FAILED_PRECONDITION,
   * ABORTED, and UNAVAILABLE.
   */
  ABORTED: 10,
  /**
   * Operation was attempted past the valid range.  E.g., seeking or
   * reading past end of file.
   *
   * Unlike INVALID_ARGUMENT, this error indicates a problem that may
   * be fixed if the system state changes. For example, a 32-bit file
   * system will generate INVALID_ARGUMENT if asked to read at an
   * offset that is not in the range [0,2^32-1], but it will generate
   * OUT_OF_RANGE if asked to read from an offset past the current
   * file size.
   *
   * There is a fair bit of overlap between FAILED_PRECONDITION and
   * OUT_OF_RANGE.  We recommend using OUT_OF_RANGE (the more specific
   * error) when it applies so that callers who are iterating through
   * a space can easily look for an OUT_OF_RANGE error to detect when
   * they are done.
   */
  OUT_OF_RANGE: 11,
  /** Operation is not implemented or not supported/enabled in this service. */
  UNIMPLEMENTED: 12,
  /**
   * Internal errors.  Means some invariants expected by underlying
   * system has been broken.  If you see one of these errors,
   * something is very broken.
   */
  INTERNAL: 13,
  /**
   * The service is currently unavailable.  This is a most likely a
   * transient condition and may be corrected by retrying with
   * a backoff.
   *
   * See litmus test above for deciding between FAILED_PRECONDITION,
   * ABORTED, and UNAVAILABLE.
   */
  UNAVAILABLE: 14,
  /** Unrecoverable data loss or corruption. */
  DATA_LOSS: 15,
  /**
   * The request does not have valid authentication credentials for the
   * operation.
   */
  UNAUTHENTICATED: 16
};

/* The comments about propagation bit flags are copied from
 * include/grpc/impl/codegen/propagation_bits.h for the purpose of including
 * them in generated documentation.
 */
/**
 * Propagation flags: these can be bitwise or-ed to form the propagation option
 * for calls.
 *
 * Users are encouraged to write propagation masks as deltas from the default.
 * i.e. write `grpc.propagate.DEFAULTS & ~grpc.propagate.DEADLINE` to disable
 * deadline propagation.
 * @memberof grpc
 * @alias grpc.propagate
 * @enum {number}
 */
exports.propagate = {
  DEADLINE: 1,
  CENSUS_STATS_CONTEXT: 2,
  CENSUS_TRACING_CONTEXT: 4,
  CANCELLATION: 8,
  DEFAULTS: 65535
};

/* Many of the following comments are copied from
 * include/grpc/impl/codegen/grpc_types.h
 */
/**
 * Call error constants. Call errors almost always indicate bugs in the gRPC
 * library, and these error codes are mainly useful for finding those bugs.
 * @memberof grpc
 * @readonly
 * @enum {number}
 */
const callError = {
  OK: 0,
  ERROR: 1,
  NOT_ON_SERVER: 2,
  NOT_ON_CLIENT: 3,
  ALREADY_INVOKED: 5,
  NOT_INVOKED: 6,
  ALREADY_FINISHED: 7,
  TOO_MANY_OPERATIONS: 8,
  INVALID_FLAGS: 9,
  INVALID_METADATA: 10,
  INVALID_MESSAGE: 11,
  NOT_SERVER_COMPLETION_QUEUE: 12,
  BATCH_TOO_BIG: 13,
  PAYLOAD_TYPE_MISMATCH: 14
};

exports.callError = callError;

/**
 * Write flags: these can be bitwise or-ed to form write options that modify
 * how data is written.
 * @memberof grpc
 * @alias grpc.writeFlags
 * @readonly
 * @enum {number}
 */
exports.writeFlags = {
  /**
   * Hint that the write may be buffered and need not go out on the wire
   * immediately. GRPC is free to buffer the message until the next non-buffered
   * write, or until writes_done, but it need not buffer completely or at all.
   */
  BUFFER_HINT: 1,
  /**
   * Force compression to be disabled for a particular write
   */
  NO_COMPRESS: 2
};

/**
 * @memberof grpc
 * @alias grpc.logVerbosity
 * @readonly
 * @enum {number}
 */
exports.logVerbosity = {
  DEBUG: 0,
  INFO: 1,
  ERROR: 2
};

/**
 * Method types: the supported RPC types
 * @memberof grpc
 * @alias grpc.methodTypes
 * @readonly
 * @enum {number}
 */
exports.methodTypes = {
  UNARY: 0,
  CLIENT_STREAMING: 1,
  SERVER_STREAMING: 2,
  BIDI_STREAMING: 3
};

/**
 * Connectivity state values
 * @memberof grpc
 * @alias grpc.connectivityState
 * @readonly
 * @enum {number}
 */
exports.connectivityState = {
  IDLE: 0,
  CONNECTING: 1,
  READY: 2,
  TRANSIENT_FAILURE: 3,
  SHUTDOWN: 4
};


/***/ }),

/***/ "./node_modules/grpc/src/credentials.js":
/*!**********************************************!*\
  !*** ./node_modules/grpc/src/credentials.js ***!
  \**********************************************/
/*! default exports */
/*! export combineCallCredentials [provided] [no usage info] [missing usage info prevents renaming] */
/*! export combineChannelCredentials [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createFromGoogleCredential [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createFromMetadataGenerator [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createInsecure [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createSsl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/*! CommonJS bailout: exports.createFromMetadataGenerator(...) prevents optimization as exports is passed as call context as 217:9-44 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/**
 * @license
 * Copyright 2015 gRPC authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

/**
 * Credentials module
 *
 * This module contains factory methods for two different credential types:
 * CallCredentials and ChannelCredentials. ChannelCredentials are things like
 * SSL credentials that can be used to secure a connection, and are used to
 * construct a Client object. CallCredentials genrally modify metadata, so they
 * can be attached to an individual method call.
 *
 * CallCredentials can be composed with other CallCredentials to create
 * CallCredentials. ChannelCredentials can be composed with CallCredentials
 * to create ChannelCredentials. No combined credential can have more than
 * one ChannelCredentials.
 *
 * For example, to create a client secured with SSL that uses Google
 * default application credentials to authenticate:
 *
 * @example
 * var channel_creds = credentials.createSsl(root_certs);
 * (new GoogleAuth()).getApplicationDefault(function(err, credential) {
 *   var call_creds = credentials.createFromGoogleCredential(credential);
 *   var combined_creds = credentials.combineChannelCredentials(
 *       channel_creds, call_creds);
 *   var client = new Client(address, combined_creds);
 * });
 *
 * @namespace grpc.credentials
 */



var grpc = __webpack_require__(/*! ./grpc_extension */ "./node_modules/grpc/src/grpc_extension.js");

/**
 * This cannot be constructed directly. Instead, instances of this class should
 * be created using the factory functions in {@link grpc.credentials}
 * @constructor grpc.credentials~CallCredentials
 */
var CallCredentials = grpc.CallCredentials;

/**
 * This cannot be constructed directly. Instead, instances of this class should
 * be created using the factory functions in {@link grpc.credentials}
 * @constructor grpc.credentials~ChannelCredentials
 */
var ChannelCredentials = grpc.ChannelCredentials;

var Metadata = __webpack_require__(/*! ./metadata.js */ "./node_modules/grpc/src/metadata.js");

var common = __webpack_require__(/*! ./common.js */ "./node_modules/grpc/src/common.js");

var constants = __webpack_require__(/*! ./constants */ "./node_modules/grpc/src/constants.js");

/**
 * @external GoogleCredential
 * @see https://github.com/google/google-auth-library-nodejs
 */

const PEM_CERT_HEADER = "-----BEGIN CERTIFICATE-----";
const PEM_CERT_FOOTER = "-----END CERTIFICATE-----";

function wrapCheckServerIdentityCallback(callback) {
  return function(hostname, cert) {
    // Parse cert from pem to a version that matches the tls.checkServerIdentity
    // format.
    // https://nodejs.org/api/tls.html#tls_tls_checkserveridentity_hostname_cert

    var pemHeaderIndex = cert.indexOf(PEM_CERT_HEADER);
    if (pemHeaderIndex === -1) {
      return new Error("Unable to parse certificate PEM.");
    }
    cert = cert.substring(pemHeaderIndex);
    var pemFooterIndex = cert.indexOf(PEM_CERT_FOOTER);
    if (pemFooterIndex === -1) {
      return new Error("Unable to parse certificate PEM.");
    }
    cert = cert.substring(PEM_CERT_HEADER.length, pemFooterIndex);
    var rawBuffer = Buffer.from(cert.replace("\n", "").replace(" ", ""), "base64");

    return callback(hostname, { raw: rawBuffer });
  }
}

/**
 * Create an SSL Credentials object. If using a client-side certificate, both
 * the second and third arguments must be passed. Additional peer verification
 * options can be passed in the fourth argument as described below.
 * @memberof grpc.credentials
 * @alias grpc.credentials.createSsl
 * @kind function
 * @param {Buffer=} root_certs The root certificate data
 * @param {Buffer=} private_key The client certificate private key, if
 *     applicable
 * @param {Buffer=} cert_chain The client certificate cert chain, if applicable
 * @param {Function} verify_options.checkServerIdentity Optional callback
 *     receiving the expected hostname and peer certificate for additional
 *     verification. The callback should return an Error if verification
 *     fails and otherwise return undefined.
 * @return {grpc.credentials~ChannelCredentials} The SSL Credentials object
 */
exports.createSsl = function(root_certs, private_key, cert_chain, verify_options) {
  // The checkServerIdentity callback from gRPC core will receive the cert as a PEM.
  // To better match the checkServerIdentity callback of Node, we wrap the callback
  // to decode the PEM and populate a cert object.
  if (verify_options && verify_options.checkServerIdentity) {
    if (typeof verify_options.checkServerIdentity !== 'function') {
      throw new TypeError("Value of checkServerIdentity must be a function.");
    }
    // Make a shallow clone of verify_options so our modification of the callback
    // isn't reflected to the caller
    var updated_verify_options = Object.assign({}, verify_options);
    updated_verify_options.checkServerIdentity = wrapCheckServerIdentityCallback(
        verify_options.checkServerIdentity);
    arguments[3] = updated_verify_options;
  }
  return ChannelCredentials.createSsl.apply(this, arguments);
}


/**
 * @callback grpc.credentials~metadataCallback
 * @param {Error} error The error, if getting metadata failed
 * @param {grpc.Metadata} metadata The metadata
 */

/**
 * @callback grpc.credentials~generateMetadata
 * @param {Object} params Parameters that can modify metadata generation
 * @param {string} params.service_url The URL of the service that the call is
 *     going to
 * @param {grpc.credentials~metadataCallback} callback
 */

/**
 * Create a gRPC credentials object from a metadata generation function. This
 * function gets the service URL and a callback as parameters. The error
 * passed to the callback can optionally have a 'code' value attached to it,
 * which corresponds to a status code that this library uses.
 * @memberof grpc.credentials
 * @alias grpc.credentials.createFromMetadataGenerator
 * @param {grpc.credentials~generateMetadata} metadata_generator The function
 *     that generates metadata
 * @return {grpc.credentials~CallCredentials} The credentials object
 */
exports.createFromMetadataGenerator = function(metadata_generator) {
  return CallCredentials.createFromPlugin(function(service_url, cb_data,
                                                   callback) {
    metadata_generator({service_url: service_url}, function(error, metadata) {
      var code = constants.status.OK;
      var message = '';
      if (error) {
        message = error.message;
        if (error.hasOwnProperty('code') && Number.isFinite(error.code)) {
          code = error.code;
        } else {
          code = constants.status.UNAUTHENTICATED;
        }
        if (!metadata) {
          metadata = new Metadata();
        }
      }
      callback(code, message, metadata._getCoreRepresentation(), cb_data);
    });
  });
};

function getAuthorizationHeaderFromGoogleCredential(google_credential, url, callback) {
  // google-auth-library pre-v2.0.0 does not have getRequestHeaders
  // but has getRequestMetadata, which is deprecated in v2.0.0
  if (typeof google_credential.getRequestHeaders === 'function') {
    google_credential.getRequestHeaders(url)
      .then(function(header) {
        callback(null, header.Authorization);
      })
      .catch(function(err) {
        callback(err);
        return;
      });
  } else {
    google_credential.getRequestMetadata(url, function(err, header) {
      if (err) {
        callback(err);
        return;
      }
      callback(null, header.Authorization);
    });
  }
}

/**
 * Create a gRPC credential from a Google credential object.
 * @memberof grpc.credentials
 * @alias grpc.credentials.createFromGoogleCredential
 * @param {external:GoogleCredential} google_credential The Google credential
 *     object to use
 * @return {grpc.credentials~CallCredentials} The resulting credentials object
 */
exports.createFromGoogleCredential = function(google_credential) {
  return exports.createFromMetadataGenerator(function(auth_context, callback) {
    var service_url = auth_context.service_url;
    getAuthorizationHeaderFromGoogleCredential(google_credential, service_url,
      function(err, authHeader) {
        if (err) {
          common.log(constants.logVerbosity.INFO, 'Auth error:' + err);
          callback(err);
          return;
        }
        var metadata = new Metadata();
        metadata.add('authorization', authHeader);
        callback(null, metadata);
      });
  });
};

/**
 * Combine a ChannelCredentials with any number of CallCredentials into a single
 * ChannelCredentials object.
 * @memberof grpc.credentials
 * @alias grpc.credentials.combineChannelCredentials
 * @param {grpc.credentials~ChannelCredentials} channel_credential The ChannelCredentials to
 *     start with
 * @param {...grpc.credentials~CallCredentials} credentials The CallCredentials to compose
 * @return {grpc.credentials~ChannelCredentials} A credentials object that combines all of the
 *     input credentials
 */
exports.combineChannelCredentials = function(channel_credential) {
  var current = channel_credential;
  for (var i = 1; i < arguments.length; i++) {
    current = current.compose(arguments[i]);
  }
  return current;
};

/**
 * Combine any number of CallCredentials into a single CallCredentials object
 * @memberof grpc.credentials
 * @alias grpc.credentials.combineCallCredentials
 * @param {...grpc.credentials~CallCredentials} credentials The CallCredentials to compose
 * @return {grpc.credentials~CallCredentials} A credentials object that combines all of the input
 *     credentials
 */
exports.combineCallCredentials = function() {
  var current = arguments[0];
  for (var i = 1; i < arguments.length; i++) {
    current = current.compose(arguments[i]);
  }
  return current;
};

/**
 * Create an insecure credentials object. This is used to create a channel that
 * does not use SSL. This cannot be composed with anything.
 * @memberof grpc.credentials
 * @alias grpc.credentials.createInsecure
 * @kind function
 * @return {grpc.credentials~ChannelCredentials} The insecure credentials object
 */
exports.createInsecure = ChannelCredentials.createInsecure;


/***/ }),

/***/ "./node_modules/grpc/src/grpc_extension.js":
/*!*************************************************!*\
  !*** ./node_modules/grpc/src/grpc_extension.js ***!
  \*************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_require__, module */
/*! CommonJS bailout: module.exports is used directly at 62:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/**
 * @license
 * Copyright 2016 gRPC authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

/**
 * @module
 * @private
 */



var binary = __webpack_require__(/*! node-pre-gyp/lib/pre-binding */ "./node_modules/node-pre-gyp/lib/pre-binding.js");
var path = __webpack_require__(/*! path */ "path");
var binding_path =
    binary.find(path.resolve(path.join(__dirname, '../package.json')));
var binding;
try {
  binding = __webpack_require__("./node_modules/grpc/src sync recursive")(binding_path);
} catch (e) {
  let fs = __webpack_require__(/*! fs */ "fs");
  let searchPath = path.dirname(path.dirname(binding_path));
  let searchName = path.basename(path.dirname(binding_path));
  let foundNames;
  try {
    foundNames = fs.readdirSync(searchPath);
  } catch (readDirError) {
    let message = `The gRPC binary module was not installed. This may be fixed by running "npm rebuild"
Original error: ${e.message}`;
    let error = new Error(message);
    error.code = e.code;
    throw error;
  }
  if (foundNames.indexOf(searchName) === -1) {
    let message = `Failed to load gRPC binary module because it was not installed for the current system
Expected directory: ${searchName}
Found: [${foundNames.join(', ')}]
This problem can often be fixed by running "npm rebuild" on the current system
Original error: ${e.message}`;
    let error = new Error(message);
    error.code = e.code;
    throw error;
  } else {
    e.message = `Failed to load ${binding_path}. ${e.message}`;
    throw e;
  }
}

module.exports = binding;


/***/ }),

/***/ "./node_modules/grpc/src/metadata.js":
/*!*******************************************!*\
  !*** ./node_modules/grpc/src/metadata.js ***!
  \*******************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_require__, module */
/*! CommonJS bailout: module.exports is used directly at 250:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/**
 * @license
 * Copyright 2015 gRPC authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */



var clone = __webpack_require__(/*! lodash.clone */ "./node_modules/lodash.clone/index.js");

var grpc = __webpack_require__(/*! ./grpc_extension */ "./node_modules/grpc/src/grpc_extension.js");

const common = __webpack_require__(/*! ./common */ "./node_modules/grpc/src/common.js");
const logVerbosity = __webpack_require__(/*! ./constants */ "./node_modules/grpc/src/constants.js").logVerbosity;

const IDEMPOTENT_REQUEST_FLAG = 0x10;
const WAIT_FOR_READY_FLAG = 0x20;
const CACHEABLE_REQUEST_FLAG = 0x40;
const WAIT_FOR_READY_EXPLICITLY_SET_FLAG = 0x80;
const CORKED_FLAG = 0x100;

/**
 * Class for storing metadata. Keys are normalized to lowercase ASCII.
 * @memberof grpc
 * @constructor
 * @param {Object=} options Boolean options for the beginning of the call.
 *     These options only have any effect when passed at the beginning of
 *     a client request.
 * @param {boolean=} [options.idempotentRequest=false] Signal that the request
 *     is idempotent
 * @param {boolean=} [options.waitForReady=true] Signal that the call should
 *     not return UNAVAILABLE before it has started.
 * @param {boolean=} [options.cacheableRequest=false] Signal that the call is
 *     cacheable. GRPC is free to use GET verb.
 * @param {boolean=} [options.corked=false] Signal that the initial metadata
 *     should be corked.
 * @example
 * var metadata = new metadata_module.Metadata();
 * metadata.set('key1', 'value1');
 * metadata.add('key1', 'value2');
 * metadata.get('key1') // returns ['value1', 'value2']
 */
function Metadata(options) {
  this._internal_repr = {};
  this.setOptions(options);
}

function normalizeKey(key) {
  key = key.toLowerCase();
  if (grpc.metadataKeyIsLegal(key)) {
    return key;
  } else {
    throw new Error('Metadata key"' + key + '" contains illegal characters');
  }
}

function validate(key, value) {
  if (grpc.metadataKeyIsBinary(key)) {
    if (!(value instanceof Buffer)) {
      throw new Error('keys that end with \'-bin\' must have Buffer values');
    }
  } else {
    if (typeof value !== 'string') {
      throw new Error(
          'keys that don\'t end with \'-bin\' must have String values');
    }
    if (!grpc.metadataNonbinValueIsLegal(value)) {
      throw new Error('Metadata string value "' + value +
                      '" contains illegal characters');
    }
  }
}

/**
 * Sets the given value for the given key, replacing any other values associated
 * with that key. Normalizes the key.
 * @param {String} key The key to set
 * @param {String|Buffer} value The value to set. Must be a buffer if and only
 *     if the normalized key ends with '-bin'
 */
Metadata.prototype.set = function(key, value) {
  key = normalizeKey(key);
  validate(key, value);
  this._internal_repr[key] = [value];
};

/**
 * Adds the given value for the given key. Normalizes the key.
 * @param {String} key The key to add to.
 * @param {String|Buffer} value The value to add. Must be a buffer if and only
 *     if the normalized key ends with '-bin'
 */
Metadata.prototype.add = function(key, value) {
  key = normalizeKey(key);
  validate(key, value);
  if (!this._internal_repr[key]) {
    this._internal_repr[key] = [];
  }
  this._internal_repr[key].push(value);
};

/**
 * Remove the given key and any associated values. Normalizes the key.
 * @param {String} key The key to remove
 */
Metadata.prototype.remove = function(key) {
  key = normalizeKey(key);
  if (Object.prototype.hasOwnProperty.call(this._internal_repr, key)) {
    delete this._internal_repr[key];
  }
};

/**
 * Gets a list of all values associated with the key. Normalizes the key.
 * @param {String} key The key to get
 * @return {Array.<String|Buffer>} The values associated with that key
 */
Metadata.prototype.get = function(key) {
  key = normalizeKey(key);
  if (Object.prototype.hasOwnProperty.call(this._internal_repr, key)) {
    return this._internal_repr[key];
  } else {
    return [];
  }
};

/**
 * Get a map of each key to a single associated value. This reflects the most
 * common way that people will want to see metadata.
 * @return {Object.<String,String|Buffer>} A key/value mapping of the metadata
 */
Metadata.prototype.getMap = function() {
  var result = {};
  Object.keys(this._internal_repr).forEach(key => {
    const values = this._internal_repr[key];
    if(values.length > 0) {
      result[key] = values[0];
    }
  });
  return result;
};

/**
 * Clone the metadata object.
 * @return {grpc.Metadata} The new cloned object
 */
Metadata.prototype.clone = function() {
  var copy = new Metadata();
  Object.keys(this._internal_repr).forEach(key => {
    const value = this._internal_repr[key];
    copy._internal_repr[key] = clone(value);
  });
  copy.flags = this.flags;
  return copy;
};

/**
 * Set options on the metadata object
 * @param {Object} options Boolean options for the beginning of the call.
 *     These options only have any effect when passed at the beginning of
 *     a client request.
 * @param {boolean=} [options.idempotentRequest=false] Signal that the request
 *     is idempotent
 * @param {boolean=} [options.waitForReady=true] Signal that the call should
 *     not return UNAVAILABLE before it has started.
 * @param {boolean=} [options.cacheableRequest=false] Signal that the call is
 *     cacheable. GRPC is free to use GET verb.
 * @param {boolean=} [options.corked=false] Signal that the initial metadata
 *     should be corked.
 */
Metadata.prototype.setOptions = function(options) {
  let flags = 0;
  if (options) {
    if (options.idempotentRequest) {
      flags |= IDEMPOTENT_REQUEST_FLAG;
    }
    if (options.hasOwnProperty('waitForReady')) {
      flags |= WAIT_FOR_READY_EXPLICITLY_SET_FLAG;
      if (options.waitForReady) {
        flags |= WAIT_FOR_READY_FLAG;
      }
    }
    if (options.cacheableRequest) {
      flags |= CACHEABLE_REQUEST_FLAG;
    }
    if (options.corked) {
      flags |= CORKED_FLAG;
    }
  }
  this.flags = flags;
}

/**
 * Metadata representation as passed to and the native addon
 * @typedef {object} grpc~CoreMetadata
 * @param {Object.<String, Array.<String|Buffer>>} metadata The metadata
 * @param {number} flags Metadata flags
 */

/**
 * Gets the metadata in the format used by interal code. Intended for internal
 * use only. API stability is not guaranteed.
 * @private
 * @return {grpc~CoreMetadata} The metadata
 */
Metadata.prototype._getCoreRepresentation = function() {
  return {
    metadata: this._internal_repr,
    flags: this.flags
  };
};

/**
 * Creates a Metadata object from a metadata map in the internal format.
 * Intended for internal use only. API stability is not guaranteed.
 * @private
 * @param {grpc~CoreMetadata} metadata The metadata object from core
 * @return {Metadata} The new Metadata object
 */
Metadata._fromCoreRepresentation = function(metadata) {
  var newMetadata = new Metadata();
  if (metadata) {
    Object.keys(metadata.metadata).forEach(key => {
      const value = metadata.metadata[key];
      if (!grpc.metadataKeyIsLegal(key)) {
        common.log(logVerbosity.ERROR,
          "Warning: possibly corrupted metadata key received: " +
          key + ": " + value +
          ". Please report this at https://github.com/grpc/grpc-node/issues/1173.");
      }
      newMetadata._internal_repr[key] = clone(value);
    });
  }
  newMetadata.flags = metadata.flags;
  return newMetadata;
};

module.exports = Metadata;


/***/ }),

/***/ "./node_modules/grpc/src/protobuf_js_5_common.js":
/*!*******************************************************!*\
  !*** ./node_modules/grpc/src/protobuf_js_5_common.js ***!
  \*******************************************************/
/*! default exports */
/*! export deserializeCls [provided] [no usage info] [missing usage info prevents renaming] */
/*! export fullyQualifiedName [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getProtobufServiceAttrs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isProbablyProtobufJs5 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export loadObject [provided] [no usage info] [missing usage info prevents renaming] */
/*! export serializeCls [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/**
 * @license
 * Copyright 2017 gRPC authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

/**
 * @module
 * @private
 */



var camelCase = __webpack_require__(/*! lodash.camelcase */ "./node_modules/lodash.camelcase/index.js");
var client = __webpack_require__(/*! ./client */ "./node_modules/grpc/src/client.js");
var common = __webpack_require__(/*! ./common */ "./node_modules/grpc/src/common.js");

/**
 * Get a function that deserializes a specific type of protobuf.
 * @param {function()} cls The constructor of the message type to deserialize
 * @param {bool=} binaryAsBase64 Deserialize bytes fields as base64 strings
 *     instead of Buffers. Defaults to false
 * @param {bool=} longsAsStrings Deserialize long values as strings instead of
 *     objects. Defaults to true
 * @return {function(Buffer):cls} The deserialization function
 */
exports.deserializeCls = function deserializeCls(cls, options) {
  /**
   * Deserialize a buffer to a message object
   * @param {Buffer} arg_buf The buffer to deserialize
   * @return {cls} The resulting object
   */
  return function deserialize(arg_buf) {
    // Convert to a native object with binary fields as Buffers (first argument)
    // and longs as strings (second argument)
    return cls.decode(arg_buf).toRaw(options.binaryAsBase64,
                                     options.longsAsStrings);
  };
};

var deserializeCls = exports.deserializeCls;

/**
 * Get a function that serializes objects to a buffer by protobuf class.
 * @param {function()} Cls The constructor of the message type to serialize
 * @return {function(Cls):Buffer} The serialization function
 */
exports.serializeCls = function serializeCls(Cls) {
  /**
   * Serialize an object to a Buffer
   * @param {Object} arg The object to serialize
   * @return {Buffer} The serialized object
   */
  return function serialize(arg) {
    return Buffer.from(new Cls(arg).encode().toBuffer());
  };
};

var serializeCls = exports.serializeCls;

/**
 * Get the fully qualified (dotted) name of a ProtoBuf.Reflect value.
 * @param {ProtoBuf.Reflect.Namespace} value The value to get the name of
 * @return {string} The fully qualified name of the value
 */
exports.fullyQualifiedName = function fullyQualifiedName(value) {
  if (value === null || value === undefined) {
    return '';
  }
  var name = value.name;
  var parent_name = fullyQualifiedName(value.parent);
  if (parent_name !== '') {
    name = parent_name + '.' + name;
  }
  return name;
};

var fullyQualifiedName = exports.fullyQualifiedName;

/**
 * Return a map from method names to method attributes for the service.
 * @param {ProtoBuf.Reflect.Service} service The service to get attributes for
 * @param {Object=} options Options to apply to these attributes
 * @return {Object} The attributes map
 */
exports.getProtobufServiceAttrs = function getProtobufServiceAttrs(service,
                                                                   options) {
  var prefix = '/' + fullyQualifiedName(service) + '/';
  var binaryAsBase64, longsAsStrings;
  if (options) {
    binaryAsBase64 = options.binaryAsBase64;
    longsAsStrings = options.longsAsStrings;
  }
  /* This slightly awkward construction is used to make sure we only use
     lodash@3.10.1-compatible functions. A previous version used
     _.fromPairs, which would be cleaner, but was introduced in lodash
     version 4 */
  return common.zipObject(service.children.map(function(method) {
    return camelCase(method.name);
  }), service.children.map(function(method) {
    return {
      originalName: method.name,
      path: prefix + method.name,
      requestStream: method.requestStream,
      responseStream: method.responseStream,
      requestType: method.resolvedRequestType,
      responseType: method.resolvedResponseType,
      requestSerialize: serializeCls(method.resolvedRequestType.build()),
      requestDeserialize: deserializeCls(method.resolvedRequestType.build(),
                                         options),
      responseSerialize: serializeCls(method.resolvedResponseType.build()),
      responseDeserialize: deserializeCls(method.resolvedResponseType.build(),
                                          options)
    };
  }));
};

var getProtobufServiceAttrs = exports.getProtobufServiceAttrs;

/**
 * Load a gRPC object from an existing ProtoBuf.Reflect object.
 * @param {ProtoBuf.Reflect.Namespace} value The ProtoBuf object to load.
 * @param {Object=} options Options to apply to the loaded object
 * @return {Object<string, *>} The resulting gRPC object
 */
exports.loadObject = function loadObject(value, options) {
  var result = {};
  if (!value) {
    return value;
  }
  if (value.hasOwnProperty('ns')) {
    return loadObject(value.ns, options);
  }
  if (value.className === 'Namespace') {
    Object.keys(value.children).forEach(key => {
      const child = value.children[key];
      result[child.name] = loadObject(child, options);
    });
    return result;
  } else if (value.className === 'Service') {
    return client.makeClientConstructor(getProtobufServiceAttrs(value, options),
                                        options);
  } else if (value.className === 'Message' || value.className === 'Enum') {
    return value.build();
  } else {
    return value;
  }
};

/**
 * The primary purpose of this method is to distinguish between reflection
 * objects from different versions of ProtoBuf.js. This is just a heuristic,
 * checking for properties that are (currently) specific to this version of
 * ProtoBuf.js
 * @param {Object} obj The object to check
 * @return {boolean} Whether the object appears to be a Protobuf.js 5
 *   ReflectionObject
 */
exports.isProbablyProtobufJs5 = function isProbablyProtobufJs5(obj) {
  return Array.isArray(obj.children) && (typeof obj.build === 'function');
};


/***/ }),

/***/ "./node_modules/grpc/src/protobuf_js_6_common.js":
/*!*******************************************************!*\
  !*** ./node_modules/grpc/src/protobuf_js_6_common.js ***!
  \*******************************************************/
/*! default exports */
/*! export deserializeCls [provided] [no usage info] [missing usage info prevents renaming] */
/*! export fullyQualifiedName [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getProtobufServiceAttrs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isProbablyProtobufJs6 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export loadObject [provided] [no usage info] [missing usage info prevents renaming] */
/*! export serializeCls [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/**
 * @license
 * Copyright 2017 gRPC authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

/**
 * @module
 * @private
 */



var camelCase = __webpack_require__(/*! lodash.camelcase */ "./node_modules/lodash.camelcase/index.js");
var client = __webpack_require__(/*! ./client */ "./node_modules/grpc/src/client.js");
var common = __webpack_require__(/*! ./common */ "./node_modules/grpc/src/common.js");

/**
 * Get a function that deserializes a specific type of protobuf.
 * @param {function()} cls The constructor of the message type to deserialize
 * @param {bool=} binaryAsBase64 Deserialize bytes fields as base64 strings
 *     instead of Buffers. Defaults to false
 * @param {bool=} longsAsStrings Deserialize long values as strings instead of
 *     objects. Defaults to true
 * @return {function(Buffer):cls} The deserialization function
 */
exports.deserializeCls = function deserializeCls(cls, options) {
  var conversion_options = {
    defaults: true,
    bytes: options.binaryAsBase64 ? String : Buffer,
    longs: options.longsAsStrings ? String : null,
    enums: options.enumsAsStrings ? String : null,
    oneofs: true
  };
  /**
   * Deserialize a buffer to a message object
   * @param {Buffer} arg_buf The buffer to deserialize
   * @return {cls} The resulting object
   */
  return function deserialize(arg_buf) {
    return cls.toObject(cls.decode(arg_buf), conversion_options);
  };
};

var deserializeCls = exports.deserializeCls;

/**
 * Get a function that serializes objects to a buffer by protobuf class.
 * @param {function()} Cls The constructor of the message type to serialize
 * @return {function(Cls):Buffer} The serialization function
 */
exports.serializeCls = function serializeCls(cls) {
  /**
   * Serialize an object to a Buffer
   * @param {Object} arg The object to serialize
   * @return {Buffer} The serialized object
   */
  return function serialize(arg) {
    var message = cls.fromObject(arg);
    return cls.encode(message).finish();
  };
};

var serializeCls = exports.serializeCls;

/**
 * Get the fully qualified (dotted) name of a ProtoBuf.Reflect value.
 * @param {ProtoBuf.ReflectionObject} value The value to get the name of
 * @return {string} The fully qualified name of the value
 */
exports.fullyQualifiedName = function fullyQualifiedName(value) {
  if (value === null || value === undefined) {
    return '';
  }
  var name = value.name;
  var parent_fqn = fullyQualifiedName(value.parent);
  if (parent_fqn !== '') {
    name = parent_fqn + '.' + name;
  }
  return name;
};

var fullyQualifiedName = exports.fullyQualifiedName;

/**
 * Return a map from method names to method attributes for the service.
 * @param {ProtoBuf.Service} service The service to get attributes for
 * @param {Object=} options Options to apply to these attributes
 * @return {Object} The attributes map
 */
exports.getProtobufServiceAttrs = function getProtobufServiceAttrs(service,
                                                                   options) {
  var prefix = '/' + fullyQualifiedName(service) + '/';
  service.resolveAll();
  return common.zipObject(service.methodsArray.map(function(method) {
    return camelCase(method.name);
  }), service.methodsArray.map(function(method) {
    return {
      originalName: method.name,
      path: prefix + method.name,
      requestStream: !!method.requestStream,
      responseStream: !!method.responseStream,
      requestType: method.resolvedRequestType,
      responseType: method.resolvedResponseType,
      requestSerialize: serializeCls(method.resolvedRequestType),
      requestDeserialize: deserializeCls(method.resolvedRequestType, options),
      responseSerialize: serializeCls(method.resolvedResponseType),
      responseDeserialize: deserializeCls(method.resolvedResponseType, options)
    };
  }));
};

var getProtobufServiceAttrs = exports.getProtobufServiceAttrs;

exports.loadObject = function loadObject(value, options) {
  var result = {};
  if (!value) {
    return value;
  }
  if (value.hasOwnProperty('methods')) {
    // It's a service object
    var service_attrs = getProtobufServiceAttrs(value, options);
    return client.makeClientConstructor(service_attrs);
  }

  if (value.hasOwnProperty('nested')) {
    // It's a namespace or root object
    if (value.nested !== null && value.nested !== undefined) {
      var values = Object.keys(value.nested).map(key => value.nested[key]);
      values.forEach(nested => {
        result[nested.name] = loadObject(nested, options);
      });
    }
    return result;
  }

  // Otherwise, it's not something we need to change
  return value;
};

/**
 * The primary purpose of this method is to distinguish between reflection
 * objects from different versions of ProtoBuf.js. This is just a heuristic,
 * checking for properties that are (currently) specific to this version of
 * ProtoBuf.js
 * @param {Object} obj The object to check
 * @return {boolean} Whether the object appears to be a Protobuf.js 6
 *   ReflectionObject
 */
exports.isProbablyProtobufJs6 = function isProbablyProtobufJs6(obj) {
  return (typeof obj.root === 'object') && (typeof obj.resolve === 'function');
};


/***/ }),

/***/ "./node_modules/grpc/src/server.js":
/*!*****************************************!*\
  !*** ./node_modules/grpc/src/server.js ***!
  \*****************************************/
/*! default exports */
/*! export Server [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/**
 * @license
 * Copyright 2015 gRPC authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */



var grpc = __webpack_require__(/*! ./grpc_extension */ "./node_modules/grpc/src/grpc_extension.js");

var common = __webpack_require__(/*! ./common */ "./node_modules/grpc/src/common.js");

var Metadata = __webpack_require__(/*! ./metadata */ "./node_modules/grpc/src/metadata.js");

var constants = __webpack_require__(/*! ./constants */ "./node_modules/grpc/src/constants.js");

var stream = __webpack_require__(/*! stream */ "stream");

var Readable = stream.Readable;
var Writable = stream.Writable;
var Duplex = stream.Duplex;
var util = __webpack_require__(/*! util */ "util");

var EventEmitter = __webpack_require__(/*! events */ "events").EventEmitter;

/**
 * Handle an error on a call by sending it as a status
 * @private
 * @param {grpc.internal~Call} call The call to send the error on
 * @param {(Object|Error)} error The error object
 */
function handleError(call, error) {
  var statusMetadata = new Metadata();
  var status = {
    code: constants.status.UNKNOWN,
    details: 'Unknown Error'
  };
  if (error.hasOwnProperty('message')) {
    status.details = error.message;
  }
  if (error.hasOwnProperty('code') && Number.isInteger(error.code)) {
    status.code = error.code;
    if (error.hasOwnProperty('details')) {
      status.details = error.details;
    }
    if (status.code == constants.status.INTERNAL) {
      common.log(constants.logVerbosity.ERROR, error);
    }
  }
  if (error.hasOwnProperty('metadata')) {
    statusMetadata = error.metadata;
  }
  status.metadata = statusMetadata._getCoreRepresentation();
  var error_batch = {};
  if (!call.metadataSent) {
    error_batch[grpc.opType.SEND_INITIAL_METADATA] =
        (new Metadata())._getCoreRepresentation();
  }
  error_batch[grpc.opType.SEND_STATUS_FROM_SERVER] = status;
  call.startBatch(error_batch, function(){});
}

/**
 * Send a response to a unary or client streaming call.
 * @private
 * @param {grpc.Call} call The call to respond on
 * @param {*} value The value to respond with
 * @param {grpc~serialize} serialize Serialization function for the
 *     response
 * @param {grpc.Metadata=} metadata Optional trailing metadata to send with
 *     status
 * @param {number=} [flags=0] Flags for modifying how the message is sent.
 */
function sendUnaryResponse(call, value, serialize, metadata, flags) {
  var end_batch = {};
  var statusMetadata = new Metadata();
  var status = {
    code: constants.status.OK,
    details: 'OK'
  };
  if (metadata) {
    statusMetadata = metadata;
  }
  var message;
  try {
    message = serialize(value);
  } catch (e) {
    e.code = constants.status.INTERNAL;
    handleError(call, e);
    return;
  }
  status.metadata = statusMetadata._getCoreRepresentation();
  if (!call.metadataSent) {
    end_batch[grpc.opType.SEND_INITIAL_METADATA] =
        (new Metadata())._getCoreRepresentation();
    call.metadataSent = true;
  }
  message.grpcWriteFlags = flags;
  end_batch[grpc.opType.SEND_MESSAGE] = message;
  end_batch[grpc.opType.SEND_STATUS_FROM_SERVER] = status;
  call.startBatch(end_batch, function (){});
}

/**
 * Initialize a writable stream. This is used for both the writable and duplex
 * stream constructors.
 * @private
 * @param {Writable} stream The stream to set up
 * @param {function(*):Buffer=} Serialization function for responses
 */
function setUpWritable(stream, serialize) {
  stream.finished = false;
  stream.status = {
    code : constants.status.OK,
    details : 'OK',
    metadata : new Metadata()
  };
  stream.serialize = common.wrapIgnoreNull(serialize);
  function sendStatus() {
    var batch = {};
    if (!stream.call.metadataSent) {
      stream.call.metadataSent = true;
      batch[grpc.opType.SEND_INITIAL_METADATA] =
          (new Metadata())._getCoreRepresentation();
    }

    if (stream.status.metadata) {
      stream.status.metadata = stream.status.metadata._getCoreRepresentation();
    }
    batch[grpc.opType.SEND_STATUS_FROM_SERVER] = stream.status;
    stream.call.startBatch(batch, function(){});
  }
  stream.on('finish', sendStatus);
  /**
   * Set the pending status to a given error status. If the error does not have
   * code or details properties, the code will be set to grpc.status.UNKNOWN
   * and the details will be set to 'Unknown Error'.
   * @param {Error} err The error object
   */
  function setStatus(err) {
    var code = constants.status.UNKNOWN;
    var details = 'Unknown Error';
    var metadata = new Metadata();
    if (err.hasOwnProperty('message')) {
      details = err.message;
    }
    if (err.hasOwnProperty('code')) {
      code = err.code;
      if (err.hasOwnProperty('details')) {
        details = err.details;
      }
    }
    if (err.hasOwnProperty('metadata')) {
      metadata = err.metadata;
    }
    stream.status = {code: code, details: details, metadata: metadata};
  }
  /**
   * Terminate the call. This includes indicating that reads are done, draining
   * all pending writes, and sending the given error as a status
   * @param {Error} err The error object
   * @this GrpcServerStream
   */
  function terminateCall(err) {
    // Drain readable data
    setStatus(err);
    stream.end();
  }
  stream.on('error', terminateCall);
  /**
   * Override of Writable#end method that allows for sending metadata with a
   * success status.
   * @param {Metadata=} metadata Metadata to send with the status
   */
  stream.end = function(metadata) {
    if (metadata) {
      stream.status.metadata = metadata;
    }
    Writable.prototype.end.call(this);
  };
}

/**
 * Initialize a readable stream. This is used for both the readable and duplex
 * stream constructors.
 * @private
 * @param {Readable} stream The stream to initialize
 * @param {grpc~deserialize} deserialize Deserialization function for
 *     incoming data.
 */
function setUpReadable(stream, deserialize) {
  stream.deserialize = common.wrapIgnoreNull(deserialize);
  stream.finished = false;
  stream.reading = false;

  stream.terminate = function() {
    stream.finished = true;
    stream.on('data', function() {});
  };

  stream.on('cancelled', function() {
    stream.terminate();
  });
}

/**
 * Emitted when the call has been cancelled. After this has been emitted, the
 * call's `cancelled` property will be set to `true`.
 * @event grpc~ServerUnaryCall~cancelled
 */

util.inherits(ServerUnaryCall, EventEmitter);

/**
 * An EventEmitter. Used for unary calls.
 * @constructor grpc~ServerUnaryCall
 * @extends external:EventEmitter
 * @param {grpc.internal~Call} call The call object associated with the request
 * @param {grpc.Metadata} metadata The request metadata from the client
 */
function ServerUnaryCall(call, metadata) {
  EventEmitter.call(this);
  this.call = call;
  /**
   * Indicates if the call has been cancelled
   * @member {boolean} grpc~ServerUnaryCall#cancelled
   */
  this.cancelled = false;
  /**
   * The request metadata from the client
   * @member {grpc.Metadata} grpc~ServerUnaryCall#metadata
   */
  this.metadata = metadata;
  /**
   * The request message from the client
   * @member {*} grpc~ServerUnaryCall#request
   */
  this.request = undefined;
}

/**
 * Emitted when the call has been cancelled. After this has been emitted, the
 * call's `cancelled` property will be set to `true`.
 * @event grpc~ServerWritableStream~cancelled
 */

util.inherits(ServerWritableStream, Writable);

/**
 * A stream that the server can write to. Used for calls that are streaming from
 * the server side.
 * @constructor grpc~ServerWritableStream
 * @extends external:Writable
 * @borrows grpc~ServerUnaryCall#sendMetadata as
 *     grpc~ServerWritableStream#sendMetadata
 * @borrows grpc~ServerUnaryCall#getPeer as grpc~ServerWritableStream#getPeer
 * @param {grpc.internal~Call} call The call object to send data with
 * @param {grpc.Metadata} metadata The request metadata from the client
 * @param {grpc~serialize} serialize Serialization function for writes
 */
function ServerWritableStream(call, metadata, serialize) {
  Writable.call(this, {objectMode: true});
  this.call = call;

  this.finished = false;
  setUpWritable(this, serialize);
  /**
   * Indicates if the call has been cancelled
   * @member {boolean} grpc~ServerWritableStream#cancelled
   */
  this.cancelled = false;
  /**
   * The request metadata from the client
   * @member {grpc.Metadata} grpc~ServerWritableStream#metadata
   */
  this.metadata = metadata;
  /**
   * The request message from the client
   * @member {*} grpc~ServerWritableStream#request
   */
  this.request = undefined;
}

/**
 * Start writing a chunk of data. This is an implementation of a method required
 * for implementing stream.Writable.
 * @private
 * @param {Buffer} chunk The chunk of data to write
 * @param {string} encoding Used to pass write flags
 * @param {function(Error=)} callback Callback to indicate that the write is
 *     complete
 */
function _write(chunk, encoding, callback) {
  /* jshint validthis: true */
  var batch = {};
  var self = this;
  var message;
  try {
    message = this.serialize(chunk);
  } catch (e) {
    e.code = constants.status.INTERNAL;
    callback(e);
    return;
  }
  if (!this.call.metadataSent) {
    batch[grpc.opType.SEND_INITIAL_METADATA] =
        (new Metadata())._getCoreRepresentation();
    this.call.metadataSent = true;
  }
  if (Number.isFinite(encoding)) {
    /* Attach the encoding if it is a finite number. This is the closest we
     * can get to checking that it is valid flags */
    message.grpcWriteFlags = encoding;
  }
  batch[grpc.opType.SEND_MESSAGE] = message;
  this.call.startBatch(batch, function(err, value) {
    if (err) {
      self.emit('error', err);
      return;
    }
    callback();
  });
}

ServerWritableStream.prototype._write = _write;

/**
 * Emitted when the call has been cancelled. After this has been emitted, the
 * call's `cancelled` property will be set to `true`.
 * @event grpc~ServerReadableStream~cancelled
 */

util.inherits(ServerReadableStream, Readable);

/**
 * A stream that the server can read from. Used for calls that are streaming
 * from the client side.
 * @constructor grpc~ServerReadableStream
 * @extends external:Readable
 * @borrows grpc~ServerUnaryCall#sendMetadata as
 *     grpc~ServerReadableStream#sendMetadata
 * @borrows grpc~ServerUnaryCall#getPeer as grpc~ServerReadableStream#getPeer
 * @param {grpc.internal~Call} call The call object to read data with
 * @param {grpc.Metadata} metadata The request metadata from the client
 * @param {grpc~deserialize} deserialize Deserialization function for reads
 */
function ServerReadableStream(call, metadata, deserialize) {
  Readable.call(this, {objectMode: true});
  this.call = call;
  setUpReadable(this, deserialize);
  /**
   * Indicates if the call has been cancelled
   * @member {boolean} grpc~ServerReadableStream#cancelled
   */
  this.cancelled = false;
  /**
   * The request metadata from the client
   * @member {grpc.Metadata} grpc~ServerReadableStream#metadata
   */
  this.metadata = metadata;
}

/**
 * Start reading from the gRPC data source. This is an implementation of a
 * method required for implementing stream.Readable
 * @access private
 * @param {number} size Ignored
 */
function _read(size) {
  /* jshint validthis: true */
  var self = this;
  /**
   * Callback to be called when a READ event is received. Pushes the data onto
   * the read queue and starts reading again if applicable
   * @param {grpc.Event} event READ event object
   */
  function readCallback(err, event) {
    if (err) {
      self.terminate();
      return;
    }
    if (self.finished) {
      self.push(null);
      return;
    }
    var data = event.read;
    var deserialized;
    try {
      deserialized = self.deserialize(data);
    } catch (e) {
      e.code = constants.status.INTERNAL;
      self.emit('error', e);
      return;
    }
    if (self.push(deserialized) && data !== null) {
      var read_batch = {};
      read_batch[grpc.opType.RECV_MESSAGE] = true;
      self.call.startBatch(read_batch, readCallback);
    } else {
      self.reading = false;
    }
  }
  if (self.finished) {
    self.push(null);
  } else {
    if (!self.reading) {
      self.reading = true;
      var batch = {};
      batch[grpc.opType.RECV_MESSAGE] = true;
      self.call.startBatch(batch, readCallback);
    }
  }
}

ServerReadableStream.prototype._read = _read;

/**
 * Emitted when the call has been cancelled. After this has been emitted, the
 * call's `cancelled` property will be set to `true`.
 * @event grpc~ServerDuplexStream~cancelled
 */

util.inherits(ServerDuplexStream, Duplex);

/**
 * A stream that the server can read from or write to. Used for calls with
 * duplex streaming.
 * @constructor grpc~ServerDuplexStream
 * @extends external:Duplex
 * @borrows grpc~ServerUnaryCall#sendMetadata as
 *     grpc~ServerDuplexStream#sendMetadata
 * @borrows grpc~ServerUnaryCall#getPeer as grpc~ServerDuplexStream#getPeer
 * @param {grpc.internal~Call} call Call object to proxy
 * @param {grpc.Metadata} metadata The request metadata from the client
 * @param {grpc~serialize} serialize Serialization function for requests
 * @param {grpc~deserialize} deserialize Deserialization function for
 *     responses
 */
function ServerDuplexStream(call, metadata, serialize, deserialize) {
  Duplex.call(this, {objectMode: true});
  this.call = call;
  setUpWritable(this, serialize);
  setUpReadable(this, deserialize);
  /**
   * Indicates if the call has been cancelled
   * @member {boolean} grpc~ServerReadableStream#cancelled
   */
  this.cancelled = false;
  /**
   * The request metadata from the client
   * @member {grpc.Metadata} grpc~ServerReadableStream#metadata
   */
  this.metadata = metadata;
}

ServerDuplexStream.prototype._read = _read;
ServerDuplexStream.prototype._write = _write;

/**
 * Send the initial metadata for a writable stream.
 * @alias grpc~ServerUnaryCall#sendMetadata
 * @param {grpc.Metadata} responseMetadata Metadata to send
 */
function sendMetadata(responseMetadata) {
  /* jshint validthis: true */
  var self = this;
  if (!this.call.metadataSent) {
    this.call.metadataSent = true;
    var batch = {};
    batch[grpc.opType.SEND_INITIAL_METADATA] =
        responseMetadata._getCoreRepresentation();
    this.call.startBatch(batch, function(err) {
      if (err) {
        self.emit('error', err);
        return;
      }
    });
  }
}

ServerUnaryCall.prototype.sendMetadata = sendMetadata;
ServerWritableStream.prototype.sendMetadata = sendMetadata;
ServerReadableStream.prototype.sendMetadata = sendMetadata;
ServerDuplexStream.prototype.sendMetadata = sendMetadata;

/**
 * Get the endpoint this call/stream is connected to.
 * @alias grpc~ServerUnaryCall#getPeer
 * @return {string} The URI of the endpoint
 */
function getPeer() {
  /* jshint validthis: true */
  return this.call.getPeer();
}

ServerUnaryCall.prototype.getPeer = getPeer;
ServerReadableStream.prototype.getPeer = getPeer;
ServerWritableStream.prototype.getPeer = getPeer;
ServerDuplexStream.prototype.getPeer = getPeer;

/**
 * Wait for the client to close, then emit a cancelled event if the client
 * cancelled.
 * @private
 */
function waitForCancel() {
  /* jshint validthis: true */
  var self = this;
  var cancel_batch = {};
  cancel_batch[grpc.opType.RECV_CLOSE_ON_SERVER] = true;
  self.call.startBatch(cancel_batch, function(err, result) {
    if (err) {
      self.emit('error', err);
    }
    if (result.cancelled) {
      self.cancelled = true;
      self.emit('cancelled');
    }
  });
}

ServerUnaryCall.prototype.waitForCancel = waitForCancel;
ServerReadableStream.prototype.waitForCancel = waitForCancel;
ServerWritableStream.prototype.waitForCancel = waitForCancel;
ServerDuplexStream.prototype.waitForCancel = waitForCancel;

/**
 * Callback function passed to server handlers that handle methods with unary
 * responses.
 * @callback grpc.Server~sendUnaryData
 * @param {grpc~ServiceError} error An error, if the call failed
 * @param {*} value The response value. Must be a valid argument to the
 *     `responseSerialize` method of the method that is being handled
 * @param {grpc.Metadata=} trailer Trailing metadata to send, if applicable
 * @param {grpc.writeFlags=} flags Flags to modify writing the response
 */

/**
 * User-provided method to handle unary requests on a server
 * @callback grpc.Server~handleUnaryCall
 * @param {grpc~ServerUnaryCall} call The call object
 * @param {grpc.Server~sendUnaryData} callback The callback to call to respond
 *     to the request
 */

/**
 * Fully handle a unary call
 * @private
 * @param {grpc.internal~Call} call The call to handle
 * @param {Object} handler Request handler object for the method that was called
 * @param {grpc~Server.handleUnaryCall} handler.func The handler function
 * @param {grpc~deserialize} handler.deserialize The deserialization function
 *     for request data
 * @param {grpc~serialize} handler.serialize The serialization function for
 *     response data
 * @param {grpc.Metadata} metadata Metadata from the client
 */
function handleUnary(call, handler, metadata) {
  var emitter = new ServerUnaryCall(call, metadata);
  emitter.on('error', function(error) {
    handleError(call, error);
  });
  emitter.waitForCancel();
  var batch = {};
  batch[grpc.opType.RECV_MESSAGE] = true;
  call.startBatch(batch, function(err, result) {
    if (err) {
      handleError(call, err);
      return;
    }
    try {
      emitter.request = handler.deserialize(result.read);
    } catch (e) {
      e.code = constants.status.INTERNAL;
      handleError(call, e);
      return;
    }
    if (emitter.cancelled) {
      return;
    }
    handler.func(emitter, function sendUnaryData(err, value, trailer, flags) {
      if (err) {
        if (trailer) {
          err.metadata = trailer;
        }
        handleError(call, err);
      } else {
        sendUnaryResponse(call, value, handler.serialize, trailer, flags);
      }
    });
  });
}

/**
 * User provided method to handle server streaming methods on the server.
 * @callback grpc.Server~handleServerStreamingCall
 * @param {grpc~ServerWritableStream} call The call object
 */

/**
 * Fully handle a server streaming call
 * @private
 * @param {grpc.internal~Call} call The call to handle
 * @param {Object} handler Request handler object for the method that was called
 * @param {grpc~Server.handleServerStreamingCall} handler.func The handler
 *     function
 * @param {grpc~deserialize} handler.deserialize The deserialization function
 *     for request data
 * @param {grpc~serialize} handler.serialize The serialization function for
 *     response data
 * @param {grpc.Metadata} metadata Metadata from the client
 */
function handleServerStreaming(call, handler, metadata) {
  var stream = new ServerWritableStream(call, metadata, handler.serialize);
  stream.waitForCancel();
  var batch = {};
  batch[grpc.opType.RECV_MESSAGE] = true;
  call.startBatch(batch, function(err, result) {
    if (err) {
      stream.emit('error', err);
      return;
    }
    try {
      stream.request = handler.deserialize(result.read);
    } catch (e) {
      e.code = constants.status.INTERNAL;
      stream.emit('error', e);
      return;
    }
    handler.func(stream);
  });
}

/**
 * User provided method to handle client streaming methods on the server.
 * @callback grpc.Server~handleClientStreamingCall
 * @param {grpc~ServerReadableStream} call The call object
 * @param {grpc.Server~sendUnaryData} callback The callback to call to respond
 *     to the request
 */

/**
 * Fully handle a client streaming call
 * @access private
 * @param {grpc.internal~Call} call The call to handle
 * @param {Object} handler Request handler object for the method that was called
 * @param {grpc~Server.handleClientStreamingCall} handler.func The handler
 *     function
 * @param {grpc~deserialize} handler.deserialize The deserialization function
 *     for request data
 * @param {grpc~serialize} handler.serialize The serialization function for
 *     response data
 * @param {grpc.Metadata} metadata Metadata from the client
 */
function handleClientStreaming(call, handler, metadata) {
  var stream = new ServerReadableStream(call, metadata, handler.deserialize);
  stream.on('error', function(error) {
    handleError(call, error);
  });
  stream.waitForCancel();
  handler.func(stream, function(err, value, trailer, flags) {
    stream.terminate();
    if (err) {
      if (trailer) {
        err.metadata = trailer;
      }
      handleError(call, err);
    } else {
      sendUnaryResponse(call, value, handler.serialize, trailer, flags);
    }
  });
}

/**
 * User provided method to handle bidirectional streaming calls on the server.
 * @callback grpc.Server~handleBidiStreamingCall
 * @param {grpc~ServerDuplexStream} call The call object
 */

/**
 * Fully handle a bidirectional streaming call
 * @private
 * @param {grpc.internal~Call} call The call to handle
 * @param {Object} handler Request handler object for the method that was called
 * @param {grpc~Server.handleBidiStreamingCall} handler.func The handler
 *     function
 * @param {grpc~deserialize} handler.deserialize The deserialization function
 *     for request data
 * @param {grpc~serialize} handler.serialize The serialization function for
 *     response data
 * @param {Metadata} metadata Metadata from the client
 */
function handleBidiStreaming(call, handler, metadata) {
  var stream = new ServerDuplexStream(call, metadata, handler.serialize,
                                      handler.deserialize);
  stream.waitForCancel();
  handler.func(stream);
}

var streamHandlers = {
  unary: handleUnary,
  server_stream: handleServerStreaming,
  client_stream: handleClientStreaming,
  bidi: handleBidiStreaming
};

/**
 * Constructs a server object that stores request handlers and delegates
 * incoming requests to those handlers
 * @memberof grpc
 * @constructor
 * @param {Object=} options Options that should be passed to the internal server
 *     implementation. The available options are listed in
 *     [this document]{@link https://grpc.github.io/grpc/core/group__grpc__arg__keys.html}.
 * @example
 * var server = new grpc.Server();
 * server.addProtoService(protobuf_service_descriptor, service_implementation);
 * server.bind('address:port', server_credential);
 * server.start();
 */
function Server(options) {
  this.handlers = {};
  var server = new grpc.Server(options);
  this._server = server;
  this.started = false;
}

/**
 * Start the server and begin handling requests
 */
Server.prototype.start = function() {
  if (this.started) {
    throw new Error('Server is already running');
  }
  var self = this;
  this.started = true;
  this._server.start();
  /**
   * Handles the SERVER_RPC_NEW event. If there is a handler associated with
   * the requested method, use that handler to respond to the request. Then
   * wait for the next request
   * @param {grpc.internal~Event} event The event to handle with tag
   *     SERVER_RPC_NEW
   */
  function handleNewCall(err, event) {
    if (err) {
      return;
    }
    var details = event.new_call;
    var call = details.call;
    var method = details.method;
    var metadata = Metadata._fromCoreRepresentation(details.metadata);
    if (method === null) {
      return;
    }
    self._server.requestCall(handleNewCall);
    var handler;
    if (self.handlers.hasOwnProperty(method)) {
      handler = self.handlers[method];
    } else {
      var batch = {};
      batch[grpc.opType.SEND_INITIAL_METADATA] =
          (new Metadata())._getCoreRepresentation();
      batch[grpc.opType.SEND_STATUS_FROM_SERVER] = {
        code: constants.status.UNIMPLEMENTED,
        details: 'RPC method not implemented ' + method,
        metadata: (new Metadata())._getCoreRepresentation()
      };
      batch[grpc.opType.RECV_CLOSE_ON_SERVER] = true;
      call.startBatch(batch, function() {});
      return;
    }
    streamHandlers[handler.type](call, handler, metadata);
  }
  this._server.requestCall(handleNewCall);
};

/**
 * Unified type for application handlers for all types of calls
 * @typedef {(grpc.Server~handleUnaryCall
 *            |grpc.Server~handleClientStreamingCall
 *            |grpc.Server~handleServerStreamingCall
 *            |grpc.Server~handleBidiStreamingCall)} grpc.Server~handleCall
 */

/**
 * Registers a handler to handle the named method. Fails if there already is
 * a handler for the given method. Returns true on success
 * @param {string} name The name of the method that the provided function should
 *     handle/respond to.
 * @param {grpc.Server~handleCall} handler Function that takes a stream of
 *     request values and returns a stream of response values
 * @param {grpc~serialize} serialize Serialization function for responses
 * @param {grpc~deserialize} deserialize Deserialization function for requests
 * @param {('unary'|'client_stream'|'server_stream'|'bidi')} type The streaming type of method that this handles
 * @return {boolean} True if the handler was set. False if a handler was already
 *     set for that name.
 */
Server.prototype.register = function(name, handler, serialize, deserialize,
                                     type) {
  if (this.handlers.hasOwnProperty(name)) {
    return false;
  }
  this.handlers[name] = {
    func: handler,
    serialize: serialize,
    deserialize: deserialize,
    type: type
  };
  return true;
};

/**
 * Gracefully shuts down the server. The server will stop receiving new calls,
 * and any pending calls will complete. The callback will be called when all
 * pending calls have completed and the server is fully shut down. This method
 * is idempotent with itself and forceShutdown.
 * @param {function()} callback The shutdown complete callback
 */
Server.prototype.tryShutdown = function(callback) {
  this._server.tryShutdown(callback);
};

/**
 * Forcibly shuts down the server. The server will stop receiving new calls
 * and cancel all pending calls. When it returns, the server has shut down.
 * This method is idempotent with itself and tryShutdown, and it will trigger
 * any outstanding tryShutdown callbacks.
 */
Server.prototype.forceShutdown = function() {
  this._server.forceShutdown();
};

var unimplementedStatusResponse = {
  code: constants.status.UNIMPLEMENTED,
  details: 'The server does not implement this method'
};

var defaultHandler = {
  unary: function(call, callback) {
    callback(unimplementedStatusResponse);
  },
  client_stream: function(call, callback) {
    callback(unimplementedStatusResponse);
  },
  server_stream: function(call) {
    call.emit('error', unimplementedStatusResponse);
  },
  bidi: function(call) {
    call.emit('error', unimplementedStatusResponse);
  }
};

function isObject(thing) {
  return (typeof thing === 'object' || typeof thing === 'function') && thing !== null;
}

/**
 * Add a service to the server, with a corresponding implementation.
 * @param {grpc~ServiceDefinition} service The service descriptor
 * @param {Object<String, grpc.Server~handleCall>} implementation Map of method
 *     names to method implementation for the provided service.
 */
Server.prototype.addService = function(service, implementation) {
  if (!isObject(service) || !isObject(implementation)) {
    throw new Error('addService requires two objects as arguments');
  }
  if (Object.keys(service).length === 0) {
    throw new Error('Cannot add an empty service to a server');
  }
  if (this.started) {
    throw new Error('Can\'t add a service to a started server.');
  }
  var self = this;
  Object.keys(service).forEach(name => {
    const attrs = service[name];
    var method_type;
    if (attrs.requestStream) {
      if (attrs.responseStream) {
        method_type = 'bidi';
      } else {
        method_type = 'client_stream';
      }
    } else {
      if (attrs.responseStream) {
        method_type = 'server_stream';
      } else {
        method_type = 'unary';
      }
    }
    var impl;
    if (implementation[name] === undefined) {
      /* Handle the case where the method is passed with the name exactly as
         written in the proto file, instead of using JavaScript function
         naming style */
      if (implementation[attrs.originalName] === undefined) {
        common.log(constants.logVerbosity.ERROR, 'Method handler ' + name +
            ' for ' + attrs.path + ' expected but not provided');
        impl = defaultHandler[method_type];
      } else {
        impl = implementation[attrs.originalName].bind(implementation);
      }
    } else {
      impl = implementation[name].bind(implementation);
    }
    var serialize = attrs.responseSerialize;
    var deserialize = attrs.requestDeserialize;
    var register_success = self.register(attrs.path, impl, serialize,
                                         deserialize, method_type);
    if (!register_success) {
      throw new Error('Method handler for ' + attrs.path +
          ' already provided.');
    }
  });
};

/**
 * Add a proto service to the server, with a corresponding implementation
 * @deprecated Use {@link grpc.Server#addService} instead
 * @param {Protobuf.Reflect.Service} service The proto service descriptor
 * @param {Object<String, grpc.Server~handleCall>} implementation Map of method
 *     names to method implementation for the provided service.
 */
Server.prototype.addProtoService = util.deprecate(function(service,
                                                           implementation) {
  var options;
  var protobuf_js_5_common = __webpack_require__(/*! ./protobuf_js_5_common */ "./node_modules/grpc/src/protobuf_js_5_common.js");
  var protobuf_js_6_common = __webpack_require__(/*! ./protobuf_js_6_common */ "./node_modules/grpc/src/protobuf_js_6_common.js");
  if (protobuf_js_5_common.isProbablyProtobufJs5(service)) {
    options = Object.assign({}, common.defaultGrpcOptions, service.grpc_options);
    this.addService(
        protobuf_js_5_common.getProtobufServiceAttrs(service, options),
        implementation);
  } else if (protobuf_js_6_common.isProbablyProtobufJs6(service)) {
    options = Object.assign({}, common.defaultGrpcOptions, service.grpc_options);
    this.addService(
        protobuf_js_6_common.getProtobufServiceAttrs(service, options),
        implementation);
  } else {
    // We assume that this is a service attributes object
    this.addService(service, implementation);
  }
}, 'Server#addProtoService: Use Server#addService instead');

/**
 * Binds the server to the given port, with SSL disabled if creds is an
 * insecure credentials object
 * @param {string} port The port that the server should bind on, in the format
 *     "address:port"
 * @param {grpc.ServerCredentials} creds Server credential object to be used for
 *     SSL. Pass an insecure credentials object for an insecure port.
 * @return {number} The bound port number. Negative if binding the port failed.
 */
Server.prototype.bind = function(port, creds) {
  if (this.started) {
    throw new Error('Can\'t bind an already running server to an address');
  }
  return this._server.addHttp2Port(port, creds);
};

/**
 * Called with the result of attempting to bind a port
 * @callback grpc.Server~bindCallback
 * @param {Error=} error If non-null, indicates that binding the port failed.
 * @param {number} port The bound port number. If binding the port fails, this
 *     will be negative to match the output of bind.
 */

/**
 * Binds the server to the given port, with SSL disabled if creds is an
 * insecure credentials object. Provides the result asynchronously.
 * @param {string} port The port that the server should bind on, in the format
 *     "address:port"
 * @param {grpc.ServerCredentials} creds Server credential object to be used for
 *     SSL. Pass an insecure credentials object for an insecure port.
 */
Server.prototype.bindAsync = function(port, creds, callback) {
  /* This can throw. We do not try to catch that error because it indicates an
   * incorrect use of the function, which should not be surfaced asynchronously
   */
  const result = this.bind(port, creds)
  if (result < 0) {
    setImmediate(callback, new Error('Failed to bind port'), result);
  } else {
    setImmediate(callback, null, result);
  }
}

exports.Server = Server;


/***/ }),

/***/ "./node_modules/grpc/src sync recursive":
/*!************************************!*\
  !*** ./node_modules/grpc/src sync ***!
  \************************************/
/*! default exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: module, __webpack_require__.o */
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => [];
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "./node_modules/grpc/src sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "./node_modules/has-unicode/index.js":
/*!*******************************************!*\
  !*** ./node_modules/has-unicode/index.js ***!
  \*******************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 4:17-31 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var os = __webpack_require__(/*! os */ "os")

var hasUnicode = module.exports = function () {
  // Recent Win32 platforms (>XP) CAN support unicode in the console but
  // don't have to, and in non-english locales often use traditional local
  // code pages. There's no way, short of windows system calls or execing
  // the chcp command line program to figure this out. As such, we default
  // this to false and encourage your users to override it via config if
  // appropriate.
  if (os.type() == "Windows_NT") { return false }

  var isUTF8 = /UTF-?8$/i
  var ctype = process.env.LC_ALL || process.env.LC_CTYPE || process.env.LANG
  return isUTF8.test(ctype)
}


/***/ }),

/***/ "./node_modules/inflight/inflight.js":
/*!*******************************************!*\
  !*** ./node_modules/inflight/inflight.js ***!
  \*******************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 5:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var wrappy = __webpack_require__(/*! wrappy */ "./node_modules/wrappy/wrappy.js")
var reqs = Object.create(null)
var once = __webpack_require__(/*! once */ "./node_modules/once/once.js")

module.exports = wrappy(inflight)

function inflight (key, cb) {
  if (reqs[key]) {
    reqs[key].push(cb)
    return null
  } else {
    reqs[key] = [cb]
    return makeres(key)
  }
}

function makeres (key) {
  return once(function RES () {
    var cbs = reqs[key]
    var len = cbs.length
    var args = slice(arguments)

    // XXX It's somewhat ambiguous whether a new callback added in this
    // pass should be queued for later execution if something in the
    // list of callbacks throws, or if it should just be discarded.
    // However, it's such an edge case that it hardly matters, and either
    // choice is likely as surprising as the other.
    // As it happens, we do go ahead and schedule it for later execution.
    try {
      for (var i = 0; i < len; i++) {
        cbs[i].apply(null, args)
      }
    } finally {
      if (cbs.length > len) {
        // added more in the interim.
        // de-zalgo, just in case, but don't call again.
        cbs.splice(0, len)
        process.nextTick(function () {
          RES.apply(null, args)
        })
      } else {
        delete reqs[key]
      }
    }
  })
}

function slice (args) {
  var length = args.length
  var array = []

  for (var i = 0; i < length; i++) array[i] = args[i]
  return array
}


/***/ }),

/***/ "./node_modules/inherits/inherits.js":
/*!*******************************************!*\
  !*** ./node_modules/inherits/inherits.js ***!
  \*******************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 5:2-16 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

try {
  var util = __webpack_require__(/*! util */ "util");
  /* istanbul ignore next */
  if (typeof util.inherits !== 'function') throw '';
  module.exports = util.inherits;
} catch (e) {
  /* istanbul ignore next */
  module.exports = __webpack_require__(/*! ./inherits_browser.js */ "./node_modules/inherits/inherits_browser.js");
}


/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 3:2-16 */
/*! CommonJS bailout: module.exports is used directly at 18:2-16 */
/***/ ((module) => {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}


/***/ }),

/***/ "./node_modules/is-fullwidth-code-point/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/is-fullwidth-code-point/index.js ***!
  \*******************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 3:0-14 */
/***/ ((module) => {

"use strict";

/* eslint-disable yoda */
module.exports = x => {
	if (Number.isNaN(x)) {
		return false;
	}

	// code points are derived from:
	// http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt
	if (
		x >= 0x1100 && (
			x <= 0x115f ||  // Hangul Jamo
			x === 0x2329 || // LEFT-POINTING ANGLE BRACKET
			x === 0x232a || // RIGHT-POINTING ANGLE BRACKET
			// CJK Radicals Supplement .. Enclosed CJK Letters and Months
			(0x2e80 <= x && x <= 0x3247 && x !== 0x303f) ||
			// Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A
			(0x3250 <= x && x <= 0x4dbf) ||
			// CJK Unified Ideographs .. Yi Radicals
			(0x4e00 <= x && x <= 0xa4c6) ||
			// Hangul Jamo Extended-A
			(0xa960 <= x && x <= 0xa97c) ||
			// Hangul Syllables
			(0xac00 <= x && x <= 0xd7a3) ||
			// CJK Compatibility Ideographs
			(0xf900 <= x && x <= 0xfaff) ||
			// Vertical Forms
			(0xfe10 <= x && x <= 0xfe19) ||
			// CJK Compatibility Forms .. Small Form Variants
			(0xfe30 <= x && x <= 0xfe6b) ||
			// Halfwidth and Fullwidth Forms
			(0xff01 <= x && x <= 0xff60) ||
			(0xffe0 <= x && x <= 0xffe6) ||
			// Kana Supplement
			(0x1b000 <= x && x <= 0x1b001) ||
			// Enclosed Ideographic Supplement
			(0x1f200 <= x && x <= 0x1f251) ||
			// CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane
			(0x20000 <= x && x <= 0x3fffd)
		)
	) {
		return true;
	}

	return false;
};


/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 3:0-14 */
/***/ ((module) => {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ "./node_modules/lodash.camelcase/index.js":
/*!************************************************!*\
  !*** ./node_modules/lodash.camelcase/index.js ***!
  \************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 599:0-14 */
/***/ ((module) => {

/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/** Used to match words composed of alphanumeric characters. */
var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

/** Used to match Latin Unicode letters (excluding mathematical operators). */
var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
    rsComboSymbolsRange = '\\u20d0-\\u20f0',
    rsDingbatRange = '\\u2700-\\u27bf',
    rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
    rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
    rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
    rsPunctuationRange = '\\u2000-\\u206f',
    rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
    rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
    rsVarRange = '\\ufe0e\\ufe0f',
    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

/** Used to compose unicode capture groups. */
var rsApos = "['\u2019]",
    rsAstral = '[' + rsAstralRange + ']',
    rsBreak = '[' + rsBreakRange + ']',
    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',
    rsDigits = '\\d+',
    rsDingbat = '[' + rsDingbatRange + ']',
    rsLower = '[' + rsLowerRange + ']',
    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
    rsFitz = '\\ud83c[\\udffb-\\udfff]',
    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
    rsNonAstral = '[^' + rsAstralRange + ']',
    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    rsUpper = '[' + rsUpperRange + ']',
    rsZWJ = '\\u200d';

/** Used to compose unicode regexes. */
var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',
    rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',
    rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
    rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
    reOptMod = rsModifier + '?',
    rsOptVar = '[' + rsVarRange + ']?',
    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
    rsSeq = rsOptVar + reOptMod + rsOptJoin,
    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

/** Used to match apostrophes. */
var reApos = RegExp(rsApos, 'g');

/**
 * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
 * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
 */
var reComboMark = RegExp(rsCombo, 'g');

/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

/** Used to match complex or compound words. */
var reUnicodeWord = RegExp([
  rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
  rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',
  rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,
  rsUpper + '+' + rsOptUpperContr,
  rsDigits,
  rsEmoji
].join('|'), 'g');

/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');

/** Used to detect strings that need a more robust regexp to match words. */
var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

/** Used to map Latin Unicode letters to basic Latin letters. */
var deburredLetters = {
  // Latin-1 Supplement block.
  '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
  '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
  '\xc7': 'C',  '\xe7': 'c',
  '\xd0': 'D',  '\xf0': 'd',
  '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
  '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
  '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
  '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
  '\xd1': 'N',  '\xf1': 'n',
  '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
  '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
  '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
  '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
  '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
  '\xc6': 'Ae', '\xe6': 'ae',
  '\xde': 'Th', '\xfe': 'th',
  '\xdf': 'ss',
  // Latin Extended-A block.
  '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
  '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
  '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
  '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
  '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
  '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
  '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
  '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
  '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
  '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
  '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
  '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
  '\u0134': 'J',  '\u0135': 'j',
  '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
  '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
  '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
  '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
  '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
  '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
  '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
  '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
  '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
  '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
  '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
  '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
  '\u0163': 't',  '\u0165': 't', '\u0167': 't',
  '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
  '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
  '\u0174': 'W',  '\u0175': 'w',
  '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
  '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
  '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
  '\u0132': 'IJ', '\u0133': 'ij',
  '\u0152': 'Oe', '\u0153': 'oe',
  '\u0149': "'n", '\u017f': 'ss'
};

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/**
 * A specialized version of `_.reduce` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @param {boolean} [initAccum] Specify using the first element of `array` as
 *  the initial value.
 * @returns {*} Returns the accumulated value.
 */
function arrayReduce(array, iteratee, accumulator, initAccum) {
  var index = -1,
      length = array ? array.length : 0;

  if (initAccum && length) {
    accumulator = array[++index];
  }
  while (++index < length) {
    accumulator = iteratee(accumulator, array[index], index, array);
  }
  return accumulator;
}

/**
 * Converts an ASCII `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function asciiToArray(string) {
  return string.split('');
}

/**
 * Splits an ASCII `string` into an array of its words.
 *
 * @private
 * @param {string} The string to inspect.
 * @returns {Array} Returns the words of `string`.
 */
function asciiWords(string) {
  return string.match(reAsciiWord) || [];
}

/**
 * The base implementation of `_.propertyOf` without support for deep paths.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyOf(object) {
  return function(key) {
    return object == null ? undefined : object[key];
  };
}

/**
 * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
 * letters to basic Latin letters.
 *
 * @private
 * @param {string} letter The matched letter to deburr.
 * @returns {string} Returns the deburred letter.
 */
var deburrLetter = basePropertyOf(deburredLetters);

/**
 * Checks if `string` contains Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a symbol is found, else `false`.
 */
function hasUnicode(string) {
  return reHasUnicode.test(string);
}

/**
 * Checks if `string` contains a word composed of Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a word is found, else `false`.
 */
function hasUnicodeWord(string) {
  return reHasUnicodeWord.test(string);
}

/**
 * Converts `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function stringToArray(string) {
  return hasUnicode(string)
    ? unicodeToArray(string)
    : asciiToArray(string);
}

/**
 * Converts a Unicode `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function unicodeToArray(string) {
  return string.match(reUnicode) || [];
}

/**
 * Splits a Unicode `string` into an array of its words.
 *
 * @private
 * @param {string} The string to inspect.
 * @returns {Array} Returns the words of `string`.
 */
function unicodeWords(string) {
  return string.match(reUnicodeWord) || [];
}

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Built-in value references. */
var Symbol = root.Symbol;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function baseSlice(array, start, end) {
  var index = -1,
      length = array.length;

  if (start < 0) {
    start = -start > length ? 0 : (length + start);
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : ((end - start) >>> 0);
  start >>>= 0;

  var result = Array(length);
  while (++index < length) {
    result[index] = array[index + start];
  }
  return result;
}

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/**
 * Casts `array` to a slice if it's needed.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {number} start The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the cast slice.
 */
function castSlice(array, start, end) {
  var length = array.length;
  end = end === undefined ? length : end;
  return (!start && end >= length) ? array : baseSlice(array, start, end);
}

/**
 * Creates a function like `_.lowerFirst`.
 *
 * @private
 * @param {string} methodName The name of the `String` case method to use.
 * @returns {Function} Returns the new case function.
 */
function createCaseFirst(methodName) {
  return function(string) {
    string = toString(string);

    var strSymbols = hasUnicode(string)
      ? stringToArray(string)
      : undefined;

    var chr = strSymbols
      ? strSymbols[0]
      : string.charAt(0);

    var trailing = strSymbols
      ? castSlice(strSymbols, 1).join('')
      : string.slice(1);

    return chr[methodName]() + trailing;
  };
}

/**
 * Creates a function like `_.camelCase`.
 *
 * @private
 * @param {Function} callback The function to combine each word.
 * @returns {Function} Returns the new compounder function.
 */
function createCompounder(callback) {
  return function(string) {
    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
  };
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

/**
 * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the camel cased string.
 * @example
 *
 * _.camelCase('Foo Bar');
 * // => 'fooBar'
 *
 * _.camelCase('--foo-bar--');
 * // => 'fooBar'
 *
 * _.camelCase('__FOO_BAR__');
 * // => 'fooBar'
 */
var camelCase = createCompounder(function(result, word, index) {
  word = word.toLowerCase();
  return result + (index ? capitalize(word) : word);
});

/**
 * Converts the first character of `string` to upper case and the remaining
 * to lower case.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to capitalize.
 * @returns {string} Returns the capitalized string.
 * @example
 *
 * _.capitalize('FRED');
 * // => 'Fred'
 */
function capitalize(string) {
  return upperFirst(toString(string).toLowerCase());
}

/**
 * Deburrs `string` by converting
 * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
 * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
 * letters to basic Latin letters and removing
 * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to deburr.
 * @returns {string} Returns the deburred string.
 * @example
 *
 * _.deburr('déjà vu');
 * // => 'deja vu'
 */
function deburr(string) {
  string = toString(string);
  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
}

/**
 * Converts the first character of `string` to upper case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.upperFirst('fred');
 * // => 'Fred'
 *
 * _.upperFirst('FRED');
 * // => 'FRED'
 */
var upperFirst = createCaseFirst('toUpperCase');

/**
 * Splits `string` into an array of its words.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to inspect.
 * @param {RegExp|string} [pattern] The pattern to match words.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the words of `string`.
 * @example
 *
 * _.words('fred, barney, & pebbles');
 * // => ['fred', 'barney', 'pebbles']
 *
 * _.words('fred, barney, & pebbles', /[^, ]+/g);
 * // => ['fred', 'barney', '&', 'pebbles']
 */
function words(string, pattern, guard) {
  string = toString(string);
  pattern = guard ? undefined : pattern;

  if (pattern === undefined) {
    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
  }
  return string.match(pattern) || [];
}

module.exports = camelCase;


/***/ }),

/***/ "./node_modules/lodash.clone/index.js":
/*!********************************************!*\
  !*** ./node_modules/lodash.clone/index.js ***!
  \********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module.loaded, module.id, module, __webpack_require__.nmd, __webpack_require__.* */
/*! CommonJS bailout: exports is used directly at 90:48-55 */
/*! CommonJS bailout: exports is used directly at 90:80-87 */
/*! CommonJS bailout: module.exports is used directly at 1756:0-14 */
/***/ ((module, exports, __webpack_require__) => {

/* module decorator */ module = __webpack_require__.nmd(module);
/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] =
cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
cloneableTags[boolTag] = cloneableTags[dateTag] =
cloneableTags[float32Tag] = cloneableTags[float64Tag] =
cloneableTags[int8Tag] = cloneableTags[int16Tag] =
cloneableTags[int32Tag] = cloneableTags[mapTag] =
cloneableTags[numberTag] = cloneableTags[objectTag] =
cloneableTags[regexpTag] = cloneableTags[setTag] =
cloneableTags[stringTag] = cloneableTags[symbolTag] =
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] =
cloneableTags[weakMapTag] = false;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && "object" == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/**
 * Adds the key-value `pair` to `map`.
 *
 * @private
 * @param {Object} map The map to modify.
 * @param {Array} pair The key-value pair to add.
 * @returns {Object} Returns `map`.
 */
function addMapEntry(map, pair) {
  // Don't return `map.set` because it's not chainable in IE 11.
  map.set(pair[0], pair[1]);
  return map;
}

/**
 * Adds `value` to `set`.
 *
 * @private
 * @param {Object} set The set to modify.
 * @param {*} value The value to add.
 * @returns {Object} Returns `set`.
 */
function addSetEntry(set, value) {
  // Don't return `set.add` because it's not chainable in IE 11.
  set.add(value);
  return set;
}

/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array ? array.length : 0;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

/**
 * A specialized version of `_.reduce` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @param {boolean} [initAccum] Specify using the first element of `array` as
 *  the initial value.
 * @returns {*} Returns the accumulated value.
 */
function arrayReduce(array, iteratee, accumulator, initAccum) {
  var index = -1,
      length = array ? array.length : 0;

  if (initAccum && length) {
    accumulator = array[++index];
  }
  while (++index < length) {
    accumulator = iteratee(accumulator, array[index], index, array);
  }
  return accumulator;
}

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
function isHostObject(value) {
  // Many host objects are `Object` objects that can coerce to strings
  // despite having improperly defined `toString` methods.
  var result = false;
  if (value != null && typeof value.toString != 'function') {
    try {
      result = !!(value + '');
    } catch (e) {}
  }
  return result;
}

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

/** Used for built-in method references. */
var arrayProto = Array.prototype,
    funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    Symbol = root.Symbol,
    Uint8Array = root.Uint8Array,
    getPrototype = overArg(Object.getPrototypeOf, Object),
    objectCreate = Object.create,
    propertyIsEnumerable = objectProto.propertyIsEnumerable,
    splice = arrayProto.splice;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols,
    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
    nativeKeys = overArg(Object.keys, Object);

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView'),
    Map = getNative(root, 'Map'),
    Promise = getNative(root, 'Promise'),
    Set = getNative(root, 'Set'),
    WeakMap = getNative(root, 'WeakMap'),
    nativeCreate = getNative(Object, 'create');

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
}

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  return this.has(key) && delete this.__data__[key];
}

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
}

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  return true;
}

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  return getMapData(this, key)['delete'](key);
}

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  getMapData(this, key).set(key, value);
  return this;
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  this.__data__ = new ListCache(entries);
}

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
}

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  return this.__data__['delete'](key);
}

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var cache = this.__data__;
  if (cache instanceof ListCache) {
    var pairs = cache.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      return this;
    }
    cache = this.__data__ = new MapCache(pairs);
  }
  cache.set(key, value);
  return this;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
  // Safari 9 makes `arguments.length` enumerable in strict mode.
  var result = (isArray(value) || isArguments(value))
    ? baseTimes(value.length, String)
    : [];

  var length = result.length,
      skipIndexes = !!length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {
      result.push(key);
    }
  }
  return result;
}

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    object[key] = value;
  }
}

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @param {boolean} [isFull] Specify a clone including symbols.
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, isDeep, isFull, customizer, key, object, stack) {
  var result;
  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject(value)) {
    return value;
  }
  var isArr = isArray(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
      if (isHostObject(value)) {
        return object ? value : {};
      }
      result = initCloneObject(isFunc ? {} : value);
      if (!isDeep) {
        return copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, baseClone, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new Stack);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  if (!isArr) {
    var props = isFull ? getAllKeys(value) : keys(value);
  }
  arrayEach(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));
  });
  return result;
}

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} prototype The object to inherit from.
 * @returns {Object} Returns the new object.
 */
function baseCreate(proto) {
  return isObject(proto) ? objectCreate(proto) : {};
}

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

/**
 * The base implementation of `getTag`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  return objectToString.call(value);
}

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var result = new buffer.constructor(buffer.length);
  buffer.copy(result);
  return result;
}

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

/**
 * Creates a clone of `map`.
 *
 * @private
 * @param {Object} map The map to clone.
 * @param {Function} cloneFunc The function to clone values.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned map.
 */
function cloneMap(map, isDeep, cloneFunc) {
  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);
  return arrayReduce(array, addMapEntry, new map.constructor);
}

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

/**
 * Creates a clone of `set`.
 *
 * @private
 * @param {Object} set The set to clone.
 * @param {Function} cloneFunc The function to clone values.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned set.
 */
function cloneSet(set, isDeep, cloneFunc) {
  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);
  return arrayReduce(array, addSetEntry, new set.constructor);
}

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    assignValue(object, key, newValue === undefined ? source[key] : newValue);
  }
  return object;
}

/**
 * Copies own symbol properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return copyObject(source, getSymbols(source), object);
}

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

/**
 * Creates an array of the own enumerable symbol properties of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11,
// for data views in Edge < 14, and promises in Node.js.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = objectToString.call(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : undefined;

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {Function} cloneFunc The function to clone values.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, cloneFunc, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag:
      return cloneArrayBuffer(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return cloneDataView(object, isDeep);

    case float32Tag: case float64Tag:
    case int8Tag: case int16Tag: case int32Tag:
    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
      return cloneTypedArray(object, isDeep);

    case mapTag:
      return cloneMap(object, isDeep, cloneFunc);

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return cloneRegExp(object);

    case setTag:
      return cloneSet(object, isDeep, cloneFunc);

    case symbolTag:
      return cloneSymbol(object);
  }
}

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length &&
    (typeof value == 'number' || reIsUint.test(value)) &&
    (value > -1 && value % 1 == 0 && value < length);
}

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to process.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/**
 * Creates a shallow clone of `value`.
 *
 * **Note:** This method is loosely based on the
 * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
 * and supports cloning arrays, array buffers, booleans, date objects, maps,
 * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
 * arrays. The own enumerable properties of `arguments` objects are cloned
 * as plain objects. An empty object is returned for uncloneable values such
 * as error objects, functions, DOM nodes, and WeakMaps.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to clone.
 * @returns {*} Returns the cloned value.
 * @see _.cloneDeep
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var shallow = _.clone(objects);
 * console.log(shallow[0] === objects[0]);
 * // => true
 */
function clone(value) {
  return baseClone(value, false, true);
}

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
function isArguments(value) {
  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
}

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 8-9 which returns 'object' for typed array and other constructors.
  var tag = isObject(value) ? objectToString.call(value) : '';
  return tag == funcTag || tag == genTag;
}

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = clone;


/***/ }),

/***/ "./node_modules/long/dist/long.js":
/*!****************************************!*\
  !*** ./node_modules/long/dist/long.js ***!
  \****************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, __webpack_exports__, module */
/*! CommonJS bailout: this is used directly at 32:3-7 */
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
 Copyright 2013 Daniel Wirtz <dcode@dcode.io>
 Copyright 2009 The Closure Library Authors. All Rights Reserved.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS-IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */

/**
 * @license long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>
 * Released under the Apache License, Version 2.0
 * see: https://github.com/dcodeIO/long.js for details
 */
(function(global, factory) {

    /* AMD */ if (true)
        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    /* CommonJS */ else {}

})(this, function() {
    "use strict";

    /**
     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.
     *  See the from* functions below for more convenient ways of constructing Longs.
     * @exports Long
     * @class A Long class for representing a 64 bit two's-complement integer value.
     * @param {number} low The low (signed) 32 bits of the long
     * @param {number} high The high (signed) 32 bits of the long
     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed
     * @constructor
     */
    function Long(low, high, unsigned) {

        /**
         * The low 32 bits as a signed value.
         * @type {number}
         */
        this.low = low | 0;

        /**
         * The high 32 bits as a signed value.
         * @type {number}
         */
        this.high = high | 0;

        /**
         * Whether unsigned or not.
         * @type {boolean}
         */
        this.unsigned = !!unsigned;
    }

    // The internal representation of a long is the two given signed, 32-bit values.
    // We use 32-bit pieces because these are the size of integers on which
    // Javascript performs bit-operations.  For operations like addition and
    // multiplication, we split each number into 16 bit pieces, which can easily be
    // multiplied within Javascript's floating-point representation without overflow
    // or change in sign.
    //
    // In the algorithms below, we frequently reduce the negative case to the
    // positive case by negating the input(s) and then post-processing the result.
    // Note that we must ALWAYS check specially whether those values are MIN_VALUE
    // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
    // a positive number, it overflows back into a negative).  Not handling this
    // case would often result in infinite recursion.
    //
    // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*
    // methods on which they depend.

    /**
     * An indicator used to reliably determine if an object is a Long or not.
     * @type {boolean}
     * @const
     * @private
     */
    Long.prototype.__isLong__;

    Object.defineProperty(Long.prototype, "__isLong__", {
        value: true,
        enumerable: false,
        configurable: false
    });

    /**
     * @function
     * @param {*} obj Object
     * @returns {boolean}
     * @inner
     */
    function isLong(obj) {
        return (obj && obj["__isLong__"]) === true;
    }

    /**
     * Tests if the specified object is a Long.
     * @function
     * @param {*} obj Object
     * @returns {boolean}
     */
    Long.isLong = isLong;

    /**
     * A cache of the Long representations of small integer values.
     * @type {!Object}
     * @inner
     */
    var INT_CACHE = {};

    /**
     * A cache of the Long representations of small unsigned integer values.
     * @type {!Object}
     * @inner
     */
    var UINT_CACHE = {};

    /**
     * @param {number} value
     * @param {boolean=} unsigned
     * @returns {!Long}
     * @inner
     */
    function fromInt(value, unsigned) {
        var obj, cachedObj, cache;
        if (unsigned) {
            value >>>= 0;
            if (cache = (0 <= value && value < 256)) {
                cachedObj = UINT_CACHE[value];
                if (cachedObj)
                    return cachedObj;
            }
            obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);
            if (cache)
                UINT_CACHE[value] = obj;
            return obj;
        } else {
            value |= 0;
            if (cache = (-128 <= value && value < 128)) {
                cachedObj = INT_CACHE[value];
                if (cachedObj)
                    return cachedObj;
            }
            obj = fromBits(value, value < 0 ? -1 : 0, false);
            if (cache)
                INT_CACHE[value] = obj;
            return obj;
        }
    }

    /**
     * Returns a Long representing the given 32 bit integer value.
     * @function
     * @param {number} value The 32 bit integer in question
     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed
     * @returns {!Long} The corresponding Long value
     */
    Long.fromInt = fromInt;

    /**
     * @param {number} value
     * @param {boolean=} unsigned
     * @returns {!Long}
     * @inner
     */
    function fromNumber(value, unsigned) {
        if (isNaN(value) || !isFinite(value))
            return unsigned ? UZERO : ZERO;
        if (unsigned) {
            if (value < 0)
                return UZERO;
            if (value >= TWO_PWR_64_DBL)
                return MAX_UNSIGNED_VALUE;
        } else {
            if (value <= -TWO_PWR_63_DBL)
                return MIN_VALUE;
            if (value + 1 >= TWO_PWR_63_DBL)
                return MAX_VALUE;
        }
        if (value < 0)
            return fromNumber(-value, unsigned).neg();
        return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);
    }

    /**
     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.
     * @function
     * @param {number} value The number in question
     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed
     * @returns {!Long} The corresponding Long value
     */
    Long.fromNumber = fromNumber;

    /**
     * @param {number} lowBits
     * @param {number} highBits
     * @param {boolean=} unsigned
     * @returns {!Long}
     * @inner
     */
    function fromBits(lowBits, highBits, unsigned) {
        return new Long(lowBits, highBits, unsigned);
    }

    /**
     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is
     *  assumed to use 32 bits.
     * @function
     * @param {number} lowBits The low 32 bits
     * @param {number} highBits The high 32 bits
     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed
     * @returns {!Long} The corresponding Long value
     */
    Long.fromBits = fromBits;

    /**
     * @function
     * @param {number} base
     * @param {number} exponent
     * @returns {number}
     * @inner
     */
    var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)

    /**
     * @param {string} str
     * @param {(boolean|number)=} unsigned
     * @param {number=} radix
     * @returns {!Long}
     * @inner
     */
    function fromString(str, unsigned, radix) {
        if (str.length === 0)
            throw Error('empty string');
        if (str === "NaN" || str === "Infinity" || str === "+Infinity" || str === "-Infinity")
            return ZERO;
        if (typeof unsigned === 'number') {
            // For goog.math.long compatibility
            radix = unsigned,
            unsigned = false;
        } else {
            unsigned = !! unsigned;
        }
        radix = radix || 10;
        if (radix < 2 || 36 < radix)
            throw RangeError('radix');

        var p;
        if ((p = str.indexOf('-')) > 0)
            throw Error('interior hyphen');
        else if (p === 0) {
            return fromString(str.substring(1), unsigned, radix).neg();
        }

        // Do several (8) digits each time through the loop, so as to
        // minimize the calls to the very expensive emulated div.
        var radixToPower = fromNumber(pow_dbl(radix, 8));

        var result = ZERO;
        for (var i = 0; i < str.length; i += 8) {
            var size = Math.min(8, str.length - i),
                value = parseInt(str.substring(i, i + size), radix);
            if (size < 8) {
                var power = fromNumber(pow_dbl(radix, size));
                result = result.mul(power).add(fromNumber(value));
            } else {
                result = result.mul(radixToPower);
                result = result.add(fromNumber(value));
            }
        }
        result.unsigned = unsigned;
        return result;
    }

    /**
     * Returns a Long representation of the given string, written using the specified radix.
     * @function
     * @param {string} str The textual representation of the Long
     * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to `false` for signed
     * @param {number=} radix The radix in which the text is written (2-36), defaults to 10
     * @returns {!Long} The corresponding Long value
     */
    Long.fromString = fromString;

    /**
     * @function
     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val
     * @returns {!Long}
     * @inner
     */
    function fromValue(val) {
        if (val /* is compatible */ instanceof Long)
            return val;
        if (typeof val === 'number')
            return fromNumber(val);
        if (typeof val === 'string')
            return fromString(val);
        // Throws for non-objects, converts non-instanceof Long:
        return fromBits(val.low, val.high, val.unsigned);
    }

    /**
     * Converts the specified value to a Long.
     * @function
     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value
     * @returns {!Long}
     */
    Long.fromValue = fromValue;

    // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be
    // no runtime penalty for these.

    /**
     * @type {number}
     * @const
     * @inner
     */
    var TWO_PWR_16_DBL = 1 << 16;

    /**
     * @type {number}
     * @const
     * @inner
     */
    var TWO_PWR_24_DBL = 1 << 24;

    /**
     * @type {number}
     * @const
     * @inner
     */
    var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;

    /**
     * @type {number}
     * @const
     * @inner
     */
    var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;

    /**
     * @type {number}
     * @const
     * @inner
     */
    var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;

    /**
     * @type {!Long}
     * @const
     * @inner
     */
    var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);

    /**
     * @type {!Long}
     * @inner
     */
    var ZERO = fromInt(0);

    /**
     * Signed zero.
     * @type {!Long}
     */
    Long.ZERO = ZERO;

    /**
     * @type {!Long}
     * @inner
     */
    var UZERO = fromInt(0, true);

    /**
     * Unsigned zero.
     * @type {!Long}
     */
    Long.UZERO = UZERO;

    /**
     * @type {!Long}
     * @inner
     */
    var ONE = fromInt(1);

    /**
     * Signed one.
     * @type {!Long}
     */
    Long.ONE = ONE;

    /**
     * @type {!Long}
     * @inner
     */
    var UONE = fromInt(1, true);

    /**
     * Unsigned one.
     * @type {!Long}
     */
    Long.UONE = UONE;

    /**
     * @type {!Long}
     * @inner
     */
    var NEG_ONE = fromInt(-1);

    /**
     * Signed negative one.
     * @type {!Long}
     */
    Long.NEG_ONE = NEG_ONE;

    /**
     * @type {!Long}
     * @inner
     */
    var MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);

    /**
     * Maximum signed value.
     * @type {!Long}
     */
    Long.MAX_VALUE = MAX_VALUE;

    /**
     * @type {!Long}
     * @inner
     */
    var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);

    /**
     * Maximum unsigned value.
     * @type {!Long}
     */
    Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;

    /**
     * @type {!Long}
     * @inner
     */
    var MIN_VALUE = fromBits(0, 0x80000000|0, false);

    /**
     * Minimum signed value.
     * @type {!Long}
     */
    Long.MIN_VALUE = MIN_VALUE;

    /**
     * @alias Long.prototype
     * @inner
     */
    var LongPrototype = Long.prototype;

    /**
     * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.
     * @returns {number}
     */
    LongPrototype.toInt = function toInt() {
        return this.unsigned ? this.low >>> 0 : this.low;
    };

    /**
     * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).
     * @returns {number}
     */
    LongPrototype.toNumber = function toNumber() {
        if (this.unsigned)
            return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);
        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);
    };

    /**
     * Converts the Long to a string written in the specified radix.
     * @param {number=} radix Radix (2-36), defaults to 10
     * @returns {string}
     * @override
     * @throws {RangeError} If `radix` is out of range
     */
    LongPrototype.toString = function toString(radix) {
        radix = radix || 10;
        if (radix < 2 || 36 < radix)
            throw RangeError('radix');
        if (this.isZero())
            return '0';
        if (this.isNegative()) { // Unsigned Longs are never negative
            if (this.eq(MIN_VALUE)) {
                // We need to change the Long value before it can be negated, so we remove
                // the bottom-most digit in this base and then recurse to do the rest.
                var radixLong = fromNumber(radix),
                    div = this.div(radixLong),
                    rem1 = div.mul(radixLong).sub(this);
                return div.toString(radix) + rem1.toInt().toString(radix);
            } else
                return '-' + this.neg().toString(radix);
        }

        // Do several (6) digits each time through the loop, so as to
        // minimize the calls to the very expensive emulated div.
        var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),
            rem = this;
        var result = '';
        while (true) {
            var remDiv = rem.div(radixToPower),
                intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,
                digits = intval.toString(radix);
            rem = remDiv;
            if (rem.isZero())
                return digits + result;
            else {
                while (digits.length < 6)
                    digits = '0' + digits;
                result = '' + digits + result;
            }
        }
    };

    /**
     * Gets the high 32 bits as a signed integer.
     * @returns {number} Signed high bits
     */
    LongPrototype.getHighBits = function getHighBits() {
        return this.high;
    };

    /**
     * Gets the high 32 bits as an unsigned integer.
     * @returns {number} Unsigned high bits
     */
    LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {
        return this.high >>> 0;
    };

    /**
     * Gets the low 32 bits as a signed integer.
     * @returns {number} Signed low bits
     */
    LongPrototype.getLowBits = function getLowBits() {
        return this.low;
    };

    /**
     * Gets the low 32 bits as an unsigned integer.
     * @returns {number} Unsigned low bits
     */
    LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {
        return this.low >>> 0;
    };

    /**
     * Gets the number of bits needed to represent the absolute value of this Long.
     * @returns {number}
     */
    LongPrototype.getNumBitsAbs = function getNumBitsAbs() {
        if (this.isNegative()) // Unsigned Longs are never negative
            return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();
        var val = this.high != 0 ? this.high : this.low;
        for (var bit = 31; bit > 0; bit--)
            if ((val & (1 << bit)) != 0)
                break;
        return this.high != 0 ? bit + 33 : bit + 1;
    };

    /**
     * Tests if this Long's value equals zero.
     * @returns {boolean}
     */
    LongPrototype.isZero = function isZero() {
        return this.high === 0 && this.low === 0;
    };

    /**
     * Tests if this Long's value is negative.
     * @returns {boolean}
     */
    LongPrototype.isNegative = function isNegative() {
        return !this.unsigned && this.high < 0;
    };

    /**
     * Tests if this Long's value is positive.
     * @returns {boolean}
     */
    LongPrototype.isPositive = function isPositive() {
        return this.unsigned || this.high >= 0;
    };

    /**
     * Tests if this Long's value is odd.
     * @returns {boolean}
     */
    LongPrototype.isOdd = function isOdd() {
        return (this.low & 1) === 1;
    };

    /**
     * Tests if this Long's value is even.
     * @returns {boolean}
     */
    LongPrototype.isEven = function isEven() {
        return (this.low & 1) === 0;
    };

    /**
     * Tests if this Long's value equals the specified's.
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.equals = function equals(other) {
        if (!isLong(other))
            other = fromValue(other);
        if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)
            return false;
        return this.high === other.high && this.low === other.low;
    };

    /**
     * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.eq = LongPrototype.equals;

    /**
     * Tests if this Long's value differs from the specified's.
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.notEquals = function notEquals(other) {
        return !this.eq(/* validates */ other);
    };

    /**
     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.neq = LongPrototype.notEquals;

    /**
     * Tests if this Long's value is less than the specified's.
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.lessThan = function lessThan(other) {
        return this.comp(/* validates */ other) < 0;
    };

    /**
     * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.lt = LongPrototype.lessThan;

    /**
     * Tests if this Long's value is less than or equal the specified's.
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {
        return this.comp(/* validates */ other) <= 0;
    };

    /**
     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.lte = LongPrototype.lessThanOrEqual;

    /**
     * Tests if this Long's value is greater than the specified's.
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.greaterThan = function greaterThan(other) {
        return this.comp(/* validates */ other) > 0;
    };

    /**
     * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.gt = LongPrototype.greaterThan;

    /**
     * Tests if this Long's value is greater than or equal the specified's.
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {
        return this.comp(/* validates */ other) >= 0;
    };

    /**
     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {boolean}
     */
    LongPrototype.gte = LongPrototype.greaterThanOrEqual;

    /**
     * Compares this Long's value with the specified's.
     * @param {!Long|number|string} other Other value
     * @returns {number} 0 if they are the same, 1 if the this is greater and -1
     *  if the given one is greater
     */
    LongPrototype.compare = function compare(other) {
        if (!isLong(other))
            other = fromValue(other);
        if (this.eq(other))
            return 0;
        var thisNeg = this.isNegative(),
            otherNeg = other.isNegative();
        if (thisNeg && !otherNeg)
            return -1;
        if (!thisNeg && otherNeg)
            return 1;
        // At this point the sign bits are the same
        if (!this.unsigned)
            return this.sub(other).isNegative() ? -1 : 1;
        // Both are positive if at least one is unsigned
        return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;
    };

    /**
     * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.
     * @function
     * @param {!Long|number|string} other Other value
     * @returns {number} 0 if they are the same, 1 if the this is greater and -1
     *  if the given one is greater
     */
    LongPrototype.comp = LongPrototype.compare;

    /**
     * Negates this Long's value.
     * @returns {!Long} Negated Long
     */
    LongPrototype.negate = function negate() {
        if (!this.unsigned && this.eq(MIN_VALUE))
            return MIN_VALUE;
        return this.not().add(ONE);
    };

    /**
     * Negates this Long's value. This is an alias of {@link Long#negate}.
     * @function
     * @returns {!Long} Negated Long
     */
    LongPrototype.neg = LongPrototype.negate;

    /**
     * Returns the sum of this and the specified Long.
     * @param {!Long|number|string} addend Addend
     * @returns {!Long} Sum
     */
    LongPrototype.add = function add(addend) {
        if (!isLong(addend))
            addend = fromValue(addend);

        // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

        var a48 = this.high >>> 16;
        var a32 = this.high & 0xFFFF;
        var a16 = this.low >>> 16;
        var a00 = this.low & 0xFFFF;

        var b48 = addend.high >>> 16;
        var b32 = addend.high & 0xFFFF;
        var b16 = addend.low >>> 16;
        var b00 = addend.low & 0xFFFF;

        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
        c00 += a00 + b00;
        c16 += c00 >>> 16;
        c00 &= 0xFFFF;
        c16 += a16 + b16;
        c32 += c16 >>> 16;
        c16 &= 0xFFFF;
        c32 += a32 + b32;
        c48 += c32 >>> 16;
        c32 &= 0xFFFF;
        c48 += a48 + b48;
        c48 &= 0xFFFF;
        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);
    };

    /**
     * Returns the difference of this and the specified Long.
     * @param {!Long|number|string} subtrahend Subtrahend
     * @returns {!Long} Difference
     */
    LongPrototype.subtract = function subtract(subtrahend) {
        if (!isLong(subtrahend))
            subtrahend = fromValue(subtrahend);
        return this.add(subtrahend.neg());
    };

    /**
     * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.
     * @function
     * @param {!Long|number|string} subtrahend Subtrahend
     * @returns {!Long} Difference
     */
    LongPrototype.sub = LongPrototype.subtract;

    /**
     * Returns the product of this and the specified Long.
     * @param {!Long|number|string} multiplier Multiplier
     * @returns {!Long} Product
     */
    LongPrototype.multiply = function multiply(multiplier) {
        if (this.isZero())
            return ZERO;
        if (!isLong(multiplier))
            multiplier = fromValue(multiplier);
        if (multiplier.isZero())
            return ZERO;
        if (this.eq(MIN_VALUE))
            return multiplier.isOdd() ? MIN_VALUE : ZERO;
        if (multiplier.eq(MIN_VALUE))
            return this.isOdd() ? MIN_VALUE : ZERO;

        if (this.isNegative()) {
            if (multiplier.isNegative())
                return this.neg().mul(multiplier.neg());
            else
                return this.neg().mul(multiplier).neg();
        } else if (multiplier.isNegative())
            return this.mul(multiplier.neg()).neg();

        // If both longs are small, use float multiplication
        if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))
            return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);

        // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
        // We can skip products that would overflow.

        var a48 = this.high >>> 16;
        var a32 = this.high & 0xFFFF;
        var a16 = this.low >>> 16;
        var a00 = this.low & 0xFFFF;

        var b48 = multiplier.high >>> 16;
        var b32 = multiplier.high & 0xFFFF;
        var b16 = multiplier.low >>> 16;
        var b00 = multiplier.low & 0xFFFF;

        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
        c00 += a00 * b00;
        c16 += c00 >>> 16;
        c00 &= 0xFFFF;
        c16 += a16 * b00;
        c32 += c16 >>> 16;
        c16 &= 0xFFFF;
        c16 += a00 * b16;
        c32 += c16 >>> 16;
        c16 &= 0xFFFF;
        c32 += a32 * b00;
        c48 += c32 >>> 16;
        c32 &= 0xFFFF;
        c32 += a16 * b16;
        c48 += c32 >>> 16;
        c32 &= 0xFFFF;
        c32 += a00 * b32;
        c48 += c32 >>> 16;
        c32 &= 0xFFFF;
        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
        c48 &= 0xFFFF;
        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);
    };

    /**
     * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.
     * @function
     * @param {!Long|number|string} multiplier Multiplier
     * @returns {!Long} Product
     */
    LongPrototype.mul = LongPrototype.multiply;

    /**
     * Returns this Long divided by the specified. The result is signed if this Long is signed or
     *  unsigned if this Long is unsigned.
     * @param {!Long|number|string} divisor Divisor
     * @returns {!Long} Quotient
     */
    LongPrototype.divide = function divide(divisor) {
        if (!isLong(divisor))
            divisor = fromValue(divisor);
        if (divisor.isZero())
            throw Error('division by zero');
        if (this.isZero())
            return this.unsigned ? UZERO : ZERO;
        var approx, rem, res;
        if (!this.unsigned) {
            // This section is only relevant for signed longs and is derived from the
            // closure library as a whole.
            if (this.eq(MIN_VALUE)) {
                if (divisor.eq(ONE) || divisor.eq(NEG_ONE))
                    return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
                else if (divisor.eq(MIN_VALUE))
                    return ONE;
                else {
                    // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
                    var halfThis = this.shr(1);
                    approx = halfThis.div(divisor).shl(1);
                    if (approx.eq(ZERO)) {
                        return divisor.isNegative() ? ONE : NEG_ONE;
                    } else {
                        rem = this.sub(divisor.mul(approx));
                        res = approx.add(rem.div(divisor));
                        return res;
                    }
                }
            } else if (divisor.eq(MIN_VALUE))
                return this.unsigned ? UZERO : ZERO;
            if (this.isNegative()) {
                if (divisor.isNegative())
                    return this.neg().div(divisor.neg());
                return this.neg().div(divisor).neg();
            } else if (divisor.isNegative())
                return this.div(divisor.neg()).neg();
            res = ZERO;
        } else {
            // The algorithm below has not been made for unsigned longs. It's therefore
            // required to take special care of the MSB prior to running it.
            if (!divisor.unsigned)
                divisor = divisor.toUnsigned();
            if (divisor.gt(this))
                return UZERO;
            if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true
                return UONE;
            res = UZERO;
        }

        // Repeat the following until the remainder is less than other:  find a
        // floating-point that approximates remainder / other *from below*, add this
        // into the result, and subtract it from the remainder.  It is critical that
        // the approximate value is less than or equal to the real value so that the
        // remainder never becomes negative.
        rem = this;
        while (rem.gte(divisor)) {
            // Approximate the result of division. This may be a little greater or
            // smaller than the actual value.
            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));

            // We will tweak the approximate result by changing it in the 48-th digit or
            // the smallest non-fractional digit, whichever is larger.
            var log2 = Math.ceil(Math.log(approx) / Math.LN2),
                delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),

            // Decrease the approximation until it is smaller than the remainder.  Note
            // that if it is too large, the product overflows and is negative.
                approxRes = fromNumber(approx),
                approxRem = approxRes.mul(divisor);
            while (approxRem.isNegative() || approxRem.gt(rem)) {
                approx -= delta;
                approxRes = fromNumber(approx, this.unsigned);
                approxRem = approxRes.mul(divisor);
            }

            // We know the answer can't be zero... and actually, zero would cause
            // infinite recursion since we would make no progress.
            if (approxRes.isZero())
                approxRes = ONE;

            res = res.add(approxRes);
            rem = rem.sub(approxRem);
        }
        return res;
    };

    /**
     * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.
     * @function
     * @param {!Long|number|string} divisor Divisor
     * @returns {!Long} Quotient
     */
    LongPrototype.div = LongPrototype.divide;

    /**
     * Returns this Long modulo the specified.
     * @param {!Long|number|string} divisor Divisor
     * @returns {!Long} Remainder
     */
    LongPrototype.modulo = function modulo(divisor) {
        if (!isLong(divisor))
            divisor = fromValue(divisor);
        return this.sub(this.div(divisor).mul(divisor));
    };

    /**
     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.
     * @function
     * @param {!Long|number|string} divisor Divisor
     * @returns {!Long} Remainder
     */
    LongPrototype.mod = LongPrototype.modulo;

    /**
     * Returns the bitwise NOT of this Long.
     * @returns {!Long}
     */
    LongPrototype.not = function not() {
        return fromBits(~this.low, ~this.high, this.unsigned);
    };

    /**
     * Returns the bitwise AND of this Long and the specified.
     * @param {!Long|number|string} other Other Long
     * @returns {!Long}
     */
    LongPrototype.and = function and(other) {
        if (!isLong(other))
            other = fromValue(other);
        return fromBits(this.low & other.low, this.high & other.high, this.unsigned);
    };

    /**
     * Returns the bitwise OR of this Long and the specified.
     * @param {!Long|number|string} other Other Long
     * @returns {!Long}
     */
    LongPrototype.or = function or(other) {
        if (!isLong(other))
            other = fromValue(other);
        return fromBits(this.low | other.low, this.high | other.high, this.unsigned);
    };

    /**
     * Returns the bitwise XOR of this Long and the given one.
     * @param {!Long|number|string} other Other Long
     * @returns {!Long}
     */
    LongPrototype.xor = function xor(other) {
        if (!isLong(other))
            other = fromValue(other);
        return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);
    };

    /**
     * Returns this Long with bits shifted to the left by the given amount.
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Shifted Long
     */
    LongPrototype.shiftLeft = function shiftLeft(numBits) {
        if (isLong(numBits))
            numBits = numBits.toInt();
        if ((numBits &= 63) === 0)
            return this;
        else if (numBits < 32)
            return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);
        else
            return fromBits(0, this.low << (numBits - 32), this.unsigned);
    };

    /**
     * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.
     * @function
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Shifted Long
     */
    LongPrototype.shl = LongPrototype.shiftLeft;

    /**
     * Returns this Long with bits arithmetically shifted to the right by the given amount.
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Shifted Long
     */
    LongPrototype.shiftRight = function shiftRight(numBits) {
        if (isLong(numBits))
            numBits = numBits.toInt();
        if ((numBits &= 63) === 0)
            return this;
        else if (numBits < 32)
            return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);
        else
            return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);
    };

    /**
     * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.
     * @function
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Shifted Long
     */
    LongPrototype.shr = LongPrototype.shiftRight;

    /**
     * Returns this Long with bits logically shifted to the right by the given amount.
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Shifted Long
     */
    LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {
        if (isLong(numBits))
            numBits = numBits.toInt();
        numBits &= 63;
        if (numBits === 0)
            return this;
        else {
            var high = this.high;
            if (numBits < 32) {
                var low = this.low;
                return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);
            } else if (numBits === 32)
                return fromBits(high, 0, this.unsigned);
            else
                return fromBits(high >>> (numBits - 32), 0, this.unsigned);
        }
    };

    /**
     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.
     * @function
     * @param {number|!Long} numBits Number of bits
     * @returns {!Long} Shifted Long
     */
    LongPrototype.shru = LongPrototype.shiftRightUnsigned;

    /**
     * Converts this Long to signed.
     * @returns {!Long} Signed long
     */
    LongPrototype.toSigned = function toSigned() {
        if (!this.unsigned)
            return this;
        return fromBits(this.low, this.high, false);
    };

    /**
     * Converts this Long to unsigned.
     * @returns {!Long} Unsigned long
     */
    LongPrototype.toUnsigned = function toUnsigned() {
        if (this.unsigned)
            return this;
        return fromBits(this.low, this.high, true);
    };

    /**
     * Converts this Long to its byte representation.
     * @param {boolean=} le Whether little or big endian, defaults to big endian
     * @returns {!Array.<number>} Byte representation
     */
    LongPrototype.toBytes = function(le) {
        return le ? this.toBytesLE() : this.toBytesBE();
    }

    /**
     * Converts this Long to its little endian byte representation.
     * @returns {!Array.<number>} Little endian byte representation
     */
    LongPrototype.toBytesLE = function() {
        var hi = this.high,
            lo = this.low;
        return [
             lo         & 0xff,
            (lo >>>  8) & 0xff,
            (lo >>> 16) & 0xff,
            (lo >>> 24) & 0xff,
             hi         & 0xff,
            (hi >>>  8) & 0xff,
            (hi >>> 16) & 0xff,
            (hi >>> 24) & 0xff
        ];
    }

    /**
     * Converts this Long to its big endian byte representation.
     * @returns {!Array.<number>} Big endian byte representation
     */
    LongPrototype.toBytesBE = function() {
        var hi = this.high,
            lo = this.low;
        return [
            (hi >>> 24) & 0xff,
            (hi >>> 16) & 0xff,
            (hi >>>  8) & 0xff,
             hi         & 0xff,
            (lo >>> 24) & 0xff,
            (lo >>> 16) & 0xff,
            (lo >>>  8) & 0xff,
             lo         & 0xff
        ];
    }

    return Long;
});


/***/ }),

/***/ "./node_modules/minimatch/minimatch.js":
/*!*********************************************!*\
  !*** ./node_modules/minimatch/minimatch.js ***!
  \*********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 1:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = minimatch
minimatch.Minimatch = Minimatch

var path = { sep: '/' }
try {
  path = __webpack_require__(/*! path */ "path")
} catch (er) {}

var GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}
var expand = __webpack_require__(/*! brace-expansion */ "./node_modules/brace-expansion/index.js")

var plTypes = {
  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},
  '?': { open: '(?:', close: ')?' },
  '+': { open: '(?:', close: ')+' },
  '*': { open: '(?:', close: ')*' },
  '@': { open: '(?:', close: ')' }
}

// any single thing other than /
// don't need to escape / when using new RegExp()
var qmark = '[^/]'

// * => any number of characters
var star = qmark + '*?'

// ** when dots are allowed.  Anything goes, except .. and .
// not (^ or / followed by one or two dots followed by $ or /),
// followed by anything, any number of times.
var twoStarDot = '(?:(?!(?:\\\/|^)(?:\\.{1,2})($|\\\/)).)*?'

// not a ^ or / followed by a dot,
// followed by anything, any number of times.
var twoStarNoDot = '(?:(?!(?:\\\/|^)\\.).)*?'

// characters that need to be escaped in RegExp.
var reSpecials = charSet('().*{}+?[]^$\\!')

// "abc" -> { a:true, b:true, c:true }
function charSet (s) {
  return s.split('').reduce(function (set, c) {
    set[c] = true
    return set
  }, {})
}

// normalizes slashes.
var slashSplit = /\/+/

minimatch.filter = filter
function filter (pattern, options) {
  options = options || {}
  return function (p, i, list) {
    return minimatch(p, pattern, options)
  }
}

function ext (a, b) {
  a = a || {}
  b = b || {}
  var t = {}
  Object.keys(b).forEach(function (k) {
    t[k] = b[k]
  })
  Object.keys(a).forEach(function (k) {
    t[k] = a[k]
  })
  return t
}

minimatch.defaults = function (def) {
  if (!def || !Object.keys(def).length) return minimatch

  var orig = minimatch

  var m = function minimatch (p, pattern, options) {
    return orig.minimatch(p, pattern, ext(def, options))
  }

  m.Minimatch = function Minimatch (pattern, options) {
    return new orig.Minimatch(pattern, ext(def, options))
  }

  return m
}

Minimatch.defaults = function (def) {
  if (!def || !Object.keys(def).length) return Minimatch
  return minimatch.defaults(def).Minimatch
}

function minimatch (p, pattern, options) {
  if (typeof pattern !== 'string') {
    throw new TypeError('glob pattern string required')
  }

  if (!options) options = {}

  // shortcut: comments match nothing.
  if (!options.nocomment && pattern.charAt(0) === '#') {
    return false
  }

  // "" only matches ""
  if (pattern.trim() === '') return p === ''

  return new Minimatch(pattern, options).match(p)
}

function Minimatch (pattern, options) {
  if (!(this instanceof Minimatch)) {
    return new Minimatch(pattern, options)
  }

  if (typeof pattern !== 'string') {
    throw new TypeError('glob pattern string required')
  }

  if (!options) options = {}
  pattern = pattern.trim()

  // windows support: need to use /, not \
  if (path.sep !== '/') {
    pattern = pattern.split(path.sep).join('/')
  }

  this.options = options
  this.set = []
  this.pattern = pattern
  this.regexp = null
  this.negate = false
  this.comment = false
  this.empty = false

  // make the set of regexps etc.
  this.make()
}

Minimatch.prototype.debug = function () {}

Minimatch.prototype.make = make
function make () {
  // don't do it more than once.
  if (this._made) return

  var pattern = this.pattern
  var options = this.options

  // empty patterns and comments match nothing.
  if (!options.nocomment && pattern.charAt(0) === '#') {
    this.comment = true
    return
  }
  if (!pattern) {
    this.empty = true
    return
  }

  // step 1: figure out negation, etc.
  this.parseNegate()

  // step 2: expand braces
  var set = this.globSet = this.braceExpand()

  if (options.debug) this.debug = console.error

  this.debug(this.pattern, set)

  // step 3: now we have a set, so turn each one into a series of path-portion
  // matching patterns.
  // These will be regexps, except in the case of "**", which is
  // set to the GLOBSTAR object for globstar behavior,
  // and will not contain any / characters
  set = this.globParts = set.map(function (s) {
    return s.split(slashSplit)
  })

  this.debug(this.pattern, set)

  // glob --> regexps
  set = set.map(function (s, si, set) {
    return s.map(this.parse, this)
  }, this)

  this.debug(this.pattern, set)

  // filter out everything that didn't compile properly.
  set = set.filter(function (s) {
    return s.indexOf(false) === -1
  })

  this.debug(this.pattern, set)

  this.set = set
}

Minimatch.prototype.parseNegate = parseNegate
function parseNegate () {
  var pattern = this.pattern
  var negate = false
  var options = this.options
  var negateOffset = 0

  if (options.nonegate) return

  for (var i = 0, l = pattern.length
    ; i < l && pattern.charAt(i) === '!'
    ; i++) {
    negate = !negate
    negateOffset++
  }

  if (negateOffset) this.pattern = pattern.substr(negateOffset)
  this.negate = negate
}

// Brace expansion:
// a{b,c}d -> abd acd
// a{b,}c -> abc ac
// a{0..3}d -> a0d a1d a2d a3d
// a{b,c{d,e}f}g -> abg acdfg acefg
// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg
//
// Invalid sets are not expanded.
// a{2..}b -> a{2..}b
// a{b}c -> a{b}c
minimatch.braceExpand = function (pattern, options) {
  return braceExpand(pattern, options)
}

Minimatch.prototype.braceExpand = braceExpand

function braceExpand (pattern, options) {
  if (!options) {
    if (this instanceof Minimatch) {
      options = this.options
    } else {
      options = {}
    }
  }

  pattern = typeof pattern === 'undefined'
    ? this.pattern : pattern

  if (typeof pattern === 'undefined') {
    throw new TypeError('undefined pattern')
  }

  if (options.nobrace ||
    !pattern.match(/\{.*\}/)) {
    // shortcut. no need to expand.
    return [pattern]
  }

  return expand(pattern)
}

// parse a component of the expanded set.
// At this point, no pattern may contain "/" in it
// so we're going to return a 2d array, where each entry is the full
// pattern, split on '/', and then turned into a regular expression.
// A regexp is made at the end which joins each array with an
// escaped /, and another full one which joins each regexp with |.
//
// Following the lead of Bash 4.1, note that "**" only has special meaning
// when it is the *only* thing in a path portion.  Otherwise, any series
// of * is equivalent to a single *.  Globstar behavior is enabled by
// default, and can be disabled by setting options.noglobstar.
Minimatch.prototype.parse = parse
var SUBPARSE = {}
function parse (pattern, isSub) {
  if (pattern.length > 1024 * 64) {
    throw new TypeError('pattern is too long')
  }

  var options = this.options

  // shortcuts
  if (!options.noglobstar && pattern === '**') return GLOBSTAR
  if (pattern === '') return ''

  var re = ''
  var hasMagic = !!options.nocase
  var escaping = false
  // ? => one single character
  var patternListStack = []
  var negativeLists = []
  var stateChar
  var inClass = false
  var reClassStart = -1
  var classStart = -1
  // . and .. never match anything that doesn't start with .,
  // even when options.dot is set.
  var patternStart = pattern.charAt(0) === '.' ? '' // anything
  // not (start or / followed by . or .. followed by / or end)
  : options.dot ? '(?!(?:^|\\\/)\\.{1,2}(?:$|\\\/))'
  : '(?!\\.)'
  var self = this

  function clearStateChar () {
    if (stateChar) {
      // we had some state-tracking character
      // that wasn't consumed by this pass.
      switch (stateChar) {
        case '*':
          re += star
          hasMagic = true
        break
        case '?':
          re += qmark
          hasMagic = true
        break
        default:
          re += '\\' + stateChar
        break
      }
      self.debug('clearStateChar %j %j', stateChar, re)
      stateChar = false
    }
  }

  for (var i = 0, len = pattern.length, c
    ; (i < len) && (c = pattern.charAt(i))
    ; i++) {
    this.debug('%s\t%s %s %j', pattern, i, re, c)

    // skip over any that are escaped.
    if (escaping && reSpecials[c]) {
      re += '\\' + c
      escaping = false
      continue
    }

    switch (c) {
      case '/':
        // completely not allowed, even escaped.
        // Should already be path-split by now.
        return false

      case '\\':
        clearStateChar()
        escaping = true
      continue

      // the various stateChar values
      // for the "extglob" stuff.
      case '?':
      case '*':
      case '+':
      case '@':
      case '!':
        this.debug('%s\t%s %s %j <-- stateChar', pattern, i, re, c)

        // all of those are literals inside a class, except that
        // the glob [!a] means [^a] in regexp
        if (inClass) {
          this.debug('  in class')
          if (c === '!' && i === classStart + 1) c = '^'
          re += c
          continue
        }

        // if we already have a stateChar, then it means
        // that there was something like ** or +? in there.
        // Handle the stateChar, then proceed with this one.
        self.debug('call clearStateChar %j', stateChar)
        clearStateChar()
        stateChar = c
        // if extglob is disabled, then +(asdf|foo) isn't a thing.
        // just clear the statechar *now*, rather than even diving into
        // the patternList stuff.
        if (options.noext) clearStateChar()
      continue

      case '(':
        if (inClass) {
          re += '('
          continue
        }

        if (!stateChar) {
          re += '\\('
          continue
        }

        patternListStack.push({
          type: stateChar,
          start: i - 1,
          reStart: re.length,
          open: plTypes[stateChar].open,
          close: plTypes[stateChar].close
        })
        // negation is (?:(?!js)[^/]*)
        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'
        this.debug('plType %j %j', stateChar, re)
        stateChar = false
      continue

      case ')':
        if (inClass || !patternListStack.length) {
          re += '\\)'
          continue
        }

        clearStateChar()
        hasMagic = true
        var pl = patternListStack.pop()
        // negation is (?:(?!js)[^/]*)
        // The others are (?:<pattern>)<type>
        re += pl.close
        if (pl.type === '!') {
          negativeLists.push(pl)
        }
        pl.reEnd = re.length
      continue

      case '|':
        if (inClass || !patternListStack.length || escaping) {
          re += '\\|'
          escaping = false
          continue
        }

        clearStateChar()
        re += '|'
      continue

      // these are mostly the same in regexp and glob
      case '[':
        // swallow any state-tracking char before the [
        clearStateChar()

        if (inClass) {
          re += '\\' + c
          continue
        }

        inClass = true
        classStart = i
        reClassStart = re.length
        re += c
      continue

      case ']':
        //  a right bracket shall lose its special
        //  meaning and represent itself in
        //  a bracket expression if it occurs
        //  first in the list.  -- POSIX.2 2.8.3.2
        if (i === classStart + 1 || !inClass) {
          re += '\\' + c
          escaping = false
          continue
        }

        // handle the case where we left a class open.
        // "[z-a]" is valid, equivalent to "\[z-a\]"
        if (inClass) {
          // split where the last [ was, make sure we don't have
          // an invalid re. if so, re-walk the contents of the
          // would-be class to re-translate any characters that
          // were passed through as-is
          // TODO: It would probably be faster to determine this
          // without a try/catch and a new RegExp, but it's tricky
          // to do safely.  For now, this is safe and works.
          var cs = pattern.substring(classStart + 1, i)
          try {
            RegExp('[' + cs + ']')
          } catch (er) {
            // not a valid class!
            var sp = this.parse(cs, SUBPARSE)
            re = re.substr(0, reClassStart) + '\\[' + sp[0] + '\\]'
            hasMagic = hasMagic || sp[1]
            inClass = false
            continue
          }
        }

        // finish up the class.
        hasMagic = true
        inClass = false
        re += c
      continue

      default:
        // swallow any state char that wasn't consumed
        clearStateChar()

        if (escaping) {
          // no need
          escaping = false
        } else if (reSpecials[c]
          && !(c === '^' && inClass)) {
          re += '\\'
        }

        re += c

    } // switch
  } // for

  // handle the case where we left a class open.
  // "[abc" is valid, equivalent to "\[abc"
  if (inClass) {
    // split where the last [ was, and escape it
    // this is a huge pita.  We now have to re-walk
    // the contents of the would-be class to re-translate
    // any characters that were passed through as-is
    cs = pattern.substr(classStart + 1)
    sp = this.parse(cs, SUBPARSE)
    re = re.substr(0, reClassStart) + '\\[' + sp[0]
    hasMagic = hasMagic || sp[1]
  }

  // handle the case where we had a +( thing at the *end*
  // of the pattern.
  // each pattern list stack adds 3 chars, and we need to go through
  // and escape any | chars that were passed through as-is for the regexp.
  // Go through and escape them, taking care not to double-escape any
  // | chars that were already escaped.
  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {
    var tail = re.slice(pl.reStart + pl.open.length)
    this.debug('setting tail', re, pl)
    // maybe some even number of \, then maybe 1 \, followed by a |
    tail = tail.replace(/((?:\\{2}){0,64})(\\?)\|/g, function (_, $1, $2) {
      if (!$2) {
        // the | isn't already escaped, so escape it.
        $2 = '\\'
      }

      // need to escape all those slashes *again*, without escaping the
      // one that we need for escaping the | character.  As it works out,
      // escaping an even number of slashes can be done by simply repeating
      // it exactly after itself.  That's why this trick works.
      //
      // I am sorry that you have to see this.
      return $1 + $1 + $2 + '|'
    })

    this.debug('tail=%j\n   %s', tail, tail, pl, re)
    var t = pl.type === '*' ? star
      : pl.type === '?' ? qmark
      : '\\' + pl.type

    hasMagic = true
    re = re.slice(0, pl.reStart) + t + '\\(' + tail
  }

  // handle trailing things that only matter at the very end.
  clearStateChar()
  if (escaping) {
    // trailing \\
    re += '\\\\'
  }

  // only need to apply the nodot start if the re starts with
  // something that could conceivably capture a dot
  var addPatternStart = false
  switch (re.charAt(0)) {
    case '.':
    case '[':
    case '(': addPatternStart = true
  }

  // Hack to work around lack of negative lookbehind in JS
  // A pattern like: *.!(x).!(y|z) needs to ensure that a name
  // like 'a.xyz.yz' doesn't match.  So, the first negative
  // lookahead, has to look ALL the way ahead, to the end of
  // the pattern.
  for (var n = negativeLists.length - 1; n > -1; n--) {
    var nl = negativeLists[n]

    var nlBefore = re.slice(0, nl.reStart)
    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)
    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)
    var nlAfter = re.slice(nl.reEnd)

    nlLast += nlAfter

    // Handle nested stuff like *(*.js|!(*.json)), where open parens
    // mean that we should *not* include the ) in the bit that is considered
    // "after" the negated section.
    var openParensBefore = nlBefore.split('(').length - 1
    var cleanAfter = nlAfter
    for (i = 0; i < openParensBefore; i++) {
      cleanAfter = cleanAfter.replace(/\)[+*?]?/, '')
    }
    nlAfter = cleanAfter

    var dollar = ''
    if (nlAfter === '' && isSub !== SUBPARSE) {
      dollar = '$'
    }
    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast
    re = newRe
  }

  // if the re is not "" at this point, then we need to make sure
  // it doesn't match against an empty path part.
  // Otherwise a/* will match a/, which it should not.
  if (re !== '' && hasMagic) {
    re = '(?=.)' + re
  }

  if (addPatternStart) {
    re = patternStart + re
  }

  // parsing just a piece of a larger pattern.
  if (isSub === SUBPARSE) {
    return [re, hasMagic]
  }

  // skip the regexp for non-magical patterns
  // unescape anything in it, though, so that it'll be
  // an exact match against a file etc.
  if (!hasMagic) {
    return globUnescape(pattern)
  }

  var flags = options.nocase ? 'i' : ''
  try {
    var regExp = new RegExp('^' + re + '$', flags)
  } catch (er) {
    // If it was an invalid regular expression, then it can't match
    // anything.  This trick looks for a character after the end of
    // the string, which is of course impossible, except in multi-line
    // mode, but it's not a /m regex.
    return new RegExp('$.')
  }

  regExp._glob = pattern
  regExp._src = re

  return regExp
}

minimatch.makeRe = function (pattern, options) {
  return new Minimatch(pattern, options || {}).makeRe()
}

Minimatch.prototype.makeRe = makeRe
function makeRe () {
  if (this.regexp || this.regexp === false) return this.regexp

  // at this point, this.set is a 2d array of partial
  // pattern strings, or "**".
  //
  // It's better to use .match().  This function shouldn't
  // be used, really, but it's pretty convenient sometimes,
  // when you just want to work with a regex.
  var set = this.set

  if (!set.length) {
    this.regexp = false
    return this.regexp
  }
  var options = this.options

  var twoStar = options.noglobstar ? star
    : options.dot ? twoStarDot
    : twoStarNoDot
  var flags = options.nocase ? 'i' : ''

  var re = set.map(function (pattern) {
    return pattern.map(function (p) {
      return (p === GLOBSTAR) ? twoStar
      : (typeof p === 'string') ? regExpEscape(p)
      : p._src
    }).join('\\\/')
  }).join('|')

  // must match entire pattern
  // ending in a * or ** will make it less strict.
  re = '^(?:' + re + ')$'

  // can match anything, as long as it's not this.
  if (this.negate) re = '^(?!' + re + ').*$'

  try {
    this.regexp = new RegExp(re, flags)
  } catch (ex) {
    this.regexp = false
  }
  return this.regexp
}

minimatch.match = function (list, pattern, options) {
  options = options || {}
  var mm = new Minimatch(pattern, options)
  list = list.filter(function (f) {
    return mm.match(f)
  })
  if (mm.options.nonull && !list.length) {
    list.push(pattern)
  }
  return list
}

Minimatch.prototype.match = match
function match (f, partial) {
  this.debug('match', f, this.pattern)
  // short-circuit in the case of busted things.
  // comments, etc.
  if (this.comment) return false
  if (this.empty) return f === ''

  if (f === '/' && partial) return true

  var options = this.options

  // windows: need to use /, not \
  if (path.sep !== '/') {
    f = f.split(path.sep).join('/')
  }

  // treat the test path as a set of pathparts.
  f = f.split(slashSplit)
  this.debug(this.pattern, 'split', f)

  // just ONE of the pattern sets in this.set needs to match
  // in order for it to be valid.  If negating, then just one
  // match means that we have failed.
  // Either way, return on the first hit.

  var set = this.set
  this.debug(this.pattern, 'set', set)

  // Find the basename of the path by looking for the last non-empty segment
  var filename
  var i
  for (i = f.length - 1; i >= 0; i--) {
    filename = f[i]
    if (filename) break
  }

  for (i = 0; i < set.length; i++) {
    var pattern = set[i]
    var file = f
    if (options.matchBase && pattern.length === 1) {
      file = [filename]
    }
    var hit = this.matchOne(file, pattern, partial)
    if (hit) {
      if (options.flipNegate) return true
      return !this.negate
    }
  }

  // didn't get any hits.  this is success if it's a negative
  // pattern, failure otherwise.
  if (options.flipNegate) return false
  return this.negate
}

// set partial to true to test if, for example,
// "/a/b" matches the start of "/*/b/*/d"
// Partial means, if you run out of file before you run
// out of pattern, then that's fine, as long as all
// the parts match.
Minimatch.prototype.matchOne = function (file, pattern, partial) {
  var options = this.options

  this.debug('matchOne',
    { 'this': this, file: file, pattern: pattern })

  this.debug('matchOne', file.length, pattern.length)

  for (var fi = 0,
      pi = 0,
      fl = file.length,
      pl = pattern.length
      ; (fi < fl) && (pi < pl)
      ; fi++, pi++) {
    this.debug('matchOne loop')
    var p = pattern[pi]
    var f = file[fi]

    this.debug(pattern, p, f)

    // should be impossible.
    // some invalid regexp stuff in the set.
    if (p === false) return false

    if (p === GLOBSTAR) {
      this.debug('GLOBSTAR', [pattern, p, f])

      // "**"
      // a/**/b/**/c would match the following:
      // a/b/x/y/z/c
      // a/x/y/z/b/c
      // a/b/x/b/x/c
      // a/b/c
      // To do this, take the rest of the pattern after
      // the **, and see if it would match the file remainder.
      // If so, return success.
      // If not, the ** "swallows" a segment, and try again.
      // This is recursively awful.
      //
      // a/**/b/**/c matching a/b/x/y/z/c
      // - a matches a
      // - doublestar
      //   - matchOne(b/x/y/z/c, b/**/c)
      //     - b matches b
      //     - doublestar
      //       - matchOne(x/y/z/c, c) -> no
      //       - matchOne(y/z/c, c) -> no
      //       - matchOne(z/c, c) -> no
      //       - matchOne(c, c) yes, hit
      var fr = fi
      var pr = pi + 1
      if (pr === pl) {
        this.debug('** at the end')
        // a ** at the end will just swallow the rest.
        // We have found a match.
        // however, it will not swallow /.x, unless
        // options.dot is set.
        // . and .. are *never* matched by **, for explosively
        // exponential reasons.
        for (; fi < fl; fi++) {
          if (file[fi] === '.' || file[fi] === '..' ||
            (!options.dot && file[fi].charAt(0) === '.')) return false
        }
        return true
      }

      // ok, let's see if we can swallow whatever we can.
      while (fr < fl) {
        var swallowee = file[fr]

        this.debug('\nglobstar while', file, fr, pattern, pr, swallowee)

        // XXX remove this slice.  Just pass the start index.
        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {
          this.debug('globstar found match!', fr, fl, swallowee)
          // found a match.
          return true
        } else {
          // can't swallow "." or ".." ever.
          // can only swallow ".foo" when explicitly asked.
          if (swallowee === '.' || swallowee === '..' ||
            (!options.dot && swallowee.charAt(0) === '.')) {
            this.debug('dot detected!', file, fr, pattern, pr)
            break
          }

          // ** swallows a segment, and continue.
          this.debug('globstar swallow a segment, and continue')
          fr++
        }
      }

      // no match was found.
      // However, in partial mode, we can't say this is necessarily over.
      // If there's more *pattern* left, then
      if (partial) {
        // ran out of file
        this.debug('\n>>> no match, partial?', file, fr, pattern, pr)
        if (fr === fl) return true
      }
      return false
    }

    // something other than **
    // non-magic patterns just have to match exactly
    // patterns with magic have been turned into regexps.
    var hit
    if (typeof p === 'string') {
      if (options.nocase) {
        hit = f.toLowerCase() === p.toLowerCase()
      } else {
        hit = f === p
      }
      this.debug('string match', p, f, hit)
    } else {
      hit = f.match(p)
      this.debug('pattern match', p, f, hit)
    }

    if (!hit) return false
  }

  // Note: ending in / means that we'll get a final ""
  // at the end of the pattern.  This can only match a
  // corresponding "" at the end of the file.
  // If the file ends in /, then it can only match a
  // a pattern that ends in /, unless the pattern just
  // doesn't have any more for it. But, a/b/ should *not*
  // match "a/b/*", even though "" matches against the
  // [^/]*? pattern, except in partial mode, where it might
  // simply not be reached yet.
  // However, a/b/ should still satisfy a/*

  // now either we fell off the end of the pattern, or we're done.
  if (fi === fl && pi === pl) {
    // ran out of pattern and filename at the same time.
    // an exact hit!
    return true
  } else if (fi === fl) {
    // ran out of file, but still had pattern left.
    // this is ok if we're doing the match as part of
    // a glob fs traversal.
    return partial
  } else if (pi === pl) {
    // ran out of pattern, still have file left.
    // this is only acceptable if we're on the very last
    // empty segment of a file with a trailing slash.
    // a/* should match a/b/
    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')
    return emptyFileEnd
  }

  // should be unreachable.
  throw new Error('wtf?')
}

// replace stuff like \* with *
function globUnescape (s) {
  return s.replace(/\\(.)/g, '$1')
}

function regExpEscape (s) {
  return s.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&')
}


/***/ }),

/***/ "./node_modules/node-fetch/lib/index.mjs":
/*!***********************************************!*\
  !*** ./node_modules/node-fetch/lib/index.mjs ***!
  \***********************************************/
/*! namespace exports */
/*! export FetchError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Headers [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Request [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Response [provided] [no usage info] [missing usage info prevents renaming] */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "Headers": () => /* binding */ Headers,
/* harmony export */   "Request": () => /* binding */ Request,
/* harmony export */   "Response": () => /* binding */ Response,
/* harmony export */   "FetchError": () => /* binding */ FetchError
/* harmony export */ });
/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stream */ "stream");
/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(stream__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! http */ "http");
/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(http__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! url */ "url");
/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! https */ "https");
/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(https__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! zlib */ "zlib");
/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(zlib__WEBPACK_IMPORTED_MODULE_4__);






// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js

// fix for "Readable" isn't a named export issue
const Readable = (stream__WEBPACK_IMPORTED_MODULE_0___default().Readable);

const BUFFER = Symbol('buffer');
const TYPE = Symbol('type');

class Blob {
	constructor() {
		this[TYPE] = '';

		const blobParts = arguments[0];
		const options = arguments[1];

		const buffers = [];
		let size = 0;

		if (blobParts) {
			const a = blobParts;
			const length = Number(a.length);
			for (let i = 0; i < length; i++) {
				const element = a[i];
				let buffer;
				if (element instanceof Buffer) {
					buffer = element;
				} else if (ArrayBuffer.isView(element)) {
					buffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);
				} else if (element instanceof ArrayBuffer) {
					buffer = Buffer.from(element);
				} else if (element instanceof Blob) {
					buffer = element[BUFFER];
				} else {
					buffer = Buffer.from(typeof element === 'string' ? element : String(element));
				}
				size += buffer.length;
				buffers.push(buffer);
			}
		}

		this[BUFFER] = Buffer.concat(buffers);

		let type = options && options.type !== undefined && String(options.type).toLowerCase();
		if (type && !/[^\u0020-\u007E]/.test(type)) {
			this[TYPE] = type;
		}
	}
	get size() {
		return this[BUFFER].length;
	}
	get type() {
		return this[TYPE];
	}
	text() {
		return Promise.resolve(this[BUFFER].toString());
	}
	arrayBuffer() {
		const buf = this[BUFFER];
		const ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
		return Promise.resolve(ab);
	}
	stream() {
		const readable = new Readable();
		readable._read = function () {};
		readable.push(this[BUFFER]);
		readable.push(null);
		return readable;
	}
	toString() {
		return '[object Blob]';
	}
	slice() {
		const size = this.size;

		const start = arguments[0];
		const end = arguments[1];
		let relativeStart, relativeEnd;
		if (start === undefined) {
			relativeStart = 0;
		} else if (start < 0) {
			relativeStart = Math.max(size + start, 0);
		} else {
			relativeStart = Math.min(start, size);
		}
		if (end === undefined) {
			relativeEnd = size;
		} else if (end < 0) {
			relativeEnd = Math.max(size + end, 0);
		} else {
			relativeEnd = Math.min(end, size);
		}
		const span = Math.max(relativeEnd - relativeStart, 0);

		const buffer = this[BUFFER];
		const slicedBuffer = buffer.slice(relativeStart, relativeStart + span);
		const blob = new Blob([], { type: arguments[2] });
		blob[BUFFER] = slicedBuffer;
		return blob;
	}
}

Object.defineProperties(Blob.prototype, {
	size: { enumerable: true },
	type: { enumerable: true },
	slice: { enumerable: true }
});

Object.defineProperty(Blob.prototype, Symbol.toStringTag, {
	value: 'Blob',
	writable: false,
	enumerable: false,
	configurable: true
});

/**
 * fetch-error.js
 *
 * FetchError interface for operational errors
 */

/**
 * Create FetchError instance
 *
 * @param   String      message      Error message for human
 * @param   String      type         Error type for machine
 * @param   String      systemError  For Node.js system error
 * @return  FetchError
 */
function FetchError(message, type, systemError) {
  Error.call(this, message);

  this.message = message;
  this.type = type;

  // when err.type is `system`, err.code contains system error code
  if (systemError) {
    this.code = this.errno = systemError.code;
  }

  // hide custom error implementation details from end-users
  Error.captureStackTrace(this, this.constructor);
}

FetchError.prototype = Object.create(Error.prototype);
FetchError.prototype.constructor = FetchError;
FetchError.prototype.name = 'FetchError';

let convert;
try {
	convert = Object(function webpackMissingModule() { var e = new Error("Cannot find module 'encoding'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()).convert;
} catch (e) {}

const INTERNALS = Symbol('Body internals');

// fix an issue where "PassThrough" isn't a named export for node <10
const PassThrough = (stream__WEBPACK_IMPORTED_MODULE_0___default().PassThrough);

/**
 * Body mixin
 *
 * Ref: https://fetch.spec.whatwg.org/#body
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
function Body(body) {
	var _this = this;

	var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	    _ref$size = _ref.size;

	let size = _ref$size === undefined ? 0 : _ref$size;
	var _ref$timeout = _ref.timeout;
	let timeout = _ref$timeout === undefined ? 0 : _ref$timeout;

	if (body == null) {
		// body is undefined or null
		body = null;
	} else if (isURLSearchParams(body)) {
		// body is a URLSearchParams
		body = Buffer.from(body.toString());
	} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
		// body is ArrayBuffer
		body = Buffer.from(body);
	} else if (ArrayBuffer.isView(body)) {
		// body is ArrayBufferView
		body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);
	} else if (body instanceof (stream__WEBPACK_IMPORTED_MODULE_0___default())) ; else {
		// none of the above
		// coerce to string then buffer
		body = Buffer.from(String(body));
	}
	this[INTERNALS] = {
		body,
		disturbed: false,
		error: null
	};
	this.size = size;
	this.timeout = timeout;

	if (body instanceof (stream__WEBPACK_IMPORTED_MODULE_0___default())) {
		body.on('error', function (err) {
			const error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);
			_this[INTERNALS].error = error;
		});
	}
}

Body.prototype = {
	get body() {
		return this[INTERNALS].body;
	},

	get bodyUsed() {
		return this[INTERNALS].disturbed;
	},

	/**
  * Decode response as ArrayBuffer
  *
  * @return  Promise
  */
	arrayBuffer() {
		return consumeBody.call(this).then(function (buf) {
			return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
		});
	},

	/**
  * Return raw response as Blob
  *
  * @return Promise
  */
	blob() {
		let ct = this.headers && this.headers.get('content-type') || '';
		return consumeBody.call(this).then(function (buf) {
			return Object.assign(
			// Prevent copying
			new Blob([], {
				type: ct.toLowerCase()
			}), {
				[BUFFER]: buf
			});
		});
	},

	/**
  * Decode response as json
  *
  * @return  Promise
  */
	json() {
		var _this2 = this;

		return consumeBody.call(this).then(function (buffer) {
			try {
				return JSON.parse(buffer.toString());
			} catch (err) {
				return Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));
			}
		});
	},

	/**
  * Decode response as text
  *
  * @return  Promise
  */
	text() {
		return consumeBody.call(this).then(function (buffer) {
			return buffer.toString();
		});
	},

	/**
  * Decode response as buffer (non-spec api)
  *
  * @return  Promise
  */
	buffer() {
		return consumeBody.call(this);
	},

	/**
  * Decode response as text, while automatically detecting the encoding and
  * trying to decode to UTF-8 (non-spec api)
  *
  * @return  Promise
  */
	textConverted() {
		var _this3 = this;

		return consumeBody.call(this).then(function (buffer) {
			return convertBody(buffer, _this3.headers);
		});
	}
};

// In browsers, all properties are enumerable.
Object.defineProperties(Body.prototype, {
	body: { enumerable: true },
	bodyUsed: { enumerable: true },
	arrayBuffer: { enumerable: true },
	blob: { enumerable: true },
	json: { enumerable: true },
	text: { enumerable: true }
});

Body.mixIn = function (proto) {
	for (const name of Object.getOwnPropertyNames(Body.prototype)) {
		// istanbul ignore else: future proof
		if (!(name in proto)) {
			const desc = Object.getOwnPropertyDescriptor(Body.prototype, name);
			Object.defineProperty(proto, name, desc);
		}
	}
};

/**
 * Consume and convert an entire Body to a Buffer.
 *
 * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body
 *
 * @return  Promise
 */
function consumeBody() {
	var _this4 = this;

	if (this[INTERNALS].disturbed) {
		return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));
	}

	this[INTERNALS].disturbed = true;

	if (this[INTERNALS].error) {
		return Body.Promise.reject(this[INTERNALS].error);
	}

	let body = this.body;

	// body is null
	if (body === null) {
		return Body.Promise.resolve(Buffer.alloc(0));
	}

	// body is blob
	if (isBlob(body)) {
		body = body.stream();
	}

	// body is buffer
	if (Buffer.isBuffer(body)) {
		return Body.Promise.resolve(body);
	}

	// istanbul ignore if: should never happen
	if (!(body instanceof (stream__WEBPACK_IMPORTED_MODULE_0___default()))) {
		return Body.Promise.resolve(Buffer.alloc(0));
	}

	// body is stream
	// get ready to actually consume the body
	let accum = [];
	let accumBytes = 0;
	let abort = false;

	return new Body.Promise(function (resolve, reject) {
		let resTimeout;

		// allow timeout on slow response body
		if (_this4.timeout) {
			resTimeout = setTimeout(function () {
				abort = true;
				reject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));
			}, _this4.timeout);
		}

		// handle stream errors
		body.on('error', function (err) {
			if (err.name === 'AbortError') {
				// if the request was aborted, reject with this Error
				abort = true;
				reject(err);
			} else {
				// other errors, such as incorrect content-encoding
				reject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));
			}
		});

		body.on('data', function (chunk) {
			if (abort || chunk === null) {
				return;
			}

			if (_this4.size && accumBytes + chunk.length > _this4.size) {
				abort = true;
				reject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));
				return;
			}

			accumBytes += chunk.length;
			accum.push(chunk);
		});

		body.on('end', function () {
			if (abort) {
				return;
			}

			clearTimeout(resTimeout);

			try {
				resolve(Buffer.concat(accum, accumBytes));
			} catch (err) {
				// handle streams that have accumulated too much data (issue #414)
				reject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));
			}
		});
	});
}

/**
 * Detect buffer encoding and convert to target encoding
 * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding
 *
 * @param   Buffer  buffer    Incoming buffer
 * @param   String  encoding  Target encoding
 * @return  String
 */
function convertBody(buffer, headers) {
	if (typeof convert !== 'function') {
		throw new Error('The package `encoding` must be installed to use the textConverted() function');
	}

	const ct = headers.get('content-type');
	let charset = 'utf-8';
	let res, str;

	// header
	if (ct) {
		res = /charset=([^;]*)/i.exec(ct);
	}

	// no charset in content type, peek at response body for at most 1024 bytes
	str = buffer.slice(0, 1024).toString();

	// html5
	if (!res && str) {
		res = /<meta.+?charset=(['"])(.+?)\1/i.exec(str);
	}

	// html4
	if (!res && str) {
		res = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(str);
		if (!res) {
			res = /<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(str);
			if (res) {
				res.pop(); // drop last quote
			}
		}

		if (res) {
			res = /charset=(.*)/i.exec(res.pop());
		}
	}

	// xml
	if (!res && str) {
		res = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(str);
	}

	// found charset
	if (res) {
		charset = res.pop();

		// prevent decode issues when sites use incorrect encoding
		// ref: https://hsivonen.fi/encoding-menu/
		if (charset === 'gb2312' || charset === 'gbk') {
			charset = 'gb18030';
		}
	}

	// turn raw buffers into a single utf-8 buffer
	return convert(buffer, 'UTF-8', charset).toString();
}

/**
 * Detect a URLSearchParams object
 * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143
 *
 * @param   Object  obj     Object to detect by type or brand
 * @return  String
 */
function isURLSearchParams(obj) {
	// Duck-typing as a necessary condition.
	if (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {
		return false;
	}

	// Brand-checking and more duck-typing as optional condition.
	return obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';
}

/**
 * Check if `obj` is a W3C `Blob` object (which `File` inherits from)
 * @param  {*} obj
 * @return {boolean}
 */
function isBlob(obj) {
	return typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);
}

/**
 * Clone body given Res/Req instance
 *
 * @param   Mixed  instance  Response or Request instance
 * @return  Mixed
 */
function clone(instance) {
	let p1, p2;
	let body = instance.body;

	// don't allow cloning a used body
	if (instance.bodyUsed) {
		throw new Error('cannot clone body after it is used');
	}

	// check that body is a stream and not form-data object
	// note: we can't clone the form-data object without having it as a dependency
	if (body instanceof (stream__WEBPACK_IMPORTED_MODULE_0___default()) && typeof body.getBoundary !== 'function') {
		// tee instance body
		p1 = new PassThrough();
		p2 = new PassThrough();
		body.pipe(p1);
		body.pipe(p2);
		// set instance body to teed body and return the other teed body
		instance[INTERNALS].body = p1;
		body = p2;
	}

	return body;
}

/**
 * Performs the operation "extract a `Content-Type` value from |object|" as
 * specified in the specification:
 * https://fetch.spec.whatwg.org/#concept-bodyinit-extract
 *
 * This function assumes that instance.body is present.
 *
 * @param   Mixed  instance  Any options.body input
 */
function extractContentType(body) {
	if (body === null) {
		// body is null
		return null;
	} else if (typeof body === 'string') {
		// body is string
		return 'text/plain;charset=UTF-8';
	} else if (isURLSearchParams(body)) {
		// body is a URLSearchParams
		return 'application/x-www-form-urlencoded;charset=UTF-8';
	} else if (isBlob(body)) {
		// body is blob
		return body.type || null;
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		return null;
	} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
		// body is ArrayBuffer
		return null;
	} else if (ArrayBuffer.isView(body)) {
		// body is ArrayBufferView
		return null;
	} else if (typeof body.getBoundary === 'function') {
		// detect form data input from form-data module
		return `multipart/form-data;boundary=${body.getBoundary()}`;
	} else if (body instanceof (stream__WEBPACK_IMPORTED_MODULE_0___default())) {
		// body is stream
		// can't really do much about this
		return null;
	} else {
		// Body constructor defaults other things to string
		return 'text/plain;charset=UTF-8';
	}
}

/**
 * The Fetch Standard treats this as if "total bytes" is a property on the body.
 * For us, we have to explicitly get it with a function.
 *
 * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes
 *
 * @param   Body    instance   Instance of Body
 * @return  Number?            Number of bytes, or null if not possible
 */
function getTotalBytes(instance) {
	const body = instance.body;


	if (body === null) {
		// body is null
		return 0;
	} else if (isBlob(body)) {
		return body.size;
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		return body.length;
	} else if (body && typeof body.getLengthSync === 'function') {
		// detect form data input from form-data module
		if (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x
		body.hasKnownLength && body.hasKnownLength()) {
			// 2.x
			return body.getLengthSync();
		}
		return null;
	} else {
		// body is stream
		return null;
	}
}

/**
 * Write a Body to a Node.js WritableStream (e.g. http.Request) object.
 *
 * @param   Body    instance   Instance of Body
 * @return  Void
 */
function writeToStream(dest, instance) {
	const body = instance.body;


	if (body === null) {
		// body is null
		dest.end();
	} else if (isBlob(body)) {
		body.stream().pipe(dest);
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		dest.write(body);
		dest.end();
	} else {
		// body is stream
		body.pipe(dest);
	}
}

// expose Promise
Body.Promise = global.Promise;

/**
 * headers.js
 *
 * Headers class offers convenient helpers
 */

const invalidTokenRegex = /[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;
const invalidHeaderCharRegex = /[^\t\x20-\x7e\x80-\xff]/;

function validateName(name) {
	name = `${name}`;
	if (invalidTokenRegex.test(name) || name === '') {
		throw new TypeError(`${name} is not a legal HTTP header name`);
	}
}

function validateValue(value) {
	value = `${value}`;
	if (invalidHeaderCharRegex.test(value)) {
		throw new TypeError(`${value} is not a legal HTTP header value`);
	}
}

/**
 * Find the key in the map object given a header name.
 *
 * Returns undefined if not found.
 *
 * @param   String  name  Header name
 * @return  String|Undefined
 */
function find(map, name) {
	name = name.toLowerCase();
	for (const key in map) {
		if (key.toLowerCase() === name) {
			return key;
		}
	}
	return undefined;
}

const MAP = Symbol('map');
class Headers {
	/**
  * Headers class
  *
  * @param   Object  headers  Response headers
  * @return  Void
  */
	constructor() {
		let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;

		this[MAP] = Object.create(null);

		if (init instanceof Headers) {
			const rawHeaders = init.raw();
			const headerNames = Object.keys(rawHeaders);

			for (const headerName of headerNames) {
				for (const value of rawHeaders[headerName]) {
					this.append(headerName, value);
				}
			}

			return;
		}

		// We don't worry about converting prop to ByteString here as append()
		// will handle it.
		if (init == null) ; else if (typeof init === 'object') {
			const method = init[Symbol.iterator];
			if (method != null) {
				if (typeof method !== 'function') {
					throw new TypeError('Header pairs must be iterable');
				}

				// sequence<sequence<ByteString>>
				// Note: per spec we have to first exhaust the lists then process them
				const pairs = [];
				for (const pair of init) {
					if (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {
						throw new TypeError('Each header pair must be iterable');
					}
					pairs.push(Array.from(pair));
				}

				for (const pair of pairs) {
					if (pair.length !== 2) {
						throw new TypeError('Each header pair must be a name/value tuple');
					}
					this.append(pair[0], pair[1]);
				}
			} else {
				// record<ByteString, ByteString>
				for (const key of Object.keys(init)) {
					const value = init[key];
					this.append(key, value);
				}
			}
		} else {
			throw new TypeError('Provided initializer must be an object');
		}
	}

	/**
  * Return combined header value given name
  *
  * @param   String  name  Header name
  * @return  Mixed
  */
	get(name) {
		name = `${name}`;
		validateName(name);
		const key = find(this[MAP], name);
		if (key === undefined) {
			return null;
		}

		return this[MAP][key].join(', ');
	}

	/**
  * Iterate over all headers
  *
  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)
  * @param   Boolean   thisArg   `this` context for callback function
  * @return  Void
  */
	forEach(callback) {
		let thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

		let pairs = getHeaders(this);
		let i = 0;
		while (i < pairs.length) {
			var _pairs$i = pairs[i];
			const name = _pairs$i[0],
			      value = _pairs$i[1];

			callback.call(thisArg, value, name, this);
			pairs = getHeaders(this);
			i++;
		}
	}

	/**
  * Overwrite header values given name
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */
	set(name, value) {
		name = `${name}`;
		value = `${value}`;
		validateName(name);
		validateValue(value);
		const key = find(this[MAP], name);
		this[MAP][key !== undefined ? key : name] = [value];
	}

	/**
  * Append a value onto existing header
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */
	append(name, value) {
		name = `${name}`;
		value = `${value}`;
		validateName(name);
		validateValue(value);
		const key = find(this[MAP], name);
		if (key !== undefined) {
			this[MAP][key].push(value);
		} else {
			this[MAP][name] = [value];
		}
	}

	/**
  * Check for header name existence
  *
  * @param   String   name  Header name
  * @return  Boolean
  */
	has(name) {
		name = `${name}`;
		validateName(name);
		return find(this[MAP], name) !== undefined;
	}

	/**
  * Delete all header values given name
  *
  * @param   String  name  Header name
  * @return  Void
  */
	delete(name) {
		name = `${name}`;
		validateName(name);
		const key = find(this[MAP], name);
		if (key !== undefined) {
			delete this[MAP][key];
		}
	}

	/**
  * Return raw headers (non-spec api)
  *
  * @return  Object
  */
	raw() {
		return this[MAP];
	}

	/**
  * Get an iterator on keys.
  *
  * @return  Iterator
  */
	keys() {
		return createHeadersIterator(this, 'key');
	}

	/**
  * Get an iterator on values.
  *
  * @return  Iterator
  */
	values() {
		return createHeadersIterator(this, 'value');
	}

	/**
  * Get an iterator on entries.
  *
  * This is the default iterator of the Headers object.
  *
  * @return  Iterator
  */
	[Symbol.iterator]() {
		return createHeadersIterator(this, 'key+value');
	}
}
Headers.prototype.entries = Headers.prototype[Symbol.iterator];

Object.defineProperty(Headers.prototype, Symbol.toStringTag, {
	value: 'Headers',
	writable: false,
	enumerable: false,
	configurable: true
});

Object.defineProperties(Headers.prototype, {
	get: { enumerable: true },
	forEach: { enumerable: true },
	set: { enumerable: true },
	append: { enumerable: true },
	has: { enumerable: true },
	delete: { enumerable: true },
	keys: { enumerable: true },
	values: { enumerable: true },
	entries: { enumerable: true }
});

function getHeaders(headers) {
	let kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';

	const keys = Object.keys(headers[MAP]).sort();
	return keys.map(kind === 'key' ? function (k) {
		return k.toLowerCase();
	} : kind === 'value' ? function (k) {
		return headers[MAP][k].join(', ');
	} : function (k) {
		return [k.toLowerCase(), headers[MAP][k].join(', ')];
	});
}

const INTERNAL = Symbol('internal');

function createHeadersIterator(target, kind) {
	const iterator = Object.create(HeadersIteratorPrototype);
	iterator[INTERNAL] = {
		target,
		kind,
		index: 0
	};
	return iterator;
}

const HeadersIteratorPrototype = Object.setPrototypeOf({
	next() {
		// istanbul ignore if
		if (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {
			throw new TypeError('Value of `this` is not a HeadersIterator');
		}

		var _INTERNAL = this[INTERNAL];
		const target = _INTERNAL.target,
		      kind = _INTERNAL.kind,
		      index = _INTERNAL.index;

		const values = getHeaders(target, kind);
		const len = values.length;
		if (index >= len) {
			return {
				value: undefined,
				done: true
			};
		}

		this[INTERNAL].index = index + 1;

		return {
			value: values[index],
			done: false
		};
	}
}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));

Object.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {
	value: 'HeadersIterator',
	writable: false,
	enumerable: false,
	configurable: true
});

/**
 * Export the Headers object in a form that Node.js can consume.
 *
 * @param   Headers  headers
 * @return  Object
 */
function exportNodeCompatibleHeaders(headers) {
	const obj = Object.assign({ __proto__: null }, headers[MAP]);

	// http.request() only supports string as Host header. This hack makes
	// specifying custom Host header possible.
	const hostHeaderKey = find(headers[MAP], 'Host');
	if (hostHeaderKey !== undefined) {
		obj[hostHeaderKey] = obj[hostHeaderKey][0];
	}

	return obj;
}

/**
 * Create a Headers object from an object of headers, ignoring those that do
 * not conform to HTTP grammar productions.
 *
 * @param   Object  obj  Object of headers
 * @return  Headers
 */
function createHeadersLenient(obj) {
	const headers = new Headers();
	for (const name of Object.keys(obj)) {
		if (invalidTokenRegex.test(name)) {
			continue;
		}
		if (Array.isArray(obj[name])) {
			for (const val of obj[name]) {
				if (invalidHeaderCharRegex.test(val)) {
					continue;
				}
				if (headers[MAP][name] === undefined) {
					headers[MAP][name] = [val];
				} else {
					headers[MAP][name].push(val);
				}
			}
		} else if (!invalidHeaderCharRegex.test(obj[name])) {
			headers[MAP][name] = [obj[name]];
		}
	}
	return headers;
}

const INTERNALS$1 = Symbol('Response internals');

// fix an issue where "STATUS_CODES" aren't a named export for node <10
const STATUS_CODES = (http__WEBPACK_IMPORTED_MODULE_1___default().STATUS_CODES);

/**
 * Response class
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
class Response {
	constructor() {
		let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
		let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		Body.call(this, body, opts);

		const status = opts.status || 200;
		const headers = new Headers(opts.headers);

		if (body != null && !headers.has('Content-Type')) {
			const contentType = extractContentType(body);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		this[INTERNALS$1] = {
			url: opts.url,
			status,
			statusText: opts.statusText || STATUS_CODES[status],
			headers,
			counter: opts.counter
		};
	}

	get url() {
		return this[INTERNALS$1].url || '';
	}

	get status() {
		return this[INTERNALS$1].status;
	}

	/**
  * Convenience property representing if the request ended normally
  */
	get ok() {
		return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
	}

	get redirected() {
		return this[INTERNALS$1].counter > 0;
	}

	get statusText() {
		return this[INTERNALS$1].statusText;
	}

	get headers() {
		return this[INTERNALS$1].headers;
	}

	/**
  * Clone this response
  *
  * @return  Response
  */
	clone() {
		return new Response(clone(this), {
			url: this.url,
			status: this.status,
			statusText: this.statusText,
			headers: this.headers,
			ok: this.ok,
			redirected: this.redirected
		});
	}
}

Body.mixIn(Response.prototype);

Object.defineProperties(Response.prototype, {
	url: { enumerable: true },
	status: { enumerable: true },
	ok: { enumerable: true },
	redirected: { enumerable: true },
	statusText: { enumerable: true },
	headers: { enumerable: true },
	clone: { enumerable: true }
});

Object.defineProperty(Response.prototype, Symbol.toStringTag, {
	value: 'Response',
	writable: false,
	enumerable: false,
	configurable: true
});

const INTERNALS$2 = Symbol('Request internals');

// fix an issue where "format", "parse" aren't a named export for node <10
const parse_url = (url__WEBPACK_IMPORTED_MODULE_2___default().parse);
const format_url = (url__WEBPACK_IMPORTED_MODULE_2___default().format);

const streamDestructionSupported = 'destroy' in (stream__WEBPACK_IMPORTED_MODULE_0___default().Readable.prototype);

/**
 * Check if a value is an instance of Request.
 *
 * @param   Mixed   input
 * @return  Boolean
 */
function isRequest(input) {
	return typeof input === 'object' && typeof input[INTERNALS$2] === 'object';
}

function isAbortSignal(signal) {
	const proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);
	return !!(proto && proto.constructor.name === 'AbortSignal');
}

/**
 * Request class
 *
 * @param   Mixed   input  Url or Request instance
 * @param   Object  init   Custom options
 * @return  Void
 */
class Request {
	constructor(input) {
		let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		let parsedURL;

		// normalize input
		if (!isRequest(input)) {
			if (input && input.href) {
				// in order to support Node.js' Url objects; though WHATWG's URL objects
				// will fall into this branch also (since their `toString()` will return
				// `href` property anyway)
				parsedURL = parse_url(input.href);
			} else {
				// coerce input to a string before attempting to parse
				parsedURL = parse_url(`${input}`);
			}
			input = {};
		} else {
			parsedURL = parse_url(input.url);
		}

		let method = init.method || input.method || 'GET';
		method = method.toUpperCase();

		if ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {
			throw new TypeError('Request with GET/HEAD method cannot have body');
		}

		let inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;

		Body.call(this, inputBody, {
			timeout: init.timeout || input.timeout || 0,
			size: init.size || input.size || 0
		});

		const headers = new Headers(init.headers || input.headers || {});

		if (inputBody != null && !headers.has('Content-Type')) {
			const contentType = extractContentType(inputBody);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		let signal = isRequest(input) ? input.signal : null;
		if ('signal' in init) signal = init.signal;

		if (signal != null && !isAbortSignal(signal)) {
			throw new TypeError('Expected signal to be an instanceof AbortSignal');
		}

		this[INTERNALS$2] = {
			method,
			redirect: init.redirect || input.redirect || 'follow',
			headers,
			parsedURL,
			signal
		};

		// node-fetch-only options
		this.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;
		this.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;
		this.counter = init.counter || input.counter || 0;
		this.agent = init.agent || input.agent;
	}

	get method() {
		return this[INTERNALS$2].method;
	}

	get url() {
		return format_url(this[INTERNALS$2].parsedURL);
	}

	get headers() {
		return this[INTERNALS$2].headers;
	}

	get redirect() {
		return this[INTERNALS$2].redirect;
	}

	get signal() {
		return this[INTERNALS$2].signal;
	}

	/**
  * Clone this request
  *
  * @return  Request
  */
	clone() {
		return new Request(this);
	}
}

Body.mixIn(Request.prototype);

Object.defineProperty(Request.prototype, Symbol.toStringTag, {
	value: 'Request',
	writable: false,
	enumerable: false,
	configurable: true
});

Object.defineProperties(Request.prototype, {
	method: { enumerable: true },
	url: { enumerable: true },
	headers: { enumerable: true },
	redirect: { enumerable: true },
	clone: { enumerable: true },
	signal: { enumerable: true }
});

/**
 * Convert a Request to Node.js http request options.
 *
 * @param   Request  A Request instance
 * @return  Object   The options object to be passed to http.request
 */
function getNodeRequestOptions(request) {
	const parsedURL = request[INTERNALS$2].parsedURL;
	const headers = new Headers(request[INTERNALS$2].headers);

	// fetch step 1.3
	if (!headers.has('Accept')) {
		headers.set('Accept', '*/*');
	}

	// Basic fetch
	if (!parsedURL.protocol || !parsedURL.hostname) {
		throw new TypeError('Only absolute URLs are supported');
	}

	if (!/^https?:$/.test(parsedURL.protocol)) {
		throw new TypeError('Only HTTP(S) protocols are supported');
	}

	if (request.signal && request.body instanceof (stream__WEBPACK_IMPORTED_MODULE_0___default().Readable) && !streamDestructionSupported) {
		throw new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');
	}

	// HTTP-network-or-cache fetch steps 2.4-2.7
	let contentLengthValue = null;
	if (request.body == null && /^(POST|PUT)$/i.test(request.method)) {
		contentLengthValue = '0';
	}
	if (request.body != null) {
		const totalBytes = getTotalBytes(request);
		if (typeof totalBytes === 'number') {
			contentLengthValue = String(totalBytes);
		}
	}
	if (contentLengthValue) {
		headers.set('Content-Length', contentLengthValue);
	}

	// HTTP-network-or-cache fetch step 2.11
	if (!headers.has('User-Agent')) {
		headers.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');
	}

	// HTTP-network-or-cache fetch step 2.15
	if (request.compress && !headers.has('Accept-Encoding')) {
		headers.set('Accept-Encoding', 'gzip,deflate');
	}

	let agent = request.agent;
	if (typeof agent === 'function') {
		agent = agent(parsedURL);
	}

	if (!headers.has('Connection') && !agent) {
		headers.set('Connection', 'close');
	}

	// HTTP-network fetch step 4.2
	// chunked encoding is handled by Node.js

	return Object.assign({}, parsedURL, {
		method: request.method,
		headers: exportNodeCompatibleHeaders(headers),
		agent
	});
}

/**
 * abort-error.js
 *
 * AbortError interface for cancelled requests
 */

/**
 * Create AbortError instance
 *
 * @param   String      message      Error message for human
 * @return  AbortError
 */
function AbortError(message) {
  Error.call(this, message);

  this.type = 'aborted';
  this.message = message;

  // hide custom error implementation details from end-users
  Error.captureStackTrace(this, this.constructor);
}

AbortError.prototype = Object.create(Error.prototype);
AbortError.prototype.constructor = AbortError;
AbortError.prototype.name = 'AbortError';

// fix an issue where "PassThrough", "resolve" aren't a named export for node <10
const PassThrough$1 = (stream__WEBPACK_IMPORTED_MODULE_0___default().PassThrough);
const resolve_url = (url__WEBPACK_IMPORTED_MODULE_2___default().resolve);

/**
 * Fetch function
 *
 * @param   Mixed    url   Absolute url or Request instance
 * @param   Object   opts  Fetch options
 * @return  Promise
 */
function fetch(url, opts) {

	// allow custom promise
	if (!fetch.Promise) {
		throw new Error('native promise missing, set fetch.Promise to your favorite alternative');
	}

	Body.Promise = fetch.Promise;

	// wrap http.request into fetch
	return new fetch.Promise(function (resolve, reject) {
		// build request object
		const request = new Request(url, opts);
		const options = getNodeRequestOptions(request);

		const send = (options.protocol === 'https:' ? (https__WEBPACK_IMPORTED_MODULE_3___default()) : (http__WEBPACK_IMPORTED_MODULE_1___default())).request;
		const signal = request.signal;

		let response = null;

		const abort = function abort() {
			let error = new AbortError('The user aborted a request.');
			reject(error);
			if (request.body && request.body instanceof (stream__WEBPACK_IMPORTED_MODULE_0___default().Readable)) {
				request.body.destroy(error);
			}
			if (!response || !response.body) return;
			response.body.emit('error', error);
		};

		if (signal && signal.aborted) {
			abort();
			return;
		}

		const abortAndFinalize = function abortAndFinalize() {
			abort();
			finalize();
		};

		// send request
		const req = send(options);
		let reqTimeout;

		if (signal) {
			signal.addEventListener('abort', abortAndFinalize);
		}

		function finalize() {
			req.abort();
			if (signal) signal.removeEventListener('abort', abortAndFinalize);
			clearTimeout(reqTimeout);
		}

		if (request.timeout) {
			req.once('socket', function (socket) {
				reqTimeout = setTimeout(function () {
					reject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));
					finalize();
				}, request.timeout);
			});
		}

		req.on('error', function (err) {
			reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));
			finalize();
		});

		req.on('response', function (res) {
			clearTimeout(reqTimeout);

			const headers = createHeadersLenient(res.headers);

			// HTTP fetch step 5
			if (fetch.isRedirect(res.statusCode)) {
				// HTTP fetch step 5.2
				const location = headers.get('Location');

				// HTTP fetch step 5.3
				const locationURL = location === null ? null : resolve_url(request.url, location);

				// HTTP fetch step 5.5
				switch (request.redirect) {
					case 'error':
						reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));
						finalize();
						return;
					case 'manual':
						// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.
						if (locationURL !== null) {
							// handle corrupted header
							try {
								headers.set('Location', locationURL);
							} catch (err) {
								// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request
								reject(err);
							}
						}
						break;
					case 'follow':
						// HTTP-redirect fetch step 2
						if (locationURL === null) {
							break;
						}

						// HTTP-redirect fetch step 5
						if (request.counter >= request.follow) {
							reject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 6 (counter increment)
						// Create a new Request object.
						const requestOpts = {
							headers: new Headers(request.headers),
							follow: request.follow,
							counter: request.counter + 1,
							agent: request.agent,
							compress: request.compress,
							method: request.method,
							body: request.body,
							signal: request.signal,
							timeout: request.timeout,
							size: request.size
						};

						// HTTP-redirect fetch step 9
						if (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {
							reject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 11
						if (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {
							requestOpts.method = 'GET';
							requestOpts.body = undefined;
							requestOpts.headers.delete('content-length');
						}

						// HTTP-redirect fetch step 15
						resolve(fetch(new Request(locationURL, requestOpts)));
						finalize();
						return;
				}
			}

			// prepare response
			res.once('end', function () {
				if (signal) signal.removeEventListener('abort', abortAndFinalize);
			});
			let body = res.pipe(new PassThrough$1());

			const response_options = {
				url: request.url,
				status: res.statusCode,
				statusText: res.statusMessage,
				headers: headers,
				size: request.size,
				timeout: request.timeout,
				counter: request.counter
			};

			// HTTP-network fetch step 12.1.1.3
			const codings = headers.get('Content-Encoding');

			// HTTP-network fetch step 12.1.1.4: handle content codings

			// in following scenarios we ignore compression support
			// 1. compression support is disabled
			// 2. HEAD request
			// 3. no Content-Encoding header
			// 4. no content response (204)
			// 5. content not modified response (304)
			if (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// For Node v6+
			// Be less strict when decoding compressed responses, since sometimes
			// servers send slightly invalid responses that are still accepted
			// by common browsers.
			// Always using Z_SYNC_FLUSH is what cURL does.
			const zlibOptions = {
				flush: (zlib__WEBPACK_IMPORTED_MODULE_4___default().Z_SYNC_FLUSH),
				finishFlush: (zlib__WEBPACK_IMPORTED_MODULE_4___default().Z_SYNC_FLUSH)
			};

			// for gzip
			if (codings == 'gzip' || codings == 'x-gzip') {
				body = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_4___default().createGunzip(zlibOptions));
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// for deflate
			if (codings == 'deflate' || codings == 'x-deflate') {
				// handle the infamous raw deflate response from old servers
				// a hack for old IIS and Apache servers
				const raw = res.pipe(new PassThrough$1());
				raw.once('data', function (chunk) {
					// see http://stackoverflow.com/questions/37519828
					if ((chunk[0] & 0x0F) === 0x08) {
						body = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_4___default().createInflate());
					} else {
						body = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_4___default().createInflateRaw());
					}
					response = new Response(body, response_options);
					resolve(response);
				});
				return;
			}

			// for br
			if (codings == 'br' && typeof (zlib__WEBPACK_IMPORTED_MODULE_4___default().createBrotliDecompress) === 'function') {
				body = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_4___default().createBrotliDecompress());
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// otherwise, use response as-is
			response = new Response(body, response_options);
			resolve(response);
		});

		writeToStream(req, request);
	});
}
/**
 * Redirect code matching
 *
 * @param   Number   code  Status code
 * @return  Boolean
 */
fetch.isRedirect = function (code) {
	return code === 301 || code === 302 || code === 303 || code === 307 || code === 308;
};

// expose Promise
fetch.Promise = global.Promise;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (fetch);



/***/ }),

/***/ "./node_modules/node-pre-gyp/lib/pre-binding.js":
/*!******************************************************!*\
  !*** ./node_modules/node-pre-gyp/lib/pre-binding.js ***!
  \******************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_require__, module, __webpack_exports__ */
/*! CommonJS bailout: exports is used directly at 8:17-24 */
/*! CommonJS bailout: module.exports is used directly at 8:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";


var versioning = __webpack_require__(/*! ../lib/util/versioning.js */ "./node_modules/node-pre-gyp/lib/util/versioning.js");
var napi = __webpack_require__(/*! ../lib/util/napi.js */ "./node_modules/node-pre-gyp/lib/util/napi.js");
var existsSync = __webpack_require__(/*! fs */ "fs").existsSync || __webpack_require__(/*! path */ "path").existsSync;
var path = __webpack_require__(/*! path */ "path");

module.exports = exports;

exports.usage = 'Finds the require path for the node-pre-gyp installed module';

exports.validate = function(package_json,opts) {
    versioning.validate_config(package_json,opts);
};

exports.find = function(package_json_path,opts) {
   if (!existsSync(package_json_path)) {
        throw new Error("package.json does not exist at " + package_json_path);
   }
   var package_json = __webpack_require__("./node_modules/node-pre-gyp/lib sync recursive")(package_json_path);
   versioning.validate_config(package_json,opts);
   var napi_build_version;
   if (napi.get_napi_build_versions (package_json, opts)) {
       napi_build_version = napi.get_best_napi_build_version(package_json, opts);
   }
   opts = opts || {};
   if (!opts.module_root) opts.module_root = path.dirname(package_json_path);
   var meta = versioning.evaluate(package_json,opts,napi_build_version);
   return meta.module;
};


/***/ }),

/***/ "./node_modules/node-pre-gyp/lib/util/abi_crosswalk.json":
/*!***************************************************************!*\
  !*** ./node_modules/node-pre-gyp/lib/util/abi_crosswalk.json ***!
  \***************************************************************/
/*! default exports */
/*! export 0.1.100 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.101 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.102 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.103 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.104 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.14 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.15 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.16 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.17 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.18 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.19 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.20 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.21 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.22 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.23 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.24 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.25 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.26 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.27 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.28 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.29 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.30 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.31 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.32 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.33 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.90 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.91 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.92 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.93 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.94 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.95 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.96 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.97 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.98 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.1.99 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.10 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.11 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.12 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.13 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.14 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.15 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.16 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.17 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.18 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.19 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.20 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.21 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.22 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.23 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.24 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.25 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.26 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.27 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.28 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.29 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.30 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.31 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.32 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.33 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.34 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.35 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.36 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.37 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.38 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.39 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.40 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.41 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.42 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.43 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.44 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.45 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.46 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.47 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.48 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.5 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.6 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.7 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.10.9 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.11.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.11.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.11.10 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.11.11 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.11.12 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.11.13 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.11.14 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.11.15 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.11.16 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.11.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.11.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.11.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.11.5 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.11.6 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.11.7 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.11.8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.11.9 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.12.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.12.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.12.10 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.12.11 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.12.12 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.12.13 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.12.14 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.12.15 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.12.16 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.12.17 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.12.18 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.12.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.12.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.12.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.12.5 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.12.6 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.12.7 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.12.8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.12.9 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.2.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.2.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.2.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.2.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.2.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.2.5 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.2.6 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.3.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.3.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.3.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.3.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.3.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.3.5 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.3.6 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.3.7 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.3.8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.4.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.4.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.4.10 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.4.11 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.4.12 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.4.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.4.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.4.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.4.5 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.4.6 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.4.7 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.4.8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.4.9 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.5.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.5.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.5.10 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.5.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.5.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.5.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.5.5 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.5.6 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.5.7 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.5.8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.5.9 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.6.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.6.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.6.10 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.6.11 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.6.12 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.6.13 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.6.14 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.6.15 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.6.16 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.6.17 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.6.18 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.6.19 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.6.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.6.20 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.6.21 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.6.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.6.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.6.5 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.6.6 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.6.7 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.6.8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.6.9 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.7.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.7.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.7.10 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.7.11 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.7.12 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.7.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.7.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.7.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.7.5 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.7.6 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.7.7 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.7.8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.7.9 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.10 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.11 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.12 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.13 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.14 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.15 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.16 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.17 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.18 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.19 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.20 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.21 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.22 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.23 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.24 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.25 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.26 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.27 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.28 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.5 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.6 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.7 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.8.9 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.9.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.9.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.9.10 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.9.11 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.9.12 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.9.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.9.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.9.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.9.5 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.9.6 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.9.7 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.9.8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 0.9.9 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.0.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.0.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.0.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.0.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.0.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.1.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.2.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.3.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.4.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.4.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.4.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.5.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.5.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.6.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.6.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.6.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.6.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.6.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.7.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.8.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.8.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.8.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 1.8.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.0.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.1.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.10.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.11.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.12.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.13.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.14.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.14.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.14.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.15.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.15.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.15.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.15.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.16.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.16.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.16.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.16.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.17.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.18.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.18.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.19.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.2.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.2.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.20.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.20.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.3.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.4.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.4.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.5.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.6.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.7.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.8.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 10.9.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 11.0.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 11.1.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 11.10.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 11.10.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 11.11.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 11.12.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 11.13.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 11.14.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 11.15.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 11.2.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 11.3.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 11.4.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 11.5.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 11.6.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 11.7.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 11.8.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 11.9.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.0.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.1.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.10.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.11.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.11.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.12.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.13.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.13.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.14.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.14.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.15.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.16.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.16.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.16.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.16.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.2.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.3.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.3.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.4.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.5.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.6.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.7.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.8.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.8.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.9.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 12.9.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 13.0.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 13.0.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 13.1.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 13.10.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 13.10.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 13.11.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 13.12.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 13.13.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 13.14.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 13.2.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 13.3.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 13.4.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 13.5.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 13.6.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 13.7.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 13.8.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 13.9.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 14.0.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 14.1.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 14.2.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 14.3.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 2.0.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 2.0.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 2.0.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 2.1.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 2.2.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 2.2.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 2.3.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 2.3.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 2.3.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 2.3.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 2.3.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 2.4.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 2.5.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 3.0.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 3.1.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 3.2.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 3.3.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 3.3.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.0.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.1.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.1.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.1.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.2.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.2.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.2.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.2.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.2.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.2.5 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.2.6 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.3.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.3.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.3.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.4.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.4.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.4.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.4.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.4.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.4.5 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.4.6 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.4.7 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.5.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.6.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.6.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.6.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.7.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.7.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.7.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.7.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.8.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.8.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.8.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.8.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.8.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.8.5 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.8.6 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.8.7 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.9.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 4.9.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 5.0.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 5.1.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 5.1.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 5.10.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 5.10.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 5.11.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 5.11.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 5.12.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 5.2.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 5.3.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 5.4.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 5.4.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 5.5.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 5.6.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 5.7.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 5.7.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 5.8.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 5.9.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 5.9.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.0.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.1.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.10.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.10.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.10.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.10.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.11.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.11.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.11.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.11.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.11.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.11.5 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.12.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.12.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.12.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.12.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.13.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.13.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.14.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.14.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.14.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.14.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.14.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.15.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.15.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.16.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.17.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.17.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.2.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.2.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.2.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.3.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.3.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.4.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.5.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.6.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.7.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.8.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.8.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.9.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.9.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.9.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.9.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.9.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 6.9.5 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 7.0.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 7.1.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 7.10.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 7.10.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 7.2.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 7.2.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 7.3.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 7.4.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 7.5.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 7.6.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 7.7.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 7.7.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 7.7.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 7.7.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 7.7.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 7.8.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 7.9.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.0.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.1.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.1.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.1.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.1.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.1.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.10.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.11.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.11.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.11.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.11.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.11.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.12.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.13.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.14.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.14.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.15.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.15.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.16.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.16.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.16.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.17.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.2.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.2.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.3.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.4.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.5.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.6.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.7.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.8.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.8.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.9.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.9.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.9.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.9.3 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 8.9.4 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 9.0.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 9.1.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 9.10.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 9.10.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 9.11.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 9.11.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 9.11.2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 9.2.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 9.2.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 9.3.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 9.4.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 9.5.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 9.6.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 9.6.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 9.7.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 9.7.1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 9.8.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export 9.9.0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node_abi [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export v8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = JSON.parse("{\"0.1.14\":{\"node_abi\":null,\"v8\":\"1.3\"},\"0.1.15\":{\"node_abi\":null,\"v8\":\"1.3\"},\"0.1.16\":{\"node_abi\":null,\"v8\":\"1.3\"},\"0.1.17\":{\"node_abi\":null,\"v8\":\"1.3\"},\"0.1.18\":{\"node_abi\":null,\"v8\":\"1.3\"},\"0.1.19\":{\"node_abi\":null,\"v8\":\"2.0\"},\"0.1.20\":{\"node_abi\":null,\"v8\":\"2.0\"},\"0.1.21\":{\"node_abi\":null,\"v8\":\"2.0\"},\"0.1.22\":{\"node_abi\":null,\"v8\":\"2.0\"},\"0.1.23\":{\"node_abi\":null,\"v8\":\"2.0\"},\"0.1.24\":{\"node_abi\":null,\"v8\":\"2.0\"},\"0.1.25\":{\"node_abi\":null,\"v8\":\"2.0\"},\"0.1.26\":{\"node_abi\":null,\"v8\":\"2.0\"},\"0.1.27\":{\"node_abi\":null,\"v8\":\"2.1\"},\"0.1.28\":{\"node_abi\":null,\"v8\":\"2.1\"},\"0.1.29\":{\"node_abi\":null,\"v8\":\"2.1\"},\"0.1.30\":{\"node_abi\":null,\"v8\":\"2.1\"},\"0.1.31\":{\"node_abi\":null,\"v8\":\"2.1\"},\"0.1.32\":{\"node_abi\":null,\"v8\":\"2.1\"},\"0.1.33\":{\"node_abi\":null,\"v8\":\"2.1\"},\"0.1.90\":{\"node_abi\":null,\"v8\":\"2.2\"},\"0.1.91\":{\"node_abi\":null,\"v8\":\"2.2\"},\"0.1.92\":{\"node_abi\":null,\"v8\":\"2.2\"},\"0.1.93\":{\"node_abi\":null,\"v8\":\"2.2\"},\"0.1.94\":{\"node_abi\":null,\"v8\":\"2.2\"},\"0.1.95\":{\"node_abi\":null,\"v8\":\"2.2\"},\"0.1.96\":{\"node_abi\":null,\"v8\":\"2.2\"},\"0.1.97\":{\"node_abi\":null,\"v8\":\"2.2\"},\"0.1.98\":{\"node_abi\":null,\"v8\":\"2.2\"},\"0.1.99\":{\"node_abi\":null,\"v8\":\"2.2\"},\"0.1.100\":{\"node_abi\":null,\"v8\":\"2.2\"},\"0.1.101\":{\"node_abi\":null,\"v8\":\"2.3\"},\"0.1.102\":{\"node_abi\":null,\"v8\":\"2.3\"},\"0.1.103\":{\"node_abi\":null,\"v8\":\"2.3\"},\"0.1.104\":{\"node_abi\":null,\"v8\":\"2.3\"},\"0.2.0\":{\"node_abi\":1,\"v8\":\"2.3\"},\"0.2.1\":{\"node_abi\":1,\"v8\":\"2.3\"},\"0.2.2\":{\"node_abi\":1,\"v8\":\"2.3\"},\"0.2.3\":{\"node_abi\":1,\"v8\":\"2.3\"},\"0.2.4\":{\"node_abi\":1,\"v8\":\"2.3\"},\"0.2.5\":{\"node_abi\":1,\"v8\":\"2.3\"},\"0.2.6\":{\"node_abi\":1,\"v8\":\"2.3\"},\"0.3.0\":{\"node_abi\":1,\"v8\":\"2.5\"},\"0.3.1\":{\"node_abi\":1,\"v8\":\"2.5\"},\"0.3.2\":{\"node_abi\":1,\"v8\":\"3.0\"},\"0.3.3\":{\"node_abi\":1,\"v8\":\"3.0\"},\"0.3.4\":{\"node_abi\":1,\"v8\":\"3.0\"},\"0.3.5\":{\"node_abi\":1,\"v8\":\"3.0\"},\"0.3.6\":{\"node_abi\":1,\"v8\":\"3.0\"},\"0.3.7\":{\"node_abi\":1,\"v8\":\"3.0\"},\"0.3.8\":{\"node_abi\":1,\"v8\":\"3.1\"},\"0.4.0\":{\"node_abi\":1,\"v8\":\"3.1\"},\"0.4.1\":{\"node_abi\":1,\"v8\":\"3.1\"},\"0.4.2\":{\"node_abi\":1,\"v8\":\"3.1\"},\"0.4.3\":{\"node_abi\":1,\"v8\":\"3.1\"},\"0.4.4\":{\"node_abi\":1,\"v8\":\"3.1\"},\"0.4.5\":{\"node_abi\":1,\"v8\":\"3.1\"},\"0.4.6\":{\"node_abi\":1,\"v8\":\"3.1\"},\"0.4.7\":{\"node_abi\":1,\"v8\":\"3.1\"},\"0.4.8\":{\"node_abi\":1,\"v8\":\"3.1\"},\"0.4.9\":{\"node_abi\":1,\"v8\":\"3.1\"},\"0.4.10\":{\"node_abi\":1,\"v8\":\"3.1\"},\"0.4.11\":{\"node_abi\":1,\"v8\":\"3.1\"},\"0.4.12\":{\"node_abi\":1,\"v8\":\"3.1\"},\"0.5.0\":{\"node_abi\":1,\"v8\":\"3.1\"},\"0.5.1\":{\"node_abi\":1,\"v8\":\"3.4\"},\"0.5.2\":{\"node_abi\":1,\"v8\":\"3.4\"},\"0.5.3\":{\"node_abi\":1,\"v8\":\"3.4\"},\"0.5.4\":{\"node_abi\":1,\"v8\":\"3.5\"},\"0.5.5\":{\"node_abi\":1,\"v8\":\"3.5\"},\"0.5.6\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.5.7\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.5.8\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.5.9\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.5.10\":{\"node_abi\":1,\"v8\":\"3.7\"},\"0.6.0\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.6.1\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.6.2\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.6.3\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.6.4\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.6.5\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.6.6\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.6.7\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.6.8\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.6.9\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.6.10\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.6.11\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.6.12\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.6.13\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.6.14\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.6.15\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.6.16\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.6.17\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.6.18\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.6.19\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.6.20\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.6.21\":{\"node_abi\":1,\"v8\":\"3.6\"},\"0.7.0\":{\"node_abi\":1,\"v8\":\"3.8\"},\"0.7.1\":{\"node_abi\":1,\"v8\":\"3.8\"},\"0.7.2\":{\"node_abi\":1,\"v8\":\"3.8\"},\"0.7.3\":{\"node_abi\":1,\"v8\":\"3.9\"},\"0.7.4\":{\"node_abi\":1,\"v8\":\"3.9\"},\"0.7.5\":{\"node_abi\":1,\"v8\":\"3.9\"},\"0.7.6\":{\"node_abi\":1,\"v8\":\"3.9\"},\"0.7.7\":{\"node_abi\":1,\"v8\":\"3.9\"},\"0.7.8\":{\"node_abi\":1,\"v8\":\"3.9\"},\"0.7.9\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.7.10\":{\"node_abi\":1,\"v8\":\"3.9\"},\"0.7.11\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.7.12\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.0\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.1\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.2\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.3\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.4\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.5\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.6\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.7\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.8\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.9\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.10\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.11\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.12\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.13\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.14\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.15\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.16\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.17\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.18\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.19\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.20\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.21\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.22\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.23\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.24\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.25\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.26\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.27\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.8.28\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.9.0\":{\"node_abi\":1,\"v8\":\"3.11\"},\"0.9.1\":{\"node_abi\":10,\"v8\":\"3.11\"},\"0.9.2\":{\"node_abi\":10,\"v8\":\"3.11\"},\"0.9.3\":{\"node_abi\":10,\"v8\":\"3.13\"},\"0.9.4\":{\"node_abi\":10,\"v8\":\"3.13\"},\"0.9.5\":{\"node_abi\":10,\"v8\":\"3.13\"},\"0.9.6\":{\"node_abi\":10,\"v8\":\"3.15\"},\"0.9.7\":{\"node_abi\":10,\"v8\":\"3.15\"},\"0.9.8\":{\"node_abi\":10,\"v8\":\"3.15\"},\"0.9.9\":{\"node_abi\":11,\"v8\":\"3.15\"},\"0.9.10\":{\"node_abi\":11,\"v8\":\"3.15\"},\"0.9.11\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.9.12\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.0\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.1\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.2\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.3\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.4\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.5\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.6\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.7\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.8\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.9\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.10\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.11\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.12\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.13\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.14\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.15\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.16\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.17\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.18\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.19\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.20\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.21\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.22\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.23\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.24\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.25\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.26\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.27\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.28\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.29\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.30\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.31\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.32\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.33\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.34\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.35\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.36\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.37\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.38\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.39\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.40\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.41\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.42\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.43\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.44\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.45\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.46\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.47\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.10.48\":{\"node_abi\":11,\"v8\":\"3.14\"},\"0.11.0\":{\"node_abi\":12,\"v8\":\"3.17\"},\"0.11.1\":{\"node_abi\":12,\"v8\":\"3.18\"},\"0.11.2\":{\"node_abi\":12,\"v8\":\"3.19\"},\"0.11.3\":{\"node_abi\":12,\"v8\":\"3.19\"},\"0.11.4\":{\"node_abi\":12,\"v8\":\"3.20\"},\"0.11.5\":{\"node_abi\":12,\"v8\":\"3.20\"},\"0.11.6\":{\"node_abi\":12,\"v8\":\"3.20\"},\"0.11.7\":{\"node_abi\":12,\"v8\":\"3.20\"},\"0.11.8\":{\"node_abi\":13,\"v8\":\"3.21\"},\"0.11.9\":{\"node_abi\":13,\"v8\":\"3.22\"},\"0.11.10\":{\"node_abi\":13,\"v8\":\"3.22\"},\"0.11.11\":{\"node_abi\":14,\"v8\":\"3.22\"},\"0.11.12\":{\"node_abi\":14,\"v8\":\"3.22\"},\"0.11.13\":{\"node_abi\":14,\"v8\":\"3.25\"},\"0.11.14\":{\"node_abi\":14,\"v8\":\"3.26\"},\"0.11.15\":{\"node_abi\":14,\"v8\":\"3.28\"},\"0.11.16\":{\"node_abi\":14,\"v8\":\"3.28\"},\"0.12.0\":{\"node_abi\":14,\"v8\":\"3.28\"},\"0.12.1\":{\"node_abi\":14,\"v8\":\"3.28\"},\"0.12.2\":{\"node_abi\":14,\"v8\":\"3.28\"},\"0.12.3\":{\"node_abi\":14,\"v8\":\"3.28\"},\"0.12.4\":{\"node_abi\":14,\"v8\":\"3.28\"},\"0.12.5\":{\"node_abi\":14,\"v8\":\"3.28\"},\"0.12.6\":{\"node_abi\":14,\"v8\":\"3.28\"},\"0.12.7\":{\"node_abi\":14,\"v8\":\"3.28\"},\"0.12.8\":{\"node_abi\":14,\"v8\":\"3.28\"},\"0.12.9\":{\"node_abi\":14,\"v8\":\"3.28\"},\"0.12.10\":{\"node_abi\":14,\"v8\":\"3.28\"},\"0.12.11\":{\"node_abi\":14,\"v8\":\"3.28\"},\"0.12.12\":{\"node_abi\":14,\"v8\":\"3.28\"},\"0.12.13\":{\"node_abi\":14,\"v8\":\"3.28\"},\"0.12.14\":{\"node_abi\":14,\"v8\":\"3.28\"},\"0.12.15\":{\"node_abi\":14,\"v8\":\"3.28\"},\"0.12.16\":{\"node_abi\":14,\"v8\":\"3.28\"},\"0.12.17\":{\"node_abi\":14,\"v8\":\"3.28\"},\"0.12.18\":{\"node_abi\":14,\"v8\":\"3.28\"},\"1.0.0\":{\"node_abi\":42,\"v8\":\"3.31\"},\"1.0.1\":{\"node_abi\":42,\"v8\":\"3.31\"},\"1.0.2\":{\"node_abi\":42,\"v8\":\"3.31\"},\"1.0.3\":{\"node_abi\":42,\"v8\":\"4.1\"},\"1.0.4\":{\"node_abi\":42,\"v8\":\"4.1\"},\"1.1.0\":{\"node_abi\":43,\"v8\":\"4.1\"},\"1.2.0\":{\"node_abi\":43,\"v8\":\"4.1\"},\"1.3.0\":{\"node_abi\":43,\"v8\":\"4.1\"},\"1.4.1\":{\"node_abi\":43,\"v8\":\"4.1\"},\"1.4.2\":{\"node_abi\":43,\"v8\":\"4.1\"},\"1.4.3\":{\"node_abi\":43,\"v8\":\"4.1\"},\"1.5.0\":{\"node_abi\":43,\"v8\":\"4.1\"},\"1.5.1\":{\"node_abi\":43,\"v8\":\"4.1\"},\"1.6.0\":{\"node_abi\":43,\"v8\":\"4.1\"},\"1.6.1\":{\"node_abi\":43,\"v8\":\"4.1\"},\"1.6.2\":{\"node_abi\":43,\"v8\":\"4.1\"},\"1.6.3\":{\"node_abi\":43,\"v8\":\"4.1\"},\"1.6.4\":{\"node_abi\":43,\"v8\":\"4.1\"},\"1.7.1\":{\"node_abi\":43,\"v8\":\"4.1\"},\"1.8.1\":{\"node_abi\":43,\"v8\":\"4.1\"},\"1.8.2\":{\"node_abi\":43,\"v8\":\"4.1\"},\"1.8.3\":{\"node_abi\":43,\"v8\":\"4.1\"},\"1.8.4\":{\"node_abi\":43,\"v8\":\"4.1\"},\"2.0.0\":{\"node_abi\":44,\"v8\":\"4.2\"},\"2.0.1\":{\"node_abi\":44,\"v8\":\"4.2\"},\"2.0.2\":{\"node_abi\":44,\"v8\":\"4.2\"},\"2.1.0\":{\"node_abi\":44,\"v8\":\"4.2\"},\"2.2.0\":{\"node_abi\":44,\"v8\":\"4.2\"},\"2.2.1\":{\"node_abi\":44,\"v8\":\"4.2\"},\"2.3.0\":{\"node_abi\":44,\"v8\":\"4.2\"},\"2.3.1\":{\"node_abi\":44,\"v8\":\"4.2\"},\"2.3.2\":{\"node_abi\":44,\"v8\":\"4.2\"},\"2.3.3\":{\"node_abi\":44,\"v8\":\"4.2\"},\"2.3.4\":{\"node_abi\":44,\"v8\":\"4.2\"},\"2.4.0\":{\"node_abi\":44,\"v8\":\"4.2\"},\"2.5.0\":{\"node_abi\":44,\"v8\":\"4.2\"},\"3.0.0\":{\"node_abi\":45,\"v8\":\"4.4\"},\"3.1.0\":{\"node_abi\":45,\"v8\":\"4.4\"},\"3.2.0\":{\"node_abi\":45,\"v8\":\"4.4\"},\"3.3.0\":{\"node_abi\":45,\"v8\":\"4.4\"},\"3.3.1\":{\"node_abi\":45,\"v8\":\"4.4\"},\"4.0.0\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.1.0\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.1.1\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.1.2\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.2.0\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.2.1\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.2.2\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.2.3\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.2.4\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.2.5\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.2.6\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.3.0\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.3.1\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.3.2\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.4.0\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.4.1\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.4.2\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.4.3\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.4.4\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.4.5\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.4.6\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.4.7\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.5.0\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.6.0\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.6.1\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.6.2\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.7.0\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.7.1\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.7.2\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.7.3\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.8.0\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.8.1\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.8.2\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.8.3\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.8.4\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.8.5\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.8.6\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.8.7\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.9.0\":{\"node_abi\":46,\"v8\":\"4.5\"},\"4.9.1\":{\"node_abi\":46,\"v8\":\"4.5\"},\"5.0.0\":{\"node_abi\":47,\"v8\":\"4.6\"},\"5.1.0\":{\"node_abi\":47,\"v8\":\"4.6\"},\"5.1.1\":{\"node_abi\":47,\"v8\":\"4.6\"},\"5.2.0\":{\"node_abi\":47,\"v8\":\"4.6\"},\"5.3.0\":{\"node_abi\":47,\"v8\":\"4.6\"},\"5.4.0\":{\"node_abi\":47,\"v8\":\"4.6\"},\"5.4.1\":{\"node_abi\":47,\"v8\":\"4.6\"},\"5.5.0\":{\"node_abi\":47,\"v8\":\"4.6\"},\"5.6.0\":{\"node_abi\":47,\"v8\":\"4.6\"},\"5.7.0\":{\"node_abi\":47,\"v8\":\"4.6\"},\"5.7.1\":{\"node_abi\":47,\"v8\":\"4.6\"},\"5.8.0\":{\"node_abi\":47,\"v8\":\"4.6\"},\"5.9.0\":{\"node_abi\":47,\"v8\":\"4.6\"},\"5.9.1\":{\"node_abi\":47,\"v8\":\"4.6\"},\"5.10.0\":{\"node_abi\":47,\"v8\":\"4.6\"},\"5.10.1\":{\"node_abi\":47,\"v8\":\"4.6\"},\"5.11.0\":{\"node_abi\":47,\"v8\":\"4.6\"},\"5.11.1\":{\"node_abi\":47,\"v8\":\"4.6\"},\"5.12.0\":{\"node_abi\":47,\"v8\":\"4.6\"},\"6.0.0\":{\"node_abi\":48,\"v8\":\"5.0\"},\"6.1.0\":{\"node_abi\":48,\"v8\":\"5.0\"},\"6.2.0\":{\"node_abi\":48,\"v8\":\"5.0\"},\"6.2.1\":{\"node_abi\":48,\"v8\":\"5.0\"},\"6.2.2\":{\"node_abi\":48,\"v8\":\"5.0\"},\"6.3.0\":{\"node_abi\":48,\"v8\":\"5.0\"},\"6.3.1\":{\"node_abi\":48,\"v8\":\"5.0\"},\"6.4.0\":{\"node_abi\":48,\"v8\":\"5.0\"},\"6.5.0\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.6.0\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.7.0\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.8.0\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.8.1\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.9.0\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.9.1\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.9.2\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.9.3\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.9.4\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.9.5\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.10.0\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.10.1\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.10.2\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.10.3\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.11.0\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.11.1\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.11.2\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.11.3\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.11.4\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.11.5\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.12.0\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.12.1\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.12.2\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.12.3\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.13.0\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.13.1\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.14.0\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.14.1\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.14.2\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.14.3\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.14.4\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.15.0\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.15.1\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.16.0\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.17.0\":{\"node_abi\":48,\"v8\":\"5.1\"},\"6.17.1\":{\"node_abi\":48,\"v8\":\"5.1\"},\"7.0.0\":{\"node_abi\":51,\"v8\":\"5.4\"},\"7.1.0\":{\"node_abi\":51,\"v8\":\"5.4\"},\"7.2.0\":{\"node_abi\":51,\"v8\":\"5.4\"},\"7.2.1\":{\"node_abi\":51,\"v8\":\"5.4\"},\"7.3.0\":{\"node_abi\":51,\"v8\":\"5.4\"},\"7.4.0\":{\"node_abi\":51,\"v8\":\"5.4\"},\"7.5.0\":{\"node_abi\":51,\"v8\":\"5.4\"},\"7.6.0\":{\"node_abi\":51,\"v8\":\"5.5\"},\"7.7.0\":{\"node_abi\":51,\"v8\":\"5.5\"},\"7.7.1\":{\"node_abi\":51,\"v8\":\"5.5\"},\"7.7.2\":{\"node_abi\":51,\"v8\":\"5.5\"},\"7.7.3\":{\"node_abi\":51,\"v8\":\"5.5\"},\"7.7.4\":{\"node_abi\":51,\"v8\":\"5.5\"},\"7.8.0\":{\"node_abi\":51,\"v8\":\"5.5\"},\"7.9.0\":{\"node_abi\":51,\"v8\":\"5.5\"},\"7.10.0\":{\"node_abi\":51,\"v8\":\"5.5\"},\"7.10.1\":{\"node_abi\":51,\"v8\":\"5.5\"},\"8.0.0\":{\"node_abi\":57,\"v8\":\"5.8\"},\"8.1.0\":{\"node_abi\":57,\"v8\":\"5.8\"},\"8.1.1\":{\"node_abi\":57,\"v8\":\"5.8\"},\"8.1.2\":{\"node_abi\":57,\"v8\":\"5.8\"},\"8.1.3\":{\"node_abi\":57,\"v8\":\"5.8\"},\"8.1.4\":{\"node_abi\":57,\"v8\":\"5.8\"},\"8.2.0\":{\"node_abi\":57,\"v8\":\"5.8\"},\"8.2.1\":{\"node_abi\":57,\"v8\":\"5.8\"},\"8.3.0\":{\"node_abi\":57,\"v8\":\"6.0\"},\"8.4.0\":{\"node_abi\":57,\"v8\":\"6.0\"},\"8.5.0\":{\"node_abi\":57,\"v8\":\"6.0\"},\"8.6.0\":{\"node_abi\":57,\"v8\":\"6.0\"},\"8.7.0\":{\"node_abi\":57,\"v8\":\"6.1\"},\"8.8.0\":{\"node_abi\":57,\"v8\":\"6.1\"},\"8.8.1\":{\"node_abi\":57,\"v8\":\"6.1\"},\"8.9.0\":{\"node_abi\":57,\"v8\":\"6.1\"},\"8.9.1\":{\"node_abi\":57,\"v8\":\"6.1\"},\"8.9.2\":{\"node_abi\":57,\"v8\":\"6.1\"},\"8.9.3\":{\"node_abi\":57,\"v8\":\"6.1\"},\"8.9.4\":{\"node_abi\":57,\"v8\":\"6.1\"},\"8.10.0\":{\"node_abi\":57,\"v8\":\"6.2\"},\"8.11.0\":{\"node_abi\":57,\"v8\":\"6.2\"},\"8.11.1\":{\"node_abi\":57,\"v8\":\"6.2\"},\"8.11.2\":{\"node_abi\":57,\"v8\":\"6.2\"},\"8.11.3\":{\"node_abi\":57,\"v8\":\"6.2\"},\"8.11.4\":{\"node_abi\":57,\"v8\":\"6.2\"},\"8.12.0\":{\"node_abi\":57,\"v8\":\"6.2\"},\"8.13.0\":{\"node_abi\":57,\"v8\":\"6.2\"},\"8.14.0\":{\"node_abi\":57,\"v8\":\"6.2\"},\"8.14.1\":{\"node_abi\":57,\"v8\":\"6.2\"},\"8.15.0\":{\"node_abi\":57,\"v8\":\"6.2\"},\"8.15.1\":{\"node_abi\":57,\"v8\":\"6.2\"},\"8.16.0\":{\"node_abi\":57,\"v8\":\"6.2\"},\"8.16.1\":{\"node_abi\":57,\"v8\":\"6.2\"},\"8.16.2\":{\"node_abi\":57,\"v8\":\"6.2\"},\"8.17.0\":{\"node_abi\":57,\"v8\":\"6.2\"},\"9.0.0\":{\"node_abi\":59,\"v8\":\"6.2\"},\"9.1.0\":{\"node_abi\":59,\"v8\":\"6.2\"},\"9.2.0\":{\"node_abi\":59,\"v8\":\"6.2\"},\"9.2.1\":{\"node_abi\":59,\"v8\":\"6.2\"},\"9.3.0\":{\"node_abi\":59,\"v8\":\"6.2\"},\"9.4.0\":{\"node_abi\":59,\"v8\":\"6.2\"},\"9.5.0\":{\"node_abi\":59,\"v8\":\"6.2\"},\"9.6.0\":{\"node_abi\":59,\"v8\":\"6.2\"},\"9.6.1\":{\"node_abi\":59,\"v8\":\"6.2\"},\"9.7.0\":{\"node_abi\":59,\"v8\":\"6.2\"},\"9.7.1\":{\"node_abi\":59,\"v8\":\"6.2\"},\"9.8.0\":{\"node_abi\":59,\"v8\":\"6.2\"},\"9.9.0\":{\"node_abi\":59,\"v8\":\"6.2\"},\"9.10.0\":{\"node_abi\":59,\"v8\":\"6.2\"},\"9.10.1\":{\"node_abi\":59,\"v8\":\"6.2\"},\"9.11.0\":{\"node_abi\":59,\"v8\":\"6.2\"},\"9.11.1\":{\"node_abi\":59,\"v8\":\"6.2\"},\"9.11.2\":{\"node_abi\":59,\"v8\":\"6.2\"},\"10.0.0\":{\"node_abi\":64,\"v8\":\"6.6\"},\"10.1.0\":{\"node_abi\":64,\"v8\":\"6.6\"},\"10.2.0\":{\"node_abi\":64,\"v8\":\"6.6\"},\"10.2.1\":{\"node_abi\":64,\"v8\":\"6.6\"},\"10.3.0\":{\"node_abi\":64,\"v8\":\"6.6\"},\"10.4.0\":{\"node_abi\":64,\"v8\":\"6.7\"},\"10.4.1\":{\"node_abi\":64,\"v8\":\"6.7\"},\"10.5.0\":{\"node_abi\":64,\"v8\":\"6.7\"},\"10.6.0\":{\"node_abi\":64,\"v8\":\"6.7\"},\"10.7.0\":{\"node_abi\":64,\"v8\":\"6.7\"},\"10.8.0\":{\"node_abi\":64,\"v8\":\"6.7\"},\"10.9.0\":{\"node_abi\":64,\"v8\":\"6.8\"},\"10.10.0\":{\"node_abi\":64,\"v8\":\"6.8\"},\"10.11.0\":{\"node_abi\":64,\"v8\":\"6.8\"},\"10.12.0\":{\"node_abi\":64,\"v8\":\"6.8\"},\"10.13.0\":{\"node_abi\":64,\"v8\":\"6.8\"},\"10.14.0\":{\"node_abi\":64,\"v8\":\"6.8\"},\"10.14.1\":{\"node_abi\":64,\"v8\":\"6.8\"},\"10.14.2\":{\"node_abi\":64,\"v8\":\"6.8\"},\"10.15.0\":{\"node_abi\":64,\"v8\":\"6.8\"},\"10.15.1\":{\"node_abi\":64,\"v8\":\"6.8\"},\"10.15.2\":{\"node_abi\":64,\"v8\":\"6.8\"},\"10.15.3\":{\"node_abi\":64,\"v8\":\"6.8\"},\"10.16.0\":{\"node_abi\":64,\"v8\":\"6.8\"},\"10.16.1\":{\"node_abi\":64,\"v8\":\"6.8\"},\"10.16.2\":{\"node_abi\":64,\"v8\":\"6.8\"},\"10.16.3\":{\"node_abi\":64,\"v8\":\"6.8\"},\"10.17.0\":{\"node_abi\":64,\"v8\":\"6.8\"},\"10.18.0\":{\"node_abi\":64,\"v8\":\"6.8\"},\"10.18.1\":{\"node_abi\":64,\"v8\":\"6.8\"},\"10.19.0\":{\"node_abi\":64,\"v8\":\"6.8\"},\"10.20.0\":{\"node_abi\":64,\"v8\":\"6.8\"},\"10.20.1\":{\"node_abi\":64,\"v8\":\"6.8\"},\"11.0.0\":{\"node_abi\":67,\"v8\":\"7.0\"},\"11.1.0\":{\"node_abi\":67,\"v8\":\"7.0\"},\"11.2.0\":{\"node_abi\":67,\"v8\":\"7.0\"},\"11.3.0\":{\"node_abi\":67,\"v8\":\"7.0\"},\"11.4.0\":{\"node_abi\":67,\"v8\":\"7.0\"},\"11.5.0\":{\"node_abi\":67,\"v8\":\"7.0\"},\"11.6.0\":{\"node_abi\":67,\"v8\":\"7.0\"},\"11.7.0\":{\"node_abi\":67,\"v8\":\"7.0\"},\"11.8.0\":{\"node_abi\":67,\"v8\":\"7.0\"},\"11.9.0\":{\"node_abi\":67,\"v8\":\"7.0\"},\"11.10.0\":{\"node_abi\":67,\"v8\":\"7.0\"},\"11.10.1\":{\"node_abi\":67,\"v8\":\"7.0\"},\"11.11.0\":{\"node_abi\":67,\"v8\":\"7.0\"},\"11.12.0\":{\"node_abi\":67,\"v8\":\"7.0\"},\"11.13.0\":{\"node_abi\":67,\"v8\":\"7.0\"},\"11.14.0\":{\"node_abi\":67,\"v8\":\"7.0\"},\"11.15.0\":{\"node_abi\":67,\"v8\":\"7.0\"},\"12.0.0\":{\"node_abi\":72,\"v8\":\"7.4\"},\"12.1.0\":{\"node_abi\":72,\"v8\":\"7.4\"},\"12.2.0\":{\"node_abi\":72,\"v8\":\"7.4\"},\"12.3.0\":{\"node_abi\":72,\"v8\":\"7.4\"},\"12.3.1\":{\"node_abi\":72,\"v8\":\"7.4\"},\"12.4.0\":{\"node_abi\":72,\"v8\":\"7.4\"},\"12.5.0\":{\"node_abi\":72,\"v8\":\"7.5\"},\"12.6.0\":{\"node_abi\":72,\"v8\":\"7.5\"},\"12.7.0\":{\"node_abi\":72,\"v8\":\"7.5\"},\"12.8.0\":{\"node_abi\":72,\"v8\":\"7.5\"},\"12.8.1\":{\"node_abi\":72,\"v8\":\"7.5\"},\"12.9.0\":{\"node_abi\":72,\"v8\":\"7.6\"},\"12.9.1\":{\"node_abi\":72,\"v8\":\"7.6\"},\"12.10.0\":{\"node_abi\":72,\"v8\":\"7.6\"},\"12.11.0\":{\"node_abi\":72,\"v8\":\"7.7\"},\"12.11.1\":{\"node_abi\":72,\"v8\":\"7.7\"},\"12.12.0\":{\"node_abi\":72,\"v8\":\"7.7\"},\"12.13.0\":{\"node_abi\":72,\"v8\":\"7.7\"},\"12.13.1\":{\"node_abi\":72,\"v8\":\"7.7\"},\"12.14.0\":{\"node_abi\":72,\"v8\":\"7.7\"},\"12.14.1\":{\"node_abi\":72,\"v8\":\"7.7\"},\"12.15.0\":{\"node_abi\":72,\"v8\":\"7.7\"},\"12.16.0\":{\"node_abi\":72,\"v8\":\"7.8\"},\"12.16.1\":{\"node_abi\":72,\"v8\":\"7.8\"},\"12.16.2\":{\"node_abi\":72,\"v8\":\"7.8\"},\"12.16.3\":{\"node_abi\":72,\"v8\":\"7.8\"},\"13.0.0\":{\"node_abi\":79,\"v8\":\"7.8\"},\"13.0.1\":{\"node_abi\":79,\"v8\":\"7.8\"},\"13.1.0\":{\"node_abi\":79,\"v8\":\"7.8\"},\"13.2.0\":{\"node_abi\":79,\"v8\":\"7.9\"},\"13.3.0\":{\"node_abi\":79,\"v8\":\"7.9\"},\"13.4.0\":{\"node_abi\":79,\"v8\":\"7.9\"},\"13.5.0\":{\"node_abi\":79,\"v8\":\"7.9\"},\"13.6.0\":{\"node_abi\":79,\"v8\":\"7.9\"},\"13.7.0\":{\"node_abi\":79,\"v8\":\"7.9\"},\"13.8.0\":{\"node_abi\":79,\"v8\":\"7.9\"},\"13.9.0\":{\"node_abi\":79,\"v8\":\"7.9\"},\"13.10.0\":{\"node_abi\":79,\"v8\":\"7.9\"},\"13.10.1\":{\"node_abi\":79,\"v8\":\"7.9\"},\"13.11.0\":{\"node_abi\":79,\"v8\":\"7.9\"},\"13.12.0\":{\"node_abi\":79,\"v8\":\"7.9\"},\"13.13.0\":{\"node_abi\":79,\"v8\":\"7.9\"},\"13.14.0\":{\"node_abi\":79,\"v8\":\"7.9\"},\"14.0.0\":{\"node_abi\":83,\"v8\":\"8.1\"},\"14.1.0\":{\"node_abi\":83,\"v8\":\"8.1\"},\"14.2.0\":{\"node_abi\":83,\"v8\":\"8.1\"},\"14.3.0\":{\"node_abi\":83,\"v8\":\"8.1\"}}");

/***/ }),

/***/ "./node_modules/node-pre-gyp/lib/util/napi.js":
/*!****************************************************!*\
  !*** ./node_modules/node-pre-gyp/lib/util/napi.js ***!
  \****************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_exports__, __webpack_require__ */
/*! CommonJS bailout: exports is used directly at 5:17-24 */
/*! CommonJS bailout: module.exports is used directly at 5:0-14 */
/*! CommonJS bailout: module.exports.get_napi_version(...) prevents optimization as module.exports is passed as call context as 42:15-46 */
/*! CommonJS bailout: module.exports.get_napi_build_versions(...) prevents optimization as module.exports is passed as call context as 52:27-65 */
/*! CommonJS bailout: module.exports.get_napi_build_versions_raw(...) prevents optimization as module.exports is passed as call context as 53:31-73 */
/*! CommonJS bailout: module.exports.get_best_napi_build_version(...) prevents optimization as module.exports is passed as call context as 73:29-71 */
/*! CommonJS bailout: module.exports.build_napi_only(...) prevents optimization as module.exports is passed as call context as 74:1-31 */
/*! CommonJS bailout: module.exports.get_napi_version(...) prevents optimization as module.exports is passed as call context as 76:51-82 */
/*! CommonJS bailout: module.exports.get_napi_build_versions_raw(...) prevents optimization as module.exports is passed as call context as 77:46-88 */
/*! CommonJS bailout: module.exports.build_napi_only(...) prevents optimization as module.exports is passed as call context as 81:56-86 */
/*! CommonJS bailout: module.exports.get_napi_version(...) prevents optimization as module.exports is passed as call context as 83:51-82 */
/*! CommonJS bailout: module.exports.get_napi_build_versions_raw(...) prevents optimization as module.exports is passed as call context as 84:46-88 */
/*! CommonJS bailout: module.exports.get_napi_build_versions(...) prevents optimization as module.exports is passed as call context as 96:27-65 */
/*! CommonJS bailout: module.exports.get_best_napi_build_version(...) prevents optimization as module.exports is passed as call context as 99:28-70 */
/*! CommonJS bailout: module.exports.get_napi_version(...) prevents optimization as module.exports is passed as call context as 118:30-61 */
/*! CommonJS bailout: module.exports.get_build_dir(...) prevents optimization as module.exports is passed as call context as 170:10-38 */
/*! CommonJS bailout: module.exports.get_build_dir(...) prevents optimization as module.exports is passed as call context as 171:25-53 */
/*! CommonJS bailout: module.exports.get_build_dir(...) prevents optimization as module.exports is passed as call context as 179:16-44 */
/*! CommonJS bailout: module.exports.get_napi_build_versions(...) prevents optimization as module.exports is passed as call context as 189:27-65 */
/*! CommonJS bailout: module.exports.get_napi_version(...) prevents optimization as module.exports is passed as call context as 191:25-56 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";


var fs = __webpack_require__(/*! fs */ "fs");

module.exports = exports;

var versionArray = process.version
	.substr(1)
	.replace(/-.*$/, '')
	.split('.')
	.map(function(item) {
		return +item;
	});

var napi_multiple_commands = [
	'build',
	'clean',
	'configure',
	'package',
	'publish',
	'reveal',
	'testbinary',
	'testpackage',
	'unpublish'
];

var napi_build_version_tag = 'napi_build_version=';

module.exports.get_napi_version = function(target) { // target may be undefined
	// returns the non-zero numeric napi version or undefined if napi is not supported.
	// correctly supporting target requires an updated cross-walk
	var version = process.versions.napi; // can be undefined
	if (!version) { // this code should never need to be updated
		if (versionArray[0] === 9 && versionArray[1] >= 3) version = 2; // 9.3.0+
		else if (versionArray[0] === 8) version = 1; // 8.0.0+
	}
	return version;
};

module.exports.get_napi_version_as_string = function(target) {
	// returns the napi version as a string or an empty string if napi is not supported.
	var version = module.exports.get_napi_version(target);
	return version ? ''+version : '';
};

module.exports.validate_package_json = function(package_json, opts) { // throws Error

	var binary = package_json.binary;
	var module_path_ok = pathOK(binary.module_path);
	var remote_path_ok = pathOK(binary.remote_path);
	var package_name_ok = pathOK(binary.package_name);
	var napi_build_versions = module.exports.get_napi_build_versions(package_json,opts,true);
	var napi_build_versions_raw = module.exports.get_napi_build_versions_raw(package_json);

	if (napi_build_versions) {
		napi_build_versions.forEach(function(napi_build_version){
			if (!(parseInt(napi_build_version,10) === napi_build_version && napi_build_version > 0)) {
				throw new Error("All values specified in napi_versions must be positive integers.");
			}
		});
	}

	if (napi_build_versions && (!module_path_ok || (!remote_path_ok && !package_name_ok))) {
		throw new Error("When napi_versions is specified; module_path and either remote_path or " +
			"package_name must contain the substitution string '{napi_build_version}`.");
	}

	if ((module_path_ok || remote_path_ok || package_name_ok) && !napi_build_versions_raw) {
		throw new Error("When the substitution string '{napi_build_version}` is specified in " +
			"module_path, remote_path, or package_name; napi_versions must also be specified.");
	}

	if (napi_build_versions && !module.exports.get_best_napi_build_version(package_json, opts) && 
	module.exports.build_napi_only(package_json)) {
		throw new Error(
			'The N-API version of this Node instance is ' + module.exports.get_napi_version(opts ? opts.target : undefined) + '. ' +
			'This module supports N-API version(s) ' + module.exports.get_napi_build_versions_raw(package_json) + '. ' +
			'This Node instance cannot run this module.');
	}

	if (napi_build_versions_raw && !napi_build_versions && module.exports.build_napi_only(package_json)) {
		throw new Error(
			'The N-API version of this Node instance is ' + module.exports.get_napi_version(opts ? opts.target : undefined) + '. ' +
			'This module supports N-API version(s) ' + module.exports.get_napi_build_versions_raw(package_json) + '. ' +
			'This Node instance cannot run this module.');
	}

};

function pathOK (path) {
	return path && (path.indexOf('{napi_build_version}') !== -1 || path.indexOf('{node_napi_label}') !== -1);
}

module.exports.expand_commands = function(package_json, opts, commands) {
	var expanded_commands = [];
	var napi_build_versions = module.exports.get_napi_build_versions(package_json, opts);
	commands.forEach(function(command){
		if (napi_build_versions && command.name === 'install') {
			var napi_build_version = module.exports.get_best_napi_build_version(package_json, opts);
			var args = napi_build_version ? [ napi_build_version_tag+napi_build_version ] : [ ];
			expanded_commands.push ({ name: command.name, args: args });
		} else if (napi_build_versions && napi_multiple_commands.indexOf(command.name) !== -1) {
			napi_build_versions.forEach(function(napi_build_version){
				var args = command.args.slice();
				args.push (napi_build_version_tag+napi_build_version);
				expanded_commands.push ({ name: command.name, args: args });
			});
		} else {
			expanded_commands.push (command);
		}
	});
	return expanded_commands;
};

module.exports.get_napi_build_versions = function(package_json, opts, warnings) { // opts may be undefined
	var log = __webpack_require__(/*! npmlog */ "./node_modules/npmlog/log.js");
	var napi_build_versions = [];
	var supported_napi_version = module.exports.get_napi_version(opts ? opts.target : undefined);
	// remove duplicates, verify each napi version can actaully be built
	if (package_json.binary && package_json.binary.napi_versions) {
		package_json.binary.napi_versions.forEach(function(napi_version) {
			var duplicated = napi_build_versions.indexOf(napi_version) !== -1;
			if (!duplicated && supported_napi_version && napi_version <= supported_napi_version) {
				napi_build_versions.push(napi_version);
			} else if (warnings && !duplicated && supported_napi_version) {
				log.info('This Node instance does not support builds for N-API version', napi_version);
			}
		});
	}
	if (opts && opts["build-latest-napi-version-only"]) {
		var latest_version = 0;
		napi_build_versions.forEach(function(napi_version) {
			if (napi_version > latest_version) latest_version = napi_version;
		});
		napi_build_versions = latest_version ? [ latest_version ] : [];
	}
	return napi_build_versions.length ? napi_build_versions : undefined;
};

module.exports.get_napi_build_versions_raw = function(package_json) {
	var napi_build_versions = [];
	// remove duplicates
	if (package_json.binary && package_json.binary.napi_versions) {
		package_json.binary.napi_versions.forEach(function(napi_version) {
			if (napi_build_versions.indexOf(napi_version) === -1) {
				napi_build_versions.push(napi_version);
			}
		});
	}
	return napi_build_versions.length ? napi_build_versions : undefined;
};

module.exports.get_command_arg = function(napi_build_version) {
	return napi_build_version_tag + napi_build_version;
};

module.exports.get_napi_build_version_from_command_args = function(command_args) {
	for (var i = 0; i < command_args.length; i++) {
		var arg = command_args[i];
		if (arg.indexOf(napi_build_version_tag) === 0) {
			return parseInt(arg.substr(napi_build_version_tag.length),10);
		}
	}
	return undefined;
};

module.exports.swap_build_dir_out = function(napi_build_version) {
	if (napi_build_version) {
		var rm = __webpack_require__(/*! rimraf */ "./node_modules/node-pre-gyp/node_modules/rimraf/rimraf.js");
		rm.sync(module.exports.get_build_dir(napi_build_version));
		fs.renameSync('build', module.exports.get_build_dir(napi_build_version));
	}
};

module.exports.swap_build_dir_in = function(napi_build_version) {
	if (napi_build_version) {
		var rm = __webpack_require__(/*! rimraf */ "./node_modules/node-pre-gyp/node_modules/rimraf/rimraf.js");
		rm.sync('build');
		fs.renameSync(module.exports.get_build_dir(napi_build_version), 'build');
	}
};

module.exports.get_build_dir = function(napi_build_version) {
	return 'build-tmp-napi-v'+napi_build_version;
};

module.exports.get_best_napi_build_version = function(package_json, opts) {
	var best_napi_build_version = 0;
	var napi_build_versions = module.exports.get_napi_build_versions (package_json, opts);
	if (napi_build_versions) {
		var our_napi_version = module.exports.get_napi_version(opts ? opts.target : undefined);
		napi_build_versions.forEach(function(napi_build_version){
			if (napi_build_version > best_napi_build_version &&
				napi_build_version <= our_napi_version) {
				best_napi_build_version = napi_build_version;
			}
		});
	}
	return best_napi_build_version === 0 ? undefined : best_napi_build_version;
};

module.exports.build_napi_only = function(package_json) {
	return package_json.binary && package_json.binary.package_name && 
	package_json.binary.package_name.indexOf('{node_napi_label}') === -1;
};

/***/ }),

/***/ "./node_modules/node-pre-gyp/lib/util/versioning.js":
/*!**********************************************************!*\
  !*** ./node_modules/node-pre-gyp/lib/util/versioning.js ***!
  \**********************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_exports__, __webpack_require__ */
/*! CommonJS bailout: exports is used directly at 3:17-24 */
/*! CommonJS bailout: module.exports is used directly at 3:0-14 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";


module.exports = exports;

var path = __webpack_require__(/*! path */ "path");
var semver = __webpack_require__(/*! semver */ "./node_modules/semver/semver.js");
var url = __webpack_require__(/*! url */ "url");
var detect_libc = __webpack_require__(/*! detect-libc */ "./node_modules/detect-libc/lib/detect-libc.js");
var napi = __webpack_require__(/*! ./napi.js */ "./node_modules/node-pre-gyp/lib/util/napi.js");

var abi_crosswalk;

// This is used for unit testing to provide a fake
// ABI crosswalk that emulates one that is not updated
// for the current version
if (process.env.NODE_PRE_GYP_ABI_CROSSWALK) {
    abi_crosswalk = __webpack_require__("./node_modules/node-pre-gyp/lib/util sync recursive")(process.env.NODE_PRE_GYP_ABI_CROSSWALK);
} else {
    abi_crosswalk = __webpack_require__(/*! ./abi_crosswalk.json */ "./node_modules/node-pre-gyp/lib/util/abi_crosswalk.json");
}

var major_versions = {};
Object.keys(abi_crosswalk).forEach(function(v) {
    var major = v.split('.')[0];
    if (!major_versions[major]) {
        major_versions[major] = v;
    }
});

function get_electron_abi(runtime, target_version) {
    if (!runtime) {
        throw new Error("get_electron_abi requires valid runtime arg");
    }
    if (typeof target_version === 'undefined') {
        // erroneous CLI call
        throw new Error("Empty target version is not supported if electron is the target.");
    }
    // Electron guarantees that patch version update won't break native modules.
    var sem_ver = semver.parse(target_version);
    return runtime + '-v' + sem_ver.major + '.' + sem_ver.minor;
}
module.exports.get_electron_abi = get_electron_abi;

function get_node_webkit_abi(runtime, target_version) {
    if (!runtime) {
        throw new Error("get_node_webkit_abi requires valid runtime arg");
    }
    if (typeof target_version === 'undefined') {
        // erroneous CLI call
        throw new Error("Empty target version is not supported if node-webkit is the target.");
    }
    return runtime + '-v' + target_version;
}
module.exports.get_node_webkit_abi = get_node_webkit_abi;

function get_node_abi(runtime, versions) {
    if (!runtime) {
        throw new Error("get_node_abi requires valid runtime arg");
    }
    if (!versions) {
        throw new Error("get_node_abi requires valid process.versions object");
    }
    var sem_ver = semver.parse(versions.node);
    if (sem_ver.major === 0 && sem_ver.minor % 2) { // odd series
        // https://github.com/mapbox/node-pre-gyp/issues/124
        return runtime+'-v'+versions.node;
    } else {
        // process.versions.modules added in >= v0.10.4 and v0.11.7
        // https://github.com/joyent/node/commit/ccabd4a6fa8a6eb79d29bc3bbe9fe2b6531c2d8e
        return versions.modules ? runtime+'-v' + (+versions.modules) :
            'v8-' + versions.v8.split('.').slice(0,2).join('.');
    }
}
module.exports.get_node_abi = get_node_abi;

function get_runtime_abi(runtime, target_version) {
    if (!runtime) {
        throw new Error("get_runtime_abi requires valid runtime arg");
    }
    if (runtime === 'node-webkit') {
        return get_node_webkit_abi(runtime, target_version || process.versions['node-webkit']);
    } else if (runtime === 'electron') {
        return get_electron_abi(runtime, target_version || process.versions.electron);
    } else {
        if (runtime != 'node') {
            throw new Error("Unknown Runtime: '" + runtime + "'");
        }
        if (!target_version) {
            return get_node_abi(runtime,process.versions);
        } else {
            var cross_obj;
            // abi_crosswalk generated with ./scripts/abi_crosswalk.js
            if (abi_crosswalk[target_version]) {
                cross_obj = abi_crosswalk[target_version];
            } else {
                var target_parts = target_version.split('.').map(function(i) { return +i; });
                if (target_parts.length != 3) { // parse failed
                    throw new Error("Unknown target version: " + target_version);
                }
                /*
                    The below code tries to infer the last known ABI compatible version
                    that we have recorded in the abi_crosswalk.json when an exact match
                    is not possible. The reasons for this to exist are complicated:

                       - We support passing --target to be able to allow developers to package binaries for versions of node
                         that are not the same one as they are running. This might also be used in combination with the
                         --target_arch or --target_platform flags to also package binaries for alternative platforms
                       - When --target is passed we can't therefore determine the ABI (process.versions.modules) from the node
                         version that is running in memory
                       - So, therefore node-pre-gyp keeps an "ABI crosswalk" (lib/util/abi_crosswalk.json) to be able to look
                         this info up for all versions
                       - But we cannot easily predict what the future ABI will be for released versions
                       - And node-pre-gyp needs to be a `bundledDependency` in apps that depend on it in order to work correctly
                         by being fully available at install time.
                       - So, the speed of node releases and the bundled nature of node-pre-gyp mean that a new node-pre-gyp release
                         need to happen for every node.js/io.js/node-webkit/nw.js/atom-shell/etc release that might come online if
                         you want the `--target` flag to keep working for the latest version
                       - Which is impractical ^^
                       - Hence the below code guesses about future ABI to make the need to update node-pre-gyp less demanding.

                    In practice then you can have a dependency of your app like `node-sqlite3` that bundles a `node-pre-gyp` that
                    only knows about node v0.10.33 in the `abi_crosswalk.json` but target node v0.10.34 (which is assumed to be
                    ABI compatible with v0.10.33).

                    TODO: use semver module instead of custom version parsing
                */
                var major = target_parts[0];
                var minor = target_parts[1];
                var patch = target_parts[2];
                // io.js: yeah if node.js ever releases 1.x this will break
                // but that is unlikely to happen: https://github.com/iojs/io.js/pull/253#issuecomment-69432616
                if (major === 1) {
                    // look for last release that is the same major version
                    // e.g. we assume io.js 1.x is ABI compatible with >= 1.0.0
                    while (true) {
                        if (minor > 0) --minor;
                        if (patch > 0) --patch;
                        var new_iojs_target = '' + major + '.' + minor + '.' + patch;
                        if (abi_crosswalk[new_iojs_target]) {
                            cross_obj = abi_crosswalk[new_iojs_target];
                            console.log('Warning: node-pre-gyp could not find exact match for ' + target_version);
                            console.log('Warning: but node-pre-gyp successfully choose ' + new_iojs_target + ' as ABI compatible target');
                            break;
                        }
                        if (minor === 0 && patch === 0) {
                            break;
                        }
                    }
                } else if (major >= 2) {
                    // look for last release that is the same major version
                    if (major_versions[major]) {
                        cross_obj = abi_crosswalk[major_versions[major]];
                        console.log('Warning: node-pre-gyp could not find exact match for ' + target_version);
                        console.log('Warning: but node-pre-gyp successfully choose ' + major_versions[major] + ' as ABI compatible target');
                    }
                } else if (major === 0) { // node.js
                    if (target_parts[1] % 2 === 0) { // for stable/even node.js series
                        // look for the last release that is the same minor release
                        // e.g. we assume node 0.10.x is ABI compatible with >= 0.10.0
                        while (--patch > 0) {
                            var new_node_target = '' + major + '.' + minor + '.' + patch;
                            if (abi_crosswalk[new_node_target]) {
                                cross_obj = abi_crosswalk[new_node_target];
                                console.log('Warning: node-pre-gyp could not find exact match for ' + target_version);
                                console.log('Warning: but node-pre-gyp successfully choose ' + new_node_target + ' as ABI compatible target');
                                break;
                            }
                        }
                    }
                }
            }
            if (!cross_obj) {
                throw new Error("Unsupported target version: " + target_version);
            }
            // emulate process.versions
            var versions_obj = {
                node: target_version,
                v8: cross_obj.v8+'.0',
                // abi_crosswalk uses 1 for node versions lacking process.versions.modules
                // process.versions.modules added in >= v0.10.4 and v0.11.7
                modules: cross_obj.node_abi > 1 ? cross_obj.node_abi : undefined
            };
            return get_node_abi(runtime, versions_obj);
        }
    }
}
module.exports.get_runtime_abi = get_runtime_abi;

var required_parameters = [
    'module_name',
    'module_path',
    'host'
];

function validate_config(package_json,opts) {
    var msg = package_json.name + ' package.json is not node-pre-gyp ready:\n';
    var missing = [];
    if (!package_json.main) {
        missing.push('main');
    }
    if (!package_json.version) {
        missing.push('version');
    }
    if (!package_json.name) {
        missing.push('name');
    }
    if (!package_json.binary) {
        missing.push('binary');
    }
    var o = package_json.binary;
    required_parameters.forEach(function(p) {
        if (missing.indexOf('binary') > -1) {
            missing.pop('binary');
        }
        if (!o || o[p] === undefined || o[p] === "") {
            missing.push('binary.' + p);
        }
    });
    if (missing.length >= 1) {
        throw new Error(msg+"package.json must declare these properties: \n" + missing.join('\n'));
    }
    if (o) {
        // enforce https over http
        var protocol = url.parse(o.host).protocol;
        if (protocol === 'http:') {
            throw new Error("'host' protocol ("+protocol+") is invalid - only 'https:' is accepted");
        }
    }
    napi.validate_package_json(package_json,opts);
}

module.exports.validate_config = validate_config;

function eval_template(template,opts) {
    Object.keys(opts).forEach(function(key) {
        var pattern = '{'+key+'}';
        while (template.indexOf(pattern) > -1) {
            template = template.replace(pattern,opts[key]);
        }
    });
    return template;
}

// url.resolve needs single trailing slash
// to behave correctly, otherwise a double slash
// may end up in the url which breaks requests
// and a lacking slash may not lead to proper joining
function fix_slashes(pathname) {
    if (pathname.slice(-1) != '/') {
        return pathname + '/';
    }
    return pathname;
}

// remove double slashes
// note: path.normalize will not work because
// it will convert forward to back slashes
function drop_double_slashes(pathname) {
    return pathname.replace(/\/\//g,'/');
}

function get_process_runtime(versions) {
    var runtime = 'node';
    if (versions['node-webkit']) {
        runtime = 'node-webkit';
    } else if (versions.electron) {
        runtime = 'electron';
    }
    return runtime;
}

module.exports.get_process_runtime = get_process_runtime;

var default_package_name = '{module_name}-v{version}-{node_abi}-{platform}-{arch}.tar.gz';
var default_remote_path = '';

module.exports.evaluate = function(package_json,options,napi_build_version) {
    options = options || {};
    validate_config(package_json,options); // options is a suitable substitute for opts in this case
    var v = package_json.version;
    var module_version = semver.parse(v);
    var runtime = options.runtime || get_process_runtime(process.versions);
    var opts = {
        name: package_json.name,
        configuration: Boolean(options.debug) ? 'Debug' : 'Release',
        debug: options.debug,
        module_name: package_json.binary.module_name,
        version: module_version.version,
        prerelease: module_version.prerelease.length ? module_version.prerelease.join('.') : '',
        build: module_version.build.length ? module_version.build.join('.') : '',
        major: module_version.major,
        minor: module_version.minor,
        patch: module_version.patch,
        runtime: runtime,
        node_abi: get_runtime_abi(runtime,options.target),
        node_abi_napi: napi.get_napi_version(options.target) ? 'napi' : get_runtime_abi(runtime,options.target),
        napi_version: napi.get_napi_version(options.target), // non-zero numeric, undefined if unsupported
        napi_build_version: napi_build_version || '',
        node_napi_label: napi_build_version ? 'napi-v' + napi_build_version : get_runtime_abi(runtime,options.target),
        target: options.target || '',
        platform: options.target_platform || process.platform,
        target_platform: options.target_platform || process.platform,
        arch: options.target_arch || process.arch,
        target_arch: options.target_arch || process.arch,
        libc: options.target_libc || detect_libc.family || 'unknown',
        module_main: package_json.main,
        toolset : options.toolset || '' // address https://github.com/mapbox/node-pre-gyp/issues/119
    };
    // support host mirror with npm config `--{module_name}_binary_host_mirror`
    // e.g.: https://github.com/node-inspector/v8-profiler/blob/master/package.json#L25
    // > npm install v8-profiler --profiler_binary_host_mirror=https://npm.taobao.org/mirrors/node-inspector/
    var host = process.env['npm_config_' + opts.module_name + '_binary_host_mirror'] || package_json.binary.host;
    opts.host = fix_slashes(eval_template(host,opts));
    opts.module_path = eval_template(package_json.binary.module_path,opts);
    // now we resolve the module_path to ensure it is absolute so that binding.gyp variables work predictably
    if (options.module_root) {
        // resolve relative to known module root: works for pre-binding require
        opts.module_path = path.join(options.module_root,opts.module_path);
    } else {
        // resolve relative to current working directory: works for node-pre-gyp commands
        opts.module_path = path.resolve(opts.module_path);
    }
    opts.module = path.join(opts.module_path,opts.module_name + '.node');
    opts.remote_path = package_json.binary.remote_path ? drop_double_slashes(fix_slashes(eval_template(package_json.binary.remote_path,opts))) : default_remote_path;
    var package_name = package_json.binary.package_name ? package_json.binary.package_name : default_package_name;
    opts.package_name = eval_template(package_name,opts);
    opts.staged_tarball = path.join('build/stage',opts.remote_path,opts.package_name);
    opts.hosted_path = url.resolve(opts.host,opts.remote_path);
    opts.hosted_tarball = url.resolve(opts.hosted_path,opts.package_name);
    return opts;
};


/***/ }),

/***/ "./node_modules/node-pre-gyp/lib/util sync recursive":
/*!*************************************************!*\
  !*** ./node_modules/node-pre-gyp/lib/util sync ***!
  \*************************************************/
/*! default exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: module, __webpack_require__.o */
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => [];
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "./node_modules/node-pre-gyp/lib/util sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "./node_modules/node-pre-gyp/lib sync recursive":
/*!********************************************!*\
  !*** ./node_modules/node-pre-gyp/lib sync ***!
  \********************************************/
/*! default exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: module, __webpack_require__.o */
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => [];
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "./node_modules/node-pre-gyp/lib sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "./node_modules/node-pre-gyp/node_modules/rimraf/rimraf.js":
/*!*****************************************************************!*\
  !*** ./node_modules/node-pre-gyp/node_modules/rimraf/rimraf.js ***!
  \*****************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 1:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = rimraf
rimraf.sync = rimrafSync

var assert = __webpack_require__(/*! assert */ "assert")
var path = __webpack_require__(/*! path */ "path")
var fs = __webpack_require__(/*! fs */ "fs")
var glob = undefined
try {
  glob = __webpack_require__(/*! glob */ "./node_modules/glob/glob.js")
} catch (_err) {
  // treat glob as optional.
}
var _0666 = parseInt('666', 8)

var defaultGlobOpts = {
  nosort: true,
  silent: true
}

// for EMFILE handling
var timeout = 0

var isWindows = (process.platform === "win32")

function defaults (options) {
  var methods = [
    'unlink',
    'chmod',
    'stat',
    'lstat',
    'rmdir',
    'readdir'
  ]
  methods.forEach(function(m) {
    options[m] = options[m] || fs[m]
    m = m + 'Sync'
    options[m] = options[m] || fs[m]
  })

  options.maxBusyTries = options.maxBusyTries || 3
  options.emfileWait = options.emfileWait || 1000
  if (options.glob === false) {
    options.disableGlob = true
  }
  if (options.disableGlob !== true && glob === undefined) {
    throw Error('glob dependency not found, set `options.disableGlob = true` if intentional')
  }
  options.disableGlob = options.disableGlob || false
  options.glob = options.glob || defaultGlobOpts
}

function rimraf (p, options, cb) {
  if (typeof options === 'function') {
    cb = options
    options = {}
  }

  assert(p, 'rimraf: missing path')
  assert.equal(typeof p, 'string', 'rimraf: path should be a string')
  assert.equal(typeof cb, 'function', 'rimraf: callback function required')
  assert(options, 'rimraf: invalid options argument provided')
  assert.equal(typeof options, 'object', 'rimraf: options should be object')

  defaults(options)

  var busyTries = 0
  var errState = null
  var n = 0

  if (options.disableGlob || !glob.hasMagic(p))
    return afterGlob(null, [p])

  options.lstat(p, function (er, stat) {
    if (!er)
      return afterGlob(null, [p])

    glob(p, options.glob, afterGlob)
  })

  function next (er) {
    errState = errState || er
    if (--n === 0)
      cb(errState)
  }

  function afterGlob (er, results) {
    if (er)
      return cb(er)

    n = results.length
    if (n === 0)
      return cb()

    results.forEach(function (p) {
      rimraf_(p, options, function CB (er) {
        if (er) {
          if ((er.code === "EBUSY" || er.code === "ENOTEMPTY" || er.code === "EPERM") &&
              busyTries < options.maxBusyTries) {
            busyTries ++
            var time = busyTries * 100
            // try again, with the same exact callback as this one.
            return setTimeout(function () {
              rimraf_(p, options, CB)
            }, time)
          }

          // this one won't happen if graceful-fs is used.
          if (er.code === "EMFILE" && timeout < options.emfileWait) {
            return setTimeout(function () {
              rimraf_(p, options, CB)
            }, timeout ++)
          }

          // already gone
          if (er.code === "ENOENT") er = null
        }

        timeout = 0
        next(er)
      })
    })
  }
}

// Two possible strategies.
// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR
// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR
//
// Both result in an extra syscall when you guess wrong.  However, there
// are likely far more normal files in the world than directories.  This
// is based on the assumption that a the average number of files per
// directory is >= 1.
//
// If anyone ever complains about this, then I guess the strategy could
// be made configurable somehow.  But until then, YAGNI.
function rimraf_ (p, options, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  // sunos lets the root user unlink directories, which is... weird.
  // so we have to lstat here and make sure it's not a dir.
  options.lstat(p, function (er, st) {
    if (er && er.code === "ENOENT")
      return cb(null)

    // Windows can EPERM on stat.  Life is suffering.
    if (er && er.code === "EPERM" && isWindows)
      fixWinEPERM(p, options, er, cb)

    if (st && st.isDirectory())
      return rmdir(p, options, er, cb)

    options.unlink(p, function (er) {
      if (er) {
        if (er.code === "ENOENT")
          return cb(null)
        if (er.code === "EPERM")
          return (isWindows)
            ? fixWinEPERM(p, options, er, cb)
            : rmdir(p, options, er, cb)
        if (er.code === "EISDIR")
          return rmdir(p, options, er, cb)
      }
      return cb(er)
    })
  })
}

function fixWinEPERM (p, options, er, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')
  if (er)
    assert(er instanceof Error)

  options.chmod(p, _0666, function (er2) {
    if (er2)
      cb(er2.code === "ENOENT" ? null : er)
    else
      options.stat(p, function(er3, stats) {
        if (er3)
          cb(er3.code === "ENOENT" ? null : er)
        else if (stats.isDirectory())
          rmdir(p, options, er, cb)
        else
          options.unlink(p, cb)
      })
  })
}

function fixWinEPERMSync (p, options, er) {
  assert(p)
  assert(options)
  if (er)
    assert(er instanceof Error)

  try {
    options.chmodSync(p, _0666)
  } catch (er2) {
    if (er2.code === "ENOENT")
      return
    else
      throw er
  }

  try {
    var stats = options.statSync(p)
  } catch (er3) {
    if (er3.code === "ENOENT")
      return
    else
      throw er
  }

  if (stats.isDirectory())
    rmdirSync(p, options, er)
  else
    options.unlinkSync(p)
}

function rmdir (p, options, originalEr, cb) {
  assert(p)
  assert(options)
  if (originalEr)
    assert(originalEr instanceof Error)
  assert(typeof cb === 'function')

  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)
  // if we guessed wrong, and it's not a directory, then
  // raise the original error.
  options.rmdir(p, function (er) {
    if (er && (er.code === "ENOTEMPTY" || er.code === "EEXIST" || er.code === "EPERM"))
      rmkids(p, options, cb)
    else if (er && er.code === "ENOTDIR")
      cb(originalEr)
    else
      cb(er)
  })
}

function rmkids(p, options, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  options.readdir(p, function (er, files) {
    if (er)
      return cb(er)
    var n = files.length
    if (n === 0)
      return options.rmdir(p, cb)
    var errState
    files.forEach(function (f) {
      rimraf(path.join(p, f), options, function (er) {
        if (errState)
          return
        if (er)
          return cb(errState = er)
        if (--n === 0)
          options.rmdir(p, cb)
      })
    })
  })
}

// this looks simpler, and is strictly *faster*, but will
// tie up the JavaScript thread and fail on excessively
// deep directory trees.
function rimrafSync (p, options) {
  options = options || {}
  defaults(options)

  assert(p, 'rimraf: missing path')
  assert.equal(typeof p, 'string', 'rimraf: path should be a string')
  assert(options, 'rimraf: missing options')
  assert.equal(typeof options, 'object', 'rimraf: options should be object')

  var results

  if (options.disableGlob || !glob.hasMagic(p)) {
    results = [p]
  } else {
    try {
      options.lstatSync(p)
      results = [p]
    } catch (er) {
      results = glob.sync(p, options.glob)
    }
  }

  if (!results.length)
    return

  for (var i = 0; i < results.length; i++) {
    var p = results[i]

    try {
      var st = options.lstatSync(p)
    } catch (er) {
      if (er.code === "ENOENT")
        return

      // Windows can EPERM on stat.  Life is suffering.
      if (er.code === "EPERM" && isWindows)
        fixWinEPERMSync(p, options, er)
    }

    try {
      // sunos lets the root user unlink directories, which is... weird.
      if (st && st.isDirectory())
        rmdirSync(p, options, null)
      else
        options.unlinkSync(p)
    } catch (er) {
      if (er.code === "ENOENT")
        return
      if (er.code === "EPERM")
        return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er)
      if (er.code !== "EISDIR")
        throw er

      rmdirSync(p, options, er)
    }
  }
}

function rmdirSync (p, options, originalEr) {
  assert(p)
  assert(options)
  if (originalEr)
    assert(originalEr instanceof Error)

  try {
    options.rmdirSync(p)
  } catch (er) {
    if (er.code === "ENOENT")
      return
    if (er.code === "ENOTDIR")
      throw originalEr
    if (er.code === "ENOTEMPTY" || er.code === "EEXIST" || er.code === "EPERM")
      rmkidsSync(p, options)
  }
}

function rmkidsSync (p, options) {
  assert(p)
  assert(options)
  options.readdirSync(p).forEach(function (f) {
    rimrafSync(path.join(p, f), options)
  })

  // We only end up here once we got ENOTEMPTY at least once, and
  // at this point, we are guaranteed to have removed all the kids.
  // So, we know that it won't be ENOENT or ENOTDIR or anything else.
  // try really hard to delete stuff on windows, because it has a
  // PROFOUNDLY annoying habit of not closing handles promptly when
  // files are deleted, resulting in spurious ENOTEMPTY errors.
  var retries = isWindows ? 100 : 1
  var i = 0
  do {
    var threw = true
    try {
      var ret = options.rmdirSync(p, options)
      threw = false
      return ret
    } finally {
      if (++i < retries && threw)
        continue
    }
  } while (true)
}


/***/ }),

/***/ "./node_modules/npmlog/log.js":
/*!************************************!*\
  !*** ./node_modules/npmlog/log.js ***!
  \************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_require__, __webpack_exports__, module */
/*! CommonJS bailout: module.exports is used directly at 5:20-34 */
/*! CommonJS bailout: exports is used directly at 5:10-17 */
/***/ ((module, exports, __webpack_require__) => {

"use strict";

var Progress = __webpack_require__(/*! are-we-there-yet */ "./node_modules/are-we-there-yet/index.js")
var Gauge = __webpack_require__(/*! gauge */ "./node_modules/gauge/index.js")
var EE = __webpack_require__(/*! events */ "events").EventEmitter
var log = exports = module.exports = new EE()
var util = __webpack_require__(/*! util */ "util")

var setBlocking = __webpack_require__(/*! set-blocking */ "./node_modules/set-blocking/index.js")
var consoleControl = __webpack_require__(/*! console-control-strings */ "./node_modules/console-control-strings/index.js")

setBlocking(true)
var stream = process.stderr
Object.defineProperty(log, 'stream', {
  set: function (newStream) {
    stream = newStream
    if (this.gauge) this.gauge.setWriteTo(stream, stream)
  },
  get: function () {
    return stream
  }
})

// by default, decide based on tty-ness.
var colorEnabled
log.useColor = function () {
  return colorEnabled != null ? colorEnabled : stream.isTTY
}

log.enableColor = function () {
  colorEnabled = true
  this.gauge.setTheme({hasColor: colorEnabled, hasUnicode: unicodeEnabled})
}
log.disableColor = function () {
  colorEnabled = false
  this.gauge.setTheme({hasColor: colorEnabled, hasUnicode: unicodeEnabled})
}

// default level
log.level = 'info'

log.gauge = new Gauge(stream, {
  enabled: false, // no progress bars unless asked
  theme: {hasColor: log.useColor()},
  template: [
    {type: 'progressbar', length: 20},
    {type: 'activityIndicator', kerning: 1, length: 1},
    {type: 'section', default: ''},
    ':',
    {type: 'logline', kerning: 1, default: ''}
  ]
})

log.tracker = new Progress.TrackerGroup()

// we track this separately as we may need to temporarily disable the
// display of the status bar for our own loggy purposes.
log.progressEnabled = log.gauge.isEnabled()

var unicodeEnabled

log.enableUnicode = function () {
  unicodeEnabled = true
  this.gauge.setTheme({hasColor: this.useColor(), hasUnicode: unicodeEnabled})
}

log.disableUnicode = function () {
  unicodeEnabled = false
  this.gauge.setTheme({hasColor: this.useColor(), hasUnicode: unicodeEnabled})
}

log.setGaugeThemeset = function (themes) {
  this.gauge.setThemeset(themes)
}

log.setGaugeTemplate = function (template) {
  this.gauge.setTemplate(template)
}

log.enableProgress = function () {
  if (this.progressEnabled) return
  this.progressEnabled = true
  this.tracker.on('change', this.showProgress)
  if (this._pause) return
  this.gauge.enable()
}

log.disableProgress = function () {
  if (!this.progressEnabled) return
  this.progressEnabled = false
  this.tracker.removeListener('change', this.showProgress)
  this.gauge.disable()
}

var trackerConstructors = ['newGroup', 'newItem', 'newStream']

var mixinLog = function (tracker) {
  // mixin the public methods from log into the tracker
  // (except: conflicts and one's we handle specially)
  Object.keys(log).forEach(function (P) {
    if (P[0] === '_') return
    if (trackerConstructors.filter(function (C) { return C === P }).length) return
    if (tracker[P]) return
    if (typeof log[P] !== 'function') return
    var func = log[P]
    tracker[P] = function () {
      return func.apply(log, arguments)
    }
  })
  // if the new tracker is a group, make sure any subtrackers get
  // mixed in too
  if (tracker instanceof Progress.TrackerGroup) {
    trackerConstructors.forEach(function (C) {
      var func = tracker[C]
      tracker[C] = function () { return mixinLog(func.apply(tracker, arguments)) }
    })
  }
  return tracker
}

// Add tracker constructors to the top level log object
trackerConstructors.forEach(function (C) {
  log[C] = function () { return mixinLog(this.tracker[C].apply(this.tracker, arguments)) }
})

log.clearProgress = function (cb) {
  if (!this.progressEnabled) return cb && process.nextTick(cb)
  this.gauge.hide(cb)
}

log.showProgress = function (name, completed) {
  if (!this.progressEnabled) return
  var values = {}
  if (name) values.section = name
  var last = log.record[log.record.length - 1]
  if (last) {
    values.subsection = last.prefix
    var disp = log.disp[last.level] || last.level
    var logline = this._format(disp, log.style[last.level])
    if (last.prefix) logline += ' ' + this._format(last.prefix, this.prefixStyle)
    logline += ' ' + last.message.split(/\r?\n/)[0]
    values.logline = logline
  }
  values.completed = completed || this.tracker.completed()
  this.gauge.show(values)
}.bind(log) // bind for use in tracker's on-change listener

// temporarily stop emitting, but don't drop
log.pause = function () {
  this._paused = true
  if (this.progressEnabled) this.gauge.disable()
}

log.resume = function () {
  if (!this._paused) return
  this._paused = false

  var b = this._buffer
  this._buffer = []
  b.forEach(function (m) {
    this.emitLog(m)
  }, this)
  if (this.progressEnabled) this.gauge.enable()
}

log._buffer = []

var id = 0
log.record = []
log.maxRecordSize = 10000
log.log = function (lvl, prefix, message) {
  var l = this.levels[lvl]
  if (l === undefined) {
    return this.emit('error', new Error(util.format(
      'Undefined log level: %j', lvl)))
  }

  var a = new Array(arguments.length - 2)
  var stack = null
  for (var i = 2; i < arguments.length; i++) {
    var arg = a[i - 2] = arguments[i]

    // resolve stack traces to a plain string.
    if (typeof arg === 'object' && arg &&
        (arg instanceof Error) && arg.stack) {

      Object.defineProperty(arg, 'stack', {
        value: stack = arg.stack + '',
        enumerable: true,
        writable: true
      })
    }
  }
  if (stack) a.unshift(stack + '\n')
  message = util.format.apply(util, a)

  var m = { id: id++,
            level: lvl,
            prefix: String(prefix || ''),
            message: message,
            messageRaw: a }

  this.emit('log', m)
  this.emit('log.' + lvl, m)
  if (m.prefix) this.emit(m.prefix, m)

  this.record.push(m)
  var mrs = this.maxRecordSize
  var n = this.record.length - mrs
  if (n > mrs / 10) {
    var newSize = Math.floor(mrs * 0.9)
    this.record = this.record.slice(-1 * newSize)
  }

  this.emitLog(m)
}.bind(log)

log.emitLog = function (m) {
  if (this._paused) {
    this._buffer.push(m)
    return
  }
  if (this.progressEnabled) this.gauge.pulse(m.prefix)
  var l = this.levels[m.level]
  if (l === undefined) return
  if (l < this.levels[this.level]) return
  if (l > 0 && !isFinite(l)) return

  // If 'disp' is null or undefined, use the lvl as a default
  // Allows: '', 0 as valid disp
  var disp = log.disp[m.level] != null ? log.disp[m.level] : m.level
  this.clearProgress()
  m.message.split(/\r?\n/).forEach(function (line) {
    if (this.heading) {
      this.write(this.heading, this.headingStyle)
      this.write(' ')
    }
    this.write(disp, log.style[m.level])
    var p = m.prefix || ''
    if (p) this.write(' ')
    this.write(p, this.prefixStyle)
    this.write(' ' + line + '\n')
  }, this)
  this.showProgress()
}

log._format = function (msg, style) {
  if (!stream) return

  var output = ''
  if (this.useColor()) {
    style = style || {}
    var settings = []
    if (style.fg) settings.push(style.fg)
    if (style.bg) settings.push('bg' + style.bg[0].toUpperCase() + style.bg.slice(1))
    if (style.bold) settings.push('bold')
    if (style.underline) settings.push('underline')
    if (style.inverse) settings.push('inverse')
    if (settings.length) output += consoleControl.color(settings)
    if (style.beep) output += consoleControl.beep()
  }
  output += msg
  if (this.useColor()) {
    output += consoleControl.color('reset')
  }
  return output
}

log.write = function (msg, style) {
  if (!stream) return

  stream.write(this._format(msg, style))
}

log.addLevel = function (lvl, n, style, disp) {
  // If 'disp' is null or undefined, use the lvl as a default
  if (disp == null) disp = lvl
  this.levels[lvl] = n
  this.style[lvl] = style
  if (!this[lvl]) {
    this[lvl] = function () {
      var a = new Array(arguments.length + 1)
      a[0] = lvl
      for (var i = 0; i < arguments.length; i++) {
        a[i + 1] = arguments[i]
      }
      return this.log.apply(this, a)
    }.bind(this)
  }
  this.disp[lvl] = disp
}

log.prefixStyle = { fg: 'magenta' }
log.headingStyle = { fg: 'white', bg: 'black' }

log.style = {}
log.levels = {}
log.disp = {}
log.addLevel('silly', -Infinity, { inverse: true }, 'sill')
log.addLevel('verbose', 1000, { fg: 'blue', bg: 'black' }, 'verb')
log.addLevel('info', 2000, { fg: 'green' })
log.addLevel('timing', 2500, { fg: 'green', bg: 'black' })
log.addLevel('http', 3000, { fg: 'green', bg: 'black' })
log.addLevel('notice', 3500, { fg: 'blue', bg: 'black' })
log.addLevel('warn', 4000, { fg: 'black', bg: 'yellow' }, 'WARN')
log.addLevel('error', 5000, { fg: 'red', bg: 'black' }, 'ERR!')
log.addLevel('silent', Infinity)

// allow 'error' prefix
log.on('error', function () {})


/***/ }),

/***/ "./node_modules/number-is-nan/index.js":
/*!*********************************************!*\
  !*** ./node_modules/number-is-nan/index.js ***!
  \*********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 2:0-14 */
/***/ ((module) => {

"use strict";

module.exports = Number.isNaN || function (x) {
	return x !== x;
};


/***/ }),

/***/ "./node_modules/object-assign/index.js":
/*!*********************************************!*\
  !*** ./node_modules/object-assign/index.js ***!
  \*********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 65:0-14 */
/***/ ((module) => {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),

/***/ "./node_modules/once/once.js":
/*!***********************************!*\
  !*** ./node_modules/once/once.js ***!
  \***********************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 2:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var wrappy = __webpack_require__(/*! wrappy */ "./node_modules/wrappy/wrappy.js")
module.exports = wrappy(once)
module.exports.strict = wrappy(onceStrict)

once.proto = once(function () {
  Object.defineProperty(Function.prototype, 'once', {
    value: function () {
      return once(this)
    },
    configurable: true
  })

  Object.defineProperty(Function.prototype, 'onceStrict', {
    value: function () {
      return onceStrict(this)
    },
    configurable: true
  })
})

function once (fn) {
  var f = function () {
    if (f.called) return f.value
    f.called = true
    return f.value = fn.apply(this, arguments)
  }
  f.called = false
  return f
}

function onceStrict (fn) {
  var f = function () {
    if (f.called)
      throw new Error(f.onceError)
    f.called = true
    return f.value = fn.apply(this, arguments)
  }
  var name = fn.name || 'Function wrapped with `once`'
  f.onceError = name + " shouldn't be called more than once"
  f.called = false
  return f
}


/***/ }),

/***/ "./node_modules/path-is-absolute/index.js":
/*!************************************************!*\
  !*** ./node_modules/path-is-absolute/index.js ***!
  \************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 18:0-14 */
/***/ ((module) => {

"use strict";


function posix(path) {
	return path.charAt(0) === '/';
}

function win32(path) {
	// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56
	var splitDeviceRe = /^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/;
	var result = splitDeviceRe.exec(path);
	var device = result[1] || '';
	var isUnc = Boolean(device && device.charAt(1) !== ':');

	// UNC paths are always absolute
	return Boolean(result[2] || isUnc);
}

module.exports = process.platform === 'win32' ? win32 : posix;
module.exports.posix = posix;
module.exports.win32 = win32;


/***/ }),

/***/ "./node_modules/process-nextick-args/index.js":
/*!****************************************************!*\
  !*** ./node_modules/process-nextick-args/index.js ***!
  \****************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 7:2-16 */
/*! CommonJS bailout: module.exports is used directly at 9:2-16 */
/***/ ((module) => {

"use strict";


if (typeof process === 'undefined' ||
    !process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = { nextTick: nextTick };
} else {
  module.exports = process
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}



/***/ }),

/***/ "./node_modules/qrcode-svg/lib/qrcode.js":
/*!***********************************************!*\
  !*** ./node_modules/qrcode-svg/lib/qrcode.js ***!
  \***********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 423:2-16 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/**
 * @fileoverview
 * - modified davidshimjs/qrcodejs library for use in node.js
 * - Using the 'QRCode for Javascript library'
 * - Fixed dataset of 'QRCode for Javascript library' for support full-spec.
 * - this library has no dependencies.
 *
 * @version 0.9.1 (2016-02-12)
 * @author davidshimjs, papnkukn
 * @see <a href="http://www.d-project.com/" target="_blank">http://www.d-project.com/</a>
 * @see <a href="http://jeromeetienne.github.com/jquery-qrcode/" target="_blank">http://jeromeetienne.github.com/jquery-qrcode/</a>
 * @see <a href="https://github.com/davidshimjs/qrcodejs" target="_blank">https://github.com/davidshimjs/qrcodejs</a>
 */

//---------------------------------------------------------------------
// QRCode for JavaScript
//
// Copyright (c) 2009 Kazuhiko Arase
//
// URL: http://www.d-project.com/
//
// Licensed under the MIT license:
//   http://www.opensource.org/licenses/mit-license.php
//
// The word "QR Code" is registered trademark of 
// DENSO WAVE INCORPORATED
//   http://www.denso-wave.com/qrcode/faqpatent-e.html
//
//---------------------------------------------------------------------
function QR8bitByte(data) {
  this.mode = QRMode.MODE_8BIT_BYTE;
  this.data = data;
  this.parsedData = [];

  // Added to support UTF-8 Characters
  for (var i = 0, l = this.data.length; i < l; i++) {
    var byteArray = [];
    var code = this.data.charCodeAt(i);

    if (code > 0x10000) {
      byteArray[0] = 0xF0 | ((code & 0x1C0000) >>> 18);
      byteArray[1] = 0x80 | ((code & 0x3F000) >>> 12);
      byteArray[2] = 0x80 | ((code & 0xFC0) >>> 6);
      byteArray[3] = 0x80 | (code & 0x3F);
    } else if (code > 0x800) {
      byteArray[0] = 0xE0 | ((code & 0xF000) >>> 12);
      byteArray[1] = 0x80 | ((code & 0xFC0) >>> 6);
      byteArray[2] = 0x80 | (code & 0x3F);
    } else if (code > 0x80) {
      byteArray[0] = 0xC0 | ((code & 0x7C0) >>> 6);
      byteArray[1] = 0x80 | (code & 0x3F);
    } else {
      byteArray[0] = code;
    }

    this.parsedData.push(byteArray);
  }

  this.parsedData = Array.prototype.concat.apply([], this.parsedData);

  if (this.parsedData.length != this.data.length) {
    this.parsedData.unshift(191);
    this.parsedData.unshift(187);
    this.parsedData.unshift(239);
  }
}

QR8bitByte.prototype = {
  getLength: function (buffer) {
    return this.parsedData.length;
  },
  write: function (buffer) {
    for (var i = 0, l = this.parsedData.length; i < l; i++) {
      buffer.put(this.parsedData[i], 8);
    }
  }
};

function QRCodeModel(typeNumber, errorCorrectLevel) {
  this.typeNumber = typeNumber;
  this.errorCorrectLevel = errorCorrectLevel;
  this.modules = null;
  this.moduleCount = 0;
  this.dataCache = null;
  this.dataList = [];
}

QRCodeModel.prototype={addData:function(data){var newData=new QR8bitByte(data);this.dataList.push(newData);this.dataCache=null;},isDark:function(row,col){if(row<0||this.moduleCount<=row||col<0||this.moduleCount<=col){throw new Error(row+","+col);}
return this.modules[row][col];},getModuleCount:function(){return this.moduleCount;},make:function(){this.makeImpl(false,this.getBestMaskPattern());},makeImpl:function(test,maskPattern){this.moduleCount=this.typeNumber*4+17;this.modules=new Array(this.moduleCount);for(var row=0;row<this.moduleCount;row++){this.modules[row]=new Array(this.moduleCount);for(var col=0;col<this.moduleCount;col++){this.modules[row][col]=null;}}
this.setupPositionProbePattern(0,0);this.setupPositionProbePattern(this.moduleCount-7,0);this.setupPositionProbePattern(0,this.moduleCount-7);this.setupPositionAdjustPattern();this.setupTimingPattern();this.setupTypeInfo(test,maskPattern);if(this.typeNumber>=7){this.setupTypeNumber(test);}
if(this.dataCache==null){this.dataCache=QRCodeModel.createData(this.typeNumber,this.errorCorrectLevel,this.dataList);}
this.mapData(this.dataCache,maskPattern);},setupPositionProbePattern:function(row,col){for(var r=-1;r<=7;r++){if(row+r<=-1||this.moduleCount<=row+r)continue;for(var c=-1;c<=7;c++){if(col+c<=-1||this.moduleCount<=col+c)continue;if((0<=r&&r<=6&&(c==0||c==6))||(0<=c&&c<=6&&(r==0||r==6))||(2<=r&&r<=4&&2<=c&&c<=4)){this.modules[row+r][col+c]=true;}else{this.modules[row+r][col+c]=false;}}}},getBestMaskPattern:function(){var minLostPoint=0;var pattern=0;for(var i=0;i<8;i++){this.makeImpl(true,i);var lostPoint=QRUtil.getLostPoint(this);if(i==0||minLostPoint>lostPoint){minLostPoint=lostPoint;pattern=i;}}
return pattern;},createMovieClip:function(target_mc,instance_name,depth){var qr_mc=target_mc.createEmptyMovieClip(instance_name,depth);var cs=1;this.make();for(var row=0;row<this.modules.length;row++){var y=row*cs;for(var col=0;col<this.modules[row].length;col++){var x=col*cs;var dark=this.modules[row][col];if(dark){qr_mc.beginFill(0,100);qr_mc.moveTo(x,y);qr_mc.lineTo(x+cs,y);qr_mc.lineTo(x+cs,y+cs);qr_mc.lineTo(x,y+cs);qr_mc.endFill();}}}
return qr_mc;},setupTimingPattern:function(){for(var r=8;r<this.moduleCount-8;r++){if(this.modules[r][6]!=null){continue;}
this.modules[r][6]=(r%2==0);}
for(var c=8;c<this.moduleCount-8;c++){if(this.modules[6][c]!=null){continue;}
this.modules[6][c]=(c%2==0);}},setupPositionAdjustPattern:function(){var pos=QRUtil.getPatternPosition(this.typeNumber);for(var i=0;i<pos.length;i++){for(var j=0;j<pos.length;j++){var row=pos[i];var col=pos[j];if(this.modules[row][col]!=null){continue;}
for(var r=-2;r<=2;r++){for(var c=-2;c<=2;c++){if(r==-2||r==2||c==-2||c==2||(r==0&&c==0)){this.modules[row+r][col+c]=true;}else{this.modules[row+r][col+c]=false;}}}}}},setupTypeNumber:function(test){var bits=QRUtil.getBCHTypeNumber(this.typeNumber);for(var i=0;i<18;i++){var mod=(!test&&((bits>>i)&1)==1);this.modules[Math.floor(i/3)][i%3+this.moduleCount-8-3]=mod;}
for(var i=0;i<18;i++){var mod=(!test&&((bits>>i)&1)==1);this.modules[i%3+this.moduleCount-8-3][Math.floor(i/3)]=mod;}},setupTypeInfo:function(test,maskPattern){var data=(this.errorCorrectLevel<<3)|maskPattern;var bits=QRUtil.getBCHTypeInfo(data);for(var i=0;i<15;i++){var mod=(!test&&((bits>>i)&1)==1);if(i<6){this.modules[i][8]=mod;}else if(i<8){this.modules[i+1][8]=mod;}else{this.modules[this.moduleCount-15+i][8]=mod;}}
for(var i=0;i<15;i++){var mod=(!test&&((bits>>i)&1)==1);if(i<8){this.modules[8][this.moduleCount-i-1]=mod;}else if(i<9){this.modules[8][15-i-1+1]=mod;}else{this.modules[8][15-i-1]=mod;}}
this.modules[this.moduleCount-8][8]=(!test);},mapData:function(data,maskPattern){var inc=-1;var row=this.moduleCount-1;var bitIndex=7;var byteIndex=0;for(var col=this.moduleCount-1;col>0;col-=2){if(col==6)col--;while(true){for(var c=0;c<2;c++){if(this.modules[row][col-c]==null){var dark=false;if(byteIndex<data.length){dark=(((data[byteIndex]>>>bitIndex)&1)==1);}
var mask=QRUtil.getMask(maskPattern,row,col-c);if(mask){dark=!dark;}
this.modules[row][col-c]=dark;bitIndex--;if(bitIndex==-1){byteIndex++;bitIndex=7;}}}
row+=inc;if(row<0||this.moduleCount<=row){row-=inc;inc=-inc;break;}}}}};QRCodeModel.PAD0=0xEC;QRCodeModel.PAD1=0x11;QRCodeModel.createData=function(typeNumber,errorCorrectLevel,dataList){var rsBlocks=QRRSBlock.getRSBlocks(typeNumber,errorCorrectLevel);var buffer=new QRBitBuffer();for(var i=0;i<dataList.length;i++){var data=dataList[i];buffer.put(data.mode,4);buffer.put(data.getLength(),QRUtil.getLengthInBits(data.mode,typeNumber));data.write(buffer);}
var totalDataCount=0;for(var i=0;i<rsBlocks.length;i++){totalDataCount+=rsBlocks[i].dataCount;}
if(buffer.getLengthInBits()>totalDataCount*8){throw new Error("code length overflow. ("
+buffer.getLengthInBits()
+">"
+totalDataCount*8
+")");}
if(buffer.getLengthInBits()+4<=totalDataCount*8){buffer.put(0,4);}
while(buffer.getLengthInBits()%8!=0){buffer.putBit(false);}
while(true){if(buffer.getLengthInBits()>=totalDataCount*8){break;}
buffer.put(QRCodeModel.PAD0,8);if(buffer.getLengthInBits()>=totalDataCount*8){break;}
buffer.put(QRCodeModel.PAD1,8);}
return QRCodeModel.createBytes(buffer,rsBlocks);};QRCodeModel.createBytes=function(buffer,rsBlocks){var offset=0;var maxDcCount=0;var maxEcCount=0;var dcdata=new Array(rsBlocks.length);var ecdata=new Array(rsBlocks.length);for(var r=0;r<rsBlocks.length;r++){var dcCount=rsBlocks[r].dataCount;var ecCount=rsBlocks[r].totalCount-dcCount;maxDcCount=Math.max(maxDcCount,dcCount);maxEcCount=Math.max(maxEcCount,ecCount);dcdata[r]=new Array(dcCount);for(var i=0;i<dcdata[r].length;i++){dcdata[r][i]=0xff&buffer.buffer[i+offset];}
offset+=dcCount;var rsPoly=QRUtil.getErrorCorrectPolynomial(ecCount);var rawPoly=new QRPolynomial(dcdata[r],rsPoly.getLength()-1);var modPoly=rawPoly.mod(rsPoly);ecdata[r]=new Array(rsPoly.getLength()-1);for(var i=0;i<ecdata[r].length;i++){var modIndex=i+modPoly.getLength()-ecdata[r].length;ecdata[r][i]=(modIndex>=0)?modPoly.get(modIndex):0;}}
var totalCodeCount=0;for(var i=0;i<rsBlocks.length;i++){totalCodeCount+=rsBlocks[i].totalCount;}
var data=new Array(totalCodeCount);var index=0;for(var i=0;i<maxDcCount;i++){for(var r=0;r<rsBlocks.length;r++){if(i<dcdata[r].length){data[index++]=dcdata[r][i];}}}
for(var i=0;i<maxEcCount;i++){for(var r=0;r<rsBlocks.length;r++){if(i<ecdata[r].length){data[index++]=ecdata[r][i];}}}
return data;};var QRMode={MODE_NUMBER:1<<0,MODE_ALPHA_NUM:1<<1,MODE_8BIT_BYTE:1<<2,MODE_KANJI:1<<3};var QRErrorCorrectLevel={L:1,M:0,Q:3,H:2};var QRMaskPattern={PATTERN000:0,PATTERN001:1,PATTERN010:2,PATTERN011:3,PATTERN100:4,PATTERN101:5,PATTERN110:6,PATTERN111:7};var QRUtil={PATTERN_POSITION_TABLE:[[],[6,18],[6,22],[6,26],[6,30],[6,34],[6,22,38],[6,24,42],[6,26,46],[6,28,50],[6,30,54],[6,32,58],[6,34,62],[6,26,46,66],[6,26,48,70],[6,26,50,74],[6,30,54,78],[6,30,56,82],[6,30,58,86],[6,34,62,90],[6,28,50,72,94],[6,26,50,74,98],[6,30,54,78,102],[6,28,54,80,106],[6,32,58,84,110],[6,30,58,86,114],[6,34,62,90,118],[6,26,50,74,98,122],[6,30,54,78,102,126],[6,26,52,78,104,130],[6,30,56,82,108,134],[6,34,60,86,112,138],[6,30,58,86,114,142],[6,34,62,90,118,146],[6,30,54,78,102,126,150],[6,24,50,76,102,128,154],[6,28,54,80,106,132,158],[6,32,58,84,110,136,162],[6,26,54,82,110,138,166],[6,30,58,86,114,142,170]],G15:(1<<10)|(1<<8)|(1<<5)|(1<<4)|(1<<2)|(1<<1)|(1<<0),G18:(1<<12)|(1<<11)|(1<<10)|(1<<9)|(1<<8)|(1<<5)|(1<<2)|(1<<0),G15_MASK:(1<<14)|(1<<12)|(1<<10)|(1<<4)|(1<<1),getBCHTypeInfo:function(data){var d=data<<10;while(QRUtil.getBCHDigit(d)-QRUtil.getBCHDigit(QRUtil.G15)>=0){d^=(QRUtil.G15<<(QRUtil.getBCHDigit(d)-QRUtil.getBCHDigit(QRUtil.G15)));}
return((data<<10)|d)^QRUtil.G15_MASK;},getBCHTypeNumber:function(data){var d=data<<12;while(QRUtil.getBCHDigit(d)-QRUtil.getBCHDigit(QRUtil.G18)>=0){d^=(QRUtil.G18<<(QRUtil.getBCHDigit(d)-QRUtil.getBCHDigit(QRUtil.G18)));}
return(data<<12)|d;},getBCHDigit:function(data){var digit=0;while(data!=0){digit++;data>>>=1;}
return digit;},getPatternPosition:function(typeNumber){return QRUtil.PATTERN_POSITION_TABLE[typeNumber-1];},getMask:function(maskPattern,i,j){switch(maskPattern){case QRMaskPattern.PATTERN000:return(i+j)%2==0;case QRMaskPattern.PATTERN001:return i%2==0;case QRMaskPattern.PATTERN010:return j%3==0;case QRMaskPattern.PATTERN011:return(i+j)%3==0;case QRMaskPattern.PATTERN100:return(Math.floor(i/2)+Math.floor(j/3))%2==0;case QRMaskPattern.PATTERN101:return(i*j)%2+(i*j)%3==0;case QRMaskPattern.PATTERN110:return((i*j)%2+(i*j)%3)%2==0;case QRMaskPattern.PATTERN111:return((i*j)%3+(i+j)%2)%2==0;default:throw new Error("bad maskPattern:"+maskPattern);}},getErrorCorrectPolynomial:function(errorCorrectLength){var a=new QRPolynomial([1],0);for(var i=0;i<errorCorrectLength;i++){a=a.multiply(new QRPolynomial([1,QRMath.gexp(i)],0));}
return a;},getLengthInBits:function(mode,type){if(1<=type&&type<10){switch(mode){case QRMode.MODE_NUMBER:return 10;case QRMode.MODE_ALPHA_NUM:return 9;case QRMode.MODE_8BIT_BYTE:return 8;case QRMode.MODE_KANJI:return 8;default:throw new Error("mode:"+mode);}}else if(type<27){switch(mode){case QRMode.MODE_NUMBER:return 12;case QRMode.MODE_ALPHA_NUM:return 11;case QRMode.MODE_8BIT_BYTE:return 16;case QRMode.MODE_KANJI:return 10;default:throw new Error("mode:"+mode);}}else if(type<41){switch(mode){case QRMode.MODE_NUMBER:return 14;case QRMode.MODE_ALPHA_NUM:return 13;case QRMode.MODE_8BIT_BYTE:return 16;case QRMode.MODE_KANJI:return 12;default:throw new Error("mode:"+mode);}}else{throw new Error("type:"+type);}},getLostPoint:function(qrCode){var moduleCount=qrCode.getModuleCount();var lostPoint=0;for(var row=0;row<moduleCount;row++){for(var col=0;col<moduleCount;col++){var sameCount=0;var dark=qrCode.isDark(row,col);for(var r=-1;r<=1;r++){if(row+r<0||moduleCount<=row+r){continue;}
for(var c=-1;c<=1;c++){if(col+c<0||moduleCount<=col+c){continue;}
if(r==0&&c==0){continue;}
if(dark==qrCode.isDark(row+r,col+c)){sameCount++;}}}
if(sameCount>5){lostPoint+=(3+sameCount-5);}}}
for(var row=0;row<moduleCount-1;row++){for(var col=0;col<moduleCount-1;col++){var count=0;if(qrCode.isDark(row,col))count++;if(qrCode.isDark(row+1,col))count++;if(qrCode.isDark(row,col+1))count++;if(qrCode.isDark(row+1,col+1))count++;if(count==0||count==4){lostPoint+=3;}}}
for(var row=0;row<moduleCount;row++){for(var col=0;col<moduleCount-6;col++){if(qrCode.isDark(row,col)&&!qrCode.isDark(row,col+1)&&qrCode.isDark(row,col+2)&&qrCode.isDark(row,col+3)&&qrCode.isDark(row,col+4)&&!qrCode.isDark(row,col+5)&&qrCode.isDark(row,col+6)){lostPoint+=40;}}}
for(var col=0;col<moduleCount;col++){for(var row=0;row<moduleCount-6;row++){if(qrCode.isDark(row,col)&&!qrCode.isDark(row+1,col)&&qrCode.isDark(row+2,col)&&qrCode.isDark(row+3,col)&&qrCode.isDark(row+4,col)&&!qrCode.isDark(row+5,col)&&qrCode.isDark(row+6,col)){lostPoint+=40;}}}
var darkCount=0;for(var col=0;col<moduleCount;col++){for(var row=0;row<moduleCount;row++){if(qrCode.isDark(row,col)){darkCount++;}}}
var ratio=Math.abs(100*darkCount/moduleCount/moduleCount-50)/5;lostPoint+=ratio*10;return lostPoint;}};var QRMath={glog:function(n){if(n<1){throw new Error("glog("+n+")");}
return QRMath.LOG_TABLE[n];},gexp:function(n){while(n<0){n+=255;}
while(n>=256){n-=255;}
return QRMath.EXP_TABLE[n];},EXP_TABLE:new Array(256),LOG_TABLE:new Array(256)};for(var i=0;i<8;i++){QRMath.EXP_TABLE[i]=1<<i;}
for(var i=8;i<256;i++){QRMath.EXP_TABLE[i]=QRMath.EXP_TABLE[i-4]^QRMath.EXP_TABLE[i-5]^QRMath.EXP_TABLE[i-6]^QRMath.EXP_TABLE[i-8];}
for(var i=0;i<255;i++){QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]]=i;}
function QRPolynomial(num,shift){if(num.length==undefined){throw new Error(num.length+"/"+shift);}
var offset=0;while(offset<num.length&&num[offset]==0){offset++;}
this.num=new Array(num.length-offset+shift);for(var i=0;i<num.length-offset;i++){this.num[i]=num[i+offset];}}
QRPolynomial.prototype={get:function(index){return this.num[index];},getLength:function(){return this.num.length;},multiply:function(e){var num=new Array(this.getLength()+e.getLength()-1);for(var i=0;i<this.getLength();i++){for(var j=0;j<e.getLength();j++){num[i+j]^=QRMath.gexp(QRMath.glog(this.get(i))+QRMath.glog(e.get(j)));}}
return new QRPolynomial(num,0);},mod:function(e){if(this.getLength()-e.getLength()<0){return this;}
var ratio=QRMath.glog(this.get(0))-QRMath.glog(e.get(0));var num=new Array(this.getLength());for(var i=0;i<this.getLength();i++){num[i]=this.get(i);}
for(var i=0;i<e.getLength();i++){num[i]^=QRMath.gexp(QRMath.glog(e.get(i))+ratio);}
return new QRPolynomial(num,0).mod(e);}};function QRRSBlock(totalCount,dataCount){this.totalCount=totalCount;this.dataCount=dataCount;}
QRRSBlock.RS_BLOCK_TABLE=[[1,26,19],[1,26,16],[1,26,13],[1,26,9],[1,44,34],[1,44,28],[1,44,22],[1,44,16],[1,70,55],[1,70,44],[2,35,17],[2,35,13],[1,100,80],[2,50,32],[2,50,24],[4,25,9],[1,134,108],[2,67,43],[2,33,15,2,34,16],[2,33,11,2,34,12],[2,86,68],[4,43,27],[4,43,19],[4,43,15],[2,98,78],[4,49,31],[2,32,14,4,33,15],[4,39,13,1,40,14],[2,121,97],[2,60,38,2,61,39],[4,40,18,2,41,19],[4,40,14,2,41,15],[2,146,116],[3,58,36,2,59,37],[4,36,16,4,37,17],[4,36,12,4,37,13],[2,86,68,2,87,69],[4,69,43,1,70,44],[6,43,19,2,44,20],[6,43,15,2,44,16],[4,101,81],[1,80,50,4,81,51],[4,50,22,4,51,23],[3,36,12,8,37,13],[2,116,92,2,117,93],[6,58,36,2,59,37],[4,46,20,6,47,21],[7,42,14,4,43,15],[4,133,107],[8,59,37,1,60,38],[8,44,20,4,45,21],[12,33,11,4,34,12],[3,145,115,1,146,116],[4,64,40,5,65,41],[11,36,16,5,37,17],[11,36,12,5,37,13],[5,109,87,1,110,88],[5,65,41,5,66,42],[5,54,24,7,55,25],[11,36,12],[5,122,98,1,123,99],[7,73,45,3,74,46],[15,43,19,2,44,20],[3,45,15,13,46,16],[1,135,107,5,136,108],[10,74,46,1,75,47],[1,50,22,15,51,23],[2,42,14,17,43,15],[5,150,120,1,151,121],[9,69,43,4,70,44],[17,50,22,1,51,23],[2,42,14,19,43,15],[3,141,113,4,142,114],[3,70,44,11,71,45],[17,47,21,4,48,22],[9,39,13,16,40,14],[3,135,107,5,136,108],[3,67,41,13,68,42],[15,54,24,5,55,25],[15,43,15,10,44,16],[4,144,116,4,145,117],[17,68,42],[17,50,22,6,51,23],[19,46,16,6,47,17],[2,139,111,7,140,112],[17,74,46],[7,54,24,16,55,25],[34,37,13],[4,151,121,5,152,122],[4,75,47,14,76,48],[11,54,24,14,55,25],[16,45,15,14,46,16],[6,147,117,4,148,118],[6,73,45,14,74,46],[11,54,24,16,55,25],[30,46,16,2,47,17],[8,132,106,4,133,107],[8,75,47,13,76,48],[7,54,24,22,55,25],[22,45,15,13,46,16],[10,142,114,2,143,115],[19,74,46,4,75,47],[28,50,22,6,51,23],[33,46,16,4,47,17],[8,152,122,4,153,123],[22,73,45,3,74,46],[8,53,23,26,54,24],[12,45,15,28,46,16],[3,147,117,10,148,118],[3,73,45,23,74,46],[4,54,24,31,55,25],[11,45,15,31,46,16],[7,146,116,7,147,117],[21,73,45,7,74,46],[1,53,23,37,54,24],[19,45,15,26,46,16],[5,145,115,10,146,116],[19,75,47,10,76,48],[15,54,24,25,55,25],[23,45,15,25,46,16],[13,145,115,3,146,116],[2,74,46,29,75,47],[42,54,24,1,55,25],[23,45,15,28,46,16],[17,145,115],[10,74,46,23,75,47],[10,54,24,35,55,25],[19,45,15,35,46,16],[17,145,115,1,146,116],[14,74,46,21,75,47],[29,54,24,19,55,25],[11,45,15,46,46,16],[13,145,115,6,146,116],[14,74,46,23,75,47],[44,54,24,7,55,25],[59,46,16,1,47,17],[12,151,121,7,152,122],[12,75,47,26,76,48],[39,54,24,14,55,25],[22,45,15,41,46,16],[6,151,121,14,152,122],[6,75,47,34,76,48],[46,54,24,10,55,25],[2,45,15,64,46,16],[17,152,122,4,153,123],[29,74,46,14,75,47],[49,54,24,10,55,25],[24,45,15,46,46,16],[4,152,122,18,153,123],[13,74,46,32,75,47],[48,54,24,14,55,25],[42,45,15,32,46,16],[20,147,117,4,148,118],[40,75,47,7,76,48],[43,54,24,22,55,25],[10,45,15,67,46,16],[19,148,118,6,149,119],[18,75,47,31,76,48],[34,54,24,34,55,25],[20,45,15,61,46,16]];QRRSBlock.getRSBlocks=function(typeNumber,errorCorrectLevel){var rsBlock=QRRSBlock.getRsBlockTable(typeNumber,errorCorrectLevel);if(rsBlock==undefined){throw new Error("bad rs block @ typeNumber:"+typeNumber+"/errorCorrectLevel:"+errorCorrectLevel);}
var length=rsBlock.length/3;var list=[];for(var i=0;i<length;i++){var count=rsBlock[i*3+0];var totalCount=rsBlock[i*3+1];var dataCount=rsBlock[i*3+2];for(var j=0;j<count;j++){list.push(new QRRSBlock(totalCount,dataCount));}}
return list;};QRRSBlock.getRsBlockTable=function(typeNumber,errorCorrectLevel){switch(errorCorrectLevel){case QRErrorCorrectLevel.L:return QRRSBlock.RS_BLOCK_TABLE[(typeNumber-1)*4+0];case QRErrorCorrectLevel.M:return QRRSBlock.RS_BLOCK_TABLE[(typeNumber-1)*4+1];case QRErrorCorrectLevel.Q:return QRRSBlock.RS_BLOCK_TABLE[(typeNumber-1)*4+2];case QRErrorCorrectLevel.H:return QRRSBlock.RS_BLOCK_TABLE[(typeNumber-1)*4+3];default:return undefined;}};function QRBitBuffer(){this.buffer=[];this.length=0;}
QRBitBuffer.prototype={get:function(index){var bufIndex=Math.floor(index/8);return((this.buffer[bufIndex]>>>(7-index%8))&1)==1;},put:function(num,length){for(var i=0;i<length;i++){this.putBit(((num>>>(length-i-1))&1)==1);}},getLengthInBits:function(){return this.length;},putBit:function(bit){var bufIndex=Math.floor(this.length/8);if(this.buffer.length<=bufIndex){this.buffer.push(0);}
if(bit){this.buffer[bufIndex]|=(0x80>>>(this.length%8));}
this.length++;}};var QRCodeLimitLength=[[17,14,11,7],[32,26,20,14],[53,42,32,24],[78,62,46,34],[106,84,60,44],[134,106,74,58],[154,122,86,64],[192,152,108,84],[230,180,130,98],[271,213,151,119],[321,251,177,137],[367,287,203,155],[425,331,241,177],[458,362,258,194],[520,412,292,220],[586,450,322,250],[644,504,364,280],[718,560,394,310],[792,624,442,338],[858,666,482,382],[929,711,509,403],[1003,779,565,439],[1091,857,611,461],[1171,911,661,511],[1273,997,715,535],[1367,1059,751,593],[1465,1125,805,625],[1528,1190,868,658],[1628,1264,908,698],[1732,1370,982,742],[1840,1452,1030,790],[1952,1538,1112,842],[2068,1628,1168,898],[2188,1722,1228,958],[2303,1809,1283,983],[2431,1911,1351,1051],[2563,1989,1423,1093],[2699,2099,1499,1139],[2809,2213,1579,1219],[2953,2331,1663,1273]];


/** Constructor */
function QRCode(options) {
  var instance = this;
  
  //Default options
  this.options = {
    padding: 4,
    width: 256, 
    height: 256,
    typeNumber: 4,
    color: "#000000",
    background: "#ffffff",
    ecl: "M"
  };
  
  //In case the options is string
  if (typeof options === 'string') {
    options = {
      content: options
    };
  }
  
  //Merge options
  if (options) {
    for (var i in options) {
      this.options[i] = options[i];
    }
  }
  
  if (typeof this.options.content !== 'string') {
    throw new Error("Expected 'content' as string!");
  }
  
  if (this.options.content.length === 0 /* || this.options.content.length > 7089 */) {
    throw new Error("Expected 'content' to be non-empty!");
  }
  
  if (!(this.options.padding >= 0)) {
    throw new Error("Expected 'padding' value to be non-negative!");
  }
  
  if (!(this.options.width > 0) || !(this.options.height > 0)) {
    throw new Error("Expected 'width' or 'height' value to be higher than zero!");
  }
  
  //Gets the error correction level
  function _getErrorCorrectLevel(ecl) {
    switch (ecl) {
        case "L":
          return QRErrorCorrectLevel.L;
          
        case "M":
          return QRErrorCorrectLevel.M;
          
        case "Q":
          return QRErrorCorrectLevel.Q;
          
        case "H":
          return QRErrorCorrectLevel.H;
          
        default:
          throw new Error("Unknwon error correction level: " + ecl);
      }
  }
  
  //Get type number
  function _getTypeNumber(content, ecl) {      
    var length = _getUTF8Length(content);
    
    var type = 1;
    var limit = 0;
    for (var i = 0, len = QRCodeLimitLength.length; i <= len; i++) {
      var table = QRCodeLimitLength[i];
      if (!table) {
        throw new Error("Content too long: expected " + limit + " but got " + length);
      }
      
      switch (ecl) {
        case "L":
          limit = table[0];
          break;
          
        case "M":
          limit = table[1];
          break;
          
        case "Q":
          limit = table[2];
          break;
          
        case "H":
          limit = table[3];
          break;
          
        default:
          throw new Error("Unknwon error correction level: " + ecl);
      }
      
      if (length <= limit) {
        break;
      }
      
      type++;
    }
    
    if (type > QRCodeLimitLength.length) {
      throw new Error("Content too long");
    }
    
    return type;
  }

  //Gets text length
  function _getUTF8Length(content) {
    var result = encodeURI(content).toString().replace(/\%[0-9a-fA-F]{2}/g, 'a');
    return result.length + (result.length != content ? 3 : 0);
  }
  
  //Generate QR Code matrix
  var content = this.options.content;
  var type = _getTypeNumber(content, this.options.ecl);
  var ecl = _getErrorCorrectLevel(this.options.ecl);
  this.qrcode = new QRCodeModel(type, ecl);
  this.qrcode.addData(content);
  this.qrcode.make();
}

/** Generates QR Code as SVG image */
QRCode.prototype.svg = function(opt) {
  var options = this.options || { };
  var modules = this.qrcode.modules;
  
  if (typeof opt == "undefined") {
    opt = { container: options.container || "svg" };
  }
  
  //Apply new lines and indents in SVG?
  var pretty = typeof options.pretty != "undefined" ? !!options.pretty : true;
  
  var indent = pretty ? '  ' : '';
  var EOL = pretty ? '\r\n' : '';
  var width = options.width;
  var height = options.height;
  var length = modules.length;
  var xsize = width / (length + 2 * options.padding);
  var ysize = height / (length + 2 * options.padding);
  
  //Join (union, merge) rectangles into one shape?
  var join = typeof options.join != "undefined" ? !!options.join : false;
  
  //Swap the X and Y modules, pull request #2
  var swap = typeof options.swap != "undefined" ? !!options.swap : false;
  
  //Apply <?xml...?> declaration in SVG?
  var xmlDeclaration = typeof options.xmlDeclaration != "undefined" ? !!options.xmlDeclaration : true;
  
  //Populate with predefined shape instead of "rect" elements, thanks to @kkocdko
  var predefined = typeof options.predefined != "undefined" ? !!options.predefined : false;
  var defs = predefined ? indent + '<defs><path id="qrmodule" d="M0 0 h' + ysize + ' v' + xsize + ' H0 z" style="fill:' + options.color + ';shape-rendering:crispEdges;" /></defs>' + EOL : '';
  
  //Background rectangle
  var bgrect = indent + '<rect x="0" y="0" width="' + width + '" height="' + height + '" style="fill:' + options.background + ';shape-rendering:crispEdges;"/>' + EOL;
  
  //Rectangles representing modules
  var modrect = '';
  var pathdata = '';

  for (var y = 0; y < length; y++) {
    for (var x = 0; x < length; x++) {
      var module = modules[x][y];
      if (module) {
        
        var px = (x * xsize + options.padding * xsize);
        var py = (y * ysize + options.padding * ysize);
        
        //Some users have had issues with the QR Code, thanks to @danioso for the solution
        if (swap) {
          var t = px;
          px = py;
          py = t;
        }
        
        if (join) {
          //Module as a part of svg path data, thanks to @danioso
          var w = xsize + px
          var h = ysize + py

          px = (Number.isInteger(px))? Number(px): px.toFixed(2);
          py = (Number.isInteger(py))? Number(py): py.toFixed(2);
          w = (Number.isInteger(w))? Number(w): w.toFixed(2);
          h = (Number.isInteger(h))? Number(h): h.toFixed(2);

          pathdata += ('M' + px + ',' + py + ' V' + h + ' H' + w + ' V' + py + ' H' + px + ' Z ');
        }
        else if (predefined) {
          //Module as a predefined shape, thanks to @kkocdko
          modrect += indent + '<use x="' + px.toString() + '" y="' + py.toString() + '" href="#qrmodule" />' + EOL;
        }
        else {
          //Module as rectangle element
          modrect += indent + '<rect x="' + px.toString() + '" y="' + py.toString() + '" width="' + xsize + '" height="' + ysize + '" style="fill:' + options.color + ';shape-rendering:crispEdges;"/>' + EOL;
        }
      }
    }
  }
  
  if (join) {
    modrect = indent + '<path x="0" y="0" style="fill:' + options.color + ';shape-rendering:crispEdges;" d="' + pathdata + '" />';
  }

  var svg = "";
  switch (opt.container) {
    //Wrapped in SVG document
    case "svg":
      if (xmlDeclaration) {
        svg += '<?xml version="1.0" standalone="yes"?>' + EOL;
      }
      svg += '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="' + width + '" height="' + height + '">' + EOL;
      svg += defs + bgrect + modrect;
      svg += '</svg>';
      break;
      
    //Viewbox for responsive use in a browser, thanks to @danioso
    case "svg-viewbox":
      if (xmlDeclaration) {
        svg += '<?xml version="1.0" standalone="yes"?>' + EOL;
      }
      svg += '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 ' + width + ' ' + height + '">' + EOL;
      svg += defs + bgrect + modrect;
      svg += '</svg>';
      break;
      
    
    //Wrapped in group element    
    case "g":
      svg += '<g width="' + width + '" height="' + height + '">' + EOL;
      svg += defs + bgrect + modrect;
      svg += '</g>';
      break;
      
    //Without a container
    default:
      svg += (defs + bgrect + modrect).replace(/^\s+/, ""); //Clear indents on each line
      break;
  }
  
  return svg;
};

/** Writes QR Code image to a file */
QRCode.prototype.save = function(file, callback) {
  var data = this.svg();
  if (typeof callback != "function") {
    callback = function(error, result) { };
  }
  try {
    //Package 'fs' is available in node.js but not in a web browser
    var fs = __webpack_require__(/*! fs */ "fs");
    fs.writeFile(file, data, callback);
  }
  catch (e) {
    //Sorry, 'fs' is not available
    callback(e);
  }
};

if (true) {
  module.exports = QRCode;
}


/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_duplex.js":
/*!************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_duplex.js ***!
  \************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 43:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.



/*<replacement>*/

var pna = __webpack_require__(/*! process-nextick-args */ "./node_modules/process-nextick-args/index.js");
/*</replacement>*/

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var util = Object.create(__webpack_require__(/*! core-util-is */ "./node_modules/core-util-is/lib/util.js"));
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits.js");
/*</replacement>*/

var Readable = __webpack_require__(/*! ./_stream_readable */ "./node_modules/readable-stream/lib/_stream_readable.js");
var Writable = __webpack_require__(/*! ./_stream_writable */ "./node_modules/readable-stream/lib/_stream_writable.js");

util.inherits(Duplex, Readable);

{
  // avoid scope creep, the keys array can then be collected
  var keys = objectKeys(Writable.prototype);
  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._writableState.highWaterMark;
  }
});

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  pna.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

Duplex.prototype._destroy = function (err, cb) {
  this.push(null);
  this.end();

  pna.nextTick(cb, err);
};

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_passthrough.js":
/*!*****************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \*****************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 28:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.



module.exports = PassThrough;

var Transform = __webpack_require__(/*! ./_stream_transform */ "./node_modules/readable-stream/lib/_stream_transform.js");

/*<replacement>*/
var util = Object.create(__webpack_require__(/*! core-util-is */ "./node_modules/core-util-is/lib/util.js"));
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits.js");
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_readable.js":
/*!**************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_readable.js ***!
  \**************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 29:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var pna = __webpack_require__(/*! process-nextick-args */ "./node_modules/process-nextick-args/index.js");
/*</replacement>*/

module.exports = Readable;

/*<replacement>*/
var isArray = __webpack_require__(/*! isarray */ "./node_modules/isarray/index.js");
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = __webpack_require__(/*! events */ "events").EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(/*! ./internal/streams/stream */ "./node_modules/readable-stream/lib/internal/streams/stream.js");
/*</replacement>*/

/*<replacement>*/

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/readable-stream/node_modules/safe-buffer/index.js").Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

/*<replacement>*/
var util = Object.create(__webpack_require__(/*! core-util-is */ "./node_modules/core-util-is/lib/util.js"));
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits.js");
/*</replacement>*/

/*<replacement>*/
var debugUtil = __webpack_require__(/*! util */ "util");
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = __webpack_require__(/*! ./internal/streams/BufferList */ "./node_modules/readable-stream/lib/internal/streams/BufferList.js");
var destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ "./node_modules/readable-stream/lib/internal/streams/destroy.js");
var StringDecoder;

util.inherits(Readable, Stream);

var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);

  // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.
  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/readable-stream/lib/_stream_duplex.js");

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var readableHwm = options.readableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ "./node_modules/string_decoder/lib/string_decoder.js").StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/readable-stream/lib/_stream_duplex.js");

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});

Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  this.push(null);
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      stream.emit('error', er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        stream.emit('error', new Error('stream.push() after EOF'));
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
    }
  }

  return needMoreData(state);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    stream.emit('data', chunk);
    stream.read(0);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ "./node_modules/string_decoder/lib/string_decoder.js").StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    pna.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = { hasUnpiped: false };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, unpipeInfo);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this, unpipeInfo);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        pna.nextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    pna.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;

  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  this._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._readableState.highWaterMark;
  }
});

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = Buffer.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    pna.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_transform.js":
/*!***************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_transform.js ***!
  \***************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 66:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.



module.exports = Transform;

var Duplex = __webpack_require__(/*! ./_stream_duplex */ "./node_modules/readable-stream/lib/_stream_duplex.js");

/*<replacement>*/
var util = Object.create(__webpack_require__(/*! core-util-is */ "./node_modules/core-util-is/lib/util.js"));
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits.js");
/*</replacement>*/

util.inherits(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) {
    return this.emit('error', new Error('write callback called multiple times'));
  }

  ts.writechunk = null;
  ts.writecb = null;

  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);

  cb(er);

  var rs = this._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  };

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function') {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  var _this2 = this;

  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
    _this2.emit('close');
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');

  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_writable.js":
/*!**************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_writable.js ***!
  \**************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 33:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.



/*<replacement>*/

var pna = __webpack_require__(/*! process-nextick-args */ "./node_modules/process-nextick-args/index.js");
/*</replacement>*/

module.exports = Writable;

/* <replacement> */
function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;
  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = Object.create(__webpack_require__(/*! core-util-is */ "./node_modules/core-util-is/lib/util.js"));
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits.js");
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: __webpack_require__(/*! util-deprecate */ "./node_modules/util-deprecate/node.js")
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(/*! ./internal/streams/stream */ "./node_modules/readable-stream/lib/internal/streams/stream.js");
/*</replacement>*/

/*<replacement>*/

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/readable-stream/node_modules/safe-buffer/index.js").Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

var destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ "./node_modules/readable-stream/lib/internal/streams/destroy.js");

util.inherits(Writable, Stream);

function nop() {}

function WritableState(options, stream) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/readable-stream/lib/_stream_duplex.js");

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var writableHwm = options.writableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // if _final has been called
  this.finalCalled = false;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // has it been destroyed
  this.destroyed = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;

      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/readable-stream/lib/_stream_duplex.js");

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;

    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  pna.nextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    pna.nextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }
  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._writableState.highWaterMark;
  }
});

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    pna.nextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    pna.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;
    if (err) {
      stream.emit('error', err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function') {
      state.pendingcb++;
      state.finalCalled = true;
      pna.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }
  if (state.corkedRequestsFree) {
    state.corkedRequestsFree.next = corkReq;
  } else {
    state.corkedRequestsFree = corkReq;
  }
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  get: function () {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
  }
});

Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function (err, cb) {
  this.end();
  cb(err);
};

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/BufferList.js":
/*!*************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/BufferList.js ***!
  \*************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_require__, module */
/*! CommonJS bailout: module.exports is used directly at 12:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/readable-stream/node_modules/safe-buffer/index.js").Buffer;
var util = __webpack_require__(/*! util */ "util");

function copyBuffer(src, target, offset) {
  src.copy(target, offset);
}

module.exports = function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  BufferList.prototype.push = function push(v) {
    var entry = { data: v, next: null };
    if (this.length > 0) this.tail.next = entry;else this.head = entry;
    this.tail = entry;
    ++this.length;
  };

  BufferList.prototype.unshift = function unshift(v) {
    var entry = { data: v, next: this.head };
    if (this.length === 0) this.tail = entry;
    this.head = entry;
    ++this.length;
  };

  BufferList.prototype.shift = function shift() {
    if (this.length === 0) return;
    var ret = this.head.data;
    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
    --this.length;
    return ret;
  };

  BufferList.prototype.clear = function clear() {
    this.head = this.tail = null;
    this.length = 0;
  };

  BufferList.prototype.join = function join(s) {
    if (this.length === 0) return '';
    var p = this.head;
    var ret = '' + p.data;
    while (p = p.next) {
      ret += s + p.data;
    }return ret;
  };

  BufferList.prototype.concat = function concat(n) {
    if (this.length === 0) return Buffer.alloc(0);
    if (this.length === 1) return this.head.data;
    var ret = Buffer.allocUnsafe(n >>> 0);
    var p = this.head;
    var i = 0;
    while (p) {
      copyBuffer(p.data, ret, i);
      i += p.data.length;
      p = p.next;
    }
    return ret;
  };

  return BufferList;
}();

if (util && util.inspect && util.inspect.custom) {
  module.exports.prototype[util.inspect.custom] = function () {
    var obj = util.inspect({ length: this.length });
    return this.constructor.name + ' ' + obj;
  };
}

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/destroy.js":
/*!**********************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \**********************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 71:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


/*<replacement>*/

var pna = __webpack_require__(/*! process-nextick-args */ "./node_modules/process-nextick-args/index.js");
/*</replacement>*/

// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
      pna.nextTick(emitErrorNT, this, err);
    }
    return this;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      pna.nextTick(emitErrorNT, _this, err);
      if (_this._writableState) {
        _this._writableState.errorEmitted = true;
      }
    } else if (cb) {
      cb(err);
    }
  });

  return this;
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy
};

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/stream.js":
/*!*********************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/stream.js ***!
  \*********************************************************************/
/*! dynamic exports */
/*! exports [maybe provided (runtime-defined)] [no usage info] -> external "stream" */
/*! runtime requirements: module, __webpack_require__ */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! stream */ "stream");


/***/ }),

/***/ "./node_modules/readable-stream/node_modules/safe-buffer/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/readable-stream/node_modules/safe-buffer/index.js ***!
  \************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_exports__, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 12:2-16 */
/*! CommonJS bailout: exports is used directly at 15:20-27 */
/***/ ((module, exports, __webpack_require__) => {

/* eslint-disable node/no-deprecated-api */
var buffer = __webpack_require__(/*! buffer */ "buffer")
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}


/***/ }),

/***/ "./node_modules/readable-stream/readable.js":
/*!**************************************************!*\
  !*** ./node_modules/readable-stream/readable.js ***!
  \**************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_exports__, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 3:2-16 */
/*! CommonJS bailout: module.exports is used directly at 4:12-26 */
/*! CommonJS bailout: exports is used directly at 4:2-9 */
/*! CommonJS bailout: exports is used directly at 12:2-9 */
/*! CommonJS bailout: exports is used directly at 13:29-36 */
/*! CommonJS bailout: exports is used directly at 14:21-28 */
/***/ ((module, exports, __webpack_require__) => {

var Stream = __webpack_require__(/*! stream */ "stream");
if (process.env.READABLE_STREAM === 'disable' && Stream) {
  module.exports = Stream;
  exports = module.exports = Stream.Readable;
  exports.Readable = Stream.Readable;
  exports.Writable = Stream.Writable;
  exports.Duplex = Stream.Duplex;
  exports.Transform = Stream.Transform;
  exports.PassThrough = Stream.PassThrough;
  exports.Stream = Stream;
} else {
  exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ "./node_modules/readable-stream/lib/_stream_readable.js");
  exports.Stream = Stream || exports;
  exports.Readable = exports;
  exports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ "./node_modules/readable-stream/lib/_stream_writable.js");
  exports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ "./node_modules/readable-stream/lib/_stream_duplex.js");
  exports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ "./node_modules/readable-stream/lib/_stream_transform.js");
  exports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ "./node_modules/readable-stream/lib/_stream_passthrough.js");
}


/***/ }),

/***/ "./node_modules/semver/semver.js":
/*!***************************************!*\
  !*** ./node_modules/semver/semver.js ***!
  \***************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_exports__, module */
/*! CommonJS bailout: module.exports is used directly at 1:10-24 */
/*! CommonJS bailout: exports is used directly at 1:0-7 */
/*! CommonJS bailout: exports.compare(...) prevents optimization as exports is passed as call context as 630:11-26 */
/*! CommonJS bailout: exports.rcompare(...) prevents optimization as exports is passed as call context as 637:11-27 */
/***/ ((module, exports) => {

exports = module.exports = SemVer

var debug
/* istanbul ignore next */
if (typeof process === 'object' &&
    process.env &&
    process.env.NODE_DEBUG &&
    /\bsemver\b/i.test(process.env.NODE_DEBUG)) {
  debug = function () {
    var args = Array.prototype.slice.call(arguments, 0)
    args.unshift('SEMVER')
    console.log.apply(console, args)
  }
} else {
  debug = function () {}
}

// Note: this is the semver.org version of the spec that it implements
// Not necessarily the package version of this code.
exports.SEMVER_SPEC_VERSION = '2.0.0'

var MAX_LENGTH = 256
var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||
  /* istanbul ignore next */ 9007199254740991

// Max safe segment length for coercion.
var MAX_SAFE_COMPONENT_LENGTH = 16

// The actual regexps go on exports.re
var re = exports.re = []
var src = exports.src = []
var R = 0

// The following Regular Expressions can be used for tokenizing,
// validating, and parsing SemVer version strings.

// ## Numeric Identifier
// A single `0`, or a non-zero digit followed by zero or more digits.

var NUMERICIDENTIFIER = R++
src[NUMERICIDENTIFIER] = '0|[1-9]\\d*'
var NUMERICIDENTIFIERLOOSE = R++
src[NUMERICIDENTIFIERLOOSE] = '[0-9]+'

// ## Non-numeric Identifier
// Zero or more digits, followed by a letter or hyphen, and then zero or
// more letters, digits, or hyphens.

var NONNUMERICIDENTIFIER = R++
src[NONNUMERICIDENTIFIER] = '\\d*[a-zA-Z-][a-zA-Z0-9-]*'

// ## Main Version
// Three dot-separated numeric identifiers.

var MAINVERSION = R++
src[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\.' +
                   '(' + src[NUMERICIDENTIFIER] + ')\\.' +
                   '(' + src[NUMERICIDENTIFIER] + ')'

var MAINVERSIONLOOSE = R++
src[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\.' +
                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\.' +
                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')'

// ## Pre-release Version Identifier
// A numeric identifier, or a non-numeric identifier.

var PRERELEASEIDENTIFIER = R++
src[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +
                            '|' + src[NONNUMERICIDENTIFIER] + ')'

var PRERELEASEIDENTIFIERLOOSE = R++
src[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +
                                 '|' + src[NONNUMERICIDENTIFIER] + ')'

// ## Pre-release Version
// Hyphen, followed by one or more dot-separated pre-release version
// identifiers.

var PRERELEASE = R++
src[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +
                  '(?:\\.' + src[PRERELEASEIDENTIFIER] + ')*))'

var PRERELEASELOOSE = R++
src[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +
                       '(?:\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))'

// ## Build Metadata Identifier
// Any combination of digits, letters, or hyphens.

var BUILDIDENTIFIER = R++
src[BUILDIDENTIFIER] = '[0-9A-Za-z-]+'

// ## Build Metadata
// Plus sign, followed by one or more period-separated build metadata
// identifiers.

var BUILD = R++
src[BUILD] = '(?:\\+(' + src[BUILDIDENTIFIER] +
             '(?:\\.' + src[BUILDIDENTIFIER] + ')*))'

// ## Full Version String
// A main version, followed optionally by a pre-release version and
// build metadata.

// Note that the only major, minor, patch, and pre-release sections of
// the version string are capturing groups.  The build metadata is not a
// capturing group, because it should not ever be used in version
// comparison.

var FULL = R++
var FULLPLAIN = 'v?' + src[MAINVERSION] +
                src[PRERELEASE] + '?' +
                src[BUILD] + '?'

src[FULL] = '^' + FULLPLAIN + '$'

// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.
// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty
// common in the npm registry.
var LOOSEPLAIN = '[v=\\s]*' + src[MAINVERSIONLOOSE] +
                 src[PRERELEASELOOSE] + '?' +
                 src[BUILD] + '?'

var LOOSE = R++
src[LOOSE] = '^' + LOOSEPLAIN + '$'

var GTLT = R++
src[GTLT] = '((?:<|>)?=?)'

// Something like "2.*" or "1.2.x".
// Note that "x.x" is a valid xRange identifer, meaning "any version"
// Only the first item is strictly required.
var XRANGEIDENTIFIERLOOSE = R++
src[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\*'
var XRANGEIDENTIFIER = R++
src[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\*'

var XRANGEPLAIN = R++
src[XRANGEPLAIN] = '[v=\\s]*(' + src[XRANGEIDENTIFIER] + ')' +
                   '(?:\\.(' + src[XRANGEIDENTIFIER] + ')' +
                   '(?:\\.(' + src[XRANGEIDENTIFIER] + ')' +
                   '(?:' + src[PRERELEASE] + ')?' +
                   src[BUILD] + '?' +
                   ')?)?'

var XRANGEPLAINLOOSE = R++
src[XRANGEPLAINLOOSE] = '[v=\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +
                        '(?:\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +
                        '(?:\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +
                        '(?:' + src[PRERELEASELOOSE] + ')?' +
                        src[BUILD] + '?' +
                        ')?)?'

var XRANGE = R++
src[XRANGE] = '^' + src[GTLT] + '\\s*' + src[XRANGEPLAIN] + '$'
var XRANGELOOSE = R++
src[XRANGELOOSE] = '^' + src[GTLT] + '\\s*' + src[XRANGEPLAINLOOSE] + '$'

// Coercion.
// Extract anything that could conceivably be a part of a valid semver
var COERCE = R++
src[COERCE] = '(?:^|[^\\d])' +
              '(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +
              '(?:\\.(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +
              '(?:\\.(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +
              '(?:$|[^\\d])'

// Tilde ranges.
// Meaning is "reasonably at or greater than"
var LONETILDE = R++
src[LONETILDE] = '(?:~>?)'

var TILDETRIM = R++
src[TILDETRIM] = '(\\s*)' + src[LONETILDE] + '\\s+'
re[TILDETRIM] = new RegExp(src[TILDETRIM], 'g')
var tildeTrimReplace = '$1~'

var TILDE = R++
src[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$'
var TILDELOOSE = R++
src[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$'

// Caret ranges.
// Meaning is "at least and backwards compatible with"
var LONECARET = R++
src[LONECARET] = '(?:\\^)'

var CARETTRIM = R++
src[CARETTRIM] = '(\\s*)' + src[LONECARET] + '\\s+'
re[CARETTRIM] = new RegExp(src[CARETTRIM], 'g')
var caretTrimReplace = '$1^'

var CARET = R++
src[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$'
var CARETLOOSE = R++
src[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$'

// A simple gt/lt/eq thing, or just "" to indicate "any version"
var COMPARATORLOOSE = R++
src[COMPARATORLOOSE] = '^' + src[GTLT] + '\\s*(' + LOOSEPLAIN + ')$|^$'
var COMPARATOR = R++
src[COMPARATOR] = '^' + src[GTLT] + '\\s*(' + FULLPLAIN + ')$|^$'

// An expression to strip any whitespace between the gtlt and the thing
// it modifies, so that `> 1.2.3` ==> `>1.2.3`
var COMPARATORTRIM = R++
src[COMPARATORTRIM] = '(\\s*)' + src[GTLT] +
                      '\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')'

// this one has to use the /g flag
re[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g')
var comparatorTrimReplace = '$1$2$3'

// Something like `1.2.3 - 1.2.4`
// Note that these all use the loose form, because they'll be
// checked against either the strict or loose comparator form
// later.
var HYPHENRANGE = R++
src[HYPHENRANGE] = '^\\s*(' + src[XRANGEPLAIN] + ')' +
                   '\\s+-\\s+' +
                   '(' + src[XRANGEPLAIN] + ')' +
                   '\\s*$'

var HYPHENRANGELOOSE = R++
src[HYPHENRANGELOOSE] = '^\\s*(' + src[XRANGEPLAINLOOSE] + ')' +
                        '\\s+-\\s+' +
                        '(' + src[XRANGEPLAINLOOSE] + ')' +
                        '\\s*$'

// Star ranges basically just allow anything at all.
var STAR = R++
src[STAR] = '(<|>)?=?\\s*\\*'

// Compile to actual regexp objects.
// All are flag-free, unless they were created above with a flag.
for (var i = 0; i < R; i++) {
  debug(i, src[i])
  if (!re[i]) {
    re[i] = new RegExp(src[i])
  }
}

exports.parse = parse
function parse (version, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  if (version instanceof SemVer) {
    return version
  }

  if (typeof version !== 'string') {
    return null
  }

  if (version.length > MAX_LENGTH) {
    return null
  }

  var r = options.loose ? re[LOOSE] : re[FULL]
  if (!r.test(version)) {
    return null
  }

  try {
    return new SemVer(version, options)
  } catch (er) {
    return null
  }
}

exports.valid = valid
function valid (version, options) {
  var v = parse(version, options)
  return v ? v.version : null
}

exports.clean = clean
function clean (version, options) {
  var s = parse(version.trim().replace(/^[=v]+/, ''), options)
  return s ? s.version : null
}

exports.SemVer = SemVer

function SemVer (version, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }
  if (version instanceof SemVer) {
    if (version.loose === options.loose) {
      return version
    } else {
      version = version.version
    }
  } else if (typeof version !== 'string') {
    throw new TypeError('Invalid Version: ' + version)
  }

  if (version.length > MAX_LENGTH) {
    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')
  }

  if (!(this instanceof SemVer)) {
    return new SemVer(version, options)
  }

  debug('SemVer', version, options)
  this.options = options
  this.loose = !!options.loose

  var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL])

  if (!m) {
    throw new TypeError('Invalid Version: ' + version)
  }

  this.raw = version

  // these are actually numbers
  this.major = +m[1]
  this.minor = +m[2]
  this.patch = +m[3]

  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {
    throw new TypeError('Invalid major version')
  }

  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {
    throw new TypeError('Invalid minor version')
  }

  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {
    throw new TypeError('Invalid patch version')
  }

  // numberify any prerelease numeric ids
  if (!m[4]) {
    this.prerelease = []
  } else {
    this.prerelease = m[4].split('.').map(function (id) {
      if (/^[0-9]+$/.test(id)) {
        var num = +id
        if (num >= 0 && num < MAX_SAFE_INTEGER) {
          return num
        }
      }
      return id
    })
  }

  this.build = m[5] ? m[5].split('.') : []
  this.format()
}

SemVer.prototype.format = function () {
  this.version = this.major + '.' + this.minor + '.' + this.patch
  if (this.prerelease.length) {
    this.version += '-' + this.prerelease.join('.')
  }
  return this.version
}

SemVer.prototype.toString = function () {
  return this.version
}

SemVer.prototype.compare = function (other) {
  debug('SemVer.compare', this.version, this.options, other)
  if (!(other instanceof SemVer)) {
    other = new SemVer(other, this.options)
  }

  return this.compareMain(other) || this.comparePre(other)
}

SemVer.prototype.compareMain = function (other) {
  if (!(other instanceof SemVer)) {
    other = new SemVer(other, this.options)
  }

  return compareIdentifiers(this.major, other.major) ||
         compareIdentifiers(this.minor, other.minor) ||
         compareIdentifiers(this.patch, other.patch)
}

SemVer.prototype.comparePre = function (other) {
  if (!(other instanceof SemVer)) {
    other = new SemVer(other, this.options)
  }

  // NOT having a prerelease is > having one
  if (this.prerelease.length && !other.prerelease.length) {
    return -1
  } else if (!this.prerelease.length && other.prerelease.length) {
    return 1
  } else if (!this.prerelease.length && !other.prerelease.length) {
    return 0
  }

  var i = 0
  do {
    var a = this.prerelease[i]
    var b = other.prerelease[i]
    debug('prerelease compare', i, a, b)
    if (a === undefined && b === undefined) {
      return 0
    } else if (b === undefined) {
      return 1
    } else if (a === undefined) {
      return -1
    } else if (a === b) {
      continue
    } else {
      return compareIdentifiers(a, b)
    }
  } while (++i)
}

// preminor will bump the version up to the next minor release, and immediately
// down to pre-release. premajor and prepatch work the same way.
SemVer.prototype.inc = function (release, identifier) {
  switch (release) {
    case 'premajor':
      this.prerelease.length = 0
      this.patch = 0
      this.minor = 0
      this.major++
      this.inc('pre', identifier)
      break
    case 'preminor':
      this.prerelease.length = 0
      this.patch = 0
      this.minor++
      this.inc('pre', identifier)
      break
    case 'prepatch':
      // If this is already a prerelease, it will bump to the next version
      // drop any prereleases that might already exist, since they are not
      // relevant at this point.
      this.prerelease.length = 0
      this.inc('patch', identifier)
      this.inc('pre', identifier)
      break
    // If the input is a non-prerelease version, this acts the same as
    // prepatch.
    case 'prerelease':
      if (this.prerelease.length === 0) {
        this.inc('patch', identifier)
      }
      this.inc('pre', identifier)
      break

    case 'major':
      // If this is a pre-major version, bump up to the same major version.
      // Otherwise increment major.
      // 1.0.0-5 bumps to 1.0.0
      // 1.1.0 bumps to 2.0.0
      if (this.minor !== 0 ||
          this.patch !== 0 ||
          this.prerelease.length === 0) {
        this.major++
      }
      this.minor = 0
      this.patch = 0
      this.prerelease = []
      break
    case 'minor':
      // If this is a pre-minor version, bump up to the same minor version.
      // Otherwise increment minor.
      // 1.2.0-5 bumps to 1.2.0
      // 1.2.1 bumps to 1.3.0
      if (this.patch !== 0 || this.prerelease.length === 0) {
        this.minor++
      }
      this.patch = 0
      this.prerelease = []
      break
    case 'patch':
      // If this is not a pre-release version, it will increment the patch.
      // If it is a pre-release it will bump up to the same patch version.
      // 1.2.0-5 patches to 1.2.0
      // 1.2.0 patches to 1.2.1
      if (this.prerelease.length === 0) {
        this.patch++
      }
      this.prerelease = []
      break
    // This probably shouldn't be used publicly.
    // 1.0.0 "pre" would become 1.0.0-0 which is the wrong direction.
    case 'pre':
      if (this.prerelease.length === 0) {
        this.prerelease = [0]
      } else {
        var i = this.prerelease.length
        while (--i >= 0) {
          if (typeof this.prerelease[i] === 'number') {
            this.prerelease[i]++
            i = -2
          }
        }
        if (i === -1) {
          // didn't increment anything
          this.prerelease.push(0)
        }
      }
      if (identifier) {
        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,
        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0
        if (this.prerelease[0] === identifier) {
          if (isNaN(this.prerelease[1])) {
            this.prerelease = [identifier, 0]
          }
        } else {
          this.prerelease = [identifier, 0]
        }
      }
      break

    default:
      throw new Error('invalid increment argument: ' + release)
  }
  this.format()
  this.raw = this.version
  return this
}

exports.inc = inc
function inc (version, release, loose, identifier) {
  if (typeof (loose) === 'string') {
    identifier = loose
    loose = undefined
  }

  try {
    return new SemVer(version, loose).inc(release, identifier).version
  } catch (er) {
    return null
  }
}

exports.diff = diff
function diff (version1, version2) {
  if (eq(version1, version2)) {
    return null
  } else {
    var v1 = parse(version1)
    var v2 = parse(version2)
    var prefix = ''
    if (v1.prerelease.length || v2.prerelease.length) {
      prefix = 'pre'
      var defaultResult = 'prerelease'
    }
    for (var key in v1) {
      if (key === 'major' || key === 'minor' || key === 'patch') {
        if (v1[key] !== v2[key]) {
          return prefix + key
        }
      }
    }
    return defaultResult // may be undefined
  }
}

exports.compareIdentifiers = compareIdentifiers

var numeric = /^[0-9]+$/
function compareIdentifiers (a, b) {
  var anum = numeric.test(a)
  var bnum = numeric.test(b)

  if (anum && bnum) {
    a = +a
    b = +b
  }

  return a === b ? 0
    : (anum && !bnum) ? -1
    : (bnum && !anum) ? 1
    : a < b ? -1
    : 1
}

exports.rcompareIdentifiers = rcompareIdentifiers
function rcompareIdentifiers (a, b) {
  return compareIdentifiers(b, a)
}

exports.major = major
function major (a, loose) {
  return new SemVer(a, loose).major
}

exports.minor = minor
function minor (a, loose) {
  return new SemVer(a, loose).minor
}

exports.patch = patch
function patch (a, loose) {
  return new SemVer(a, loose).patch
}

exports.compare = compare
function compare (a, b, loose) {
  return new SemVer(a, loose).compare(new SemVer(b, loose))
}

exports.compareLoose = compareLoose
function compareLoose (a, b) {
  return compare(a, b, true)
}

exports.rcompare = rcompare
function rcompare (a, b, loose) {
  return compare(b, a, loose)
}

exports.sort = sort
function sort (list, loose) {
  return list.sort(function (a, b) {
    return exports.compare(a, b, loose)
  })
}

exports.rsort = rsort
function rsort (list, loose) {
  return list.sort(function (a, b) {
    return exports.rcompare(a, b, loose)
  })
}

exports.gt = gt
function gt (a, b, loose) {
  return compare(a, b, loose) > 0
}

exports.lt = lt
function lt (a, b, loose) {
  return compare(a, b, loose) < 0
}

exports.eq = eq
function eq (a, b, loose) {
  return compare(a, b, loose) === 0
}

exports.neq = neq
function neq (a, b, loose) {
  return compare(a, b, loose) !== 0
}

exports.gte = gte
function gte (a, b, loose) {
  return compare(a, b, loose) >= 0
}

exports.lte = lte
function lte (a, b, loose) {
  return compare(a, b, loose) <= 0
}

exports.cmp = cmp
function cmp (a, op, b, loose) {
  switch (op) {
    case '===':
      if (typeof a === 'object')
        a = a.version
      if (typeof b === 'object')
        b = b.version
      return a === b

    case '!==':
      if (typeof a === 'object')
        a = a.version
      if (typeof b === 'object')
        b = b.version
      return a !== b

    case '':
    case '=':
    case '==':
      return eq(a, b, loose)

    case '!=':
      return neq(a, b, loose)

    case '>':
      return gt(a, b, loose)

    case '>=':
      return gte(a, b, loose)

    case '<':
      return lt(a, b, loose)

    case '<=':
      return lte(a, b, loose)

    default:
      throw new TypeError('Invalid operator: ' + op)
  }
}

exports.Comparator = Comparator
function Comparator (comp, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  if (comp instanceof Comparator) {
    if (comp.loose === !!options.loose) {
      return comp
    } else {
      comp = comp.value
    }
  }

  if (!(this instanceof Comparator)) {
    return new Comparator(comp, options)
  }

  debug('comparator', comp, options)
  this.options = options
  this.loose = !!options.loose
  this.parse(comp)

  if (this.semver === ANY) {
    this.value = ''
  } else {
    this.value = this.operator + this.semver.version
  }

  debug('comp', this)
}

var ANY = {}
Comparator.prototype.parse = function (comp) {
  var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR]
  var m = comp.match(r)

  if (!m) {
    throw new TypeError('Invalid comparator: ' + comp)
  }

  this.operator = m[1]
  if (this.operator === '=') {
    this.operator = ''
  }

  // if it literally is just '>' or '' then allow anything.
  if (!m[2]) {
    this.semver = ANY
  } else {
    this.semver = new SemVer(m[2], this.options.loose)
  }
}

Comparator.prototype.toString = function () {
  return this.value
}

Comparator.prototype.test = function (version) {
  debug('Comparator.test', version, this.options.loose)

  if (this.semver === ANY) {
    return true
  }

  if (typeof version === 'string') {
    version = new SemVer(version, this.options)
  }

  return cmp(version, this.operator, this.semver, this.options)
}

Comparator.prototype.intersects = function (comp, options) {
  if (!(comp instanceof Comparator)) {
    throw new TypeError('a Comparator is required')
  }

  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  var rangeTmp

  if (this.operator === '') {
    rangeTmp = new Range(comp.value, options)
    return satisfies(this.value, rangeTmp, options)
  } else if (comp.operator === '') {
    rangeTmp = new Range(this.value, options)
    return satisfies(comp.semver, rangeTmp, options)
  }

  var sameDirectionIncreasing =
    (this.operator === '>=' || this.operator === '>') &&
    (comp.operator === '>=' || comp.operator === '>')
  var sameDirectionDecreasing =
    (this.operator === '<=' || this.operator === '<') &&
    (comp.operator === '<=' || comp.operator === '<')
  var sameSemVer = this.semver.version === comp.semver.version
  var differentDirectionsInclusive =
    (this.operator === '>=' || this.operator === '<=') &&
    (comp.operator === '>=' || comp.operator === '<=')
  var oppositeDirectionsLessThan =
    cmp(this.semver, '<', comp.semver, options) &&
    ((this.operator === '>=' || this.operator === '>') &&
    (comp.operator === '<=' || comp.operator === '<'))
  var oppositeDirectionsGreaterThan =
    cmp(this.semver, '>', comp.semver, options) &&
    ((this.operator === '<=' || this.operator === '<') &&
    (comp.operator === '>=' || comp.operator === '>'))

  return sameDirectionIncreasing || sameDirectionDecreasing ||
    (sameSemVer && differentDirectionsInclusive) ||
    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan
}

exports.Range = Range
function Range (range, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  if (range instanceof Range) {
    if (range.loose === !!options.loose &&
        range.includePrerelease === !!options.includePrerelease) {
      return range
    } else {
      return new Range(range.raw, options)
    }
  }

  if (range instanceof Comparator) {
    return new Range(range.value, options)
  }

  if (!(this instanceof Range)) {
    return new Range(range, options)
  }

  this.options = options
  this.loose = !!options.loose
  this.includePrerelease = !!options.includePrerelease

  // First, split based on boolean or ||
  this.raw = range
  this.set = range.split(/\s*\|\|\s*/).map(function (range) {
    return this.parseRange(range.trim())
  }, this).filter(function (c) {
    // throw out any that are not relevant for whatever reason
    return c.length
  })

  if (!this.set.length) {
    throw new TypeError('Invalid SemVer Range: ' + range)
  }

  this.format()
}

Range.prototype.format = function () {
  this.range = this.set.map(function (comps) {
    return comps.join(' ').trim()
  }).join('||').trim()
  return this.range
}

Range.prototype.toString = function () {
  return this.range
}

Range.prototype.parseRange = function (range) {
  var loose = this.options.loose
  range = range.trim()
  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`
  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE]
  range = range.replace(hr, hyphenReplace)
  debug('hyphen replace', range)
  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`
  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace)
  debug('comparator trim', range, re[COMPARATORTRIM])

  // `~ 1.2.3` => `~1.2.3`
  range = range.replace(re[TILDETRIM], tildeTrimReplace)

  // `^ 1.2.3` => `^1.2.3`
  range = range.replace(re[CARETTRIM], caretTrimReplace)

  // normalize spaces
  range = range.split(/\s+/).join(' ')

  // At this point, the range is completely trimmed and
  // ready to be split into comparators.

  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR]
  var set = range.split(' ').map(function (comp) {
    return parseComparator(comp, this.options)
  }, this).join(' ').split(/\s+/)
  if (this.options.loose) {
    // in loose mode, throw out any that are not valid comparators
    set = set.filter(function (comp) {
      return !!comp.match(compRe)
    })
  }
  set = set.map(function (comp) {
    return new Comparator(comp, this.options)
  }, this)

  return set
}

Range.prototype.intersects = function (range, options) {
  if (!(range instanceof Range)) {
    throw new TypeError('a Range is required')
  }

  return this.set.some(function (thisComparators) {
    return thisComparators.every(function (thisComparator) {
      return range.set.some(function (rangeComparators) {
        return rangeComparators.every(function (rangeComparator) {
          return thisComparator.intersects(rangeComparator, options)
        })
      })
    })
  })
}

// Mostly just for testing and legacy API reasons
exports.toComparators = toComparators
function toComparators (range, options) {
  return new Range(range, options).set.map(function (comp) {
    return comp.map(function (c) {
      return c.value
    }).join(' ').trim().split(' ')
  })
}

// comprised of xranges, tildes, stars, and gtlt's at this point.
// already replaced the hyphen ranges
// turn into a set of JUST comparators.
function parseComparator (comp, options) {
  debug('comp', comp, options)
  comp = replaceCarets(comp, options)
  debug('caret', comp)
  comp = replaceTildes(comp, options)
  debug('tildes', comp)
  comp = replaceXRanges(comp, options)
  debug('xrange', comp)
  comp = replaceStars(comp, options)
  debug('stars', comp)
  return comp
}

function isX (id) {
  return !id || id.toLowerCase() === 'x' || id === '*'
}

// ~, ~> --> * (any, kinda silly)
// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0
// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0
// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0
// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0
// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0
function replaceTildes (comp, options) {
  return comp.trim().split(/\s+/).map(function (comp) {
    return replaceTilde(comp, options)
  }).join(' ')
}

function replaceTilde (comp, options) {
  var r = options.loose ? re[TILDELOOSE] : re[TILDE]
  return comp.replace(r, function (_, M, m, p, pr) {
    debug('tilde', comp, _, M, m, p, pr)
    var ret

    if (isX(M)) {
      ret = ''
    } else if (isX(m)) {
      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'
    } else if (isX(p)) {
      // ~1.2 == >=1.2.0 <1.3.0
      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'
    } else if (pr) {
      debug('replaceTilde pr', pr)
      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
            ' <' + M + '.' + (+m + 1) + '.0'
    } else {
      // ~1.2.3 == >=1.2.3 <1.3.0
      ret = '>=' + M + '.' + m + '.' + p +
            ' <' + M + '.' + (+m + 1) + '.0'
    }

    debug('tilde return', ret)
    return ret
  })
}

// ^ --> * (any, kinda silly)
// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0
// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0
// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0
// ^1.2.3 --> >=1.2.3 <2.0.0
// ^1.2.0 --> >=1.2.0 <2.0.0
function replaceCarets (comp, options) {
  return comp.trim().split(/\s+/).map(function (comp) {
    return replaceCaret(comp, options)
  }).join(' ')
}

function replaceCaret (comp, options) {
  debug('caret', comp, options)
  var r = options.loose ? re[CARETLOOSE] : re[CARET]
  return comp.replace(r, function (_, M, m, p, pr) {
    debug('caret', comp, _, M, m, p, pr)
    var ret

    if (isX(M)) {
      ret = ''
    } else if (isX(m)) {
      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'
    } else if (isX(p)) {
      if (M === '0') {
        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'
      } else {
        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'
      }
    } else if (pr) {
      debug('replaceCaret pr', pr)
      if (M === '0') {
        if (m === '0') {
          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
                ' <' + M + '.' + m + '.' + (+p + 1)
        } else {
          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
                ' <' + M + '.' + (+m + 1) + '.0'
        }
      } else {
        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
              ' <' + (+M + 1) + '.0.0'
      }
    } else {
      debug('no pr')
      if (M === '0') {
        if (m === '0') {
          ret = '>=' + M + '.' + m + '.' + p +
                ' <' + M + '.' + m + '.' + (+p + 1)
        } else {
          ret = '>=' + M + '.' + m + '.' + p +
                ' <' + M + '.' + (+m + 1) + '.0'
        }
      } else {
        ret = '>=' + M + '.' + m + '.' + p +
              ' <' + (+M + 1) + '.0.0'
      }
    }

    debug('caret return', ret)
    return ret
  })
}

function replaceXRanges (comp, options) {
  debug('replaceXRanges', comp, options)
  return comp.split(/\s+/).map(function (comp) {
    return replaceXRange(comp, options)
  }).join(' ')
}

function replaceXRange (comp, options) {
  comp = comp.trim()
  var r = options.loose ? re[XRANGELOOSE] : re[XRANGE]
  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {
    debug('xRange', comp, ret, gtlt, M, m, p, pr)
    var xM = isX(M)
    var xm = xM || isX(m)
    var xp = xm || isX(p)
    var anyX = xp

    if (gtlt === '=' && anyX) {
      gtlt = ''
    }

    if (xM) {
      if (gtlt === '>' || gtlt === '<') {
        // nothing is allowed
        ret = '<0.0.0'
      } else {
        // nothing is forbidden
        ret = '*'
      }
    } else if (gtlt && anyX) {
      // we know patch is an x, because we have any x at all.
      // replace X with 0
      if (xm) {
        m = 0
      }
      p = 0

      if (gtlt === '>') {
        // >1 => >=2.0.0
        // >1.2 => >=1.3.0
        // >1.2.3 => >= 1.2.4
        gtlt = '>='
        if (xm) {
          M = +M + 1
          m = 0
          p = 0
        } else {
          m = +m + 1
          p = 0
        }
      } else if (gtlt === '<=') {
        // <=0.7.x is actually <0.8.0, since any 0.7.x should
        // pass.  Similarly, <=7.x is actually <8.0.0, etc.
        gtlt = '<'
        if (xm) {
          M = +M + 1
        } else {
          m = +m + 1
        }
      }

      ret = gtlt + M + '.' + m + '.' + p
    } else if (xm) {
      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'
    } else if (xp) {
      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'
    }

    debug('xRange return', ret)

    return ret
  })
}

// Because * is AND-ed with everything else in the comparator,
// and '' means "any version", just remove the *s entirely.
function replaceStars (comp, options) {
  debug('replaceStars', comp, options)
  // Looseness is ignored here.  star is always as loose as it gets!
  return comp.trim().replace(re[STAR], '')
}

// This function is passed to string.replace(re[HYPHENRANGE])
// M, m, patch, prerelease, build
// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5
// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do
// 1.2 - 3.4 => >=1.2.0 <3.5.0
function hyphenReplace ($0,
  from, fM, fm, fp, fpr, fb,
  to, tM, tm, tp, tpr, tb) {
  if (isX(fM)) {
    from = ''
  } else if (isX(fm)) {
    from = '>=' + fM + '.0.0'
  } else if (isX(fp)) {
    from = '>=' + fM + '.' + fm + '.0'
  } else {
    from = '>=' + from
  }

  if (isX(tM)) {
    to = ''
  } else if (isX(tm)) {
    to = '<' + (+tM + 1) + '.0.0'
  } else if (isX(tp)) {
    to = '<' + tM + '.' + (+tm + 1) + '.0'
  } else if (tpr) {
    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr
  } else {
    to = '<=' + to
  }

  return (from + ' ' + to).trim()
}

// if ANY of the sets match ALL of its comparators, then pass
Range.prototype.test = function (version) {
  if (!version) {
    return false
  }

  if (typeof version === 'string') {
    version = new SemVer(version, this.options)
  }

  for (var i = 0; i < this.set.length; i++) {
    if (testSet(this.set[i], version, this.options)) {
      return true
    }
  }
  return false
}

function testSet (set, version, options) {
  for (var i = 0; i < set.length; i++) {
    if (!set[i].test(version)) {
      return false
    }
  }

  if (version.prerelease.length && !options.includePrerelease) {
    // Find the set of versions that are allowed to have prereleases
    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0
    // That should allow `1.2.3-pr.2` to pass.
    // However, `1.2.4-alpha.notready` should NOT be allowed,
    // even though it's within the range set by the comparators.
    for (i = 0; i < set.length; i++) {
      debug(set[i].semver)
      if (set[i].semver === ANY) {
        continue
      }

      if (set[i].semver.prerelease.length > 0) {
        var allowed = set[i].semver
        if (allowed.major === version.major &&
            allowed.minor === version.minor &&
            allowed.patch === version.patch) {
          return true
        }
      }
    }

    // Version has a -pre, but it's not one of the ones we like.
    return false
  }

  return true
}

exports.satisfies = satisfies
function satisfies (version, range, options) {
  try {
    range = new Range(range, options)
  } catch (er) {
    return false
  }
  return range.test(version)
}

exports.maxSatisfying = maxSatisfying
function maxSatisfying (versions, range, options) {
  var max = null
  var maxSV = null
  try {
    var rangeObj = new Range(range, options)
  } catch (er) {
    return null
  }
  versions.forEach(function (v) {
    if (rangeObj.test(v)) {
      // satisfies(v, range, options)
      if (!max || maxSV.compare(v) === -1) {
        // compare(max, v, true)
        max = v
        maxSV = new SemVer(max, options)
      }
    }
  })
  return max
}

exports.minSatisfying = minSatisfying
function minSatisfying (versions, range, options) {
  var min = null
  var minSV = null
  try {
    var rangeObj = new Range(range, options)
  } catch (er) {
    return null
  }
  versions.forEach(function (v) {
    if (rangeObj.test(v)) {
      // satisfies(v, range, options)
      if (!min || minSV.compare(v) === 1) {
        // compare(min, v, true)
        min = v
        minSV = new SemVer(min, options)
      }
    }
  })
  return min
}

exports.minVersion = minVersion
function minVersion (range, loose) {
  range = new Range(range, loose)

  var minver = new SemVer('0.0.0')
  if (range.test(minver)) {
    return minver
  }

  minver = new SemVer('0.0.0-0')
  if (range.test(minver)) {
    return minver
  }

  minver = null
  for (var i = 0; i < range.set.length; ++i) {
    var comparators = range.set[i]

    comparators.forEach(function (comparator) {
      // Clone to avoid manipulating the comparator's semver object.
      var compver = new SemVer(comparator.semver.version)
      switch (comparator.operator) {
        case '>':
          if (compver.prerelease.length === 0) {
            compver.patch++
          } else {
            compver.prerelease.push(0)
          }
          compver.raw = compver.format()
          /* fallthrough */
        case '':
        case '>=':
          if (!minver || gt(minver, compver)) {
            minver = compver
          }
          break
        case '<':
        case '<=':
          /* Ignore maximum versions */
          break
        /* istanbul ignore next */
        default:
          throw new Error('Unexpected operation: ' + comparator.operator)
      }
    })
  }

  if (minver && range.test(minver)) {
    return minver
  }

  return null
}

exports.validRange = validRange
function validRange (range, options) {
  try {
    // Return '*' instead of '' so that truthiness works.
    // This will throw if it's invalid anyway
    return new Range(range, options).range || '*'
  } catch (er) {
    return null
  }
}

// Determine if version is less than all the versions possible in the range
exports.ltr = ltr
function ltr (version, range, options) {
  return outside(version, range, '<', options)
}

// Determine if version is greater than all the versions possible in the range.
exports.gtr = gtr
function gtr (version, range, options) {
  return outside(version, range, '>', options)
}

exports.outside = outside
function outside (version, range, hilo, options) {
  version = new SemVer(version, options)
  range = new Range(range, options)

  var gtfn, ltefn, ltfn, comp, ecomp
  switch (hilo) {
    case '>':
      gtfn = gt
      ltefn = lte
      ltfn = lt
      comp = '>'
      ecomp = '>='
      break
    case '<':
      gtfn = lt
      ltefn = gte
      ltfn = gt
      comp = '<'
      ecomp = '<='
      break
    default:
      throw new TypeError('Must provide a hilo val of "<" or ">"')
  }

  // If it satisifes the range it is not outside
  if (satisfies(version, range, options)) {
    return false
  }

  // From now on, variable terms are as if we're in "gtr" mode.
  // but note that everything is flipped for the "ltr" function.

  for (var i = 0; i < range.set.length; ++i) {
    var comparators = range.set[i]

    var high = null
    var low = null

    comparators.forEach(function (comparator) {
      if (comparator.semver === ANY) {
        comparator = new Comparator('>=0.0.0')
      }
      high = high || comparator
      low = low || comparator
      if (gtfn(comparator.semver, high.semver, options)) {
        high = comparator
      } else if (ltfn(comparator.semver, low.semver, options)) {
        low = comparator
      }
    })

    // If the edge version comparator has a operator then our version
    // isn't outside it
    if (high.operator === comp || high.operator === ecomp) {
      return false
    }

    // If the lowest version comparator has an operator and our version
    // is less than it then it isn't higher than the range
    if ((!low.operator || low.operator === comp) &&
        ltefn(version, low.semver)) {
      return false
    } else if (low.operator === ecomp && ltfn(version, low.semver)) {
      return false
    }
  }
  return true
}

exports.prerelease = prerelease
function prerelease (version, options) {
  var parsed = parse(version, options)
  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null
}

exports.intersects = intersects
function intersects (r1, r2, options) {
  r1 = new Range(r1, options)
  r2 = new Range(r2, options)
  return r1.intersects(r2)
}

exports.coerce = coerce
function coerce (version) {
  if (version instanceof SemVer) {
    return version
  }

  if (typeof version !== 'string') {
    return null
  }

  var match = version.match(re[COERCE])

  if (match == null) {
    return null
  }

  return parse(match[1] +
    '.' + (match[2] || '0') +
    '.' + (match[3] || '0'))
}


/***/ }),

/***/ "./node_modules/set-blocking/index.js":
/*!********************************************!*\
  !*** ./node_modules/set-blocking/index.js ***!
  \********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 1:0-14 */
/***/ ((module) => {

module.exports = function (blocking) {
  [process.stdout, process.stderr].forEach(function (stream) {
    if (stream._handle && stream.isTTY && typeof stream._handle.setBlocking === 'function') {
      stream._handle.setBlocking(blocking)
    }
  })
}


/***/ }),

/***/ "./node_modules/signal-exit/index.js":
/*!*******************************************!*\
  !*** ./node_modules/signal-exit/index.js ***!
  \*******************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 32:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Note: since nyc uses this module to output coverage, any lines
// that are in the direct sync flow of nyc's outputCoverage are
// ignored, since we can never get coverage for them.
var assert = __webpack_require__(/*! assert */ "assert")
var signals = __webpack_require__(/*! ./signals.js */ "./node_modules/signal-exit/signals.js")
var isWin = /^win/i.test(process.platform)

var EE = __webpack_require__(/*! events */ "events")
/* istanbul ignore if */
if (typeof EE !== 'function') {
  EE = EE.EventEmitter
}

var emitter
if (process.__signal_exit_emitter__) {
  emitter = process.__signal_exit_emitter__
} else {
  emitter = process.__signal_exit_emitter__ = new EE()
  emitter.count = 0
  emitter.emitted = {}
}

// Because this emitter is a global, we have to check to see if a
// previous version of this library failed to enable infinite listeners.
// I know what you're about to say.  But literally everything about
// signal-exit is a compromise with evil.  Get used to it.
if (!emitter.infinite) {
  emitter.setMaxListeners(Infinity)
  emitter.infinite = true
}

module.exports = function (cb, opts) {
  assert.equal(typeof cb, 'function', 'a callback must be provided for exit handler')

  if (loaded === false) {
    load()
  }

  var ev = 'exit'
  if (opts && opts.alwaysLast) {
    ev = 'afterexit'
  }

  var remove = function () {
    emitter.removeListener(ev, cb)
    if (emitter.listeners('exit').length === 0 &&
        emitter.listeners('afterexit').length === 0) {
      unload()
    }
  }
  emitter.on(ev, cb)

  return remove
}

module.exports.unload = unload
function unload () {
  if (!loaded) {
    return
  }
  loaded = false

  signals.forEach(function (sig) {
    try {
      process.removeListener(sig, sigListeners[sig])
    } catch (er) {}
  })
  process.emit = originalProcessEmit
  process.reallyExit = originalProcessReallyExit
  emitter.count -= 1
}

function emit (event, code, signal) {
  if (emitter.emitted[event]) {
    return
  }
  emitter.emitted[event] = true
  emitter.emit(event, code, signal)
}

// { <signal>: <listener fn>, ... }
var sigListeners = {}
signals.forEach(function (sig) {
  sigListeners[sig] = function listener () {
    // If there are no other listeners, an exit is coming!
    // Simplest way: remove us and then re-send the signal.
    // We know that this will kill the process, so we can
    // safely emit now.
    var listeners = process.listeners(sig)
    if (listeners.length === emitter.count) {
      unload()
      emit('exit', null, sig)
      /* istanbul ignore next */
      emit('afterexit', null, sig)
      /* istanbul ignore next */
      if (isWin && sig === 'SIGHUP') {
        // "SIGHUP" throws an `ENOSYS` error on Windows,
        // so use a supported signal instead
        sig = 'SIGINT'
      }
      process.kill(process.pid, sig)
    }
  }
})

module.exports.signals = function () {
  return signals
}

module.exports.load = load

var loaded = false

function load () {
  if (loaded) {
    return
  }
  loaded = true

  // This is the number of onSignalExit's that are in play.
  // It's important so that we can count the correct number of
  // listeners on signals, and don't wait for the other one to
  // handle it instead of us.
  emitter.count += 1

  signals = signals.filter(function (sig) {
    try {
      process.on(sig, sigListeners[sig])
      return true
    } catch (er) {
      return false
    }
  })

  process.emit = processEmit
  process.reallyExit = processReallyExit
}

var originalProcessReallyExit = process.reallyExit
function processReallyExit (code) {
  process.exitCode = code || 0
  emit('exit', process.exitCode, null)
  /* istanbul ignore next */
  emit('afterexit', process.exitCode, null)
  /* istanbul ignore next */
  originalProcessReallyExit.call(process, process.exitCode)
}

var originalProcessEmit = process.emit
function processEmit (ev, arg) {
  if (ev === 'exit') {
    if (arg !== undefined) {
      process.exitCode = arg
    }
    var ret = originalProcessEmit.apply(this, arguments)
    emit('exit', process.exitCode, null)
    /* istanbul ignore next */
    emit('afterexit', process.exitCode, null)
    return ret
  } else {
    return originalProcessEmit.apply(this, arguments)
  }
}


/***/ }),

/***/ "./node_modules/signal-exit/signals.js":
/*!*********************************************!*\
  !*** ./node_modules/signal-exit/signals.js ***!
  \*********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 21:0-14 */
/*! CommonJS bailout: module.exports.push(...) prevents optimization as module.exports is passed as call context as 30:2-21 */
/*! CommonJS bailout: module.exports.push(...) prevents optimization as module.exports is passed as call context as 46:2-21 */
/***/ ((module) => {

// This is not the set of all possible signals.
//
// It IS, however, the set of all signals that trigger
// an exit on either Linux or BSD systems.  Linux is a
// superset of the signal names supported on BSD, and
// the unknown signals just fail to register, so we can
// catch that easily enough.
//
// Don't bother with SIGKILL.  It's uncatchable, which
// means that we can't fire any callbacks anyway.
//
// If a user does happen to register a handler on a non-
// fatal signal like SIGWINCH or something, and then
// exit, it'll end up firing `process.emit('exit')`, so
// the handler will be fired anyway.
//
// SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised
// artificially, inherently leave the process in a
// state from which it is not safe to try and enter JS
// listeners.
module.exports = [
  'SIGABRT',
  'SIGALRM',
  'SIGHUP',
  'SIGINT',
  'SIGTERM'
]

if (process.platform !== 'win32') {
  module.exports.push(
    'SIGVTALRM',
    'SIGXCPU',
    'SIGXFSZ',
    'SIGUSR2',
    'SIGTRAP',
    'SIGSYS',
    'SIGQUIT',
    'SIGIOT'
    // should detect profiler and enable/disable accordingly.
    // see #21
    // 'SIGPROF'
  )
}

if (process.platform === 'linux') {
  module.exports.push(
    'SIGIO',
    'SIGPOLL',
    'SIGPWR',
    'SIGSTKFLT',
    'SIGUNUSED'
  )
}


/***/ }),

/***/ "./node_modules/string_decoder/lib/string_decoder.js":
/*!***********************************************************!*\
  !*** ./node_modules/string_decoder/lib/string_decoder.js ***!
  \***********************************************************/
/*! default exports */
/*! export StringDecoder [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/string_decoder/node_modules/safe-buffer/index.js").Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}

/***/ }),

/***/ "./node_modules/string_decoder/node_modules/safe-buffer/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/string_decoder/node_modules/safe-buffer/index.js ***!
  \***********************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_exports__, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 12:2-16 */
/*! CommonJS bailout: exports is used directly at 15:20-27 */
/***/ ((module, exports, __webpack_require__) => {

/* eslint-disable node/no-deprecated-api */
var buffer = __webpack_require__(/*! buffer */ "buffer")
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}


/***/ }),

/***/ "./src/Db.ts":
/*!*******************!*\
  !*** ./src/Db.ts ***!
  \*******************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, __webpack_exports__, __webpack_require__ */
/*! CommonJS bailout: this is used directly at 2:23-27 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WalletDatabase = void 0;
const dexie_1 = __importDefault(__webpack_require__(/*! dexie */ "./node_modules/dexie/dist/dexie.mjs"));
//
// Declare Database
//
class WalletDatabase extends dexie_1.default {
    constructor(dbName) {
        super(dbName);
        this.version(2).stores({
            wallet: "++id,name,wallet",
        });
        this.wallet = this.table("wallet");
    }
    async addWallet({ name, wallet, }) {
        // Make sure we have something in DB:
        return this.transaction("rw", this.wallet, async () => {
            // Make sure we have something in DB:
            if ((await this.wallet.where({ name: name }).count()) === 0) {
                const id = await this.wallet.add({ name: name, wallet: wallet });
            }
        }).catch((e) => {
            throw e.stack || e;
        });
    }
    async getWallets() {
        let wallets = await this.transaction("r", this.wallet, async () => {
            return await this.wallet.where("id").above(0).toArray();
        });
        return wallets;
    }
}
exports.WalletDatabase = WalletDatabase;


/***/ }),

/***/ "./src/chain.ts":
/*!**********************!*\
  !*** ./src/chain.ts ***!
  \**********************/
/*! flagged exports */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bchParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__ */
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bchParam = void 0;
exports.bchParam = {
    subUnits: 100000000,
};


/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, __webpack_exports__, __webpack_require__ */
/*! CommonJS bailout: this is used directly at 2:23-27 */
/*! CommonJS bailout: this is used directly at 9:20-24 */
/*! CommonJS bailout: exports is used directly at 13:30-37 */
/*! CommonJS bailout: exports is used directly at 14:30-37 */
/*! CommonJS bailout: exports is used directly at 15:38-45 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./ok */ "./src/ok.ts"), exports);
__exportStar(__webpack_require__(/*! ./Db */ "./src/Db.ts"), exports);
__exportStar(__webpack_require__(/*! ./wallet/Wif */ "./src/wallet/Wif.ts"), exports);


/***/ }),

/***/ "./src/ok.ts":
/*!*******************!*\
  !*** ./src/ok.ts ***!
  \*******************/
/*! flagged exports */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ok [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__ */
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ok = void 0;
function ok() {
    return true;
}
exports.ok = ok;


/***/ }),

/***/ "./src/qr/Qr.ts":
/*!**********************!*\
  !*** ./src/qr/Qr.ts ***!
  \**********************/
/*! flagged exports */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! export qrAddress [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.qrAddress = void 0;
var QRCode = __webpack_require__(/*! qrcode-svg */ "./node_modules/qrcode-svg/lib/qrcode.js");
/**
 * qrAddress returns a qr code for a given cashaddress as raw utf-8 svg
 * @param  {string} address
 * @param  {} size=256 The width and height of the returned image
 * @returns Image
 */
function qrAddress(address, size = 256) {
    let svg = new QRCode({
        content: address,
        width: size,
        height: size,
    }).svg();
    let svgB64 = "";
    if (typeof process === "undefined") {
        svgB64 = btoa(svg);
    }
    else {
        const btoa = (str) => {
            return Buffer.from(str).toString("base64");
        };
        svgB64 = btoa(svg);
    }
    return {
        src: `data:image/svg+xml;base64,${svgB64}`,
        title: address,
        alt: "a Bitcoin Cash address QR Code",
    };
}
exports.qrAddress = qrAddress;


/***/ }),

/***/ "./src/transaction/Wif.ts":
/*!********************************!*\
  !*** ./src/transaction/Wif.ts ***!
  \********************************/
/*! flagged exports */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! export buildEncodedTransaction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export buildP2pkhNonHdTransaction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getFeeAmount [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getSuitableUtxos [provided] [no usage info] [missing usage info prevents renaming] */
/*! export prepareInputs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export prepareOutputs [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.buildEncodedTransaction = exports.getFeeAmount = exports.getSuitableUtxos = exports.prepareOutputs = exports.prepareInputs = exports.buildP2pkhNonHdTransaction = void 0;
// Unstable?
const libauth_1 = __webpack_require__(/*! @bitauth/libauth */ "./node_modules/@bitauth/libauth/build/module/index.js");
const sumSendRequestAmounts_1 = __webpack_require__(/*! ../util/sumSendRequestAmounts */ "./src/util/sumSendRequestAmounts.ts");
const sumUtxoValue_1 = __webpack_require__(/*! ../util/sumUtxoValue */ "./src/util/sumUtxoValue.ts");
// Build a transaction for a p2pkh transaction for a non HD wallet
async function buildP2pkhNonHdTransaction(inputs, outputs, signingKey, fee = 0, discardChange = false) {
    if (!signingKey) {
        throw new Error("Missing signing key when building transaction");
    }
    const template = libauth_1.validateAuthenticationTemplate(libauth_1.authenticationTemplateP2pkhNonHd);
    if (typeof template === "string") {
        throw new Error("Transaction template error");
    }
    const compiler = await libauth_1.authenticationTemplateToCompilerBCH(template);
    const inputAmount = await sumUtxoValue_1.sumUtxoValue(inputs);
    const sendAmount = await sumSendRequestAmounts_1.sumSendRequestAmounts(outputs);
    // Get the change locking bytecode
    let changeLockingBytecode = compiler.generateBytecode("lock", {
        keys: { privateKeys: { key: signingKey } },
    });
    if (!changeLockingBytecode.success) {
        throw new Error(changeLockingBytecode.toString());
    }
    try {
        let lockedOutputs = prepareOutputs(outputs);
        if (discardChange !== true) {
            const changeAmount = BigInt(inputAmount) - BigInt(sendAmount) - BigInt(fee);
            lockedOutputs.push({
                lockingBytecode: changeLockingBytecode.bytecode,
                satoshis: libauth_1.bigIntToBinUint64LE(BigInt(changeAmount)),
            });
        }
        let signedInputs = prepareInputs(inputs, compiler, signingKey);
        const result = libauth_1.generateTransaction({
            inputs: signedInputs,
            locktime: 0,
            outputs: [...lockedOutputs],
            version: 2,
        });
        return result;
    }
    catch (error) {
        throw Error(error.toString());
    }
}
exports.buildP2pkhNonHdTransaction = buildP2pkhNonHdTransaction;
function prepareInputs(inputs, compiler, signingKey) {
    let signedInputs = [];
    for (const i of inputs) {
        const utxoTxnValue = i.getValue();
        const utxoIndex = i.getOutpoint().getIndex();
        // slice will create a clone of the array
        let utxoOutpointTransactionHash = i.getOutpoint().getHash_asU8().slice();
        // reverse the cloned copy
        utxoOutpointTransactionHash.reverse();
        if (!utxoOutpointTransactionHash || utxoIndex === undefined) {
            throw new Error("Missing unspent outpoint when building transaction");
        }
        let newInput = {
            outpointIndex: utxoIndex,
            outpointTransactionHash: utxoOutpointTransactionHash,
            sequenceNumber: 0,
            unlockingBytecode: {
                compiler,
                data: {
                    keys: { privateKeys: { key: signingKey } },
                },
                satoshis: libauth_1.bigIntToBinUint64LE(BigInt(utxoTxnValue)),
                script: "unlock",
            },
        };
        signedInputs.push(newInput);
    }
    return signedInputs;
}
exports.prepareInputs = prepareInputs;
function prepareOutputs(outputs) {
    let lockedOutputs = [];
    for (const output of outputs) {
        // TODO move this to transaction/Wif
        let outputLockingBytecode = libauth_1.cashAddressToLockingBytecode(output.cashaddr);
        if (!outputLockingBytecode.hasOwnProperty("bytecode") ||
            !outputLockingBytecode.hasOwnProperty("prefix")) {
            throw new Error(outputLockingBytecode.toString());
        }
        outputLockingBytecode = outputLockingBytecode;
        let lockedOutput = {
            lockingBytecode: outputLockingBytecode.bytecode,
            satoshis: libauth_1.bigIntToBinUint64LE(BigInt(output.amount.inSatoshi())),
        };
        lockedOutputs.push(lockedOutput);
    }
    return lockedOutputs;
}
exports.prepareOutputs = prepareOutputs;
async function getSuitableUtxos(unspentOutputs, amountRequired, bestHeight) {
    let suitableUtxos = [];
    let amountAvailable = 0n;
    for (const u of unspentOutputs) {
        if (u.getIsCoinbase() && bestHeight) {
            let age = bestHeight - u.getBlockHeight();
            if (age > 100) {
                suitableUtxos.push(u);
                amountAvailable += BigInt(u.getValue());
            }
        }
        else {
            suitableUtxos.push(u);
            amountAvailable += BigInt(u.getValue());
        }
        // if amountRequired is not given, assume it is a max spend request, skip this condition
        if (amountRequired && amountAvailable > amountRequired) {
            break;
        }
    }
    // If the amount needed is met, or no amount is given, return
    if (typeof amountRequired === "undefined") {
        return suitableUtxos;
    }
    else if (amountAvailable < amountRequired) {
        throw Error(`Amount required was not met, ${amountRequired} needed, ${amountAvailable} available`);
    }
    else {
        return suitableUtxos;
    }
}
exports.getSuitableUtxos = getSuitableUtxos;
async function getFeeAmount({ utxos, sendRequests, privateKey, }) {
    // build transaction
    if (utxos) {
        // Build the transaction to get the approximate size
        let draftTransaction = await buildEncodedTransaction(utxos, sendRequests, privateKey, 888);
        return draftTransaction.length * 2;
    }
    else {
        throw Error("The available inputs in the wallet cannot satisfy this send request");
    }
}
exports.getFeeAmount = getFeeAmount;
// Build encoded transaction
async function buildEncodedTransaction(fundingUtxos, sendRequests, privateKey, fee = 0, discardChange = false) {
    let txn = await buildP2pkhNonHdTransaction(fundingUtxos, sendRequests, privateKey, fee, discardChange);
    // submit transaction
    if (txn.success) {
        return libauth_1.encodeTransaction(txn.transaction);
    }
    else {
        throw Error("Error building transaction with fee");
    }
}
exports.buildEncodedTransaction = buildEncodedTransaction;


/***/ }),

/***/ "./src/util/balanceObjectFromSatoshi.ts":
/*!**********************************************!*\
  !*** ./src/util/balanceObjectFromSatoshi.ts ***!
  \**********************************************/
/*! flagged exports */
/*! export BalanceResponse [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! export balanceResponseFromSatoshi [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.balanceResponseFromSatoshi = exports.BalanceResponse = void 0;
const chain_1 = __webpack_require__(/*! ../chain */ "./src/chain.ts");
const getUsdRate_1 = __webpack_require__(/*! ./getUsdRate */ "./src/util/getUsdRate.ts");
class BalanceResponse {
    constructor(bch, sat, usd) {
        this.bch = bch;
        this.sat = sat;
        this.usd = usd;
    }
}
exports.BalanceResponse = BalanceResponse;
async function balanceResponseFromSatoshi(value) {
    let response = new BalanceResponse();
    for (let a of ["bch", "sat", "usd"]) {
        switch (a) {
            case "bch":
                response.bch = value / chain_1.bchParam.subUnits;
                break;
            case "sat":
                response.sat = value;
                break;
            case "usd":
                response.usd = (value / chain_1.bchParam.subUnits) * (await getUsdRate_1.getUsdRate());
                break;
            default:
                throw Error("Balance response not understood");
        }
    }
    return response;
}
exports.balanceResponseFromSatoshi = balanceResponseFromSatoshi;


/***/ }),

/***/ "./src/util/checkWifNetwork.ts":
/*!*************************************!*\
  !*** ./src/util/checkWifNetwork.ts ***!
  \*************************************/
/*! flagged exports */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! export checkWifNetwork [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkWifNetwork = void 0;
const enum_1 = __webpack_require__(/*! ../wallet/enum */ "./src/wallet/enum.ts");
function checkWifNetwork(walletImportFormatString, networkType) {
    if ((walletImportFormatString[0] === "L" ||
        walletImportFormatString[0] === "K") &&
        networkType !== enum_1.NetworkType.Mainnet) {
        throw new Error("attempted to pass a testnet Wif to a mainnet wallet");
    }
    else if ((walletImportFormatString[0] !== "L" &&
        walletImportFormatString[0] !== "K") &&
        networkType === enum_1.NetworkType.Mainnet) {
        throw new Error("attempted to pass a mainnet Wif to a testnet wallet");
    }
}
exports.checkWifNetwork = checkWifNetwork;


/***/ }),

/***/ "./src/util/deriveCashaddr.ts":
/*!************************************!*\
  !*** ./src/util/deriveCashaddr.ts ***!
  \************************************/
/*! flagged exports */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! export deriveCashaddr [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.deriveCashaddr = void 0;
const libauth_1 = __webpack_require__(/*! @bitauth/libauth */ "./node_modules/@bitauth/libauth/build/module/index.js");
// Given a private key and network, derive cashaddr from the locking code
// TODO, is there a more direct way to do this?
// TODO, This can be moved off the Wallet Class
async function deriveCashaddr(privateKey, networkPrefix) {
    const lockingScript = "lock";
    const template = libauth_1.validateAuthenticationTemplate(libauth_1.authenticationTemplateP2pkhNonHd);
    if (typeof template === "string") {
        throw new Error("Address template error");
    }
    const lockingData = {
        keys: { privateKeys: { key: privateKey } },
    };
    const compiler = await libauth_1.authenticationTemplateToCompilerBCH(template);
    const lockingBytecode = compiler.generateBytecode(lockingScript, lockingData);
    if (!lockingBytecode.success) {
        throw Error(JSON.stringify(lockingBytecode));
    }
    else {
        return libauth_1.lockingBytecodeToCashAddress(lockingBytecode.bytecode, networkPrefix);
    }
}
exports.deriveCashaddr = deriveCashaddr;


/***/ }),

/***/ "./src/util/getUsdRate.ts":
/*!********************************!*\
  !*** ./src/util/getUsdRate.ts ***!
  \********************************/
/*! flagged exports */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getUsdRate [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getUsdRate = void 0;
const fetch = __webpack_require__(/*! node-fetch */ "./node_modules/node-fetch/lib/index.mjs");
async function getUsdRate() {
    try {
        let response = await fetch("https://api.coingecko.com/api/v3/simple/price?ids=bitcoin-cash&vs_currencies=usd");
        let data = await response.json();
        return data["bitcoin-cash"].usd;
    }
    catch (e) {
        throw Error(e);
    }
}
exports.getUsdRate = getUsdRate;


/***/ }),

/***/ "./src/util/sumSendRequestAmounts.ts":
/*!*******************************************!*\
  !*** ./src/util/sumSendRequestAmounts.ts ***!
  \*******************************************/
/*! flagged exports */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! export sumSendRequestAmounts [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__ */
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sumSendRequestAmounts = void 0;
async function sumSendRequestAmounts(requests) {
    if (requests) {
        const balanceArray = await Promise.all(requests.map(async (r) => {
            return r.amount.inSatoshi();
        }));
        const balance = balanceArray.reduce(sumBalance, 0n);
        return balance;
    }
    else {
        return 0n;
    }
}
exports.sumSendRequestAmounts = sumSendRequestAmounts;
function sumBalance(a, b) {
    // a is zero or a number
    if (b instanceof Error) {
        throw b;
    }
    return BigInt(a) + BigInt(b);
}


/***/ }),

/***/ "./src/util/sumUtxoValue.ts":
/*!**********************************!*\
  !*** ./src/util/sumUtxoValue.ts ***!
  \**********************************/
/*! flagged exports */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! export sumUtxoValue [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__ */
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sumUtxoValue = void 0;
async function sumUtxoValue(utxos) {
    if (utxos) {
        const balanceArray = await Promise.all(utxos.map(async (o) => {
            return o.getValue();
        }));
        const balance = balanceArray.reduce((a, b) => a + b, 0);
        return balance;
    }
    else {
        return 0;
    }
}
exports.sumUtxoValue = sumUtxoValue;


/***/ }),

/***/ "./src/wallet/Base.ts":
/*!****************************!*\
  !*** ./src/wallet/Base.ts ***!
  \****************************/
/*! flagged exports */
/*! export BaseWallet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BaseWallet = void 0;
const libauth_1 = __webpack_require__(/*! @bitauth/libauth */ "./node_modules/@bitauth/libauth/build/module/index.js");
// GrpcClient is swapped out by webpack for a web module
const grpc_bchrpc_node_1 = __webpack_require__(/*! grpc-bchrpc-node */ "./node_modules/grpc-bchrpc-node/dist/index.js");
const enum_1 = __webpack_require__(/*! ./enum */ "./src/wallet/enum.ts");
/**
 * A class to hold features used by all wallets
 * @class  BaseWallet
 */
class BaseWallet {
    constructor(name = "", networkPrefix, url = "") {
        this.name = name;
        this.networkPrefix = networkPrefix;
        this.networkType =
            this.networkPrefix === libauth_1.CashAddressNetworkPrefix.mainnet
                ? enum_1.NetworkType.Mainnet
                : enum_1.NetworkType.Testnet;
        switch (networkPrefix) {
            case libauth_1.CashAddressNetworkPrefix.mainnet:
                this.network = enum_1.NetworkEnum.Mainnet;
                break;
            case libauth_1.CashAddressNetworkPrefix.testnet:
                this.network = enum_1.NetworkEnum.Testnet;
                break;
            case libauth_1.CashAddressNetworkPrefix.regtest:
                this.network = enum_1.NetworkEnum.Regtest;
                break;
            default:
                throw Error("could not map cashaddr prefix to network");
        }
        this.isTestnet = this.networkType === "testnet" ? true : false;
        if (this.isTestnet) {
            switch (this.networkPrefix) {
                case libauth_1.CashAddressNetworkPrefix.regtest:
                    url = `${process.env.HOST_IP}:${process.env.GRPC_PORT}`;
                    const cert = `${process.env.BCHD_BIN_DIRECTORY}/${process.env.RPC_CERT}`;
                    const host = `${process.env.HOST}`;
                    this.client = new grpc_bchrpc_node_1.GrpcClient({
                        url: url,
                        testnet: true,
                        rootCertPath: cert,
                        options: {
                            "grpc.ssl_target_name_override": host,
                            "grpc.default_authority": host,
                            "grpc.max_receive_message_length": -1,
                        },
                    });
                    break;
                case libauth_1.CashAddressNetworkPrefix.testnet:
                    url = "https://bchd-testnet.greyh.at:18335";
                    this.client = new grpc_bchrpc_node_1.GrpcClient({
                        url: url,
                        testnet: true,
                        options: {
                            "grpc.max_receive_message_length": -1,
                        },
                    });
                    break;
            }
        }
        else {
            url = "https://bchd.greyh.at:8335";
            this.client = new grpc_bchrpc_node_1.GrpcClient({
                url: url,
                testnet: false,
                options: {
                    "grpc.max_receive_message_length": -1,
                },
            });
        }
    }
}
exports.BaseWallet = BaseWallet;


/***/ }),

/***/ "./src/wallet/Wif.ts":
/*!***************************!*\
  !*** ./src/wallet/Wif.ts ***!
  \***************************/
/*! flagged exports */
/*! export MainnetWallet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RegTestWallet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export TestnetWallet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export WifWallet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RegTestWallet = exports.TestnetWallet = exports.MainnetWallet = exports.WifWallet = void 0;
// Stable
const libauth_1 = __webpack_require__(/*! @bitauth/libauth */ "./node_modules/@bitauth/libauth/build/module/index.js");
// Unstable?
const libauth_2 = __webpack_require__(/*! @bitauth/libauth */ "./node_modules/@bitauth/libauth/build/module/index.js");
const enum_1 = __webpack_require__(/*! ./enum */ "./src/wallet/enum.ts");
const Base_1 = __webpack_require__(/*! ./Base */ "./src/wallet/Base.ts");
const model_1 = __webpack_require__(/*! ./model */ "./src/wallet/model.ts");
const Wif_1 = __webpack_require__(/*! ../transaction/Wif */ "./src/transaction/Wif.ts");
const Qr_1 = __webpack_require__(/*! ../qr/Qr */ "./src/qr/Qr.ts");
const checkWifNetwork_1 = __webpack_require__(/*! ../util/checkWifNetwork */ "./src/util/checkWifNetwork.ts");
const deriveCashaddr_1 = __webpack_require__(/*! ../util/deriveCashaddr */ "./src/util/deriveCashaddr.ts");
const balanceObjectFromSatoshi_1 = __webpack_require__(/*! ../util/balanceObjectFromSatoshi */ "./src/util/balanceObjectFromSatoshi.ts");
const sumUtxoValue_1 = __webpack_require__(/*! ../util/sumUtxoValue */ "./src/util/sumUtxoValue.ts");
const sumSendRequestAmounts_1 = __webpack_require__(/*! ../util/sumSendRequestAmounts */ "./src/util/sumSendRequestAmounts.ts");
const secp256k1Promise = libauth_1.instantiateSecp256k1();
const sha256Promise = libauth_1.instantiateSha256();
class WifWallet extends Base_1.BaseWallet {
    constructor(name = "", networkPrefix) {
        super(name, networkPrefix);
        this.name = name;
        this.walletType = enum_1.WalletTypeEnum.Wif;
    }
    // Initialize wallet from a cash addr
    async watchOnly(address) {
        if (address.startsWith("bitcoincash:") && this.networkType === "testnet") {
            throw Error("a testnet address cannot be watched from a mainnet Wallet");
        }
        else if (!address.startsWith("bitcoincash:") &&
            this.networkType === "mainnet") {
            throw Error("a mainnet address cannot be watched from a testnet Wallet");
        }
        this.cashaddr = address;
    }
    // Initialize wallet from Wallet Import Format
    async fromWIF(walletImportFormatString) {
        const sha256 = await sha256Promise;
        const secp256k1 = await secp256k1Promise;
        let result = libauth_2.decodePrivateKeyWif(sha256, walletImportFormatString);
        const hasError = typeof result === "string";
        if (hasError) {
            throw Error(result);
        }
        checkWifNetwork_1.checkWifNetwork(walletImportFormatString, this.networkType);
        let resultData = result;
        this.privateKey = resultData.privateKey;
        this.privateKeyWif = walletImportFormatString;
        this.walletType = enum_1.WalletTypeEnum.Wif;
        this.publicKey = secp256k1.derivePublicKeyCompressed(this.privateKey);
        this.cashaddr = (await deriveCashaddr_1.deriveCashaddr(this.privateKey, this.networkPrefix));
    }
    async generateWif() {
        const sha256 = await sha256Promise;
        const secp256k1 = await secp256k1Promise;
        // nodejs
        if (typeof process !== "undefined") {
            let crypto = __webpack_require__(/*! crypto */ "crypto");
            this.privateKey = libauth_2.generatePrivateKey(() => crypto.randomBytes(32));
        }
        // window, webworkers, service workers
        else {
            this.privateKey = libauth_2.generatePrivateKey(() => window.crypto.getRandomValues(new Uint8Array(32)));
        }
        this.privateKey = secp256k1.derivePublicKeyCompressed(this.privateKey);
        this.privateKeyWif = libauth_2.encodePrivateKeyWif(sha256, this.privateKey, this.networkType);
        this.walletType = enum_1.WalletTypeEnum.Wif;
        this.cashaddr = (await deriveCashaddr_1.deriveCashaddr(this.privateKey, this.networkPrefix));
    }
    async send(requests) {
        let result = await this.sendRaw(requests);
        let resp = new model_1.SendResponse({});
        resp.transactionId = libauth_2.binToHex(result);
        resp.balance = await this.balance();
        return resp;
    }
    // Processes an array of send requests
    async sendRaw(requests) {
        // Deserialize the request
        const sendRequests = await Promise.all(requests.map(async (rawSendRequest) => {
            return new model_1.SendRequest(rawSendRequest);
        }));
        return await this._processSendRequests(sendRequests);
    }
    async sendMax(sendMaxRequest) {
        let result = await this.sendMaxRaw(sendMaxRequest);
        let resp = new model_1.SendResponse({});
        resp.transactionId = libauth_2.binToHex(result);
        resp.balance = await this.balance();
        return resp;
    }
    async sendMaxRaw(sendMaxRequest) {
        let maxSpendableAmount = await this.maxAmountToSend({});
        if (maxSpendableAmount.sat === undefined) {
            throw Error("no Max amount to send");
        }
        let sendRequest = new model_1.SendRequest({
            cashaddr: sendMaxRequest.cashaddr,
            amount: new model_1.Amount({ value: maxSpendableAmount.sat, unit: enum_1.UnitEnum.Sat }),
        });
        return await this._processSendRequests([sendRequest], true);
    }
    getSerializedWallet() {
        return `${this.walletType}:${this.network}:${this.privateKeyWif}`;
    }
    depositAddress() {
        return { cashaddr: this.cashaddr };
    }
    depositQr() {
        return Qr_1.qrAddress(this.cashaddr);
    }
    async getUtxos(address) {
        if (!this.client) {
            throw Error("Attempting to get utxos from wallet without a client");
        }
        const res = await this.client.getAddressUtxos({
            address: address,
            includeMempool: true,
        });
        if (!res) {
            throw Error("No Utxo response from server");
        }
        return res.getOutputsList();
    }
    async balance() {
        return await balanceObjectFromSatoshi_1.balanceResponseFromSatoshi(await this.getBalance());
    }
    // Gets balance by summing value in all utxos in stats
    async getBalance() {
        const utxos = await this.getUtxos(this.cashaddr);
        return await sumUtxoValue_1.sumUtxoValue(utxos);
    }
    toString() {
        return `${this.walletType}:${this.networkType}:${this.privateKeyWif}`;
    }
    async maxAmountToSend({ outputCount = 1, }) {
        if (!this.privateKey) {
            throw Error("Couldn't get network or private key for wallet.");
        }
        if (!this.cashaddr) {
            throw Error("attempted to send without a cashaddr");
        }
        // get inputs
        let utxos = await this.getUtxos(this.cashaddr);
        // Get current height to assure recently mined coins are not spent.
        let bestHeight = (await this.client.getBlockchainInfo()).getBestHeight();
        let amount = new model_1.Amount({ value: 100, unit: enum_1.UnitEnum.Sat });
        // simulate outputs using the sender's address
        const sendRequest = new model_1.SendRequest({
            cashaddr: this.cashaddr,
            amount: amount,
        });
        let sendRequests = Array(outputCount)
            .fill(0)
            .map(() => sendRequest);
        let fundingUtxos = await Wif_1.getSuitableUtxos(utxos, undefined, bestHeight);
        let fee = await Wif_1.getFeeAmount({
            utxos: fundingUtxos,
            sendRequests: sendRequests,
            privateKey: this.privateKey,
        });
        let spendableAmount = await sumUtxoValue_1.sumUtxoValue(fundingUtxos);
        return await balanceObjectFromSatoshi_1.balanceResponseFromSatoshi(spendableAmount - fee);
    }
    /**
     * utxos Get unspent outputs for the wallet
     */
    async utxos() {
        if (!this.cashaddr) {
            throw Error("Attempted to get utxos without an address");
        }
        let utxos = await this.getUtxos(this.cashaddr);
        let resp = new model_1.UtxoResponse();
        resp.utxos = await Promise.all(utxos.map(async (o) => {
            let utxo = new model_1.Utxo();
            utxo.amount = new model_1.Amount({ unit: enum_1.UnitEnum.Sat, value: o.getValue() });
            let txId = o.getOutpoint().getHash_asU8() || new Uint8Array([]);
            utxo.transactionId = libauth_2.binToHex(txId);
            utxo.index = o.getOutpoint().getIndex();
            utxo.utxoId = utxo.transactionId + ":" + utxo.index;
            return utxo;
        }));
        return resp;
    }
    /**
     * _processsSendRequests given a list of sendRequests, estimate fees, build the transaction and submit it.
     * @param  {SendRequest[]} sendRequests
     * @param  {} discardChange=false
     */
    async _processSendRequests(sendRequests, discardChange = false) {
        if (!this.privateKey) {
            throw Error(`Wallet ${this.name} is missing either a network or private key`);
        }
        if (!this.cashaddr) {
            throw Error("attempted to send without a cashaddr");
        }
        // get input
        let utxos = await this.getUtxos(this.cashaddr);
        let bestHeight = (await this.client.getBlockchainInfo()).getBestHeight();
        let spendAmount = await sumSendRequestAmounts_1.sumSendRequestAmounts(sendRequests);
        if (utxos.length === 0) {
            throw Error("There were no Unspent Outputs");
        }
        if (typeof spendAmount !== "bigint") {
            throw Error("Couldn't get spend amount when building transaction");
        }
        let fee = await Wif_1.getFeeAmount({
            utxos: utxos,
            sendRequests: sendRequests,
            privateKey: this.privateKey,
        });
        let fundingUtxos = await Wif_1.getSuitableUtxos(utxos, BigInt(spendAmount) + BigInt(fee), bestHeight);
        if (fundingUtxos.length === 0) {
            throw Error("The available inputs couldn't satisfy the request with fees");
        }
        let encodedTransaction = await Wif_1.buildEncodedTransaction(fundingUtxos, sendRequests, this.privateKey, fee, discardChange);
        return await this._submitTransaction(encodedTransaction);
    }
    // Submit a raw transaction
    async _submitTransaction(transaction) {
        if (!this.client) {
            throw Error("Wallet node client was not initialized");
        }
        const res = await this.client.submitTransaction({ txn: transaction });
        return res.getHash_asU8();
    }
}
exports.WifWallet = WifWallet;
class MainnetWallet extends WifWallet {
    constructor(name = "") {
        super(name, libauth_2.CashAddressNetworkPrefix.mainnet);
    }
}
exports.MainnetWallet = MainnetWallet;
class TestnetWallet extends WifWallet {
    constructor(name = "") {
        super(name, libauth_2.CashAddressNetworkPrefix.testnet);
    }
}
exports.TestnetWallet = TestnetWallet;
class RegTestWallet extends WifWallet {
    constructor(name = "") {
        super(name, libauth_2.CashAddressNetworkPrefix.regtest);
    }
}
exports.RegTestWallet = RegTestWallet;


/***/ }),

/***/ "./src/wallet/enum.ts":
/*!****************************!*\
  !*** ./src/wallet/enum.ts ***!
  \****************************/
/*! flagged exports */
/*! export NetworkEnum [provided] [no usage info] [missing usage info prevents renaming] */
/*! export NetworkType [provided] [no usage info] [missing usage info prevents renaming] */
/*! export UnitEnum [provided] [no usage info] [missing usage info prevents renaming] */
/*! export WalletTypeEnum [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__ */
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NetworkEnum = exports.WalletTypeEnum = exports.UnitEnum = exports.NetworkType = void 0;
var NetworkType;
(function (NetworkType) {
    NetworkType["Mainnet"] = "mainnet";
    NetworkType["Testnet"] = "testnet";
})(NetworkType = exports.NetworkType || (exports.NetworkType = {}));
var UnitEnum;
(function (UnitEnum) {
    UnitEnum[UnitEnum["Bch"] = "bch"] = "Bch";
    UnitEnum[UnitEnum["Usd"] = "usd"] = "Usd";
    UnitEnum[UnitEnum["Bit"] = "bit"] = "Bit";
    UnitEnum[UnitEnum["Bits"] = "bits"] = "Bits";
    UnitEnum[UnitEnum["Sat"] = "sat"] = "Sat";
    UnitEnum[UnitEnum["Sats"] = "sats"] = "Sats";
    UnitEnum[UnitEnum["Satoshi"] = "satoshi"] = "Satoshi";
    UnitEnum[UnitEnum["Satoshis"] = "satoshis"] = "Satoshis";
})(UnitEnum = exports.UnitEnum || (exports.UnitEnum = {}));
var WalletTypeEnum;
(function (WalletTypeEnum) {
    WalletTypeEnum["Wif"] = "wif";
    WalletTypeEnum["Hd"] = "hd";
})(WalletTypeEnum = exports.WalletTypeEnum || (exports.WalletTypeEnum = {}));
var NetworkEnum;
(function (NetworkEnum) {
    NetworkEnum[NetworkEnum["Mainnet"] = "mainnet"] = "Mainnet";
    NetworkEnum[NetworkEnum["Testnet"] = "testnet"] = "Testnet";
    NetworkEnum[NetworkEnum["Regtest"] = "regtest"] = "Regtest";
    NetworkEnum[NetworkEnum["Simtest"] = "simtest"] = "Simtest";
})(NetworkEnum = exports.NetworkEnum || (exports.NetworkEnum = {}));


/***/ }),

/***/ "./src/wallet/model.ts":
/*!*****************************!*\
  !*** ./src/wallet/model.ts ***!
  \*****************************/
/*! flagged exports */
/*! export Amount [provided] [no usage info] [missing usage info prevents renaming] */
/*! export SendMaxRequest [provided] [no usage info] [missing usage info prevents renaming] */
/*! export SendRequest [provided] [no usage info] [missing usage info prevents renaming] */
/*! export SendResponse [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Utxo [provided] [no usage info] [missing usage info prevents renaming] */
/*! export UtxoResponse [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SendResponse = exports.SendMaxRequest = exports.Amount = exports.UtxoResponse = exports.Utxo = exports.SendRequest = void 0;
const chain_1 = __webpack_require__(/*! ../chain */ "./src/chain.ts");
const balanceObjectFromSatoshi_1 = __webpack_require__(/*! ../util/balanceObjectFromSatoshi */ "./src/util/balanceObjectFromSatoshi.ts");
const enum_1 = __webpack_require__(/*! ./enum */ "./src/wallet/enum.ts");
// These are the minimal models used to provide types for the express server
//
// This file will be deprecated auto-generated file in the future
// Any business logic contained here should be moved elsewhere in src/
class SendRequest {
    constructor({ cashaddr, amount }) {
        this.cashaddr = cashaddr;
        this.amount = new Amount(amount);
    }
}
exports.SendRequest = SendRequest;
class Utxo {
}
exports.Utxo = Utxo;
class UtxoResponse {
}
exports.UtxoResponse = UtxoResponse;
class Amount {
    constructor({ value, unit }) {
        this.value = value;
        this.unit = unit;
    }
    inSatoshi() {
        switch (this.unit) {
            case enum_1.UnitEnum.Satoshi:
                return BigInt(this.value);
            case enum_1.UnitEnum.Sat:
                return BigInt(this.value);
            case enum_1.UnitEnum.Sats:
                return BigInt(this.value);
            case enum_1.UnitEnum.Satoshis:
                return BigInt(this.value);
            case enum_1.UnitEnum.Bch:
                return BigInt(this.value * chain_1.bchParam.subUnits);
            default:
                throw Error("Unit of value not defined");
        }
    }
}
exports.Amount = Amount;
class SendMaxRequest {
    constructor({ cashaddr }) {
        this.cashaddr = cashaddr;
    }
}
exports.SendMaxRequest = SendMaxRequest;
class SendResponse {
    constructor({ transactionId, balance, }) {
        this.transactionId = transactionId;
        this.balance = new balanceObjectFromSatoshi_1.BalanceResponse(balance);
    }
}
exports.SendResponse = SendResponse;


/***/ }),

/***/ "./node_modules/util-deprecate/node.js":
/*!*********************************************!*\
  !*** ./node_modules/util-deprecate/node.js ***!
  \*********************************************/
/*! dynamic exports */
/*! exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: module, __webpack_require__ */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


/**
 * For Node.js, simply re-export the core `util.deprecate` function.
 */

module.exports = __webpack_require__(/*! util */ "util").deprecate;


/***/ }),

/***/ "./node_modules/wide-align/align.js":
/*!******************************************!*\
  !*** ./node_modules/wide-align/align.js ***!
  \******************************************/
/*! default exports */
/*! export center [provided] [no usage info] [missing usage info prevents renaming] */
/*! export left [provided] [no usage info] [missing usage info prevents renaming] */
/*! export right [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

var stringWidth = __webpack_require__(/*! string-width */ "./node_modules/wide-align/node_modules/string-width/index.js")

exports.center = alignCenter
exports.left = alignLeft
exports.right = alignRight

// lodash's way of generating pad characters.

function createPadding (width) {
  var result = ''
  var string = ' '
  var n = width
  do {
    if (n % 2) {
      result += string;
    }
    n = Math.floor(n / 2);
    string += string;
  } while (n);

  return result;
}

function alignLeft (str, width) {
  var trimmed = str.trimRight()
  if (trimmed.length === 0 && str.length >= width) return str
  var padding = ''
  var strWidth = stringWidth(trimmed)

  if (strWidth < width) {
    padding = createPadding(width - strWidth)
  }

  return trimmed + padding
}

function alignRight (str, width) {
  var trimmed = str.trimLeft()
  if (trimmed.length === 0 && str.length >= width) return str
  var padding = ''
  var strWidth = stringWidth(trimmed)

  if (strWidth < width) {
    padding = createPadding(width - strWidth)
  }

  return padding + trimmed
}

function alignCenter (str, width) {
  var trimmed = str.trim()
  if (trimmed.length === 0 && str.length >= width) return str
  var padLeft = ''
  var padRight = ''
  var strWidth = stringWidth(trimmed)

  if (strWidth < width) {
    var padLeftBy = parseInt((width - strWidth) / 2, 10) 
    padLeft = createPadding(padLeftBy)
    padRight = createPadding(width - (strWidth + padLeftBy))
  }

  return padLeft + trimmed + padRight
}


/***/ }),

/***/ "./node_modules/wide-align/node_modules/ansi-regex/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/wide-align/node_modules/ansi-regex/index.js ***!
  \******************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 3:0-14 */
/***/ ((module) => {

"use strict";


module.exports = () => {
	const pattern = [
		'[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[a-zA-Z\\d]*)*)?\\u0007)',
		'(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PRZcf-ntqry=><~]))'
	].join('|');

	return new RegExp(pattern, 'g');
};


/***/ }),

/***/ "./node_modules/wide-align/node_modules/string-width/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/wide-align/node_modules/string-width/index.js ***!
  \********************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 5:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

const stripAnsi = __webpack_require__(/*! strip-ansi */ "./node_modules/wide-align/node_modules/strip-ansi/index.js");
const isFullwidthCodePoint = __webpack_require__(/*! is-fullwidth-code-point */ "./node_modules/is-fullwidth-code-point/index.js");

module.exports = str => {
	if (typeof str !== 'string' || str.length === 0) {
		return 0;
	}

	str = stripAnsi(str);

	let width = 0;

	for (let i = 0; i < str.length; i++) {
		const code = str.codePointAt(i);

		// Ignore control characters
		if (code <= 0x1F || (code >= 0x7F && code <= 0x9F)) {
			continue;
		}

		// Ignore combining characters
		if (code >= 0x300 && code <= 0x36F) {
			continue;
		}

		// Surrogates
		if (code > 0xFFFF) {
			i++;
		}

		width += isFullwidthCodePoint(code) ? 2 : 1;
	}

	return width;
};


/***/ }),

/***/ "./node_modules/wide-align/node_modules/strip-ansi/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/wide-align/node_modules/strip-ansi/index.js ***!
  \******************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/*! CommonJS bailout: module.exports is used directly at 4:0-14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

const ansiRegex = __webpack_require__(/*! ansi-regex */ "./node_modules/wide-align/node_modules/ansi-regex/index.js");

module.exports = input => typeof input === 'string' ? input.replace(ansiRegex(), '') : input;


/***/ }),

/***/ "./node_modules/wrappy/wrappy.js":
/*!***************************************!*\
  !*** ./node_modules/wrappy/wrappy.js ***!
  \***************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 6:0-14 */
/***/ ((module) => {

// Returns a wrapper function that returns a wrapped callback
// The wrapper function should do some stuff, and return a
// presumably different callback function.
// This makes sure that own properties are retained, so that
// decorations and such are not lost along the way.
module.exports = wrappy
function wrappy (fn, cb) {
  if (fn && cb) return wrappy(fn)(cb)

  if (typeof fn !== 'function')
    throw new TypeError('need wrapper function')

  Object.keys(fn).forEach(function (k) {
    wrapper[k] = fn[k]
  })

  return wrapper

  function wrapper() {
    var args = new Array(arguments.length)
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i]
    }
    var ret = fn.apply(this, args)
    var cb = args[args.length-1]
    if (typeof ret === 'function' && ret !== cb) {
      Object.keys(cb).forEach(function (k) {
        ret[k] = cb[k]
      })
    }
    return ret
  }
}


/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => module['default'] :
/******/ 				() => module;
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// module exports must be returned from runtime so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__("./src/index.ts");
/******/ })()
;
//# sourceMappingURL=mainnet-node-0.0.1-rc.js.map